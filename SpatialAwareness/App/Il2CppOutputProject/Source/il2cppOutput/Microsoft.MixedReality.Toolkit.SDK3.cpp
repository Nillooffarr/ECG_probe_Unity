#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericInterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer
struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7;
// Microsoft.MixedReality.Toolkit.Input.BaseCursor
struct BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.BaseInputHandler
struct BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35;
// Microsoft.MixedReality.Toolkit.Input.BaseMousePointer
struct BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99;
// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer
struct ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064;
// Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector
struct DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80;
// Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo
struct PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458;
// Microsoft.MixedReality.Toolkit.Input.DictationEventData
struct DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A;
// Microsoft.MixedReality.Toolkit.Input.DictationHandler
struct DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F;
// Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent
struct StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58;
// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget
struct EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32;
// Microsoft.MixedReality.Toolkit.Input.FingerCursor
struct FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA;
// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F;
// Microsoft.MixedReality.Toolkit.Input.FocusHandler
struct FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B;
// Microsoft.MixedReality.Toolkit.Input.GGVPointer
struct GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073;
// Microsoft.MixedReality.Toolkit.Input.ICursorModifier
struct ICursorModifier_tDE9922B058ED50BEA8696DA85B1548D40B879493;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor
struct IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem
struct IMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler
struct IMixedRealityFocusHandler_t5437E688850A82CF30CBB00C70F476568C7AC7A5;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider
struct IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem
struct IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.IPointerResult
struct IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278;
// Microsoft.MixedReality.Toolkit.Input.InputActionHandler
struct InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D;
// Microsoft.MixedReality.Toolkit.Input.InputActionUnityEvent
struct InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F;
// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>
struct InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>
struct InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18;
// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators
struct InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3;
// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5;
// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor
struct InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04;
// Microsoft.MixedReality.Toolkit.Input.LinePointer
struct LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665;
// Microsoft.MixedReality.Toolkit.Input.MeshCursor
struct MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2;
// Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum[]
struct MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo
struct MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer
struct MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction[]
struct MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping
struct MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940;
// Microsoft.MixedReality.Toolkit.Input.MousePointer
struct MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7;
// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo
struct SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A;
// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer
struct IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD;
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider
struct BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4;
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer
struct BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA;
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[]
struct BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2/Entry<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>[]
struct EntryU5BU5D_t2699BEF95474BC44B689968B0A98E52DB44CF298;
// System.Collections.Generic.Dictionary`2/KeyCollection<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>
struct KeyCollection_tA366750BA7D62B87D323903F1D5071BAD8CF8001;
// System.Collections.Generic.Dictionary`2/ValueCollection<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>
struct ValueCollection_t3100BB40353F661049095D8405D5483E4CE05E4B;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>
struct Dictionary_2_t722E61C14764100A873E595E33D47898108D108D;
// System.Collections.Generic.Dictionary`2<System.Object,System.Object>
struct Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA;
// System.Collections.Generic.HashSet`1/Slot<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>[]
struct SlotU5BU5D_tA5D96D5A9783D79ABFFFC777115F940BDC4D3580;
// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229;
// System.Collections.Generic.HashSet`1<System.Object>
struct HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct IEqualityComparer_1_tAAAF3681567B6F264703A0E15FC97E88BBF520D3;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>
struct IEqualityComparer_1_t4CBC28F5E6EC19578827B020C02DBDEAA15940DA;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Physics.Distorter>
struct List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3;
// System.Collections.Generic.List`1<System.UInt32>
struct List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E;
// System.Collections.Generic.List`1<UnityEngine.UI.Image>
struct List_1_tA9C10612DACE8F188F3B35F6173354C7225A0883;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.NotImplementedException
struct NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Runtime.Serialization.SerializationInfo
struct SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26;
// System.String
struct String_t;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.UInt32[]
struct UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.AnimationCurve
struct AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C;
// UnityEngine.AudioClip
struct AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051;
// UnityEngine.AudioClip/PCMReaderCallback
struct PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB;
// UnityEngine.AudioClip/PCMSetPositionCallback
struct PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801;
// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8;
// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0;
// UnityEngine.Canvas
struct Canvas_tBC28BF1DD8D8499A89B5781505833D3728CF8591;
// UnityEngine.CanvasRenderer
struct CanvasRenderer_tB4D9C9FE77FD5C9C4546FC022D6E956960BC2B72;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4;
// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.BaseInputEventData>
struct UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085;
// UnityEngine.Events.UnityEvent`1<System.Object>
struct UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D;
// UnityEngine.Events.UnityEvent`1<System.String>
struct UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A;
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598;
// UnityEngine.MaterialPropertyBlock
struct MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13;
// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C;
// UnityEngine.MeshFilter
struct MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0;
// UnityEngine.MeshRenderer
struct MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED;
// UnityEngine.MeshRenderer[]
struct MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.RaycastHit[]
struct RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57;
// UnityEngine.RectTransform
struct RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20;
// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4;
// UnityEngine.Sprite
struct Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198;
// UnityEngine.Texture2D
struct Texture2D_tBBF96AC337723E2EF156DF17E09D4379FD05DE1C;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Transform[]
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804;
// UnityEngine.UI.CoroutineTween.TweenRunner`1<UnityEngine.UI.CoroutineTween.ColorTween>
struct TweenRunner_1_t56CEB168ADE3739A1BDDBF258FDC759DF8927172;
// UnityEngine.UI.Image
struct Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E;
// UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
struct CullStateChangedEvent_t6BC3E87DBC04B585798460D55F56B86C23B62FE4;
// UnityEngine.UI.RectMask2D
struct RectMask2D_tF2CF19F2A4FE2D2FFC7E6F7809374757CA2F377B;
// UnityEngine.UI.VertexHelper
struct VertexHelper_t27373EA2CF0F5810EC8CF873D0A6D6C0B23DAC3F;
// UnityEngine.Vector2[]
struct Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsUnityEngine_CoreModule[];
IL2CPP_EXTERN_C RuntimeClass* BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_t722E61C14764100A873E595E33D47898108D108D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ICursorModifier_tDE9922B058ED50BEA8696DA85B1548D40B879493_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerable_1_t19D371D5397612F70C0A4E6CC349E8EA27500ABA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerator_1_t803289C0820529EF837EACBA5D5250227930E668_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Stopwatch_t0778B5C8DF8FE1D87FC57A2411DA695850BD64D4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* String_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral01CE3C1E613E251C74BFFB0475073AFA0075406B;
IL2CPP_EXTERN_C String_t* _stringLiteral0706025B2BBCEC1ED8D64822F4ECCD96314938D0;
IL2CPP_EXTERN_C String_t* _stringLiteral13168B64CDD9CDDDBAD9634C5B0D1CF907B6A255;
IL2CPP_EXTERN_C String_t* _stringLiteral1C41E6EE2D1EAA9700813A41BC2B39C22F2C187E;
IL2CPP_EXTERN_C String_t* _stringLiteral23E998B544CC876C74A89FCB9DCBE810E19AFDB8;
IL2CPP_EXTERN_C String_t* _stringLiteral252A25667DC7C65FE0E9BF62D474BBAB9BAB4068;
IL2CPP_EXTERN_C String_t* _stringLiteral3BA88217D19F0F82136D00799A4A4A1039A6BB0C;
IL2CPP_EXTERN_C String_t* _stringLiteral3BD9F4C7BD4B7F9D602A5A1357B9CB582282B3FA;
IL2CPP_EXTERN_C String_t* _stringLiteral48B0B76AB7816B414FB53B9461553AA34638F005;
IL2CPP_EXTERN_C String_t* _stringLiteral515DD1B0876607DEFB1DDDE2E7AA0A0CB5A73686;
IL2CPP_EXTERN_C String_t* _stringLiteral596E4B98EDAC7F0AA502440D734A174042506324;
IL2CPP_EXTERN_C String_t* _stringLiteral5A845836AC9E976E51293A35C46BE1C02C7F55ED;
IL2CPP_EXTERN_C String_t* _stringLiteral6A8C87F4B7B90CB69424E1EFF76FB9DB92090A8F;
IL2CPP_EXTERN_C String_t* _stringLiteral7148BC7BD6F94FE57C7E8F1A47275B3BEABECDEA;
IL2CPP_EXTERN_C String_t* _stringLiteral81448FE273247B533B9F018E96C158CAB7901247;
IL2CPP_EXTERN_C String_t* _stringLiteral818BBF7AAF974575D251C6931932A3D1025C35C6;
IL2CPP_EXTERN_C String_t* _stringLiteral85AD5490B6A3E5BC797CB2B45E6E716C4C57F148;
IL2CPP_EXTERN_C String_t* _stringLiteral8771E437E1DB62B370E1349D6FDC20BFF700612F;
IL2CPP_EXTERN_C String_t* _stringLiteral9B3FC3A8085CB6C220B69B66839E663ACF533047;
IL2CPP_EXTERN_C String_t* _stringLiteral9D5F1AB0894D28D45C7852C057707AAC4965125F;
IL2CPP_EXTERN_C String_t* _stringLiteral9DA3A9F990FF64C656A1CD615E165AFAFE53B3C7;
IL2CPP_EXTERN_C String_t* _stringLiteralA16CE5379A04E2FCC1CC4B6265BBEF14FA2490C3;
IL2CPP_EXTERN_C String_t* _stringLiteralA2F280A77105536EEF030ED35F7A0C2AF577D5D9;
IL2CPP_EXTERN_C String_t* _stringLiteralA87B920C29B3D65CE67BF530027F31EC09119719;
IL2CPP_EXTERN_C String_t* _stringLiteralAAC31089F3BA29B166D763FD9A6D11BD71121EA8;
IL2CPP_EXTERN_C String_t* _stringLiteralB34896A16E48562D3BAC13902180B35541637EFE;
IL2CPP_EXTERN_C String_t* _stringLiteralB3FF438BFC29E3DAE5D94CCB71675C05DB5F939C;
IL2CPP_EXTERN_C String_t* _stringLiteralB6C935D4F3C7B220FA038613A1F9C1B56B255A86;
IL2CPP_EXTERN_C String_t* _stringLiteralB8023F28D8C0D1DD469E92E4C634621A8DA4D12C;
IL2CPP_EXTERN_C String_t* _stringLiteralCDAB85ECA39BD46D66EA4F104D9CEC6C7E69B435;
IL2CPP_EXTERN_C String_t* _stringLiteralCF7793276C9194D0D66CC8F334D4BB014765BD85;
IL2CPP_EXTERN_C String_t* _stringLiteralD32328E1EAD29289F891D016A3D21DBDCA87189A;
IL2CPP_EXTERN_C String_t* _stringLiteralD838216601C85FC1FC17E921D7483450557511A1;
IL2CPP_EXTERN_C String_t* _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
IL2CPP_EXTERN_C String_t* _stringLiteralDBB21C1FE99A4E77C37A887B0B10CEBDA67D152F;
IL2CPP_EXTERN_C String_t* _stringLiteralDF7E6B796C64796FB043DF09F9DECFF5F4595B0C;
IL2CPP_EXTERN_C String_t* _stringLiteralE53DF9E07C8E7CF264C4F622B080EE9D849098D6;
IL2CPP_EXTERN_C String_t* _stringLiteralE83249BD3BA79932E16FB1FB5100DAFADE9954C2;
IL2CPP_EXTERN_C String_t* _stringLiteralEBD8CD49CA9CA08DCA3F9D662C7FB11895F97016;
IL2CPP_EXTERN_C String_t* _stringLiteralF0960B32773B5C86F4796FD3E0C0E91CC49AB605;
IL2CPP_EXTERN_C String_t* _stringLiteralF12377BC951958E5CA6F1662EEE8E8AE084C0B9A;
IL2CPP_EXTERN_C String_t* _stringLiteralF32B67C7E26342AF42EFABC674D441DCA0A281C5;
IL2CPP_EXTERN_C String_t* _stringLiteralF6AF241332ECA3FA267BA0150AC20016AB9843F6;
IL2CPP_EXTERN_C String_t* _stringLiteralFFF4B2E7FB82E87991160140C78C713BA58E7DA3;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mC210673BE9A285437FF73A2988A9DBAAF9FE337E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisBaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4_mB5C56A9C6C71E5882C6561D2C525F6E8AD702558_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentsInChildren_TisBaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA_mA222E47A759E225CC830FD9EC3D5B7846EF6A0C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* CoreServices_GetInputSystemDataProvider_TisIMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_mFC40140D549A09B97112A2717B47E8E60AE60A4A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Destroy_m5942250584F3DC35B5247A1C61ECA49B7FC45472_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Initialize_m6A5E8F97CC205DEC79697939CD8062B57C76E987_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mB38717CA47236014BBE2825632948450AEC8D8EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m248D34DEC424BCFE4A290B76B15C25794AD613BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m9A14AA4EAF3B04D6B8C53946FDD197009EE13F1C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFF7AE1D6F7948ED5C706C35AAB6036CF183F02A3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_RegisterPointer_mE6E8988CE765471977AA1469843B29D1690E3FC1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_UnregisterPointer_m3A73FAB6DB98E9F255C9F8C563E463E172E3CC0B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector_Update_mA628E5340FE9482CAD5EC7FE5273D3605EBF9934_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector__cctor_mCA51CA80824F986A1BBC4A96D11FD4F509276C64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultPrimaryPointerSelector__ctor_m062B0EE4AFBA428CC92A23DE1D4D6B596F9AF56C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationComplete_mD3DE8C82061205BD2683B5DD1E63C9FCCA0995C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationError_m7F88E9E422B61B4465536D3E67B0427BFBC58AFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationHypothesis_mE259BC76AAF34741A2C54279C564EB0459085575_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationResult_mE437E4925340185D2383401872B15404388DA4C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_OnDisable_mA510751D96783140DD27E6B68F95E8F699714559_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_RegisterHandlers_m82252940A1747765CB35378DF117FAB13AFF01B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_Start_mE9D8B38752E8DD1E4CCCC675DF8FDEC24D768D17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_UnregisterHandlers_mE97E8A82ECD5AC899E0923B461B16BB078190726_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler__ctor_m329C03E40D22FD2A17BB75D98E567EF58D7A6E36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_get_AudioClip_m4699568E50331CA70E7DCF9061ADA1027CC249B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DictationHandler_get_IsListening_m4C7D36D6AE714ED11F47049C0B0C566900033816_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_mC8F0A0F1C988BECD28E03E831402359CEC153834_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_m396BD3F263C5AB448724B461910D54D4E8C231F6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_m4E6D3F2F2D80F86E327D053484DD04F6DE4AE288_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_mA0986E57B6FF2C88C2750BC23F756447C4FCEEC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m59C848BE0E49AF9F55537F3652BF01ECA8499D9D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m3897751F5615B83A9E0565DD015002AE963DB69B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m834933BF9C154F01C3C471483B9309C00711E36B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m82687B6661CBBEF189717B055A8BCB0ED8A2A143_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m9B9126E05AE57185E1C1B2007019CB72B2D7E992_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m5C3D3DFB017C501D03F223E3463AB91458CC44B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m77543FA2993EDE6CAB24EBB9C65A97564C3FE677_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAB01AAB27B91E506675A3187C8BD438F01D4578A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mBF9F504FEC8218057A3DB0DE573B83C4E477E905_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m14F12DE16899487D41F09E0BB4C0AE1A1EC8F549_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFC247EEC45A7789DB938A4FCCD4C13432FC55C95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m481FB936CA05939E5E7CDCF0F88A917E0FFE4695_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_OnDisable_mB4B55660146D3095E9DB5049591FAD7476BF3C36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_RaiseSelectEventManually_m8D6E57AE292FF43BD85102AA0D20816C46A426AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_RegisterHandlers_m553AF274B7CFC1C7D5643B99064A71A4CE9FEAB8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Start_m8D6A312C56F79F3068B1D33C75DAE2B594419902_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_UnregisterHandlers_mF87106515727B5FFDF0FA5944A0F375C38D8219B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_Update_m6605D30B481D3CD4A5C9383D17B3F1E604D3EBA8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget__cctor_m1AC7E59699C8D377AFD69D7830482592E4AC93EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget__ctor_mEDE6BD23CB1524F729EBF841994F9F30B9F67373_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_EyeCursorSnapToTargetCenter_m2D8CF1787B8D46FF917FE704B0F2744AE57E6F95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_LookedAtEyeTarget_mEB3CF3BD747AC4759C20995D7F4B466DCD241365_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_LookedAtPoint_mE06E9249D1597EE50695549AA7C255F7719D26F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_OnTapDown_m8230F34E6B15F17A829B4DE729B355C54DF974EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_OnTapUp_m7B2665A2B185338F2968EB73FCB4141CC8EDAA01_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_SelectedTarget_m9BDB88B91CAF7E8611E5F5E3757288F9E938D45B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_EyeCursorSnapToTargetCenter_mB4CE85BAC9C9834A3540DD7965BB46294F282099_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_OnDwell_mE2D4D9342C356D17C7EB8C0F68A877268C5CEAE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_OnLookAtStart_mDE592AB66517E0F59869EA41AB1CBE6C946B53B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_OnLookAway_m423823E6F190BDB069CACCD53029EE8E9F5CA169_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_OnSelected_m0F4B9799848D33AF740CF337CB5F754BCA0B034C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_OnTapDown_mD56986F13F7B20FA676D79EAB25937667CAB710D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_OnTapUp_m8B558CA5660AEB76BBA69F1CE5327250B84F4A0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_set_WhileLookingAtTarget_m014AB59D3687C9CB102331B73A8E40B8BA3F2956_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_Awake_m10A07214DA11207192D7D1FAC0F73CEACEE11BD2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_IsNearGrabbableObject_mCB782215E8587D8B89DBD7896759069107AFE95E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_UpdateCursorTransform_m8415F27338C65DE106F7AFF0719DE949D76EAAA9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor_UpdateVisuals_m34E2903BDE12CC11A5B0E9508BB351103B8F5AA3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FingerCursor__ctor_mDFB34D40A65E8F4EB92949514EFADF0EFC02A14F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_OnFocusEnter_m13772B32658EC278034F053BD06953684074D38D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_OnFocusExit_mEC57FE3014977C0FDA8F9ACD84415704B7373D8F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler__ctor_m352868996278A795185C1FCBB3109087AE8872EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_get_MarkEventsAsUsed_m81D6F951DB05D622AA101E05CC794860DA103318_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_get_OnFocusEnterEvent_mCEFEB1C1FD085EDEE8D561DDF04EEFF69171C02C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_get_OnFocusExitEvent_mE488A91F523C44EACE609051E3E3C5D96C3C418C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_set_MarkEventsAsUsed_m75D691638E7C7726DC4371980A60D81755B4FB58_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_set_OnFocusEnterEvent_mFC9405D0789A67BA7FEE8D4E8FC6EEE08716581D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusHandler_set_OnFocusExitEvent_mAA6752700F488C13DE82153BDF70DF9BAF264838_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_Equals_m01B4B8C762472B617E00E28E280A0A6E429D31A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_Equals_mF8D8E58FB3664FCB3D285A2D785C3C6748878FE0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_GetHashCode_m526546019E2153A2FF458AE7B679FCB6692D8C87_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnDisable_m464B945C943F97F3E284B87344E3E181CB5431B3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnEnable_m883EF90D7DDA351FDD19AC43E891B39E52F3594E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnInputChanged_m9C5819A6ABBFFDFFE1713C0281647BE725810C93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnInputDown_m93183313CA468D5F9A7B927E9EF9DB1C55FE0227_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnInputUp_m8297C3DC4A78FB3B27A01C9AA6B3F6430DC098CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnPostSceneQuery_mBBC6A0C203397243B633D5F872F8D392FB1727B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnPreCurrentPointerTargetChange_m0FA1115B192308DE370F31BEA4AB2663A11FE36C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnPreSceneQuery_m6615C2CB46AB999EE6D8C1ADF3BA93F637529B3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnSceneQuery_m7C97DABCC9085447A49F2367B1EAB341571DE4DC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnSceneQuery_mE5FB0B7B0A61B5CC4FD17A8B5F22A62C71E1102A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnSourceDetected_mFC615A13180D3171BFB74717100605DD968C6FD8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_OnSourceLost_mCF16A12EFBD3EC3FACE264E24248DF099F65EE7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_RegisterHandlers_m65E7217D694B6D133DD94807D9F009968613BEDE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_Reset_m46156ED65B48947AEB45FB3DD439009BBC4D2227_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_System_Collections_IEqualityComparer_Equals_mCA44BD0FEB1306E33F961324A7775114DE24C427_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_System_Collections_IEqualityComparer_GetHashCode_m0EBB3CEF54870856E56537FDD3227D12EABDDBE4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_UnregisterHandlers_mF92BAD287482FA24ECD91E3738853484733B1ED7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer__cctor_mB4EC52BB2538676987FA553D93336E29843E9B4B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer__ctor_mAFA4AB6351845B8EE32E5400C88D3CAEBB4B4B94_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_BaseCursor_m807BA10BD92F363E6261FB290D0E9806021F52E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_CursorModifier_mE086929852C8761E79A8380263EAE7FDA41ACCB4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_FocusTarget_m852937B83792105BA3C05F0D858260A477D1408F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_IsFocusLocked_m4ADD1AAFBD40913C0204708626334F86CB5EE7BB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_IsTargetPositionLockedOnFocusLock_m11BD29BF5856533B56641125F2570B8ED7346F95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_Position_mB7B593643FB1DB7BE14A2C9B04E62D0AB4C254BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_PrioritizedLayerMasksOverride_mF8E42D368D8C3308DB649511CD2A9392C8C7FB01_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_Result_mDA9C3183EB62A2E97F3620694BD75D488A175FE7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_Rotation_mB007404376B7C484493E9F354E12B04040E2CE93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_SceneQueryType_m13246BA82C3BFE73864C83723428CB85FACA3919_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_get_SphereCastRadius_m6D6503722CE2449C196EAA2E76F7770BCF5AF533_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_CursorModifier_mDE0874027BDDD134CE025A31F18DF59455F70D1F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_FocusTarget_m868E9301F45EF68320AFE4BFDF9211ED6A03D902_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_IsTargetPositionLockedOnFocusLock_mAACD40BE8DECB54978E37C3D2E63D8686EAD94FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_PointerName_mD7C04E02D0FFF16FABA116653FF85197B30BCCCD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_PrioritizedLayerMasksOverride_mDF48C9480AEC64988E190CA7A514DB9A15B0BA7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_Rays_m0283C96E7BD6273E3EBCF2877F4435B870A487F5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_Result_m7A9213A139640B3AFCF91DB367CAE7A7BE37C9E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_SceneQueryType_mE6A653026D416F6CA599D3E71923F69826756CB4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GGVPointer_set_SphereCastRadius_m96070C41D9597EC8833278593C9AFEA2E705FA91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_mAB8CBEA110AEC9DB7152FBD9678CA0F25C43B8FA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponentsInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mA32C4E24AF4AF3533AE3E69E88F7CBC0AA9051FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_GetEnumerator_mA889029FA07B9D545D789ABAEF094BDF9A228416_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityDictationHandler_t286C960AD98D6EA11892BA6AADEBE97C5E616CB5_m7CEAFD4C70726D49D236DEACE147CEF6C3F6CAB6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputActionHandler_t4C9327D5054CD4AB52F6F396865C9C6127DA6C73_mB76CE07396F226DB5997424B6AF3CF2E37474242_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputHandler_1_t3EE04449D345A7F996E872ABEF6FE79969011CD8_mD94F8F69927423AB2074983E1BF31CF2CEC0A2CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_m2C0DAF3964D680743B8ABDBF97EC2581FA7788E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m8045547AED9E0A33D8E70DE66F076E2EE6E206DC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_m47B07025FD5C8A66BA152D91C274B257BC986164_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m15D9DD6955A5C09C418FC0763139AC5CF0BF02DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityDictationHandler_t286C960AD98D6EA11892BA6AADEBE97C5E616CB5_mD81586BC0A250A3E4FF3A962D137540AEF228A02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputActionHandler_t4C9327D5054CD4AB52F6F396865C9C6127DA6C73_mF1A3680F271ADD00BA2A2B97E4AC73635D008B22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputHandler_1_t3EE04449D345A7F996E872ABEF6FE79969011CD8_mAFB88D5943EFDD7C4C44A7D8513AD20AE0DD8CB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_mB45C244DC51FBA1370CE95E485680FD2CB1B75FC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m7DF6B444D35B11AACB65301352ED33F3F466774D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_mF0FE6BDF3711F115C265014A0CB44A0F61EAF864_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m8A7D870AD5804E1F3F2B85756B79AD5736774C41_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityFocusProvider_GetPointers_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mA7AF50FE60BE630D44C589045EBA633B3F8223FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionEnded_m934CF04FBC7FD558E6A78C61261F4B41FCEC8524_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionStarted_mDF9DDEBF7EC886837FB985706712BB6E688C2E27_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionHandler_RegisterHandlers_m2C2B828C0CCCC6A56DEBCAA867D660486EB02B8C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionHandler_UnregisterHandlers_mC0CAE50A1631D2606435D7E3A761ED6D087A0828_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionHandler__ctor_m27C0CFB958874FC8FA3DAD78A6AB7D5C218BB92B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionUnityEvent__ctor_m448CB2FBF1184A293CDEACA9EC7A8A5EFF2E8EC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputRayUtils_TryGetRay_m90ECCB18366EF1AF38E75715F51C33DDD071ED01_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputSimulationIndicators__ctor_m78970F5A3A8D4CA8CB81B6328B48061EC6D1F9DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InteractiveMeshCursor_Awake_m7134A5EB63651FFCF487AD9AE524EB136E09C725_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InteractiveMeshCursor_OnCursorStateChange_m18E3B36A6718D5132C1869E7EF19A0955A0EC297_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InteractiveMeshCursor_SetVisibility_m083DE45CCBDAEC67DFCFAF8E05903AF32269F77E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InteractiveMeshCursor_UpdateCursorTransform_m8F7D7CAE0C06A08D20892C9FAC39FAB029CA72EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InteractiveMeshCursor__ctor_m43A596BAA8852B3370968DD9397A8AEDEFAA3A07_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Key_mA68682BB6B7272E8AA584DF449F80B7ECF2ADC3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mA22939BED47EBE722D9815A2D9E1D9CDD060F2E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_OnDisable_mC311C362DCD6577944729820E1E275A88BF8D5B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_OnPreSceneQuery_mF9567D5E3F0B99BC3FAF85566B3AFF523BFAC1A5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_PostUpdateLineRenderers_m2D388F5C36D18E614EC4E7A5F73505A0F6203110_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_UpdateRays_m406AC1AF74E39C76AF28C9175E7455D57CD1666C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer__cctor_mCCC6789AE415DE3032CE53F3DC0FC6B22A511D76_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_get_IsInteractionEnabled_mEE9BFEBCF3C1BD807747BAC84671C13E84C94D24_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m30083179A7DD6C14E23B28334B0849E1C8C151A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MeshCursor_OnCursorStateChange_mBA80B45C81EC530D45FDFBEB61008B8D04526B60_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MeshCursor_OnEnable_mF4CBEA8A56D1B8D44E4E3FBF6C0FFAC4F6A5C22F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MeshCursor__ctor_m0B149F0B75D1CFEAFBAA0B23A6F8F9682FDF6C6E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_AnimateGrasp_mC3D08193B9844E06360158A5B759DA4CD52F4D93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_AnimateHome_m3304DC1565F6E56A603CC151334F44A857A5DD91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_AnimateMenu_m148A0E4EE64AA041CFAE3CFA058D45620578A711_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_AnimateSelect_mA5910293F811FA8A7CA1AECDD1F94E5369637024_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_AnimateThumbstick_mB5D9B9411534A5B06882F8C20E564269E44CC619_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_AnimateTouchpad_mC1D08EBA5F62DAEE167FAD1B6562C8A514179119_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_LoadInfo_mC0C6730CC2D73D38127AA4F40B7D7C5FB0869905_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_SetRenderersVisible_m94952D555FC4528D9400D0FD8828B3FAE2F132CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo_TryGetElement_mA06E8C7ECD39523FA33AA6C510DB5A50BA93D127_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerInfo__ctor_m59D7703929CE359882BCDB2F5A3AD11D8FC4DB1E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerVisualizer_OnInputChanged_mF55BD41A09CAD073071E34FDBF0324980351BB8E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerVisualizer_OnInputChanged_mF7F4DB04EA042746EC581C16C2651C741525E1EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerVisualizer_OnInputDown_m8C6F09C515C1E3738604EE8A8D13A4FE197BCF7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerVisualizer_OnInputUp_m74DF26505793F335BD87EFF771025D7A1CFF1C73_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerVisualizer__ctor_m0D0CACC1D753168E4C5786B65138DCE7BD1D18A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerVisualizer_get_GameObjectProxy_mFD6B5C45CA80AC566470BF036753965B4C315A2B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_OnInputChanged_mA3ED23C1FC4441A272BFCD6B84F2085FA783370D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_OnInputChanged_mABA6C29C21B4674AE392D3D5D4BC3E588052BDEC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_OnPreSceneQuery_m11FDF43AC9753EF4FE21D0DF863089B780CF1016_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_SetVisibility_m892188D8D19589D712D4984059A9145FD2AD8A6E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_Start_m91CEAF0F0A393D1AD1E044D6FFA9C0BA00A08958_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer__cctor_mED4CA715A126507DEE28A7C0F2667309912CB11A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer__ctor_mB9F25F2E2947E3F462D10987357BF66C3C72CBEA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MousePointer_get_ControllerName_mC2DAC74D907A79F1D6A503AB23C41072697DCF04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_m9412E5B49A0FFC6C10C293C29DF5EAF3DD759594_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StringUnityEvent__ctor_m9AA46217465CB60E77D7C2EDCC737F0CDD74916E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_mAB35D2B53B861757A29E7496B236DAD54A49F096_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1__ctor_m08DA3398D67E0E0B82E658405A8FAE4A36268F2D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1__ctor_mD2CC4D61F76F2B6222356EE45D15481994CCCAD2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ControllerElementEnum_t48F5A753A53794D8F010BD0E8BDA011CC34E2F66_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* CursorStateEnum_t247F2213B5F13A4A20859354F8F6FB28423C0FB6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IEnumerable_1_t19D371D5397612F70C0A4E6CC349E8EA27500ABA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IEnumerator_1_t803289C0820529EF837EACBA5D5250227930E668_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_1_tB7CFFF4084649FE066002BB179F7CC250E6A8968_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308EMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0FMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EFMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AFMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28CMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Destroy_m5942250584F3DC35B5247A1C61ECA49B7FC45472_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Initialize_m6A5E8F97CC205DEC79697939CD8062B57C76E987_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mB38717CA47236014BBE2825632948450AEC8D8EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m248D34DEC424BCFE4A290B76B15C25794AD613BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m9A14AA4EAF3B04D6B8C53946FDD197009EE13F1C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFF7AE1D6F7948ED5C706C35AAB6036CF183F02A3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_RegisterPointer_mE6E8988CE765471977AA1469843B29D1690E3FC1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_UnregisterPointer_m3A73FAB6DB98E9F255C9F8C563E463E172E3CC0B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector_Update_mA628E5340FE9482CAD5EC7FE5273D3605EBF9934_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector__cctor_mCA51CA80824F986A1BBC4A96D11FD4F509276C64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultPrimaryPointerSelector__ctor_m062B0EE4AFBA428CC92A23DE1D4D6B596F9AF56C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationComplete_mD3DE8C82061205BD2683B5DD1E63C9FCCA0995C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationError_m7F88E9E422B61B4465536D3E67B0427BFBC58AFA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationHypothesis_mE259BC76AAF34741A2C54279C564EB0459085575_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationResult_mE437E4925340185D2383401872B15404388DA4C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_OnDisable_mA510751D96783140DD27E6B68F95E8F699714559_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_RegisterHandlers_m82252940A1747765CB35378DF117FAB13AFF01B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_Start_mE9D8B38752E8DD1E4CCCC675DF8FDEC24D768D17_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_UnregisterHandlers_mE97E8A82ECD5AC899E0923B461B16BB078190726_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler__ctor_m329C03E40D22FD2A17BB75D98E567EF58D7A6E36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_get_AudioClip_m4699568E50331CA70E7DCF9061ADA1027CC249B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DictationHandler_get_IsListening_m4C7D36D6AE714ED11F47049C0B0C566900033816_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAB01AAB27B91E506675A3187C8BD438F01D4578A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mBF9F504FEC8218057A3DB0DE573B83C4E477E905_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m14F12DE16899487D41F09E0BB4C0AE1A1EC8F549_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFC247EEC45A7789DB938A4FCCD4C13432FC55C95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m481FB936CA05939E5E7CDCF0F88A917E0FFE4695_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_OnDisable_mB4B55660146D3095E9DB5049591FAD7476BF3C36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_RaiseSelectEventManually_m8D6E57AE292FF43BD85102AA0D20816C46A426AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_RegisterHandlers_m553AF274B7CFC1C7D5643B99064A71A4CE9FEAB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Start_m8D6A312C56F79F3068B1D33C75DAE2B594419902_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_UnregisterHandlers_mF87106515727B5FFDF0FA5944A0F375C38D8219B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_Update_m6605D30B481D3CD4A5C9383D17B3F1E604D3EBA8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget__cctor_m1AC7E59699C8D377AFD69D7830482592E4AC93EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget__ctor_mEDE6BD23CB1524F729EBF841994F9F30B9F67373_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_EyeCursorSnapToTargetCenter_m2D8CF1787B8D46FF917FE704B0F2744AE57E6F95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9ABMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_LookedAtEyeTarget_mEB3CF3BD747AC4759C20995D7F4B466DCD241365_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_LookedAtPoint_mE06E9249D1597EE50695549AA7C255F7719D26F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_OnTapDown_m8230F34E6B15F17A829B4DE729B355C54DF974EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_OnTapUp_m7B2665A2B185338F2968EB73FCB4141CC8EDAA01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_SelectedTarget_m9BDB88B91CAF7E8611E5F5E3757288F9E938D45B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_EyeCursorSnapToTargetCenter_mB4CE85BAC9C9834A3540DD7965BB46294F282099_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01BMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_OnDwell_mE2D4D9342C356D17C7EB8C0F68A877268C5CEAE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_OnLookAtStart_mDE592AB66517E0F59869EA41AB1CBE6C946B53B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_OnLookAway_m423823E6F190BDB069CACCD53029EE8E9F5CA169_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_OnSelected_m0F4B9799848D33AF740CF337CB5F754BCA0B034C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_OnTapDown_mD56986F13F7B20FA676D79EAB25937667CAB710D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_OnTapUp_m8B558CA5660AEB76BBA69F1CE5327250B84F4A0D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_set_WhileLookingAtTarget_m014AB59D3687C9CB102331B73A8E40B8BA3F2956_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_Awake_m10A07214DA11207192D7D1FAC0F73CEACEE11BD2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_IsNearGrabbableObject_mCB782215E8587D8B89DBD7896759069107AFE95E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_UpdateCursorTransform_m8415F27338C65DE106F7AFF0719DE949D76EAAA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor_UpdateVisuals_m34E2903BDE12CC11A5B0E9508BB351103B8F5AA3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FingerCursor__ctor_mDFB34D40A65E8F4EB92949514EFADF0EFC02A14F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_OnFocusEnter_m13772B32658EC278034F053BD06953684074D38D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_OnFocusExit_mEC57FE3014977C0FDA8F9ACD84415704B7373D8F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler__ctor_m352868996278A795185C1FCBB3109087AE8872EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_get_MarkEventsAsUsed_m81D6F951DB05D622AA101E05CC794860DA103318_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_get_OnFocusEnterEvent_mCEFEB1C1FD085EDEE8D561DDF04EEFF69171C02C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_get_OnFocusExitEvent_mE488A91F523C44EACE609051E3E3C5D96C3C418C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_set_MarkEventsAsUsed_m75D691638E7C7726DC4371980A60D81755B4FB58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_set_OnFocusEnterEvent_mFC9405D0789A67BA7FEE8D4E8FC6EEE08716581D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusHandler_set_OnFocusExitEvent_mAA6752700F488C13DE82153BDF70DF9BAF264838_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_Equals_m01B4B8C762472B617E00E28E280A0A6E429D31A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_Equals_mF8D8E58FB3664FCB3D285A2D785C3C6748878FE0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_GetHashCode_m526546019E2153A2FF458AE7B679FCB6692D8C87_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnDisable_m464B945C943F97F3E284B87344E3E181CB5431B3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnEnable_m883EF90D7DDA351FDD19AC43E891B39E52F3594E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnInputChanged_m9C5819A6ABBFFDFFE1713C0281647BE725810C93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnInputDown_m93183313CA468D5F9A7B927E9EF9DB1C55FE0227_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnInputUp_m8297C3DC4A78FB3B27A01C9AA6B3F6430DC098CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnPostSceneQuery_mBBC6A0C203397243B633D5F872F8D392FB1727B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnPreCurrentPointerTargetChange_m0FA1115B192308DE370F31BEA4AB2663A11FE36C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnPreSceneQuery_m6615C2CB46AB999EE6D8C1ADF3BA93F637529B3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnSceneQuery_m7C97DABCC9085447A49F2367B1EAB341571DE4DC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnSceneQuery_mE5FB0B7B0A61B5CC4FD17A8B5F22A62C71E1102A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnSourceDetected_mFC615A13180D3171BFB74717100605DD968C6FD8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_OnSourceLost_mCF16A12EFBD3EC3FACE264E24248DF099F65EE7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_RegisterHandlers_m65E7217D694B6D133DD94807D9F009968613BEDE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_Reset_m46156ED65B48947AEB45FB3DD439009BBC4D2227_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_System_Collections_IEqualityComparer_Equals_mCA44BD0FEB1306E33F961324A7775114DE24C427_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_System_Collections_IEqualityComparer_GetHashCode_m0EBB3CEF54870856E56537FDD3227D12EABDDBE4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_UnregisterHandlers_mF92BAD287482FA24ECD91E3738853484733B1ED7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer__cctor_mB4EC52BB2538676987FA553D93336E29843E9B4B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer__ctor_mAFA4AB6351845B8EE32E5400C88D3CAEBB4B4B94_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_BaseCursor_m807BA10BD92F363E6261FB290D0E9806021F52E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_CursorModifier_mE086929852C8761E79A8380263EAE7FDA41ACCB4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_FocusTarget_m852937B83792105BA3C05F0D858260A477D1408F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3EMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_IsFocusLocked_m4ADD1AAFBD40913C0204708626334F86CB5EE7BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_IsTargetPositionLockedOnFocusLock_m11BD29BF5856533B56641125F2570B8ED7346F95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_Position_mB7B593643FB1DB7BE14A2C9B04E62D0AB4C254BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_PrioritizedLayerMasksOverride_mF8E42D368D8C3308DB649511CD2A9392C8C7FB01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8EMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_Result_mDA9C3183EB62A2E97F3620694BD75D488A175FE7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_Rotation_mB007404376B7C484493E9F354E12B04040E2CE93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_SceneQueryType_m13246BA82C3BFE73864C83723428CB85FACA3919_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_get_SphereCastRadius_m6D6503722CE2449C196EAA2E76F7770BCF5AF533_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_CursorModifier_mDE0874027BDDD134CE025A31F18DF59455F70D1F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_FocusTarget_m868E9301F45EF68320AFE4BFDF9211ED6A03D902_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05ABMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_IsTargetPositionLockedOnFocusLock_mAACD40BE8DECB54978E37C3D2E63D8686EAD94FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_PointerName_mD7C04E02D0FFF16FABA116653FF85197B30BCCCD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_PrioritizedLayerMasksOverride_mDF48C9480AEC64988E190CA7A514DB9A15B0BA7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_Rays_m0283C96E7BD6273E3EBCF2877F4435B870A487F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_Result_m7A9213A139640B3AFCF91DB367CAE7A7BE37C9E4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_SceneQueryType_mE6A653026D416F6CA599D3E71923F69826756CB4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GGVPointer_set_SphereCastRadius_m96070C41D9597EC8833278593C9AFEA2E705FA91_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionEnded_m934CF04FBC7FD558E6A78C61261F4B41FCEC8524_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionStarted_mDF9DDEBF7EC886837FB985706712BB6E688C2E27_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionHandler_RegisterHandlers_m2C2B828C0CCCC6A56DEBCAA867D660486EB02B8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionHandler_UnregisterHandlers_mC0CAE50A1631D2606435D7E3A761ED6D087A0828_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionHandler__ctor_m27C0CFB958874FC8FA3DAD78A6AB7D5C218BB92B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionUnityEvent__ctor_m448CB2FBF1184A293CDEACA9EC7A8A5EFF2E8EC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputRayUtils_TryGetRay_m90ECCB18366EF1AF38E75715F51C33DDD071ED01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputSimulationIndicators__ctor_m78970F5A3A8D4CA8CB81B6328B48061EC6D1F9DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InteractiveMeshCursor_Awake_m7134A5EB63651FFCF487AD9AE524EB136E09C725_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InteractiveMeshCursor_OnCursorStateChange_m18E3B36A6718D5132C1869E7EF19A0955A0EC297_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InteractiveMeshCursor_SetVisibility_m083DE45CCBDAEC67DFCFAF8E05903AF32269F77E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InteractiveMeshCursor_UpdateCursorTransform_m8F7D7CAE0C06A08D20892C9FAC39FAB029CA72EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InteractiveMeshCursor__ctor_m43A596BAA8852B3370968DD9397A8AEDEFAA3A07_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AECMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_OnDisable_mC311C362DCD6577944729820E1E275A88BF8D5B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_OnPreSceneQuery_mF9567D5E3F0B99BC3FAF85566B3AFF523BFAC1A5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_PostUpdateLineRenderers_m2D388F5C36D18E614EC4E7A5F73505A0F6203110_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_UpdateRays_m406AC1AF74E39C76AF28C9175E7455D57CD1666C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer__cctor_mCCC6789AE415DE3032CE53F3DC0FC6B22A511D76_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_IsInteractionEnabled_mEE9BFEBCF3C1BD807747BAC84671C13E84C94D24_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MeshCursor_OnCursorStateChange_mBA80B45C81EC530D45FDFBEB61008B8D04526B60_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MeshCursor_OnEnable_mF4CBEA8A56D1B8D44E4E3FBF6C0FFAC4F6A5C22F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MeshCursor__ctor_m0B149F0B75D1CFEAFBAA0B23A6F8F9682FDF6C6E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_AnimateGrasp_mC3D08193B9844E06360158A5B759DA4CD52F4D93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_AnimateHome_m3304DC1565F6E56A603CC151334F44A857A5DD91_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_AnimateMenu_m148A0E4EE64AA041CFAE3CFA058D45620578A711_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_AnimateSelect_mA5910293F811FA8A7CA1AECDD1F94E5369637024_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_AnimateThumbstick_mB5D9B9411534A5B06882F8C20E564269E44CC619_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_AnimateTouchpad_mC1D08EBA5F62DAEE167FAD1B6562C8A514179119_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_LoadInfo_mC0C6730CC2D73D38127AA4F40B7D7C5FB0869905_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_SetRenderersVisible_m94952D555FC4528D9400D0FD8828B3FAE2F132CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo_TryGetElement_mA06E8C7ECD39523FA33AA6C510DB5A50BA93D127_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerInfo__ctor_m59D7703929CE359882BCDB2F5A3AD11D8FC4DB1E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerVisualizer_OnInputChanged_mF55BD41A09CAD073071E34FDBF0324980351BB8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerVisualizer_OnInputChanged_mF7F4DB04EA042746EC581C16C2651C741525E1EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerVisualizer_OnInputDown_m8C6F09C515C1E3738604EE8A8D13A4FE197BCF7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerVisualizer_OnInputUp_m74DF26505793F335BD87EFF771025D7A1CFF1C73_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerVisualizer__ctor_m0D0CACC1D753168E4C5786B65138DCE7BD1D18A9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerVisualizer_get_GameObjectProxy_mFD6B5C45CA80AC566470BF036753965B4C315A2B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CDMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_OnInputChanged_mA3ED23C1FC4441A272BFCD6B84F2085FA783370D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_OnInputChanged_mABA6C29C21B4674AE392D3D5D4BC3E588052BDEC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_OnPreSceneQuery_m11FDF43AC9753EF4FE21D0DF863089B780CF1016_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_SetVisibility_m892188D8D19589D712D4984059A9145FD2AD8A6E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_Start_m91CEAF0F0A393D1AD1E044D6FFA9C0BA00A08958_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer__cctor_mED4CA715A126507DEE28A7C0F2667309912CB11A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer__ctor_mB9F25F2E2947E3F462D10987357BF66C3C72CBEA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MousePointer_get_ControllerName_mC2DAC74D907A79F1D6A503AB23C41072697DCF04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4FMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4ACMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317BMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StringUnityEvent__ctor_m9AA46217465CB60E77D7C2EDCC737F0CDD74916E_MetadataUsageId;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0;
struct MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B;
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA;
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
struct BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822;
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
struct MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3;
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object


// Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo
struct PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458  : public RuntimeObject
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::isInteractionEnabled
	bool ___isInteractionEnabled_0;
	// System.Int64 Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::<ReleasedTimestamp>k__BackingField
	int64_t ___U3CReleasedTimestampU3Ek__BackingField_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::isPressed
	bool ___isPressed_2;
	// System.Int64 Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::<PressedTimestamp>k__BackingField
	int64_t ___U3CPressedTimestampU3Ek__BackingField_3;

public:
	inline static int32_t get_offset_of_isInteractionEnabled_0() { return static_cast<int32_t>(offsetof(PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458, ___isInteractionEnabled_0)); }
	inline bool get_isInteractionEnabled_0() const { return ___isInteractionEnabled_0; }
	inline bool* get_address_of_isInteractionEnabled_0() { return &___isInteractionEnabled_0; }
	inline void set_isInteractionEnabled_0(bool value)
	{
		___isInteractionEnabled_0 = value;
	}

	inline static int32_t get_offset_of_U3CReleasedTimestampU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458, ___U3CReleasedTimestampU3Ek__BackingField_1)); }
	inline int64_t get_U3CReleasedTimestampU3Ek__BackingField_1() const { return ___U3CReleasedTimestampU3Ek__BackingField_1; }
	inline int64_t* get_address_of_U3CReleasedTimestampU3Ek__BackingField_1() { return &___U3CReleasedTimestampU3Ek__BackingField_1; }
	inline void set_U3CReleasedTimestampU3Ek__BackingField_1(int64_t value)
	{
		___U3CReleasedTimestampU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_isPressed_2() { return static_cast<int32_t>(offsetof(PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458, ___isPressed_2)); }
	inline bool get_isPressed_2() const { return ___isPressed_2; }
	inline bool* get_address_of_isPressed_2() { return &___isPressed_2; }
	inline void set_isPressed_2(bool value)
	{
		___isPressed_2 = value;
	}

	inline static int32_t get_offset_of_U3CPressedTimestampU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458, ___U3CPressedTimestampU3Ek__BackingField_3)); }
	inline int64_t get_U3CPressedTimestampU3Ek__BackingField_3() const { return ___U3CPressedTimestampU3Ek__BackingField_3; }
	inline int64_t* get_address_of_U3CPressedTimestampU3Ek__BackingField_3() { return &___U3CPressedTimestampU3Ek__BackingField_3; }
	inline void set_U3CPressedTimestampU3Ek__BackingField_3(int64_t value)
	{
		___U3CPressedTimestampU3Ek__BackingField_3 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputRayUtils
struct InputRayUtils_t2D921B80EC90F0C4F3A96C4153BA831DD6E87179  : public RuntimeObject
{
public:

public:
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>
struct Dictionary_2_t722E61C14764100A873E595E33D47898108D108D  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_t2699BEF95474BC44B689968B0A98E52DB44CF298* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_tA366750BA7D62B87D323903F1D5071BAD8CF8001 * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_t3100BB40353F661049095D8405D5483E4CE05E4B * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___entries_1)); }
	inline EntryU5BU5D_t2699BEF95474BC44B689968B0A98E52DB44CF298* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_t2699BEF95474BC44B689968B0A98E52DB44CF298** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_t2699BEF95474BC44B689968B0A98E52DB44CF298* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___keys_7)); }
	inline KeyCollection_tA366750BA7D62B87D323903F1D5071BAD8CF8001 * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_tA366750BA7D62B87D323903F1D5071BAD8CF8001 ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_tA366750BA7D62B87D323903F1D5071BAD8CF8001 * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ___values_8)); }
	inline ValueCollection_t3100BB40353F661049095D8405D5483E4CE05E4B * get_values_8() const { return ___values_8; }
	inline ValueCollection_t3100BB40353F661049095D8405D5483E4CE05E4B ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_t3100BB40353F661049095D8405D5483E4CE05E4B * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_tA5D96D5A9783D79ABFFFC777115F940BDC4D3580* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * ____siInfo_14;

public:
	inline static int32_t get_offset_of__buckets_7() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____buckets_7)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__buckets_7() const { return ____buckets_7; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__buckets_7() { return &____buckets_7; }
	inline void set__buckets_7(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____buckets_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____buckets_7), (void*)value);
	}

	inline static int32_t get_offset_of__slots_8() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____slots_8)); }
	inline SlotU5BU5D_tA5D96D5A9783D79ABFFFC777115F940BDC4D3580* get__slots_8() const { return ____slots_8; }
	inline SlotU5BU5D_tA5D96D5A9783D79ABFFFC777115F940BDC4D3580** get_address_of__slots_8() { return &____slots_8; }
	inline void set__slots_8(SlotU5BU5D_tA5D96D5A9783D79ABFFFC777115F940BDC4D3580* value)
	{
		____slots_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____slots_8), (void*)value);
	}

	inline static int32_t get_offset_of__count_9() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____count_9)); }
	inline int32_t get__count_9() const { return ____count_9; }
	inline int32_t* get_address_of__count_9() { return &____count_9; }
	inline void set__count_9(int32_t value)
	{
		____count_9 = value;
	}

	inline static int32_t get_offset_of__lastIndex_10() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____lastIndex_10)); }
	inline int32_t get__lastIndex_10() const { return ____lastIndex_10; }
	inline int32_t* get_address_of__lastIndex_10() { return &____lastIndex_10; }
	inline void set__lastIndex_10(int32_t value)
	{
		____lastIndex_10 = value;
	}

	inline static int32_t get_offset_of__freeList_11() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____freeList_11)); }
	inline int32_t get__freeList_11() const { return ____freeList_11; }
	inline int32_t* get_address_of__freeList_11() { return &____freeList_11; }
	inline void set__freeList_11(int32_t value)
	{
		____freeList_11 = value;
	}

	inline static int32_t get_offset_of__comparer_12() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____comparer_12)); }
	inline RuntimeObject* get__comparer_12() const { return ____comparer_12; }
	inline RuntimeObject** get_address_of__comparer_12() { return &____comparer_12; }
	inline void set__comparer_12(RuntimeObject* value)
	{
		____comparer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____comparer_12), (void*)value);
	}

	inline static int32_t get_offset_of__version_13() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____version_13)); }
	inline int32_t get__version_13() const { return ____version_13; }
	inline int32_t* get_address_of__version_13() { return &____version_13; }
	inline void set__version_13(int32_t value)
	{
		____version_13 = value;
	}

	inline static int32_t get_offset_of__siInfo_14() { return static_cast<int32_t>(offsetof(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229, ____siInfo_14)); }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * get__siInfo_14() const { return ____siInfo_14; }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 ** get_address_of__siInfo_14() { return &____siInfo_14; }
	inline void set__siInfo_14(SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * value)
	{
		____siInfo_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____siInfo_14), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.UInt32>
struct List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E, ____items_1)); }
	inline UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB* get__items_1() const { return ____items_1; }
	inline UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E_StaticFields, ____emptyArray_5)); }
	inline UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB* get__emptyArray_5() const { return ____emptyArray_5; }
	inline UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.EmptyArray`1<Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum>
struct EmptyArray_1_t8B98F044376AB0073D495CC899CDBB634F3C7A49  : public RuntimeObject
{
public:

public:
};

struct EmptyArray_1_t8B98F044376AB0073D495CC899CDBB634F3C7A49_StaticFields
{
public:
	// T[] System.EmptyArray`1::Value
	MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* ___Value_0;

public:
	inline static int32_t get_offset_of_Value_0() { return static_cast<int32_t>(offsetof(EmptyArray_1_t8B98F044376AB0073D495CC899CDBB634F3C7A49_StaticFields, ___Value_0)); }
	inline MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* get_Value_0() const { return ___Value_0; }
	inline MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0** get_address_of_Value_0() { return &___Value_0; }
	inline void set_Value_0(MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* value)
	{
		___Value_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Value_0), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// UnityEngine.Events.UnityEventBase
struct UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject* ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD, ____set_0)); }
	inline HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * get__set_0() const { return ____set_0; }
	inline HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD, ____current_3)); }
	inline RuntimeObject* get__current_3() const { return ____current_3; }
	inline RuntimeObject** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject* value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<System.Object>
struct Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject * ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____set_0)); }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * get__set_0() const { return ____set_0; }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____current_3)); }
	inline RuntimeObject * get__current_3() const { return ____current_3; }
	inline RuntimeObject ** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject * value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>
struct KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject* ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930, ___key_0)); }
	inline RuntimeObject* get_key_0() const { return ___key_0; }
	inline RuntimeObject** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject* value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930, ___value_1)); }
	inline PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * get_value_1() const { return ___value_1; }
	inline PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>
struct KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE, ___key_0)); }
	inline RuntimeObject * get_key_0() const { return ___key_0; }
	inline RuntimeObject ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE, ___value_1)); }
	inline RuntimeObject * get_value_1() const { return ___value_1; }
	inline RuntimeObject ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Double
struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409 
{
public:
	// System.Double System.Double::m_value
	double ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409, ___m_value_0)); }
	inline double get_m_value_0() const { return ___m_value_0; }
	inline double* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(double value)
	{
		___m_value_0 = value;
	}
};

struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields
{
public:
	// System.Double System.Double::NegativeZero
	double ___NegativeZero_7;

public:
	inline static int32_t get_offset_of_NegativeZero_7() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields, ___NegativeZero_7)); }
	inline double get_NegativeZero_7() const { return ___NegativeZero_7; }
	inline double* get_address_of_NegativeZero_7() { return &___NegativeZero_7; }
	inline void set_NegativeZero_7(double value)
	{
		___NegativeZero_7 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Int64
struct Int64_t7A386C2FF7B0280A0F516992401DDFCF0FF7B436 
{
public:
	// System.Int64 System.Int64::m_value
	int64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int64_t7A386C2FF7B0280A0F516992401DDFCF0FF7B436, ___m_value_0)); }
	inline int64_t get_m_value_0() const { return ___m_value_0; }
	inline int64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int64_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.UInt32>
struct Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 
{
public:
	// T System.Nullable`1::value
	uint32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043, ___value_0)); }
	inline uint32_t get_value_0() const { return ___value_0; }
	inline uint32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt16
struct UInt16_tAE45CEF73BF720100519F6867F32145D075F928E 
{
public:
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt16_tAE45CEF73BF720100519F6867F32145D075F928E, ___m_value_0)); }
	inline uint16_t get_m_value_0() const { return ___m_value_0; }
	inline uint16_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint16_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Color
struct Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 
{
public:
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.BaseInputEventData>
struct UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<System.String>
struct UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.LayerMask
struct LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 
{
public:
	// System.Int32 UnityEngine.LayerMask::m_Mask
	int32_t ___m_Mask_0;

public:
	inline static int32_t get_offset_of_m_Mask_0() { return static_cast<int32_t>(offsetof(LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0, ___m_Mask_0)); }
	inline int32_t get_m_Mask_0() const { return ___m_Mask_0; }
	inline int32_t* get_address_of_m_Mask_0() { return &___m_Mask_0; }
	inline void set_m_Mask_0(int32_t value)
	{
		___m_Mask_0 = value;
	}
};


// UnityEngine.Matrix4x4
struct Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA 
{
public:
	// System.Single UnityEngine.Matrix4x4::m00
	float ___m00_0;
	// System.Single UnityEngine.Matrix4x4::m10
	float ___m10_1;
	// System.Single UnityEngine.Matrix4x4::m20
	float ___m20_2;
	// System.Single UnityEngine.Matrix4x4::m30
	float ___m30_3;
	// System.Single UnityEngine.Matrix4x4::m01
	float ___m01_4;
	// System.Single UnityEngine.Matrix4x4::m11
	float ___m11_5;
	// System.Single UnityEngine.Matrix4x4::m21
	float ___m21_6;
	// System.Single UnityEngine.Matrix4x4::m31
	float ___m31_7;
	// System.Single UnityEngine.Matrix4x4::m02
	float ___m02_8;
	// System.Single UnityEngine.Matrix4x4::m12
	float ___m12_9;
	// System.Single UnityEngine.Matrix4x4::m22
	float ___m22_10;
	// System.Single UnityEngine.Matrix4x4::m32
	float ___m32_11;
	// System.Single UnityEngine.Matrix4x4::m03
	float ___m03_12;
	// System.Single UnityEngine.Matrix4x4::m13
	float ___m13_13;
	// System.Single UnityEngine.Matrix4x4::m23
	float ___m23_14;
	// System.Single UnityEngine.Matrix4x4::m33
	float ___m33_15;

public:
	inline static int32_t get_offset_of_m00_0() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m00_0)); }
	inline float get_m00_0() const { return ___m00_0; }
	inline float* get_address_of_m00_0() { return &___m00_0; }
	inline void set_m00_0(float value)
	{
		___m00_0 = value;
	}

	inline static int32_t get_offset_of_m10_1() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m10_1)); }
	inline float get_m10_1() const { return ___m10_1; }
	inline float* get_address_of_m10_1() { return &___m10_1; }
	inline void set_m10_1(float value)
	{
		___m10_1 = value;
	}

	inline static int32_t get_offset_of_m20_2() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m20_2)); }
	inline float get_m20_2() const { return ___m20_2; }
	inline float* get_address_of_m20_2() { return &___m20_2; }
	inline void set_m20_2(float value)
	{
		___m20_2 = value;
	}

	inline static int32_t get_offset_of_m30_3() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m30_3)); }
	inline float get_m30_3() const { return ___m30_3; }
	inline float* get_address_of_m30_3() { return &___m30_3; }
	inline void set_m30_3(float value)
	{
		___m30_3 = value;
	}

	inline static int32_t get_offset_of_m01_4() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m01_4)); }
	inline float get_m01_4() const { return ___m01_4; }
	inline float* get_address_of_m01_4() { return &___m01_4; }
	inline void set_m01_4(float value)
	{
		___m01_4 = value;
	}

	inline static int32_t get_offset_of_m11_5() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m11_5)); }
	inline float get_m11_5() const { return ___m11_5; }
	inline float* get_address_of_m11_5() { return &___m11_5; }
	inline void set_m11_5(float value)
	{
		___m11_5 = value;
	}

	inline static int32_t get_offset_of_m21_6() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m21_6)); }
	inline float get_m21_6() const { return ___m21_6; }
	inline float* get_address_of_m21_6() { return &___m21_6; }
	inline void set_m21_6(float value)
	{
		___m21_6 = value;
	}

	inline static int32_t get_offset_of_m31_7() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m31_7)); }
	inline float get_m31_7() const { return ___m31_7; }
	inline float* get_address_of_m31_7() { return &___m31_7; }
	inline void set_m31_7(float value)
	{
		___m31_7 = value;
	}

	inline static int32_t get_offset_of_m02_8() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m02_8)); }
	inline float get_m02_8() const { return ___m02_8; }
	inline float* get_address_of_m02_8() { return &___m02_8; }
	inline void set_m02_8(float value)
	{
		___m02_8 = value;
	}

	inline static int32_t get_offset_of_m12_9() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m12_9)); }
	inline float get_m12_9() const { return ___m12_9; }
	inline float* get_address_of_m12_9() { return &___m12_9; }
	inline void set_m12_9(float value)
	{
		___m12_9 = value;
	}

	inline static int32_t get_offset_of_m22_10() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m22_10)); }
	inline float get_m22_10() const { return ___m22_10; }
	inline float* get_address_of_m22_10() { return &___m22_10; }
	inline void set_m22_10(float value)
	{
		___m22_10 = value;
	}

	inline static int32_t get_offset_of_m32_11() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m32_11)); }
	inline float get_m32_11() const { return ___m32_11; }
	inline float* get_address_of_m32_11() { return &___m32_11; }
	inline void set_m32_11(float value)
	{
		___m32_11 = value;
	}

	inline static int32_t get_offset_of_m03_12() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m03_12)); }
	inline float get_m03_12() const { return ___m03_12; }
	inline float* get_address_of_m03_12() { return &___m03_12; }
	inline void set_m03_12(float value)
	{
		___m03_12 = value;
	}

	inline static int32_t get_offset_of_m13_13() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m13_13)); }
	inline float get_m13_13() const { return ___m13_13; }
	inline float* get_address_of_m13_13() { return &___m13_13; }
	inline void set_m13_13(float value)
	{
		___m13_13 = value;
	}

	inline static int32_t get_offset_of_m23_14() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m23_14)); }
	inline float get_m23_14() const { return ___m23_14; }
	inline float* get_address_of_m23_14() { return &___m23_14; }
	inline void set_m23_14(float value)
	{
		___m23_14 = value;
	}

	inline static int32_t get_offset_of_m33_15() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m33_15)); }
	inline float get_m33_15() const { return ___m33_15; }
	inline float* get_address_of_m33_15() { return &___m33_15; }
	inline void set_m33_15(float value)
	{
		___m33_15 = value;
	}
};

struct Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields
{
public:
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::zeroMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___zeroMatrix_16;
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::identityMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___identityMatrix_17;

public:
	inline static int32_t get_offset_of_zeroMatrix_16() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields, ___zeroMatrix_16)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_zeroMatrix_16() const { return ___zeroMatrix_16; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_zeroMatrix_16() { return &___zeroMatrix_16; }
	inline void set_zeroMatrix_16(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___zeroMatrix_16 = value;
	}

	inline static int32_t get_offset_of_identityMatrix_17() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields, ___identityMatrix_17)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_identityMatrix_17() const { return ___identityMatrix_17; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_identityMatrix_17() { return &___identityMatrix_17; }
	inline void set_identityMatrix_17(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___identityMatrix_17 = value;
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Microsoft.MixedReality.Toolkit.DistortionMode
struct DistortionMode_t0A44618736AD74E06283A0507B7A27F4180BFCBF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.DistortionMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DistortionMode_t0A44618736AD74E06283A0507B7A27F4180BFCBF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.CursorContextEnum
struct CursorContextEnum_t3BACC4A07299CEF28000BE9D371313ED764A7A30 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.CursorContextEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CursorContextEnum_t3BACC4A07299CEF28000BE9D371313ED764A7A30, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum
struct CursorStateEnum_t247F2213B5F13A4A20859354F8F6FB28423C0FB6 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.CursorStateEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CursorStateEnum_t247F2213B5F13A4A20859354F8F6FB28423C0FB6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.DeviceInputType
struct DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.DeviceInputType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent
struct StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58  : public UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<OldFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3COldFocusedObjectU3Ek__BackingField_3;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<NewFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CNewFocusedObjectU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CPointerU3Ek__BackingField_2)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_2() const { return ___U3CPointerU3Ek__BackingField_2; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_2() { return &___U3CPointerU3Ek__BackingField_2; }
	inline void set_U3CPointerU3Ek__BackingField_2(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3COldFocusedObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3COldFocusedObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3COldFocusedObjectU3Ek__BackingField_3() const { return ___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3COldFocusedObjectU3Ek__BackingField_3() { return &___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline void set_U3COldFocusedObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3COldFocusedObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3COldFocusedObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CNewFocusedObjectU3Ek__BackingField_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CNewFocusedObjectU3Ek__BackingField_4() const { return ___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return &___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline void set_U3CNewFocusedObjectU3Ek__BackingField_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CNewFocusedObjectU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNewFocusedObjectU3Ek__BackingField_4), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputActionUnityEvent
struct InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F  : public UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.InputSourceType
struct InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.InputSourceType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo/ControllerElementEnum
struct ControllerElementEnum_t48F5A753A53794D8F010BD0E8BDA011CC34E2F66 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo/ControllerElementEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ControllerElementEnum_t48F5A753A53794D8F010BD0E8BDA011CC34E2F66, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::barycentricCoordinate
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::distance
	float ___distance_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::triangleIndex
	int32_t ___triangleIndex_4;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord2
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::lightmapCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::raycastValid
	bool ___raycastValid_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::collider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;

public:
	inline static int32_t get_offset_of_point_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_point_0() const { return ___point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_point_0() { return &___point_0; }
	inline void set_point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___point_0 = value;
	}

	inline static int32_t get_offset_of_normal_1() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_normal_1() const { return ___normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_normal_1() { return &___normal_1; }
	inline void set_normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___normal_1 = value;
	}

	inline static int32_t get_offset_of_barycentricCoordinate_2() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___barycentricCoordinate_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_barycentricCoordinate_2() const { return ___barycentricCoordinate_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_barycentricCoordinate_2() { return &___barycentricCoordinate_2; }
	inline void set_barycentricCoordinate_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___barycentricCoordinate_2 = value;
	}

	inline static int32_t get_offset_of_distance_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___distance_3)); }
	inline float get_distance_3() const { return ___distance_3; }
	inline float* get_address_of_distance_3() { return &___distance_3; }
	inline void set_distance_3(float value)
	{
		___distance_3 = value;
	}

	inline static int32_t get_offset_of_triangleIndex_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___triangleIndex_4)); }
	inline int32_t get_triangleIndex_4() const { return ___triangleIndex_4; }
	inline int32_t* get_address_of_triangleIndex_4() { return &___triangleIndex_4; }
	inline void set_triangleIndex_4(int32_t value)
	{
		___triangleIndex_4 = value;
	}

	inline static int32_t get_offset_of_textureCoord_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord_5() const { return ___textureCoord_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord_5() { return &___textureCoord_5; }
	inline void set_textureCoord_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord_5 = value;
	}

	inline static int32_t get_offset_of_textureCoord2_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord2_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord2_6() const { return ___textureCoord2_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord2_6() { return &___textureCoord2_6; }
	inline void set_textureCoord2_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord2_6 = value;
	}

	inline static int32_t get_offset_of_transform_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___transform_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_7() const { return ___transform_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_7() { return &___transform_7; }
	inline void set_transform_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_7), (void*)value);
	}

	inline static int32_t get_offset_of_lightmapCoord_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___lightmapCoord_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lightmapCoord_8() const { return ___lightmapCoord_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lightmapCoord_8() { return &___lightmapCoord_8; }
	inline void set_lightmapCoord_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lightmapCoord_8 = value;
	}

	inline static int32_t get_offset_of_raycastValid_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___raycastValid_9)); }
	inline bool get_raycastValid_9() const { return ___raycastValid_9; }
	inline bool* get_address_of_raycastValid_9() { return &___raycastValid_9; }
	inline void set_raycastValid_9(bool value)
	{
		___raycastValid_9 = value;
	}

	inline static int32_t get_offset_of_collider_10() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___collider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_collider_10() const { return ___collider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_collider_10() { return &___collider_10; }
	inline void set_collider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___collider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___collider_10), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};

// Microsoft.MixedReality.Toolkit.Input.SpherePointer/GraspPointPlacement
struct GraspPointPlacement_tCACDF9EE8876778DEA11A9B6C210FE704248AFCF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.SpherePointer/GraspPointPlacement::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(GraspPointPlacement_tCACDF9EE8876778DEA11A9B6C210FE704248AFCF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.LinePointTransformMode
struct LinePointTransformMode_t496E7D51A14B4B29D2288460AEACDD081ACF1278 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.LinePointTransformMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LinePointTransformMode_t496E7D51A14B4B29D2288460AEACDD081ACF1278, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.LineRotationMode
struct LineRotationMode_t2D532F6C06583CBFF8A24E3E19B92C7EFA40E8E8 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.LineRotationMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LineRotationMode_t2D532F6C06583CBFF8A24E3E19B92C7EFA40E8E8, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.RayStep
struct RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Origin>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3COriginU3Ek__BackingField_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Terminus>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CTerminusU3Ek__BackingField_4;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Direction>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CDirectionU3Ek__BackingField_5;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::<Length>k__BackingField
	float ___U3CLengthU3Ek__BackingField_6;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::epsilon
	float ___epsilon_7;

public:
	inline static int32_t get_offset_of_U3COriginU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3COriginU3Ek__BackingField_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3COriginU3Ek__BackingField_3() const { return ___U3COriginU3Ek__BackingField_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3COriginU3Ek__BackingField_3() { return &___U3COriginU3Ek__BackingField_3; }
	inline void set_U3COriginU3Ek__BackingField_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3COriginU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CTerminusU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CTerminusU3Ek__BackingField_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CTerminusU3Ek__BackingField_4() const { return ___U3CTerminusU3Ek__BackingField_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CTerminusU3Ek__BackingField_4() { return &___U3CTerminusU3Ek__BackingField_4; }
	inline void set_U3CTerminusU3Ek__BackingField_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CTerminusU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CDirectionU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CDirectionU3Ek__BackingField_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CDirectionU3Ek__BackingField_5() const { return ___U3CDirectionU3Ek__BackingField_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CDirectionU3Ek__BackingField_5() { return &___U3CDirectionU3Ek__BackingField_5; }
	inline void set_U3CDirectionU3Ek__BackingField_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CDirectionU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CLengthU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CLengthU3Ek__BackingField_6)); }
	inline float get_U3CLengthU3Ek__BackingField_6() const { return ___U3CLengthU3Ek__BackingField_6; }
	inline float* get_address_of_U3CLengthU3Ek__BackingField_6() { return &___U3CLengthU3Ek__BackingField_6; }
	inline void set_U3CLengthU3Ek__BackingField_6(float value)
	{
		___U3CLengthU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_epsilon_7() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___epsilon_7)); }
	inline float get_epsilon_7() const { return ___epsilon_7; }
	inline float* get_address_of_epsilon_7() { return &___epsilon_7; }
	inline void set_epsilon_7(float value)
	{
		___epsilon_7 = value;
	}
};

struct RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::dist
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dist_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::dir
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dir_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_2;

public:
	inline static int32_t get_offset_of_dist_0() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___dist_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_dist_0() const { return ___dist_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_dist_0() { return &___dist_0; }
	inline void set_dist_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___dist_0 = value;
	}

	inline static int32_t get_offset_of_dir_1() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___dir_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_dir_1() const { return ___dir_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_dir_1() { return &___dir_1; }
	inline void set_dir_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___dir_1 = value;
	}

	inline static int32_t get_offset_of_pos_2() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___pos_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_2() const { return ___pos_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_2() { return &___pos_2; }
	inline void set_pos_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType
struct SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Physics.SceneQueryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.PointDistributionMode
struct PointDistributionMode_t6D12977E4ECBE97E4A8863C6305AF58F62664505 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.PointDistributionMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PointDistributionMode_t6D12977E4ECBE97E4A8863C6305AF58F62664505, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.StepMode
struct StepMode_tD424E2BFB962AB9F31B80B8D9F7BC2D7EDA50127 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.StepMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(StepMode_tD424E2BFB962AB9F31B80B8D9F7BC2D7EDA50127, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.TrackingState
struct TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.TrackingState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel
struct RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint
struct TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.ByteEnum
struct ByteEnum_t406C975039F6312CDE58A265A6ECFD861F8C06CD 
{
public:
	// System.Byte System.ByteEnum::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ByteEnum_t406C975039F6312CDE58A265A6ECFD861F8C06CD, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>
struct Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F, ___dictionary_0)); }
	inline Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t722E61C14764100A873E595E33D47898108D108D ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F, ___current_3)); }
	inline KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___key_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>
struct Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___dictionary_0)); }
	inline Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___current_3)); }
	inline KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___key_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Exception
struct Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Nullable`1<System.DateTime>
struct Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 
{
public:
	// T System.Nullable`1::value
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78, ___value_0)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_value_0() const { return ___value_0; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.TimeSpan
struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 
{
public:
	// System.Int64 System.TimeSpan::_ticks
	int64_t ____ticks_3;

public:
	inline static int32_t get_offset_of__ticks_3() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4, ____ticks_3)); }
	inline int64_t get__ticks_3() const { return ____ticks_3; }
	inline int64_t* get_address_of__ticks_3() { return &____ticks_3; }
	inline void set__ticks_3(int64_t value)
	{
		____ticks_3 = value;
	}
};

struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields
{
public:
	// System.TimeSpan System.TimeSpan::Zero
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___Zero_0;
	// System.TimeSpan System.TimeSpan::MaxValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MaxValue_1;
	// System.TimeSpan System.TimeSpan::MinValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MinValue_2;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyConfigChecked
	bool ____legacyConfigChecked_4;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyMode
	bool ____legacyMode_5;

public:
	inline static int32_t get_offset_of_Zero_0() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___Zero_0)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_Zero_0() const { return ___Zero_0; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_Zero_0() { return &___Zero_0; }
	inline void set_Zero_0(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___Zero_0 = value;
	}

	inline static int32_t get_offset_of_MaxValue_1() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MaxValue_1)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MaxValue_1() const { return ___MaxValue_1; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MaxValue_1() { return &___MaxValue_1; }
	inline void set_MaxValue_1(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MaxValue_1 = value;
	}

	inline static int32_t get_offset_of_MinValue_2() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MinValue_2)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MinValue_2() const { return ___MinValue_2; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MinValue_2() { return &___MinValue_2; }
	inline void set_MinValue_2(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MinValue_2 = value;
	}

	inline static int32_t get_offset_of__legacyConfigChecked_4() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyConfigChecked_4)); }
	inline bool get__legacyConfigChecked_4() const { return ____legacyConfigChecked_4; }
	inline bool* get_address_of__legacyConfigChecked_4() { return &____legacyConfigChecked_4; }
	inline void set__legacyConfigChecked_4(bool value)
	{
		____legacyConfigChecked_4 = value;
	}

	inline static int32_t get_offset_of__legacyMode_5() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyMode_5)); }
	inline bool get__legacyMode_5() const { return ____legacyMode_5; }
	inline bool* get_address_of__legacyMode_5() { return &____legacyMode_5; }
	inline void set__legacyMode_5(bool value)
	{
		____legacyMode_5 = value;
	}
};


// Unity.Profiling.ProfilerMarker
struct ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// Unity.Profiling.ProfilerMarker/AutoScope
struct AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker/AutoScope::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// UnityEngine.CursorLockMode
struct CursorLockMode_tF9B28266D253124BE56C232B7ED2D9F7CC3D1E38 
{
public:
	// System.Int32 UnityEngine.CursorLockMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CursorLockMode_tF9B28266D253124BE56C232B7ED2D9F7CC3D1E38, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 
{
public:
	// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::m_GameObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.RaycastResult::module
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	// System.Single UnityEngine.EventSystems.RaycastResult::distance
	float ___distance_2;
	// System.Single UnityEngine.EventSystems.RaycastResult::index
	float ___index_3;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::depth
	int32_t ___depth_4;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingLayer
	int32_t ___sortingLayer_5;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingOrder
	int32_t ___sortingOrder_6;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	// UnityEngine.Vector2 UnityEngine.EventSystems.RaycastResult::screenPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::displayIndex
	int32_t ___displayIndex_10;

public:
	inline static int32_t get_offset_of_m_GameObject_0() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___m_GameObject_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_GameObject_0() const { return ___m_GameObject_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_GameObject_0() { return &___m_GameObject_0; }
	inline void set_m_GameObject_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_GameObject_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_GameObject_0), (void*)value);
	}

	inline static int32_t get_offset_of_module_1() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___module_1)); }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * get_module_1() const { return ___module_1; }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 ** get_address_of_module_1() { return &___module_1; }
	inline void set_module_1(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * value)
	{
		___module_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___module_1), (void*)value);
	}

	inline static int32_t get_offset_of_distance_2() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___distance_2)); }
	inline float get_distance_2() const { return ___distance_2; }
	inline float* get_address_of_distance_2() { return &___distance_2; }
	inline void set_distance_2(float value)
	{
		___distance_2 = value;
	}

	inline static int32_t get_offset_of_index_3() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___index_3)); }
	inline float get_index_3() const { return ___index_3; }
	inline float* get_address_of_index_3() { return &___index_3; }
	inline void set_index_3(float value)
	{
		___index_3 = value;
	}

	inline static int32_t get_offset_of_depth_4() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___depth_4)); }
	inline int32_t get_depth_4() const { return ___depth_4; }
	inline int32_t* get_address_of_depth_4() { return &___depth_4; }
	inline void set_depth_4(int32_t value)
	{
		___depth_4 = value;
	}

	inline static int32_t get_offset_of_sortingLayer_5() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingLayer_5)); }
	inline int32_t get_sortingLayer_5() const { return ___sortingLayer_5; }
	inline int32_t* get_address_of_sortingLayer_5() { return &___sortingLayer_5; }
	inline void set_sortingLayer_5(int32_t value)
	{
		___sortingLayer_5 = value;
	}

	inline static int32_t get_offset_of_sortingOrder_6() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingOrder_6)); }
	inline int32_t get_sortingOrder_6() const { return ___sortingOrder_6; }
	inline int32_t* get_address_of_sortingOrder_6() { return &___sortingOrder_6; }
	inline void set_sortingOrder_6(int32_t value)
	{
		___sortingOrder_6 = value;
	}

	inline static int32_t get_offset_of_worldPosition_7() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldPosition_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldPosition_7() const { return ___worldPosition_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldPosition_7() { return &___worldPosition_7; }
	inline void set_worldPosition_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldPosition_7 = value;
	}

	inline static int32_t get_offset_of_worldNormal_8() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldNormal_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldNormal_8() const { return ___worldNormal_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldNormal_8() { return &___worldNormal_8; }
	inline void set_worldNormal_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldNormal_8 = value;
	}

	inline static int32_t get_offset_of_screenPosition_9() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___screenPosition_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_screenPosition_9() const { return ___screenPosition_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_screenPosition_9() { return &___screenPosition_9; }
	inline void set_screenPosition_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___screenPosition_9 = value;
	}

	inline static int32_t get_offset_of_displayIndex_10() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___displayIndex_10)); }
	inline int32_t get_displayIndex_10() const { return ___displayIndex_10; }
	inline int32_t* get_address_of_displayIndex_10() { return &___displayIndex_10; }
	inline void set_displayIndex_10(int32_t value)
	{
		___displayIndex_10 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};
// Native definition for COM marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};

// UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Gradient::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.KeyCode
struct KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C 
{
public:
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.MaterialPropertyBlock
struct MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.MaterialPropertyBlock::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.QueryTriggerInteraction
struct QueryTriggerInteraction_t56ABDF7B81C5D989BE40455CF39647A532791739 
{
public:
	// System.Int32 UnityEngine.QueryTriggerInteraction::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(QueryTriggerInteraction_t56ABDF7B81C5D989BE40455CF39647A532791739, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Ray
struct Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 
{
public:
	// UnityEngine.Vector3 UnityEngine.Ray::m_Origin
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Origin_0;
	// UnityEngine.Vector3 UnityEngine.Ray::m_Direction
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Direction_1;

public:
	inline static int32_t get_offset_of_m_Origin_0() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Origin_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Origin_0() const { return ___m_Origin_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Origin_0() { return &___m_Origin_0; }
	inline void set_m_Origin_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Origin_0 = value;
	}

	inline static int32_t get_offset_of_m_Direction_1() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Direction_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Direction_1() const { return ___m_Direction_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Direction_1() { return &___m_Direction_1; }
	inline void set_m_Direction_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Direction_1 = value;
	}
};


// UnityEngine.RaycastHit
struct RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 
{
public:
	// UnityEngine.Vector3 UnityEngine.RaycastHit::m_Point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Point_0;
	// UnityEngine.Vector3 UnityEngine.RaycastHit::m_Normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Normal_1;
	// System.UInt32 UnityEngine.RaycastHit::m_FaceID
	uint32_t ___m_FaceID_2;
	// System.Single UnityEngine.RaycastHit::m_Distance
	float ___m_Distance_3;
	// UnityEngine.Vector2 UnityEngine.RaycastHit::m_UV
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___m_UV_4;
	// System.Int32 UnityEngine.RaycastHit::m_Collider
	int32_t ___m_Collider_5;

public:
	inline static int32_t get_offset_of_m_Point_0() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Point_0() const { return ___m_Point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Point_0() { return &___m_Point_0; }
	inline void set_m_Point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Point_0 = value;
	}

	inline static int32_t get_offset_of_m_Normal_1() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Normal_1() const { return ___m_Normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Normal_1() { return &___m_Normal_1; }
	inline void set_m_Normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Normal_1 = value;
	}

	inline static int32_t get_offset_of_m_FaceID_2() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_FaceID_2)); }
	inline uint32_t get_m_FaceID_2() const { return ___m_FaceID_2; }
	inline uint32_t* get_address_of_m_FaceID_2() { return &___m_FaceID_2; }
	inline void set_m_FaceID_2(uint32_t value)
	{
		___m_FaceID_2 = value;
	}

	inline static int32_t get_offset_of_m_Distance_3() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Distance_3)); }
	inline float get_m_Distance_3() const { return ___m_Distance_3; }
	inline float* get_address_of_m_Distance_3() { return &___m_Distance_3; }
	inline void set_m_Distance_3(float value)
	{
		___m_Distance_3 = value;
	}

	inline static int32_t get_offset_of_m_UV_4() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_UV_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_m_UV_4() const { return ___m_UV_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_m_UV_4() { return &___m_UV_4; }
	inline void set_m_UV_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___m_UV_4 = value;
	}

	inline static int32_t get_offset_of_m_Collider_5() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Collider_5)); }
	inline int32_t get_m_Collider_5() const { return ___m_Collider_5; }
	inline int32_t* get_address_of_m_Collider_5() { return &___m_Collider_5; }
	inline void set_m_Collider_5(int32_t value)
	{
		___m_Collider_5 = value;
	}
};


// UnityEngine.Space
struct Space_t0F622BF939B7A47E0F9632CE968F7D72FC63AF58 
{
public:
	// System.Int32 UnityEngine.Space::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Space_t0F622BF939B7A47E0F9632CE968F7D72FC63AF58, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.UI.Image/FillMethod
struct FillMethod_t0DB7332683118B7C7D2748BE74CFBF19CD19F8C5 
{
public:
	// System.Int32 UnityEngine.UI.Image/FillMethod::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(FillMethod_t0DB7332683118B7C7D2748BE74CFBF19CD19F8C5, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.UI.Image/Type
struct Type_t96B8A259B84ADA5E7D3B1F13AEAE22175937F38A 
{
public:
	// System.Int32 UnityEngine.UI.Image/Type::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Type_t96B8A259B84ADA5E7D3B1F13AEAE22175937F38A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector
struct DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80  : public RuntimeObject
{
public:
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo> Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::pointerInfos
	Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * ___pointerInfos_0;

public:
	inline static int32_t get_offset_of_pointerInfos_0() { return static_cast<int32_t>(offsetof(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80, ___pointerInfos_0)); }
	inline Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * get_pointerInfos_0() const { return ___pointerInfos_0; }
	inline Dictionary_2_t722E61C14764100A873E595E33D47898108D108D ** get_address_of_pointerInfos_0() { return &___pointerInfos_0; }
	inline void set_pointerInfos_0(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * value)
	{
		___pointerInfos_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerInfos_0), (void*)value);
	}
};

struct DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_1;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::OnPointerDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPointerDownPerfMarker_2;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::OnPointerUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPointerUpPerfMarker_3;

public:
	inline static int32_t get_offset_of_UpdatePerfMarker_1() { return static_cast<int32_t>(offsetof(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields, ___UpdatePerfMarker_1)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_1() const { return ___UpdatePerfMarker_1; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_1() { return &___UpdatePerfMarker_1; }
	inline void set_UpdatePerfMarker_1(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_1 = value;
	}

	inline static int32_t get_offset_of_OnPointerDownPerfMarker_2() { return static_cast<int32_t>(offsetof(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields, ___OnPointerDownPerfMarker_2)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPointerDownPerfMarker_2() const { return ___OnPointerDownPerfMarker_2; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPointerDownPerfMarker_2() { return &___OnPointerDownPerfMarker_2; }
	inline void set_OnPointerDownPerfMarker_2(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPointerDownPerfMarker_2 = value;
	}

	inline static int32_t get_offset_of_OnPointerUpPerfMarker_3() { return static_cast<int32_t>(offsetof(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields, ___OnPointerUpPerfMarker_3)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPointerUpPerfMarker_3() const { return ___OnPointerUpPerfMarker_3; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPointerUpPerfMarker_3() { return &___OnPointerUpPerfMarker_3; }
	inline void set_OnPointerUpPerfMarker_3(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPointerUpPerfMarker_3 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
struct MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum::Name
	String_t* ___Name_0;
	// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum::CursorState
	int32_t ___CursorState_1;
	// UnityEngine.Mesh Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum::CursorMesh
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___CursorMesh_2;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum::LocalScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___LocalScale_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum::LocalOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___LocalOffset_4;

public:
	inline static int32_t get_offset_of_Name_0() { return static_cast<int32_t>(offsetof(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B, ___Name_0)); }
	inline String_t* get_Name_0() const { return ___Name_0; }
	inline String_t** get_address_of_Name_0() { return &___Name_0; }
	inline void set_Name_0(String_t* value)
	{
		___Name_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Name_0), (void*)value);
	}

	inline static int32_t get_offset_of_CursorState_1() { return static_cast<int32_t>(offsetof(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B, ___CursorState_1)); }
	inline int32_t get_CursorState_1() const { return ___CursorState_1; }
	inline int32_t* get_address_of_CursorState_1() { return &___CursorState_1; }
	inline void set_CursorState_1(int32_t value)
	{
		___CursorState_1 = value;
	}

	inline static int32_t get_offset_of_CursorMesh_2() { return static_cast<int32_t>(offsetof(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B, ___CursorMesh_2)); }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * get_CursorMesh_2() const { return ___CursorMesh_2; }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C ** get_address_of_CursorMesh_2() { return &___CursorMesh_2; }
	inline void set_CursorMesh_2(Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * value)
	{
		___CursorMesh_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CursorMesh_2), (void*)value);
	}

	inline static int32_t get_offset_of_LocalScale_3() { return static_cast<int32_t>(offsetof(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B, ___LocalScale_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_LocalScale_3() const { return ___LocalScale_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_LocalScale_3() { return &___LocalScale_3; }
	inline void set_LocalScale_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___LocalScale_3 = value;
	}

	inline static int32_t get_offset_of_LocalOffset_4() { return static_cast<int32_t>(offsetof(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B, ___LocalOffset_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_LocalOffset_4() const { return ___LocalOffset_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_LocalOffset_4() { return &___LocalOffset_4; }
	inline void set_LocalOffset_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___LocalOffset_4 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
struct MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_pinvoke
{
	char* ___Name_0;
	int32_t ___CursorState_1;
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___CursorMesh_2;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___LocalScale_3;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___LocalOffset_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
struct MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_com
{
	Il2CppChar* ___Name_0;
	int32_t ___CursorState_1;
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___CursorMesh_2;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___LocalScale_3;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___LocalOffset_4;
};

// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo
struct MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8  : public RuntimeObject
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::ControllerParent
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___ControllerParent_0;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::Handedness
	uint8_t ___Handedness_1;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::home
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___home_2;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::homePressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___homePressed_3;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::homeUnpressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___homeUnpressed_4;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::menu
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___menu_5;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::menuPressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___menuPressed_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::menuUnpressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___menuUnpressed_7;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::grasp
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___grasp_8;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::graspPressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___graspPressed_9;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::graspUnpressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___graspUnpressed_10;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickPress
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___thumbstickPress_11;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickPressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___thumbstickPressed_12;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickUnpressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___thumbstickUnpressed_13;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickX
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___thumbstickX_14;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickXMin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___thumbstickXMin_15;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickXMax
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___thumbstickXMax_16;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickY
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___thumbstickY_17;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickYMin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___thumbstickYMin_18;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::thumbstickYMax
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___thumbstickYMax_19;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::select
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___select_20;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::selectPressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___selectPressed_21;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::selectUnpressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___selectUnpressed_22;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadPress
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___touchpadPress_23;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadPressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___touchpadPressed_24;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadUnpressed
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___touchpadUnpressed_25;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchX
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___touchpadTouchX_26;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchXMin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___touchpadTouchXMin_27;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchXMax
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___touchpadTouchXMax_28;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchY
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___touchpadTouchY_29;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchYMin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___touchpadTouchYMin_30;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchYMax
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___touchpadTouchYMax_31;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::touchpadTouchVisualizer
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___touchpadTouchVisualizer_32;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::pointingPose
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointingPose_33;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::wasGrasped
	bool ___wasGrasped_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::wasMenuPressed
	bool ___wasMenuPressed_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::wasHomePressed
	bool ___wasHomePressed_36;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::wasThumbstickPressed
	bool ___wasThumbstickPressed_37;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::wasTouchpadPressed
	bool ___wasTouchpadPressed_38;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::wasTouchpadTouched
	bool ___wasTouchpadTouched_39;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::lastThumbstickPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lastThumbstickPosition_40;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::lastTouchpadPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lastTouchpadPosition_41;
	// System.Double Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::lastSelectPressedAmount
	double ___lastSelectPressedAmount_42;

public:
	inline static int32_t get_offset_of_ControllerParent_0() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___ControllerParent_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_ControllerParent_0() const { return ___ControllerParent_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_ControllerParent_0() { return &___ControllerParent_0; }
	inline void set_ControllerParent_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___ControllerParent_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ControllerParent_0), (void*)value);
	}

	inline static int32_t get_offset_of_Handedness_1() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___Handedness_1)); }
	inline uint8_t get_Handedness_1() const { return ___Handedness_1; }
	inline uint8_t* get_address_of_Handedness_1() { return &___Handedness_1; }
	inline void set_Handedness_1(uint8_t value)
	{
		___Handedness_1 = value;
	}

	inline static int32_t get_offset_of_home_2() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___home_2)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_home_2() const { return ___home_2; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_home_2() { return &___home_2; }
	inline void set_home_2(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___home_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___home_2), (void*)value);
	}

	inline static int32_t get_offset_of_homePressed_3() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___homePressed_3)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_homePressed_3() const { return ___homePressed_3; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_homePressed_3() { return &___homePressed_3; }
	inline void set_homePressed_3(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___homePressed_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___homePressed_3), (void*)value);
	}

	inline static int32_t get_offset_of_homeUnpressed_4() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___homeUnpressed_4)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_homeUnpressed_4() const { return ___homeUnpressed_4; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_homeUnpressed_4() { return &___homeUnpressed_4; }
	inline void set_homeUnpressed_4(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___homeUnpressed_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___homeUnpressed_4), (void*)value);
	}

	inline static int32_t get_offset_of_menu_5() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___menu_5)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_menu_5() const { return ___menu_5; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_menu_5() { return &___menu_5; }
	inline void set_menu_5(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___menu_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___menu_5), (void*)value);
	}

	inline static int32_t get_offset_of_menuPressed_6() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___menuPressed_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_menuPressed_6() const { return ___menuPressed_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_menuPressed_6() { return &___menuPressed_6; }
	inline void set_menuPressed_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___menuPressed_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___menuPressed_6), (void*)value);
	}

	inline static int32_t get_offset_of_menuUnpressed_7() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___menuUnpressed_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_menuUnpressed_7() const { return ___menuUnpressed_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_menuUnpressed_7() { return &___menuUnpressed_7; }
	inline void set_menuUnpressed_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___menuUnpressed_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___menuUnpressed_7), (void*)value);
	}

	inline static int32_t get_offset_of_grasp_8() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___grasp_8)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_grasp_8() const { return ___grasp_8; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_grasp_8() { return &___grasp_8; }
	inline void set_grasp_8(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___grasp_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___grasp_8), (void*)value);
	}

	inline static int32_t get_offset_of_graspPressed_9() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___graspPressed_9)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_graspPressed_9() const { return ___graspPressed_9; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_graspPressed_9() { return &___graspPressed_9; }
	inline void set_graspPressed_9(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___graspPressed_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___graspPressed_9), (void*)value);
	}

	inline static int32_t get_offset_of_graspUnpressed_10() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___graspUnpressed_10)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_graspUnpressed_10() const { return ___graspUnpressed_10; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_graspUnpressed_10() { return &___graspUnpressed_10; }
	inline void set_graspUnpressed_10(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___graspUnpressed_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___graspUnpressed_10), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickPress_11() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickPress_11)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_thumbstickPress_11() const { return ___thumbstickPress_11; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_thumbstickPress_11() { return &___thumbstickPress_11; }
	inline void set_thumbstickPress_11(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___thumbstickPress_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickPress_11), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickPressed_12() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickPressed_12)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_thumbstickPressed_12() const { return ___thumbstickPressed_12; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_thumbstickPressed_12() { return &___thumbstickPressed_12; }
	inline void set_thumbstickPressed_12(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___thumbstickPressed_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickPressed_12), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickUnpressed_13() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickUnpressed_13)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_thumbstickUnpressed_13() const { return ___thumbstickUnpressed_13; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_thumbstickUnpressed_13() { return &___thumbstickUnpressed_13; }
	inline void set_thumbstickUnpressed_13(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___thumbstickUnpressed_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickUnpressed_13), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickX_14() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickX_14)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_thumbstickX_14() const { return ___thumbstickX_14; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_thumbstickX_14() { return &___thumbstickX_14; }
	inline void set_thumbstickX_14(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___thumbstickX_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickX_14), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickXMin_15() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickXMin_15)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_thumbstickXMin_15() const { return ___thumbstickXMin_15; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_thumbstickXMin_15() { return &___thumbstickXMin_15; }
	inline void set_thumbstickXMin_15(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___thumbstickXMin_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickXMin_15), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickXMax_16() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickXMax_16)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_thumbstickXMax_16() const { return ___thumbstickXMax_16; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_thumbstickXMax_16() { return &___thumbstickXMax_16; }
	inline void set_thumbstickXMax_16(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___thumbstickXMax_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickXMax_16), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickY_17() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickY_17)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_thumbstickY_17() const { return ___thumbstickY_17; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_thumbstickY_17() { return &___thumbstickY_17; }
	inline void set_thumbstickY_17(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___thumbstickY_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickY_17), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickYMin_18() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickYMin_18)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_thumbstickYMin_18() const { return ___thumbstickYMin_18; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_thumbstickYMin_18() { return &___thumbstickYMin_18; }
	inline void set_thumbstickYMin_18(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___thumbstickYMin_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickYMin_18), (void*)value);
	}

	inline static int32_t get_offset_of_thumbstickYMax_19() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___thumbstickYMax_19)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_thumbstickYMax_19() const { return ___thumbstickYMax_19; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_thumbstickYMax_19() { return &___thumbstickYMax_19; }
	inline void set_thumbstickYMax_19(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___thumbstickYMax_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbstickYMax_19), (void*)value);
	}

	inline static int32_t get_offset_of_select_20() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___select_20)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_select_20() const { return ___select_20; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_select_20() { return &___select_20; }
	inline void set_select_20(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___select_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___select_20), (void*)value);
	}

	inline static int32_t get_offset_of_selectPressed_21() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___selectPressed_21)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_selectPressed_21() const { return ___selectPressed_21; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_selectPressed_21() { return &___selectPressed_21; }
	inline void set_selectPressed_21(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___selectPressed_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___selectPressed_21), (void*)value);
	}

	inline static int32_t get_offset_of_selectUnpressed_22() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___selectUnpressed_22)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_selectUnpressed_22() const { return ___selectUnpressed_22; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_selectUnpressed_22() { return &___selectUnpressed_22; }
	inline void set_selectUnpressed_22(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___selectUnpressed_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___selectUnpressed_22), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadPress_23() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadPress_23)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_touchpadPress_23() const { return ___touchpadPress_23; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_touchpadPress_23() { return &___touchpadPress_23; }
	inline void set_touchpadPress_23(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___touchpadPress_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadPress_23), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadPressed_24() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadPressed_24)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_touchpadPressed_24() const { return ___touchpadPressed_24; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_touchpadPressed_24() { return &___touchpadPressed_24; }
	inline void set_touchpadPressed_24(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___touchpadPressed_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadPressed_24), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadUnpressed_25() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadUnpressed_25)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_touchpadUnpressed_25() const { return ___touchpadUnpressed_25; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_touchpadUnpressed_25() { return &___touchpadUnpressed_25; }
	inline void set_touchpadUnpressed_25(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___touchpadUnpressed_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadUnpressed_25), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchX_26() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchX_26)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_touchpadTouchX_26() const { return ___touchpadTouchX_26; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_touchpadTouchX_26() { return &___touchpadTouchX_26; }
	inline void set_touchpadTouchX_26(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___touchpadTouchX_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchX_26), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchXMin_27() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchXMin_27)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_touchpadTouchXMin_27() const { return ___touchpadTouchXMin_27; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_touchpadTouchXMin_27() { return &___touchpadTouchXMin_27; }
	inline void set_touchpadTouchXMin_27(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___touchpadTouchXMin_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchXMin_27), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchXMax_28() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchXMax_28)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_touchpadTouchXMax_28() const { return ___touchpadTouchXMax_28; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_touchpadTouchXMax_28() { return &___touchpadTouchXMax_28; }
	inline void set_touchpadTouchXMax_28(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___touchpadTouchXMax_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchXMax_28), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchY_29() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchY_29)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_touchpadTouchY_29() const { return ___touchpadTouchY_29; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_touchpadTouchY_29() { return &___touchpadTouchY_29; }
	inline void set_touchpadTouchY_29(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___touchpadTouchY_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchY_29), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchYMin_30() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchYMin_30)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_touchpadTouchYMin_30() const { return ___touchpadTouchYMin_30; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_touchpadTouchYMin_30() { return &___touchpadTouchYMin_30; }
	inline void set_touchpadTouchYMin_30(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___touchpadTouchYMin_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchYMin_30), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchYMax_31() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchYMax_31)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_touchpadTouchYMax_31() const { return ___touchpadTouchYMax_31; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_touchpadTouchYMax_31() { return &___touchpadTouchYMax_31; }
	inline void set_touchpadTouchYMax_31(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___touchpadTouchYMax_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchYMax_31), (void*)value);
	}

	inline static int32_t get_offset_of_touchpadTouchVisualizer_32() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___touchpadTouchVisualizer_32)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_touchpadTouchVisualizer_32() const { return ___touchpadTouchVisualizer_32; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_touchpadTouchVisualizer_32() { return &___touchpadTouchVisualizer_32; }
	inline void set_touchpadTouchVisualizer_32(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___touchpadTouchVisualizer_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchpadTouchVisualizer_32), (void*)value);
	}

	inline static int32_t get_offset_of_pointingPose_33() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___pointingPose_33)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_pointingPose_33() const { return ___pointingPose_33; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_pointingPose_33() { return &___pointingPose_33; }
	inline void set_pointingPose_33(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___pointingPose_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointingPose_33), (void*)value);
	}

	inline static int32_t get_offset_of_wasGrasped_34() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___wasGrasped_34)); }
	inline bool get_wasGrasped_34() const { return ___wasGrasped_34; }
	inline bool* get_address_of_wasGrasped_34() { return &___wasGrasped_34; }
	inline void set_wasGrasped_34(bool value)
	{
		___wasGrasped_34 = value;
	}

	inline static int32_t get_offset_of_wasMenuPressed_35() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___wasMenuPressed_35)); }
	inline bool get_wasMenuPressed_35() const { return ___wasMenuPressed_35; }
	inline bool* get_address_of_wasMenuPressed_35() { return &___wasMenuPressed_35; }
	inline void set_wasMenuPressed_35(bool value)
	{
		___wasMenuPressed_35 = value;
	}

	inline static int32_t get_offset_of_wasHomePressed_36() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___wasHomePressed_36)); }
	inline bool get_wasHomePressed_36() const { return ___wasHomePressed_36; }
	inline bool* get_address_of_wasHomePressed_36() { return &___wasHomePressed_36; }
	inline void set_wasHomePressed_36(bool value)
	{
		___wasHomePressed_36 = value;
	}

	inline static int32_t get_offset_of_wasThumbstickPressed_37() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___wasThumbstickPressed_37)); }
	inline bool get_wasThumbstickPressed_37() const { return ___wasThumbstickPressed_37; }
	inline bool* get_address_of_wasThumbstickPressed_37() { return &___wasThumbstickPressed_37; }
	inline void set_wasThumbstickPressed_37(bool value)
	{
		___wasThumbstickPressed_37 = value;
	}

	inline static int32_t get_offset_of_wasTouchpadPressed_38() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___wasTouchpadPressed_38)); }
	inline bool get_wasTouchpadPressed_38() const { return ___wasTouchpadPressed_38; }
	inline bool* get_address_of_wasTouchpadPressed_38() { return &___wasTouchpadPressed_38; }
	inline void set_wasTouchpadPressed_38(bool value)
	{
		___wasTouchpadPressed_38 = value;
	}

	inline static int32_t get_offset_of_wasTouchpadTouched_39() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___wasTouchpadTouched_39)); }
	inline bool get_wasTouchpadTouched_39() const { return ___wasTouchpadTouched_39; }
	inline bool* get_address_of_wasTouchpadTouched_39() { return &___wasTouchpadTouched_39; }
	inline void set_wasTouchpadTouched_39(bool value)
	{
		___wasTouchpadTouched_39 = value;
	}

	inline static int32_t get_offset_of_lastThumbstickPosition_40() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___lastThumbstickPosition_40)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lastThumbstickPosition_40() const { return ___lastThumbstickPosition_40; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lastThumbstickPosition_40() { return &___lastThumbstickPosition_40; }
	inline void set_lastThumbstickPosition_40(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lastThumbstickPosition_40 = value;
	}

	inline static int32_t get_offset_of_lastTouchpadPosition_41() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___lastTouchpadPosition_41)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lastTouchpadPosition_41() const { return ___lastTouchpadPosition_41; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lastTouchpadPosition_41() { return &___lastTouchpadPosition_41; }
	inline void set_lastTouchpadPosition_41(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lastTouchpadPosition_41 = value;
	}

	inline static int32_t get_offset_of_lastSelectPressedAmount_42() { return static_cast<int32_t>(offsetof(MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8, ___lastSelectPressedAmount_42)); }
	inline double get_lastSelectPressedAmount_42() const { return ___lastSelectPressedAmount_42; }
	inline double* get_address_of_lastSelectPressedAmount_42() { return &___lastSelectPressedAmount_42; }
	inline void set_lastSelectPressedAmount_42(double value)
	{
		___lastSelectPressedAmount_42 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<RayDistance>k__BackingField
	float ___U3CRayDistanceU3Ek__BackingField_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Point>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Normal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Object>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastRaycastHit>k__BackingField
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___U3CLastRaycastHitU3Ek__BackingField_4;
	// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastGraphicsRaycastResult>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<PointLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<NormalLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CRayDistanceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CRayDistanceU3Ek__BackingField_0)); }
	inline float get_U3CRayDistanceU3Ek__BackingField_0() const { return ___U3CRayDistanceU3Ek__BackingField_0; }
	inline float* get_address_of_U3CRayDistanceU3Ek__BackingField_0() { return &___U3CRayDistanceU3Ek__BackingField_0; }
	inline void set_U3CRayDistanceU3Ek__BackingField_0(float value)
	{
		___U3CRayDistanceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CPointU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointU3Ek__BackingField_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointU3Ek__BackingField_1() const { return ___U3CPointU3Ek__BackingField_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointU3Ek__BackingField_1() { return &___U3CPointU3Ek__BackingField_1; }
	inline void set_U3CPointU3Ek__BackingField_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CNormalU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalU3Ek__BackingField_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalU3Ek__BackingField_2() const { return ___U3CNormalU3Ek__BackingField_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalU3Ek__BackingField_2() { return &___U3CNormalU3Ek__BackingField_2; }
	inline void set_U3CNormalU3Ek__BackingField_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CObjectU3Ek__BackingField_3() const { return ___U3CObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CObjectU3Ek__BackingField_3() { return &___U3CObjectU3Ek__BackingField_3; }
	inline void set_U3CObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CLastRaycastHitU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastRaycastHitU3Ek__BackingField_4)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_U3CLastRaycastHitU3Ek__BackingField_4() const { return ___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_U3CLastRaycastHitU3Ek__BackingField_4() { return &___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline void set_U3CLastRaycastHitU3Ek__BackingField_4(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___U3CLastRaycastHitU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() const { return ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return &___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline void set_U3CLastGraphicsRaycastResultU3Ek__BackingField_5(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CLastGraphicsRaycastResultU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointLocalSpaceU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointLocalSpaceU3Ek__BackingField_6() const { return ___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return &___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline void set_U3CPointLocalSpaceU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointLocalSpaceU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalLocalSpaceU3Ek__BackingField_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalLocalSpaceU3Ek__BackingField_7() const { return ___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return &___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline void set_U3CNormalLocalSpaceU3Ek__BackingField_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalLocalSpaceU3Ek__BackingField_7 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_pinvoke
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_com
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};

// Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster
struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F  : public RuntimeObject
{
public:

public:
};

struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::DebugEnabled
	bool ___DebugEnabled_0;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___RaycastHits_3;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::SphereCastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___SphereCastHits_4;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSimplePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSimplePhysicsStepPerfMarker_5;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastBoxPhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastBoxPhysicsStepPerfMarker_6;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSpherePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSpherePhysicsStepPerfMarker_7;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::TryGetPrioritizedPhysicsHitPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetPrioritizedPhysicsHitPerfMarker_8;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastPlanePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastPlanePhysicsStepPerfMarker_9;

public:
	inline static int32_t get_offset_of_DebugEnabled_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___DebugEnabled_0)); }
	inline bool get_DebugEnabled_0() const { return ___DebugEnabled_0; }
	inline bool* get_address_of_DebugEnabled_0() { return &___DebugEnabled_0; }
	inline void set_DebugEnabled_0(bool value)
	{
		___DebugEnabled_0 = value;
	}

	inline static int32_t get_offset_of_RaycastHits_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastHits_3)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_RaycastHits_3() const { return ___RaycastHits_3; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_RaycastHits_3() { return &___RaycastHits_3; }
	inline void set_RaycastHits_3(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___RaycastHits_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RaycastHits_3), (void*)value);
	}

	inline static int32_t get_offset_of_SphereCastHits_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___SphereCastHits_4)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_SphereCastHits_4() const { return ___SphereCastHits_4; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_SphereCastHits_4() { return &___SphereCastHits_4; }
	inline void set_SphereCastHits_4(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___SphereCastHits_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SphereCastHits_4), (void*)value);
	}

	inline static int32_t get_offset_of_RaycastSimplePhysicsStepPerfMarker_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSimplePhysicsStepPerfMarker_5)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSimplePhysicsStepPerfMarker_5() const { return ___RaycastSimplePhysicsStepPerfMarker_5; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSimplePhysicsStepPerfMarker_5() { return &___RaycastSimplePhysicsStepPerfMarker_5; }
	inline void set_RaycastSimplePhysicsStepPerfMarker_5(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSimplePhysicsStepPerfMarker_5 = value;
	}

	inline static int32_t get_offset_of_RaycastBoxPhysicsStepPerfMarker_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastBoxPhysicsStepPerfMarker_6)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastBoxPhysicsStepPerfMarker_6() const { return ___RaycastBoxPhysicsStepPerfMarker_6; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastBoxPhysicsStepPerfMarker_6() { return &___RaycastBoxPhysicsStepPerfMarker_6; }
	inline void set_RaycastBoxPhysicsStepPerfMarker_6(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastBoxPhysicsStepPerfMarker_6 = value;
	}

	inline static int32_t get_offset_of_RaycastSpherePhysicsStepPerfMarker_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSpherePhysicsStepPerfMarker_7)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSpherePhysicsStepPerfMarker_7() const { return ___RaycastSpherePhysicsStepPerfMarker_7; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSpherePhysicsStepPerfMarker_7() { return &___RaycastSpherePhysicsStepPerfMarker_7; }
	inline void set_RaycastSpherePhysicsStepPerfMarker_7(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSpherePhysicsStepPerfMarker_7 = value;
	}

	inline static int32_t get_offset_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___TryGetPrioritizedPhysicsHitPerfMarker_8)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetPrioritizedPhysicsHitPerfMarker_8() const { return ___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return &___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline void set_TryGetPrioritizedPhysicsHitPerfMarker_8(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetPrioritizedPhysicsHitPerfMarker_8 = value;
	}

	inline static int32_t get_offset_of_RaycastPlanePhysicsStepPerfMarker_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastPlanePhysicsStepPerfMarker_9)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastPlanePhysicsStepPerfMarker_9() const { return ___RaycastPlanePhysicsStepPerfMarker_9; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastPlanePhysicsStepPerfMarker_9() { return &___RaycastPlanePhysicsStepPerfMarker_9; }
	inline void set_RaycastPlanePhysicsStepPerfMarker_9(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastPlanePhysicsStepPerfMarker_9 = value;
	}
};


// System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>
struct Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 
{
public:
	// T System.Nullable`1::value
	uint8_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231, ___value_0)); }
	inline uint8_t get_value_0() const { return ___value_0; }
	inline uint8_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint8_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<System.ByteEnum>
struct Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 
{
public:
	// T System.Nullable`1::value
	uint8_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152, ___value_0)); }
	inline uint8_t get_value_0() const { return ___value_0; }
	inline uint8_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint8_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.SystemException
struct SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.AudioClip
struct AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:
	// UnityEngine.AudioClip/PCMReaderCallback UnityEngine.AudioClip::m_PCMReaderCallback
	PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB * ___m_PCMReaderCallback_4;
	// UnityEngine.AudioClip/PCMSetPositionCallback UnityEngine.AudioClip::m_PCMSetPositionCallback
	PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 * ___m_PCMSetPositionCallback_5;

public:
	inline static int32_t get_offset_of_m_PCMReaderCallback_4() { return static_cast<int32_t>(offsetof(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051, ___m_PCMReaderCallback_4)); }
	inline PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB * get_m_PCMReaderCallback_4() const { return ___m_PCMReaderCallback_4; }
	inline PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB ** get_address_of_m_PCMReaderCallback_4() { return &___m_PCMReaderCallback_4; }
	inline void set_m_PCMReaderCallback_4(PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB * value)
	{
		___m_PCMReaderCallback_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PCMReaderCallback_4), (void*)value);
	}

	inline static int32_t get_offset_of_m_PCMSetPositionCallback_5() { return static_cast<int32_t>(offsetof(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051, ___m_PCMSetPositionCallback_5)); }
	inline PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 * get_m_PCMSetPositionCallback_5() const { return ___m_PCMSetPositionCallback_5; }
	inline PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 ** get_address_of_m_PCMSetPositionCallback_5() { return &___m_PCMSetPositionCallback_5; }
	inline void set_m_PCMSetPositionCallback_5(PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 * value)
	{
		___m_PCMSetPositionCallback_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PCMSetPositionCallback_5), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Sprite
struct Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping
struct MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2  : public RuntimeObject
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::id
	uint32_t ___id_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::description
	String_t* ___description_1;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisType
	int32_t ___axisType_2;
	// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::inputType
	int32_t ___inputType_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::inputAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction_4;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::keyCode
	int32_t ___keyCode_5;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisCodeX
	String_t* ___axisCodeX_6;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisCodeY
	String_t* ___axisCodeY_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::invertXAxis
	bool ___invertXAxis_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::invertYAxis
	bool ___invertYAxis_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::changed
	bool ___changed_10;
	// System.Object Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::rawData
	RuntimeObject * ___rawData_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::boolData
	bool ___boolData_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::floatData
	float ___floatData_13;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::vector2Data
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___vector2Data_14;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::positionData
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positionData_15;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::rotationData
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotationData_16;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::poseData
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___poseData_17;

public:
	inline static int32_t get_offset_of_id_0() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___id_0)); }
	inline uint32_t get_id_0() const { return ___id_0; }
	inline uint32_t* get_address_of_id_0() { return &___id_0; }
	inline void set_id_0(uint32_t value)
	{
		___id_0 = value;
	}

	inline static int32_t get_offset_of_description_1() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___description_1)); }
	inline String_t* get_description_1() const { return ___description_1; }
	inline String_t** get_address_of_description_1() { return &___description_1; }
	inline void set_description_1(String_t* value)
	{
		___description_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_1), (void*)value);
	}

	inline static int32_t get_offset_of_axisType_2() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisType_2)); }
	inline int32_t get_axisType_2() const { return ___axisType_2; }
	inline int32_t* get_address_of_axisType_2() { return &___axisType_2; }
	inline void set_axisType_2(int32_t value)
	{
		___axisType_2 = value;
	}

	inline static int32_t get_offset_of_inputType_3() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___inputType_3)); }
	inline int32_t get_inputType_3() const { return ___inputType_3; }
	inline int32_t* get_address_of_inputType_3() { return &___inputType_3; }
	inline void set_inputType_3(int32_t value)
	{
		___inputType_3 = value;
	}

	inline static int32_t get_offset_of_inputAction_4() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___inputAction_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_inputAction_4() const { return ___inputAction_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_inputAction_4() { return &___inputAction_4; }
	inline void set_inputAction_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___inputAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___inputAction_4))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_keyCode_5() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___keyCode_5)); }
	inline int32_t get_keyCode_5() const { return ___keyCode_5; }
	inline int32_t* get_address_of_keyCode_5() { return &___keyCode_5; }
	inline void set_keyCode_5(int32_t value)
	{
		___keyCode_5 = value;
	}

	inline static int32_t get_offset_of_axisCodeX_6() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisCodeX_6)); }
	inline String_t* get_axisCodeX_6() const { return ___axisCodeX_6; }
	inline String_t** get_address_of_axisCodeX_6() { return &___axisCodeX_6; }
	inline void set_axisCodeX_6(String_t* value)
	{
		___axisCodeX_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___axisCodeX_6), (void*)value);
	}

	inline static int32_t get_offset_of_axisCodeY_7() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisCodeY_7)); }
	inline String_t* get_axisCodeY_7() const { return ___axisCodeY_7; }
	inline String_t** get_address_of_axisCodeY_7() { return &___axisCodeY_7; }
	inline void set_axisCodeY_7(String_t* value)
	{
		___axisCodeY_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___axisCodeY_7), (void*)value);
	}

	inline static int32_t get_offset_of_invertXAxis_8() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___invertXAxis_8)); }
	inline bool get_invertXAxis_8() const { return ___invertXAxis_8; }
	inline bool* get_address_of_invertXAxis_8() { return &___invertXAxis_8; }
	inline void set_invertXAxis_8(bool value)
	{
		___invertXAxis_8 = value;
	}

	inline static int32_t get_offset_of_invertYAxis_9() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___invertYAxis_9)); }
	inline bool get_invertYAxis_9() const { return ___invertYAxis_9; }
	inline bool* get_address_of_invertYAxis_9() { return &___invertYAxis_9; }
	inline void set_invertYAxis_9(bool value)
	{
		___invertYAxis_9 = value;
	}

	inline static int32_t get_offset_of_changed_10() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___changed_10)); }
	inline bool get_changed_10() const { return ___changed_10; }
	inline bool* get_address_of_changed_10() { return &___changed_10; }
	inline void set_changed_10(bool value)
	{
		___changed_10 = value;
	}

	inline static int32_t get_offset_of_rawData_11() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___rawData_11)); }
	inline RuntimeObject * get_rawData_11() const { return ___rawData_11; }
	inline RuntimeObject ** get_address_of_rawData_11() { return &___rawData_11; }
	inline void set_rawData_11(RuntimeObject * value)
	{
		___rawData_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawData_11), (void*)value);
	}

	inline static int32_t get_offset_of_boolData_12() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___boolData_12)); }
	inline bool get_boolData_12() const { return ___boolData_12; }
	inline bool* get_address_of_boolData_12() { return &___boolData_12; }
	inline void set_boolData_12(bool value)
	{
		___boolData_12 = value;
	}

	inline static int32_t get_offset_of_floatData_13() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___floatData_13)); }
	inline float get_floatData_13() const { return ___floatData_13; }
	inline float* get_address_of_floatData_13() { return &___floatData_13; }
	inline void set_floatData_13(float value)
	{
		___floatData_13 = value;
	}

	inline static int32_t get_offset_of_vector2Data_14() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___vector2Data_14)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_vector2Data_14() const { return ___vector2Data_14; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_vector2Data_14() { return &___vector2Data_14; }
	inline void set_vector2Data_14(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___vector2Data_14 = value;
	}

	inline static int32_t get_offset_of_positionData_15() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___positionData_15)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positionData_15() const { return ___positionData_15; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positionData_15() { return &___positionData_15; }
	inline void set_positionData_15(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positionData_15 = value;
	}

	inline static int32_t get_offset_of_rotationData_16() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___rotationData_16)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotationData_16() const { return ___rotationData_16; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotationData_16() { return &___rotationData_16; }
	inline void set_rotationData_16(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotationData_16 = value;
	}

	inline static int32_t get_offset_of_poseData_17() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___poseData_17)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_poseData_17() const { return ___poseData_17; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_poseData_17() { return &___poseData_17; }
	inline void set_poseData_17(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___poseData_17 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizationKey
	String_t* ___localizationKey_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizedKeyword
	String_t* ___localizedKeyword_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyword
	String_t* ___keyword_2;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyCode
	int32_t ___keyCode_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_4;

public:
	inline static int32_t get_offset_of_localizationKey_0() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizationKey_0)); }
	inline String_t* get_localizationKey_0() const { return ___localizationKey_0; }
	inline String_t** get_address_of_localizationKey_0() { return &___localizationKey_0; }
	inline void set_localizationKey_0(String_t* value)
	{
		___localizationKey_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizationKey_0), (void*)value);
	}

	inline static int32_t get_offset_of_localizedKeyword_1() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizedKeyword_1)); }
	inline String_t* get_localizedKeyword_1() const { return ___localizedKeyword_1; }
	inline String_t** get_address_of_localizedKeyword_1() { return &___localizedKeyword_1; }
	inline void set_localizedKeyword_1(String_t* value)
	{
		___localizedKeyword_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizedKeyword_1), (void*)value);
	}

	inline static int32_t get_offset_of_keyword_2() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyword_2)); }
	inline String_t* get_keyword_2() const { return ___keyword_2; }
	inline String_t** get_address_of_keyword_2() { return &___keyword_2; }
	inline void set_keyword_2(String_t* value)
	{
		___keyword_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keyword_2), (void*)value);
	}

	inline static int32_t get_offset_of_keyCode_3() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyCode_3)); }
	inline int32_t get_keyCode_3() const { return ___keyCode_3; }
	inline int32_t* get_address_of_keyCode_3() { return &___keyCode_3; }
	inline void set_keyCode_3(int32_t value)
	{
		___keyCode_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___action_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_4() const { return ___action_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_4))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke
{
	char* ___localizationKey_0;
	char* ___localizedKeyword_1;
	char* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com
{
	Il2CppChar* ___localizationKey_0;
	Il2CppChar* ___localizedKeyword_1;
	Il2CppChar* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_4;
};

// System.NotImplementedException
struct NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.MeshFilter
struct MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.DictationEventData
struct DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.DictationEventData::<DictationResult>k__BackingField
	String_t* ___U3CDictationResultU3Ek__BackingField_5;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Input.DictationEventData::<DictationAudioClip>k__BackingField
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___U3CDictationAudioClipU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CDictationResultU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A, ___U3CDictationResultU3Ek__BackingField_5)); }
	inline String_t* get_U3CDictationResultU3Ek__BackingField_5() const { return ___U3CDictationResultU3Ek__BackingField_5; }
	inline String_t** get_address_of_U3CDictationResultU3Ek__BackingField_5() { return &___U3CDictationResultU3Ek__BackingField_5; }
	inline void set_U3CDictationResultU3Ek__BackingField_5(String_t* value)
	{
		___U3CDictationResultU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CDictationResultU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CDictationAudioClipU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A, ___U3CDictationAudioClipU3Ek__BackingField_6)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_U3CDictationAudioClipU3Ek__BackingField_6() const { return ___U3CDictationAudioClipU3Ek__BackingField_6; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_U3CDictationAudioClipU3Ek__BackingField_6() { return &___U3CDictationAudioClipU3Ek__BackingField_6; }
	inline void set_U3CDictationAudioClipU3Ek__BackingField_6(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___U3CDictationAudioClipU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CDictationAudioClipU3Ek__BackingField_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// System.TimeSpan Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseDuration>k__BackingField
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___U3CPhraseDurationU3Ek__BackingField_5;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseStartTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CPhraseStartTimeU3Ek__BackingField_6;
	// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Command>k__BackingField
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___U3CCommandU3Ek__BackingField_7;
	// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Confidence>k__BackingField
	int32_t ___U3CConfidenceU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_U3CPhraseDurationU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseDurationU3Ek__BackingField_5)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_U3CPhraseDurationU3Ek__BackingField_5() const { return ___U3CPhraseDurationU3Ek__BackingField_5; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_U3CPhraseDurationU3Ek__BackingField_5() { return &___U3CPhraseDurationU3Ek__BackingField_5; }
	inline void set_U3CPhraseDurationU3Ek__BackingField_5(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___U3CPhraseDurationU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseStartTimeU3Ek__BackingField_6)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CPhraseStartTimeU3Ek__BackingField_6() const { return ___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return &___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline void set_U3CPhraseStartTimeU3Ek__BackingField_6(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CPhraseStartTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CCommandU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CCommandU3Ek__BackingField_7)); }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  get_U3CCommandU3Ek__BackingField_7() const { return ___U3CCommandU3Ek__BackingField_7; }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * get_address_of_U3CCommandU3Ek__BackingField_7() { return &___U3CCommandU3Ek__BackingField_7; }
	inline void set_U3CCommandU3Ek__BackingField_7(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		___U3CCommandU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CCommandU3Ek__BackingField_7))->___action_4))->___description_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CConfidenceU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CConfidenceU3Ek__BackingField_8)); }
	inline int32_t get_U3CConfidenceU3Ek__BackingField_8() const { return ___U3CConfidenceU3Ek__BackingField_8; }
	inline int32_t* get_address_of_U3CConfidenceU3Ek__BackingField_8() { return &___U3CConfidenceU3Ek__BackingField_8; }
	inline void set_U3CConfidenceU3Ek__BackingField_8(int32_t value)
	{
		___U3CConfidenceU3Ek__BackingField_8 = value;
	}
};


// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};

struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields
{
public:
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPostRender_6;

public:
	inline static int32_t get_offset_of_onPreCull_4() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreCull_4)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreCull_4() const { return ___onPreCull_4; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreCull_4() { return &___onPreCull_4; }
	inline void set_onPreCull_4(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreCull_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreCull_4), (void*)value);
	}

	inline static int32_t get_offset_of_onPreRender_5() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreRender_5)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreRender_5() const { return ___onPreRender_5; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreRender_5() { return &___onPreRender_5; }
	inline void set_onPreRender_5(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreRender_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreRender_5), (void*)value);
	}

	inline static int32_t get_offset_of_onPostRender_6() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPostRender_6)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPostRender_6() const { return ___onPostRender_6; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPostRender_6() { return &___onPostRender_6; }
	inline void set_onPostRender_6(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPostRender_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPostRender_6), (void*)value);
	}
};


// UnityEngine.MeshRenderer
struct MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED  : public Renderer_t0556D67DD582620D1F495627EDE30D03284151F4
{
public:

public:
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseCursor
struct BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum Microsoft.MixedReality.Toolkit.Input.BaseCursor::<CursorState>k__BackingField
	int32_t ___U3CCursorStateU3Ek__BackingField_4;
	// Microsoft.MixedReality.Toolkit.Input.CursorContextEnum Microsoft.MixedReality.Toolkit.Input.BaseCursor::<CursorContext>k__BackingField
	int32_t ___U3CCursorContextU3Ek__BackingField_5;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::surfaceCursorDistance
	float ___surfaceCursorDistance_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::useUnscaledTime
	bool ___useUnscaledTime_7;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::positionLerpTime
	float ___positionLerpTime_8;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::scaleLerpTime
	float ___scaleLerpTime_9;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::rotationLerpTime
	float ___rotationLerpTime_10;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::lookRotationBlend
	float ___lookRotationBlend_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::resizeCursorWithDistance
	bool ___resizeCursorWithDistance_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::cursorAngularSize
	float ___cursorAngularSize_13;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.BaseCursor::PrimaryCursorVisual
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___PrimaryCursorVisual_14;
	// System.Collections.Generic.List`1<System.UInt32> Microsoft.MixedReality.Toolkit.Input.BaseCursor::SourceDownIds
	List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * ___SourceDownIds_15;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseCursor::TargetedObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___TargetedObject_16;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseCursor::visibleSourcesCount
	uint32_t ___visibleSourcesCount_17;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseCursor::targetPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___targetPosition_18;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseCursor::targetScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___targetScale_19;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseCursor::targetRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___targetRotation_20;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::pointer
	RuntimeObject* ___pointer_21;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::defaultCursorDistance
	float ___defaultCursorDistance_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::<SetVisibilityOnSourceDetected>k__BackingField
	bool ___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23;
	// Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.BaseCursor::focusDetails
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  ___focusDetails_24;

public:
	inline static int32_t get_offset_of_U3CCursorStateU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___U3CCursorStateU3Ek__BackingField_4)); }
	inline int32_t get_U3CCursorStateU3Ek__BackingField_4() const { return ___U3CCursorStateU3Ek__BackingField_4; }
	inline int32_t* get_address_of_U3CCursorStateU3Ek__BackingField_4() { return &___U3CCursorStateU3Ek__BackingField_4; }
	inline void set_U3CCursorStateU3Ek__BackingField_4(int32_t value)
	{
		___U3CCursorStateU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CCursorContextU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___U3CCursorContextU3Ek__BackingField_5)); }
	inline int32_t get_U3CCursorContextU3Ek__BackingField_5() const { return ___U3CCursorContextU3Ek__BackingField_5; }
	inline int32_t* get_address_of_U3CCursorContextU3Ek__BackingField_5() { return &___U3CCursorContextU3Ek__BackingField_5; }
	inline void set_U3CCursorContextU3Ek__BackingField_5(int32_t value)
	{
		___U3CCursorContextU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_surfaceCursorDistance_6() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___surfaceCursorDistance_6)); }
	inline float get_surfaceCursorDistance_6() const { return ___surfaceCursorDistance_6; }
	inline float* get_address_of_surfaceCursorDistance_6() { return &___surfaceCursorDistance_6; }
	inline void set_surfaceCursorDistance_6(float value)
	{
		___surfaceCursorDistance_6 = value;
	}

	inline static int32_t get_offset_of_useUnscaledTime_7() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___useUnscaledTime_7)); }
	inline bool get_useUnscaledTime_7() const { return ___useUnscaledTime_7; }
	inline bool* get_address_of_useUnscaledTime_7() { return &___useUnscaledTime_7; }
	inline void set_useUnscaledTime_7(bool value)
	{
		___useUnscaledTime_7 = value;
	}

	inline static int32_t get_offset_of_positionLerpTime_8() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___positionLerpTime_8)); }
	inline float get_positionLerpTime_8() const { return ___positionLerpTime_8; }
	inline float* get_address_of_positionLerpTime_8() { return &___positionLerpTime_8; }
	inline void set_positionLerpTime_8(float value)
	{
		___positionLerpTime_8 = value;
	}

	inline static int32_t get_offset_of_scaleLerpTime_9() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___scaleLerpTime_9)); }
	inline float get_scaleLerpTime_9() const { return ___scaleLerpTime_9; }
	inline float* get_address_of_scaleLerpTime_9() { return &___scaleLerpTime_9; }
	inline void set_scaleLerpTime_9(float value)
	{
		___scaleLerpTime_9 = value;
	}

	inline static int32_t get_offset_of_rotationLerpTime_10() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___rotationLerpTime_10)); }
	inline float get_rotationLerpTime_10() const { return ___rotationLerpTime_10; }
	inline float* get_address_of_rotationLerpTime_10() { return &___rotationLerpTime_10; }
	inline void set_rotationLerpTime_10(float value)
	{
		___rotationLerpTime_10 = value;
	}

	inline static int32_t get_offset_of_lookRotationBlend_11() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___lookRotationBlend_11)); }
	inline float get_lookRotationBlend_11() const { return ___lookRotationBlend_11; }
	inline float* get_address_of_lookRotationBlend_11() { return &___lookRotationBlend_11; }
	inline void set_lookRotationBlend_11(float value)
	{
		___lookRotationBlend_11 = value;
	}

	inline static int32_t get_offset_of_resizeCursorWithDistance_12() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___resizeCursorWithDistance_12)); }
	inline bool get_resizeCursorWithDistance_12() const { return ___resizeCursorWithDistance_12; }
	inline bool* get_address_of_resizeCursorWithDistance_12() { return &___resizeCursorWithDistance_12; }
	inline void set_resizeCursorWithDistance_12(bool value)
	{
		___resizeCursorWithDistance_12 = value;
	}

	inline static int32_t get_offset_of_cursorAngularSize_13() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___cursorAngularSize_13)); }
	inline float get_cursorAngularSize_13() const { return ___cursorAngularSize_13; }
	inline float* get_address_of_cursorAngularSize_13() { return &___cursorAngularSize_13; }
	inline void set_cursorAngularSize_13(float value)
	{
		___cursorAngularSize_13 = value;
	}

	inline static int32_t get_offset_of_PrimaryCursorVisual_14() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___PrimaryCursorVisual_14)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_PrimaryCursorVisual_14() const { return ___PrimaryCursorVisual_14; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_PrimaryCursorVisual_14() { return &___PrimaryCursorVisual_14; }
	inline void set_PrimaryCursorVisual_14(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___PrimaryCursorVisual_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PrimaryCursorVisual_14), (void*)value);
	}

	inline static int32_t get_offset_of_SourceDownIds_15() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___SourceDownIds_15)); }
	inline List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * get_SourceDownIds_15() const { return ___SourceDownIds_15; }
	inline List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E ** get_address_of_SourceDownIds_15() { return &___SourceDownIds_15; }
	inline void set_SourceDownIds_15(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * value)
	{
		___SourceDownIds_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SourceDownIds_15), (void*)value);
	}

	inline static int32_t get_offset_of_TargetedObject_16() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___TargetedObject_16)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_TargetedObject_16() const { return ___TargetedObject_16; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_TargetedObject_16() { return &___TargetedObject_16; }
	inline void set_TargetedObject_16(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___TargetedObject_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TargetedObject_16), (void*)value);
	}

	inline static int32_t get_offset_of_visibleSourcesCount_17() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___visibleSourcesCount_17)); }
	inline uint32_t get_visibleSourcesCount_17() const { return ___visibleSourcesCount_17; }
	inline uint32_t* get_address_of_visibleSourcesCount_17() { return &___visibleSourcesCount_17; }
	inline void set_visibleSourcesCount_17(uint32_t value)
	{
		___visibleSourcesCount_17 = value;
	}

	inline static int32_t get_offset_of_targetPosition_18() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___targetPosition_18)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_targetPosition_18() const { return ___targetPosition_18; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_targetPosition_18() { return &___targetPosition_18; }
	inline void set_targetPosition_18(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___targetPosition_18 = value;
	}

	inline static int32_t get_offset_of_targetScale_19() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___targetScale_19)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_targetScale_19() const { return ___targetScale_19; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_targetScale_19() { return &___targetScale_19; }
	inline void set_targetScale_19(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___targetScale_19 = value;
	}

	inline static int32_t get_offset_of_targetRotation_20() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___targetRotation_20)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_targetRotation_20() const { return ___targetRotation_20; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_targetRotation_20() { return &___targetRotation_20; }
	inline void set_targetRotation_20(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___targetRotation_20 = value;
	}

	inline static int32_t get_offset_of_pointer_21() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___pointer_21)); }
	inline RuntimeObject* get_pointer_21() const { return ___pointer_21; }
	inline RuntimeObject** get_address_of_pointer_21() { return &___pointer_21; }
	inline void set_pointer_21(RuntimeObject* value)
	{
		___pointer_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointer_21), (void*)value);
	}

	inline static int32_t get_offset_of_defaultCursorDistance_22() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___defaultCursorDistance_22)); }
	inline float get_defaultCursorDistance_22() const { return ___defaultCursorDistance_22; }
	inline float* get_address_of_defaultCursorDistance_22() { return &___defaultCursorDistance_22; }
	inline void set_defaultCursorDistance_22(float value)
	{
		___defaultCursorDistance_22 = value;
	}

	inline static int32_t get_offset_of_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23)); }
	inline bool get_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23() const { return ___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23; }
	inline bool* get_address_of_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23() { return &___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23; }
	inline void set_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23(bool value)
	{
		___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_focusDetails_24() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___focusDetails_24)); }
	inline FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  get_focusDetails_24() const { return ___focusDetails_24; }
	inline FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * get_address_of_focusDetails_24() { return &___focusDetails_24; }
	inline void set_focusDetails_24(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  value)
	{
		___focusDetails_24 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___focusDetails_24))->___U3CObjectU3Ek__BackingField_3), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusHandler
struct FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusHandler::markEventsAsUsed
	bool ___markEventsAsUsed_4;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.FocusHandler::onFocusEnterEvent
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onFocusEnterEvent_5;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.FocusHandler::onFocusExitEvent
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onFocusExitEvent_6;

public:
	inline static int32_t get_offset_of_markEventsAsUsed_4() { return static_cast<int32_t>(offsetof(FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B, ___markEventsAsUsed_4)); }
	inline bool get_markEventsAsUsed_4() const { return ___markEventsAsUsed_4; }
	inline bool* get_address_of_markEventsAsUsed_4() { return &___markEventsAsUsed_4; }
	inline void set_markEventsAsUsed_4(bool value)
	{
		___markEventsAsUsed_4 = value;
	}

	inline static int32_t get_offset_of_onFocusEnterEvent_5() { return static_cast<int32_t>(offsetof(FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B, ___onFocusEnterEvent_5)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onFocusEnterEvent_5() const { return ___onFocusEnterEvent_5; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onFocusEnterEvent_5() { return &___onFocusEnterEvent_5; }
	inline void set_onFocusEnterEvent_5(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onFocusEnterEvent_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onFocusEnterEvent_5), (void*)value);
	}

	inline static int32_t get_offset_of_onFocusExitEvent_6() { return static_cast<int32_t>(offsetof(FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B, ___onFocusExitEvent_6)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onFocusExitEvent_6() const { return ___onFocusExitEvent_6; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onFocusExitEvent_6() { return &___onFocusExitEvent_6; }
	inline void set_onFocusExitEvent_6(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onFocusExitEvent_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onFocusExitEvent_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64, ___U3CInputDataU3Ek__BackingField_6)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>
struct InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	float ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5, ___U3CInputDataU3Ek__BackingField_6)); }
	inline float get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline float* get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(float value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>
struct InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18, ___U3CInputDataU3Ek__BackingField_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators
struct InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.UI.Image Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::imageHandLeft
	Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E * ___imageHandLeft_4;
	// UnityEngine.UI.Image Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::imageHandRight
	Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E * ___imageHandRight_5;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::iconHandActiveLeft
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___iconHandActiveLeft_6;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::iconHandActiveRight
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___iconHandActiveRight_7;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::iconHandIdleLeft
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___iconHandIdleLeft_8;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::iconHandIdleRight
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___iconHandIdleRight_9;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::iconHandUntrackedLeft
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___iconHandUntrackedLeft_10;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::iconHandUntrackedRight
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___iconHandUntrackedRight_11;

public:
	inline static int32_t get_offset_of_imageHandLeft_4() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___imageHandLeft_4)); }
	inline Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E * get_imageHandLeft_4() const { return ___imageHandLeft_4; }
	inline Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E ** get_address_of_imageHandLeft_4() { return &___imageHandLeft_4; }
	inline void set_imageHandLeft_4(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E * value)
	{
		___imageHandLeft_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___imageHandLeft_4), (void*)value);
	}

	inline static int32_t get_offset_of_imageHandRight_5() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___imageHandRight_5)); }
	inline Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E * get_imageHandRight_5() const { return ___imageHandRight_5; }
	inline Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E ** get_address_of_imageHandRight_5() { return &___imageHandRight_5; }
	inline void set_imageHandRight_5(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E * value)
	{
		___imageHandRight_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___imageHandRight_5), (void*)value);
	}

	inline static int32_t get_offset_of_iconHandActiveLeft_6() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___iconHandActiveLeft_6)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_iconHandActiveLeft_6() const { return ___iconHandActiveLeft_6; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_iconHandActiveLeft_6() { return &___iconHandActiveLeft_6; }
	inline void set_iconHandActiveLeft_6(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___iconHandActiveLeft_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iconHandActiveLeft_6), (void*)value);
	}

	inline static int32_t get_offset_of_iconHandActiveRight_7() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___iconHandActiveRight_7)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_iconHandActiveRight_7() const { return ___iconHandActiveRight_7; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_iconHandActiveRight_7() { return &___iconHandActiveRight_7; }
	inline void set_iconHandActiveRight_7(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___iconHandActiveRight_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iconHandActiveRight_7), (void*)value);
	}

	inline static int32_t get_offset_of_iconHandIdleLeft_8() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___iconHandIdleLeft_8)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_iconHandIdleLeft_8() const { return ___iconHandIdleLeft_8; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_iconHandIdleLeft_8() { return &___iconHandIdleLeft_8; }
	inline void set_iconHandIdleLeft_8(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___iconHandIdleLeft_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iconHandIdleLeft_8), (void*)value);
	}

	inline static int32_t get_offset_of_iconHandIdleRight_9() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___iconHandIdleRight_9)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_iconHandIdleRight_9() const { return ___iconHandIdleRight_9; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_iconHandIdleRight_9() { return &___iconHandIdleRight_9; }
	inline void set_iconHandIdleRight_9(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___iconHandIdleRight_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iconHandIdleRight_9), (void*)value);
	}

	inline static int32_t get_offset_of_iconHandUntrackedLeft_10() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___iconHandUntrackedLeft_10)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_iconHandUntrackedLeft_10() const { return ___iconHandUntrackedLeft_10; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_iconHandUntrackedLeft_10() { return &___iconHandUntrackedLeft_10; }
	inline void set_iconHandUntrackedLeft_10(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___iconHandUntrackedLeft_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iconHandUntrackedLeft_10), (void*)value);
	}

	inline static int32_t get_offset_of_iconHandUntrackedRight_11() { return static_cast<int32_t>(offsetof(InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3, ___iconHandUntrackedRight_11)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_iconHandUntrackedRight_11() const { return ___iconHandUntrackedRight_11; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_iconHandUntrackedRight_11() { return &___iconHandUntrackedRight_11; }
	inline void set_iconHandUntrackedRight_11(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___iconHandUntrackedRight_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iconHandUntrackedRight_11), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::lateInitialize
	bool ___lateInitialize_4;

public:
	inline static int32_t get_offset_of_lateInitialize_4() { return static_cast<int32_t>(offsetof(InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5, ___lateInitialize_4)); }
	inline bool get_lateInitialize_4() const { return ___lateInitialize_4; }
	inline bool* get_address_of_lateInitialize_4() { return &___lateInitialize_4; }
	inline void set_lateInitialize_4(bool value)
	{
		___lateInitialize_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CPointerU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_6() const { return ___U3CPointerU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_6() { return &___U3CPointerU3Ek__BackingField_6; }
	inline void set_U3CPointerU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCountU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CCountU3Ek__BackingField_7)); }
	inline int32_t get_U3CCountU3Ek__BackingField_7() const { return ___U3CCountU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3CCountU3Ek__BackingField_7() { return &___U3CCountU3Ek__BackingField_7; }
	inline void set_U3CCountU3Ek__BackingField_7(int32_t value)
	{
		___U3CCountU3Ek__BackingField_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider
struct BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::lineStartClamp
	float ___lineStartClamp_4;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::lineEndClamp
	float ___lineEndClamp_5;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::customLineTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___customLineTransform_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::loops
	bool ___loops_7;
	// Microsoft.MixedReality.Toolkit.LinePointTransformMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::transformMode
	int32_t ___transformMode_8;
	// Microsoft.MixedReality.Toolkit.LineRotationMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::rotationMode
	int32_t ___rotationMode_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::flipUpVector
	bool ___flipUpVector_10;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::originOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___originOffset_11;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::manualUpVectorBlend
	float ___manualUpVectorBlend_12;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::manualUpVectors
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___manualUpVectors_13;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::velocitySearchRange
	float ___velocitySearchRange_14;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Physics.Distorter> Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distorters
	List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 * ___distorters_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distortionEnabled
	bool ___distortionEnabled_16;
	// Microsoft.MixedReality.Toolkit.DistortionMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distortionMode
	int32_t ___distortionMode_17;
	// UnityEngine.AnimationCurve Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distortionStrength
	AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * ___distortionStrength_18;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::uniformDistortionStrength
	float ___uniformDistortionStrength_19;
	// UnityEngine.Matrix4x4 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::localToWorldMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___localToWorldMatrix_20;
	// UnityEngine.Matrix4x4 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::worldToLocalMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___worldToLocalMatrix_21;

public:
	inline static int32_t get_offset_of_lineStartClamp_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___lineStartClamp_4)); }
	inline float get_lineStartClamp_4() const { return ___lineStartClamp_4; }
	inline float* get_address_of_lineStartClamp_4() { return &___lineStartClamp_4; }
	inline void set_lineStartClamp_4(float value)
	{
		___lineStartClamp_4 = value;
	}

	inline static int32_t get_offset_of_lineEndClamp_5() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___lineEndClamp_5)); }
	inline float get_lineEndClamp_5() const { return ___lineEndClamp_5; }
	inline float* get_address_of_lineEndClamp_5() { return &___lineEndClamp_5; }
	inline void set_lineEndClamp_5(float value)
	{
		___lineEndClamp_5 = value;
	}

	inline static int32_t get_offset_of_customLineTransform_6() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___customLineTransform_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_customLineTransform_6() const { return ___customLineTransform_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_customLineTransform_6() { return &___customLineTransform_6; }
	inline void set_customLineTransform_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___customLineTransform_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___customLineTransform_6), (void*)value);
	}

	inline static int32_t get_offset_of_loops_7() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___loops_7)); }
	inline bool get_loops_7() const { return ___loops_7; }
	inline bool* get_address_of_loops_7() { return &___loops_7; }
	inline void set_loops_7(bool value)
	{
		___loops_7 = value;
	}

	inline static int32_t get_offset_of_transformMode_8() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___transformMode_8)); }
	inline int32_t get_transformMode_8() const { return ___transformMode_8; }
	inline int32_t* get_address_of_transformMode_8() { return &___transformMode_8; }
	inline void set_transformMode_8(int32_t value)
	{
		___transformMode_8 = value;
	}

	inline static int32_t get_offset_of_rotationMode_9() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___rotationMode_9)); }
	inline int32_t get_rotationMode_9() const { return ___rotationMode_9; }
	inline int32_t* get_address_of_rotationMode_9() { return &___rotationMode_9; }
	inline void set_rotationMode_9(int32_t value)
	{
		___rotationMode_9 = value;
	}

	inline static int32_t get_offset_of_flipUpVector_10() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___flipUpVector_10)); }
	inline bool get_flipUpVector_10() const { return ___flipUpVector_10; }
	inline bool* get_address_of_flipUpVector_10() { return &___flipUpVector_10; }
	inline void set_flipUpVector_10(bool value)
	{
		___flipUpVector_10 = value;
	}

	inline static int32_t get_offset_of_originOffset_11() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___originOffset_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_originOffset_11() const { return ___originOffset_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_originOffset_11() { return &___originOffset_11; }
	inline void set_originOffset_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___originOffset_11 = value;
	}

	inline static int32_t get_offset_of_manualUpVectorBlend_12() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___manualUpVectorBlend_12)); }
	inline float get_manualUpVectorBlend_12() const { return ___manualUpVectorBlend_12; }
	inline float* get_address_of_manualUpVectorBlend_12() { return &___manualUpVectorBlend_12; }
	inline void set_manualUpVectorBlend_12(float value)
	{
		___manualUpVectorBlend_12 = value;
	}

	inline static int32_t get_offset_of_manualUpVectors_13() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___manualUpVectors_13)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_manualUpVectors_13() const { return ___manualUpVectors_13; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_manualUpVectors_13() { return &___manualUpVectors_13; }
	inline void set_manualUpVectors_13(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___manualUpVectors_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___manualUpVectors_13), (void*)value);
	}

	inline static int32_t get_offset_of_velocitySearchRange_14() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___velocitySearchRange_14)); }
	inline float get_velocitySearchRange_14() const { return ___velocitySearchRange_14; }
	inline float* get_address_of_velocitySearchRange_14() { return &___velocitySearchRange_14; }
	inline void set_velocitySearchRange_14(float value)
	{
		___velocitySearchRange_14 = value;
	}

	inline static int32_t get_offset_of_distorters_15() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distorters_15)); }
	inline List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 * get_distorters_15() const { return ___distorters_15; }
	inline List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 ** get_address_of_distorters_15() { return &___distorters_15; }
	inline void set_distorters_15(List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 * value)
	{
		___distorters_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___distorters_15), (void*)value);
	}

	inline static int32_t get_offset_of_distortionEnabled_16() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distortionEnabled_16)); }
	inline bool get_distortionEnabled_16() const { return ___distortionEnabled_16; }
	inline bool* get_address_of_distortionEnabled_16() { return &___distortionEnabled_16; }
	inline void set_distortionEnabled_16(bool value)
	{
		___distortionEnabled_16 = value;
	}

	inline static int32_t get_offset_of_distortionMode_17() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distortionMode_17)); }
	inline int32_t get_distortionMode_17() const { return ___distortionMode_17; }
	inline int32_t* get_address_of_distortionMode_17() { return &___distortionMode_17; }
	inline void set_distortionMode_17(int32_t value)
	{
		___distortionMode_17 = value;
	}

	inline static int32_t get_offset_of_distortionStrength_18() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distortionStrength_18)); }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * get_distortionStrength_18() const { return ___distortionStrength_18; }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C ** get_address_of_distortionStrength_18() { return &___distortionStrength_18; }
	inline void set_distortionStrength_18(AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * value)
	{
		___distortionStrength_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___distortionStrength_18), (void*)value);
	}

	inline static int32_t get_offset_of_uniformDistortionStrength_19() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___uniformDistortionStrength_19)); }
	inline float get_uniformDistortionStrength_19() const { return ___uniformDistortionStrength_19; }
	inline float* get_address_of_uniformDistortionStrength_19() { return &___uniformDistortionStrength_19; }
	inline void set_uniformDistortionStrength_19(float value)
	{
		___uniformDistortionStrength_19 = value;
	}

	inline static int32_t get_offset_of_localToWorldMatrix_20() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___localToWorldMatrix_20)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_localToWorldMatrix_20() const { return ___localToWorldMatrix_20; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_localToWorldMatrix_20() { return &___localToWorldMatrix_20; }
	inline void set_localToWorldMatrix_20(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___localToWorldMatrix_20 = value;
	}

	inline static int32_t get_offset_of_worldToLocalMatrix_21() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___worldToLocalMatrix_21)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_worldToLocalMatrix_21() const { return ___worldToLocalMatrix_21; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_worldToLocalMatrix_21() { return &___worldToLocalMatrix_21; }
	inline void set_worldToLocalMatrix_21(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___worldToLocalMatrix_21 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer
struct BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineDataSource
	BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * ___lineDataSource_4;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineColor
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___lineColor_5;
	// UnityEngine.AnimationCurve Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineWidth
	AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * ___lineWidth_6;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::widthMultiplier
	float ___widthMultiplier_7;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::colorOffset
	float ___colorOffset_8;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::widthOffset
	float ___widthOffset_9;
	// Microsoft.MixedReality.Toolkit.StepMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::stepMode
	int32_t ___stepMode_10;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineStepCount
	int32_t ___lineStepCount_11;
	// Microsoft.MixedReality.Toolkit.PointDistributionMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::pointDistributionMode
	int32_t ___pointDistributionMode_12;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::customPointDistributionLength
	float ___customPointDistributionLength_13;
	// UnityEngine.AnimationCurve Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::customPointDistributionCurve
	AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * ___customPointDistributionCurve_14;

public:
	inline static int32_t get_offset_of_lineDataSource_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineDataSource_4)); }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * get_lineDataSource_4() const { return ___lineDataSource_4; }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 ** get_address_of_lineDataSource_4() { return &___lineDataSource_4; }
	inline void set_lineDataSource_4(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * value)
	{
		___lineDataSource_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineDataSource_4), (void*)value);
	}

	inline static int32_t get_offset_of_lineColor_5() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineColor_5)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_lineColor_5() const { return ___lineColor_5; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_lineColor_5() { return &___lineColor_5; }
	inline void set_lineColor_5(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___lineColor_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineColor_5), (void*)value);
	}

	inline static int32_t get_offset_of_lineWidth_6() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineWidth_6)); }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * get_lineWidth_6() const { return ___lineWidth_6; }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C ** get_address_of_lineWidth_6() { return &___lineWidth_6; }
	inline void set_lineWidth_6(AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * value)
	{
		___lineWidth_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineWidth_6), (void*)value);
	}

	inline static int32_t get_offset_of_widthMultiplier_7() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___widthMultiplier_7)); }
	inline float get_widthMultiplier_7() const { return ___widthMultiplier_7; }
	inline float* get_address_of_widthMultiplier_7() { return &___widthMultiplier_7; }
	inline void set_widthMultiplier_7(float value)
	{
		___widthMultiplier_7 = value;
	}

	inline static int32_t get_offset_of_colorOffset_8() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___colorOffset_8)); }
	inline float get_colorOffset_8() const { return ___colorOffset_8; }
	inline float* get_address_of_colorOffset_8() { return &___colorOffset_8; }
	inline void set_colorOffset_8(float value)
	{
		___colorOffset_8 = value;
	}

	inline static int32_t get_offset_of_widthOffset_9() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___widthOffset_9)); }
	inline float get_widthOffset_9() const { return ___widthOffset_9; }
	inline float* get_address_of_widthOffset_9() { return &___widthOffset_9; }
	inline void set_widthOffset_9(float value)
	{
		___widthOffset_9 = value;
	}

	inline static int32_t get_offset_of_stepMode_10() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___stepMode_10)); }
	inline int32_t get_stepMode_10() const { return ___stepMode_10; }
	inline int32_t* get_address_of_stepMode_10() { return &___stepMode_10; }
	inline void set_stepMode_10(int32_t value)
	{
		___stepMode_10 = value;
	}

	inline static int32_t get_offset_of_lineStepCount_11() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineStepCount_11)); }
	inline int32_t get_lineStepCount_11() const { return ___lineStepCount_11; }
	inline int32_t* get_address_of_lineStepCount_11() { return &___lineStepCount_11; }
	inline void set_lineStepCount_11(int32_t value)
	{
		___lineStepCount_11 = value;
	}

	inline static int32_t get_offset_of_pointDistributionMode_12() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___pointDistributionMode_12)); }
	inline int32_t get_pointDistributionMode_12() const { return ___pointDistributionMode_12; }
	inline int32_t* get_address_of_pointDistributionMode_12() { return &___pointDistributionMode_12; }
	inline void set_pointDistributionMode_12(int32_t value)
	{
		___pointDistributionMode_12 = value;
	}

	inline static int32_t get_offset_of_customPointDistributionLength_13() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___customPointDistributionLength_13)); }
	inline float get_customPointDistributionLength_13() const { return ___customPointDistributionLength_13; }
	inline float* get_address_of_customPointDistributionLength_13() { return &___customPointDistributionLength_13; }
	inline void set_customPointDistributionLength_13(float value)
	{
		___customPointDistributionLength_13 = value;
	}

	inline static int32_t get_offset_of_customPointDistributionCurve_14() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___customPointDistributionCurve_14)); }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * get_customPointDistributionCurve_14() const { return ___customPointDistributionCurve_14; }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C ** get_address_of_customPointDistributionCurve_14() { return &___customPointDistributionCurve_14; }
	inline void set_customPointDistributionCurve_14(AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * value)
	{
		___customPointDistributionCurve_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___customPointDistributionCurve_14), (void*)value);
	}
};


// UnityEngine.EventSystems.UIBehaviour
struct UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputHandler
struct BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::isFocusRequired
	bool ___isFocusRequired_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::isFocusRequiredRuntime
	bool ___isFocusRequiredRuntime_6;

public:
	inline static int32_t get_offset_of_isFocusRequired_5() { return static_cast<int32_t>(offsetof(BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35, ___isFocusRequired_5)); }
	inline bool get_isFocusRequired_5() const { return ___isFocusRequired_5; }
	inline bool* get_address_of_isFocusRequired_5() { return &___isFocusRequired_5; }
	inline void set_isFocusRequired_5(bool value)
	{
		___isFocusRequired_5 = value;
	}

	inline static int32_t get_offset_of_isFocusRequiredRuntime_6() { return static_cast<int32_t>(offsetof(BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35, ___isFocusRequiredRuntime_6)); }
	inline bool get_isFocusRequiredRuntime_6() const { return ___isFocusRequiredRuntime_6; }
	inline bool* get_address_of_isFocusRequiredRuntime_6() { return &___isFocusRequiredRuntime_6; }
	inline void set_isFocusRequiredRuntime_6(bool value)
	{
		___isFocusRequiredRuntime_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer
struct ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::destroyOnSourceLost
	bool ___destroyOnSourceLost_5;
	// Microsoft.MixedReality.Toolkit.TrackingState Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::TrackingState
	int32_t ___TrackingState_6;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::controller
	RuntimeObject* ___controller_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::useSourcePoseData
	bool ___useSourcePoseData_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::useSourcePoseAsFallback
	bool ___useSourcePoseAsFallback_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::poseActionDetected
	bool ___poseActionDetected_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::poseAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___poseAction_11;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::handedness
	uint8_t ___handedness_12;

public:
	inline static int32_t get_offset_of_destroyOnSourceLost_5() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___destroyOnSourceLost_5)); }
	inline bool get_destroyOnSourceLost_5() const { return ___destroyOnSourceLost_5; }
	inline bool* get_address_of_destroyOnSourceLost_5() { return &___destroyOnSourceLost_5; }
	inline void set_destroyOnSourceLost_5(bool value)
	{
		___destroyOnSourceLost_5 = value;
	}

	inline static int32_t get_offset_of_TrackingState_6() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___TrackingState_6)); }
	inline int32_t get_TrackingState_6() const { return ___TrackingState_6; }
	inline int32_t* get_address_of_TrackingState_6() { return &___TrackingState_6; }
	inline void set_TrackingState_6(int32_t value)
	{
		___TrackingState_6 = value;
	}

	inline static int32_t get_offset_of_controller_7() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___controller_7)); }
	inline RuntimeObject* get_controller_7() const { return ___controller_7; }
	inline RuntimeObject** get_address_of_controller_7() { return &___controller_7; }
	inline void set_controller_7(RuntimeObject* value)
	{
		___controller_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controller_7), (void*)value);
	}

	inline static int32_t get_offset_of_useSourcePoseData_8() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___useSourcePoseData_8)); }
	inline bool get_useSourcePoseData_8() const { return ___useSourcePoseData_8; }
	inline bool* get_address_of_useSourcePoseData_8() { return &___useSourcePoseData_8; }
	inline void set_useSourcePoseData_8(bool value)
	{
		___useSourcePoseData_8 = value;
	}

	inline static int32_t get_offset_of_useSourcePoseAsFallback_9() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___useSourcePoseAsFallback_9)); }
	inline bool get_useSourcePoseAsFallback_9() const { return ___useSourcePoseAsFallback_9; }
	inline bool* get_address_of_useSourcePoseAsFallback_9() { return &___useSourcePoseAsFallback_9; }
	inline void set_useSourcePoseAsFallback_9(bool value)
	{
		___useSourcePoseAsFallback_9 = value;
	}

	inline static int32_t get_offset_of_poseActionDetected_10() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___poseActionDetected_10)); }
	inline bool get_poseActionDetected_10() const { return ___poseActionDetected_10; }
	inline bool* get_address_of_poseActionDetected_10() { return &___poseActionDetected_10; }
	inline void set_poseActionDetected_10(bool value)
	{
		___poseActionDetected_10 = value;
	}

	inline static int32_t get_offset_of_poseAction_11() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___poseAction_11)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_poseAction_11() const { return ___poseAction_11; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_poseAction_11() { return &___poseAction_11; }
	inline void set_poseAction_11(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___poseAction_11 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___poseAction_11))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_handedness_12() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___handedness_12)); }
	inline uint8_t get_handedness_12() const { return ___handedness_12; }
	inline uint8_t* get_address_of_handedness_12() { return &___handedness_12; }
	inline void set_handedness_12(uint8_t value)
	{
		___handedness_12 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget
struct EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::selectAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___selectAction_5;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction[] Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::voiceSelect
	MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* ___voiceSelect_6;
	// System.Single Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::dwellTimeInSec
	float ___dwellTimeInSec_7;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onLookAtStart
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onLookAtStart_8;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::whileLookingAtTarget
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___whileLookingAtTarget_9;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onLookAway
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onLookAway_10;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onDwell
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onDwell_11;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onSelected
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onSelected_12;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onTapDown
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onTapDown_13;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onTapUp
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onTapUp_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::eyeCursorSnapToTargetCenter
	bool ___eyeCursorSnapToTargetCenter_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<IsLookedAt>k__BackingField
	bool ___U3CIsLookedAtU3Ek__BackingField_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<IsDwelledOn>k__BackingField
	bool ___U3CIsDwelledOnU3Ek__BackingField_17;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lookAtStartTime
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lookAtStartTime_18;
	// System.Single Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::EyeTrackingTimeoutInMilliseconds
	float ___EyeTrackingTimeoutInMilliseconds_19;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lastTimeClicked
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lastTimeClicked_22;
	// System.Single Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::minTimeoutBetweenClicksInMs
	float ___minTimeoutBetweenClicksInMs_23;

public:
	inline static int32_t get_offset_of_selectAction_5() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___selectAction_5)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_selectAction_5() const { return ___selectAction_5; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_selectAction_5() { return &___selectAction_5; }
	inline void set_selectAction_5(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___selectAction_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___selectAction_5))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_voiceSelect_6() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___voiceSelect_6)); }
	inline MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* get_voiceSelect_6() const { return ___voiceSelect_6; }
	inline MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B** get_address_of_voiceSelect_6() { return &___voiceSelect_6; }
	inline void set_voiceSelect_6(MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* value)
	{
		___voiceSelect_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___voiceSelect_6), (void*)value);
	}

	inline static int32_t get_offset_of_dwellTimeInSec_7() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___dwellTimeInSec_7)); }
	inline float get_dwellTimeInSec_7() const { return ___dwellTimeInSec_7; }
	inline float* get_address_of_dwellTimeInSec_7() { return &___dwellTimeInSec_7; }
	inline void set_dwellTimeInSec_7(float value)
	{
		___dwellTimeInSec_7 = value;
	}

	inline static int32_t get_offset_of_onLookAtStart_8() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onLookAtStart_8)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onLookAtStart_8() const { return ___onLookAtStart_8; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onLookAtStart_8() { return &___onLookAtStart_8; }
	inline void set_onLookAtStart_8(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onLookAtStart_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onLookAtStart_8), (void*)value);
	}

	inline static int32_t get_offset_of_whileLookingAtTarget_9() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___whileLookingAtTarget_9)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_whileLookingAtTarget_9() const { return ___whileLookingAtTarget_9; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_whileLookingAtTarget_9() { return &___whileLookingAtTarget_9; }
	inline void set_whileLookingAtTarget_9(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___whileLookingAtTarget_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___whileLookingAtTarget_9), (void*)value);
	}

	inline static int32_t get_offset_of_onLookAway_10() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onLookAway_10)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onLookAway_10() const { return ___onLookAway_10; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onLookAway_10() { return &___onLookAway_10; }
	inline void set_onLookAway_10(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onLookAway_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onLookAway_10), (void*)value);
	}

	inline static int32_t get_offset_of_onDwell_11() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onDwell_11)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onDwell_11() const { return ___onDwell_11; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onDwell_11() { return &___onDwell_11; }
	inline void set_onDwell_11(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onDwell_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDwell_11), (void*)value);
	}

	inline static int32_t get_offset_of_onSelected_12() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onSelected_12)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onSelected_12() const { return ___onSelected_12; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onSelected_12() { return &___onSelected_12; }
	inline void set_onSelected_12(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onSelected_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onSelected_12), (void*)value);
	}

	inline static int32_t get_offset_of_onTapDown_13() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onTapDown_13)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onTapDown_13() const { return ___onTapDown_13; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onTapDown_13() { return &___onTapDown_13; }
	inline void set_onTapDown_13(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onTapDown_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTapDown_13), (void*)value);
	}

	inline static int32_t get_offset_of_onTapUp_14() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onTapUp_14)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onTapUp_14() const { return ___onTapUp_14; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onTapUp_14() { return &___onTapUp_14; }
	inline void set_onTapUp_14(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onTapUp_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTapUp_14), (void*)value);
	}

	inline static int32_t get_offset_of_eyeCursorSnapToTargetCenter_15() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___eyeCursorSnapToTargetCenter_15)); }
	inline bool get_eyeCursorSnapToTargetCenter_15() const { return ___eyeCursorSnapToTargetCenter_15; }
	inline bool* get_address_of_eyeCursorSnapToTargetCenter_15() { return &___eyeCursorSnapToTargetCenter_15; }
	inline void set_eyeCursorSnapToTargetCenter_15(bool value)
	{
		___eyeCursorSnapToTargetCenter_15 = value;
	}

	inline static int32_t get_offset_of_U3CIsLookedAtU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___U3CIsLookedAtU3Ek__BackingField_16)); }
	inline bool get_U3CIsLookedAtU3Ek__BackingField_16() const { return ___U3CIsLookedAtU3Ek__BackingField_16; }
	inline bool* get_address_of_U3CIsLookedAtU3Ek__BackingField_16() { return &___U3CIsLookedAtU3Ek__BackingField_16; }
	inline void set_U3CIsLookedAtU3Ek__BackingField_16(bool value)
	{
		___U3CIsLookedAtU3Ek__BackingField_16 = value;
	}

	inline static int32_t get_offset_of_U3CIsDwelledOnU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___U3CIsDwelledOnU3Ek__BackingField_17)); }
	inline bool get_U3CIsDwelledOnU3Ek__BackingField_17() const { return ___U3CIsDwelledOnU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CIsDwelledOnU3Ek__BackingField_17() { return &___U3CIsDwelledOnU3Ek__BackingField_17; }
	inline void set_U3CIsDwelledOnU3Ek__BackingField_17(bool value)
	{
		___U3CIsDwelledOnU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_lookAtStartTime_18() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___lookAtStartTime_18)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lookAtStartTime_18() const { return ___lookAtStartTime_18; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lookAtStartTime_18() { return &___lookAtStartTime_18; }
	inline void set_lookAtStartTime_18(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lookAtStartTime_18 = value;
	}

	inline static int32_t get_offset_of_EyeTrackingTimeoutInMilliseconds_19() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___EyeTrackingTimeoutInMilliseconds_19)); }
	inline float get_EyeTrackingTimeoutInMilliseconds_19() const { return ___EyeTrackingTimeoutInMilliseconds_19; }
	inline float* get_address_of_EyeTrackingTimeoutInMilliseconds_19() { return &___EyeTrackingTimeoutInMilliseconds_19; }
	inline void set_EyeTrackingTimeoutInMilliseconds_19(float value)
	{
		___EyeTrackingTimeoutInMilliseconds_19 = value;
	}

	inline static int32_t get_offset_of_lastTimeClicked_22() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___lastTimeClicked_22)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lastTimeClicked_22() const { return ___lastTimeClicked_22; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lastTimeClicked_22() { return &___lastTimeClicked_22; }
	inline void set_lastTimeClicked_22(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lastTimeClicked_22 = value;
	}

	inline static int32_t get_offset_of_minTimeoutBetweenClicksInMs_23() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___minTimeoutBetweenClicksInMs_23)); }
	inline float get_minTimeoutBetweenClicksInMs_23() const { return ___minTimeoutBetweenClicksInMs_23; }
	inline float* get_address_of_minTimeoutBetweenClicksInMs_23() { return &___minTimeoutBetweenClicksInMs_23; }
	inline void set_minTimeoutBetweenClicksInMs_23(float value)
	{
		___minTimeoutBetweenClicksInMs_23 = value;
	}
};

struct EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lastEyeSignalUpdateTimeFromET
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lastEyeSignalUpdateTimeFromET_20;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lastEyeSignalUpdateTimeLocal
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lastEyeSignalUpdateTimeLocal_21;
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<LookedAtEyeTarget>k__BackingField
	EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___U3CLookedAtEyeTargetU3Ek__BackingField_24;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<SelectedTarget>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CSelectedTargetU3Ek__BackingField_25;

public:
	inline static int32_t get_offset_of_lastEyeSignalUpdateTimeFromET_20() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___lastEyeSignalUpdateTimeFromET_20)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lastEyeSignalUpdateTimeFromET_20() const { return ___lastEyeSignalUpdateTimeFromET_20; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lastEyeSignalUpdateTimeFromET_20() { return &___lastEyeSignalUpdateTimeFromET_20; }
	inline void set_lastEyeSignalUpdateTimeFromET_20(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lastEyeSignalUpdateTimeFromET_20 = value;
	}

	inline static int32_t get_offset_of_lastEyeSignalUpdateTimeLocal_21() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___lastEyeSignalUpdateTimeLocal_21)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lastEyeSignalUpdateTimeLocal_21() const { return ___lastEyeSignalUpdateTimeLocal_21; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lastEyeSignalUpdateTimeLocal_21() { return &___lastEyeSignalUpdateTimeLocal_21; }
	inline void set_lastEyeSignalUpdateTimeLocal_21(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lastEyeSignalUpdateTimeLocal_21 = value;
	}

	inline static int32_t get_offset_of_U3CLookedAtEyeTargetU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___U3CLookedAtEyeTargetU3Ek__BackingField_24)); }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * get_U3CLookedAtEyeTargetU3Ek__BackingField_24() const { return ___U3CLookedAtEyeTargetU3Ek__BackingField_24; }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 ** get_address_of_U3CLookedAtEyeTargetU3Ek__BackingField_24() { return &___U3CLookedAtEyeTargetU3Ek__BackingField_24; }
	inline void set_U3CLookedAtEyeTargetU3Ek__BackingField_24(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * value)
	{
		___U3CLookedAtEyeTargetU3Ek__BackingField_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CLookedAtEyeTargetU3Ek__BackingField_24), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSelectedTargetU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___U3CSelectedTargetU3Ek__BackingField_25)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CSelectedTargetU3Ek__BackingField_25() const { return ___U3CSelectedTargetU3Ek__BackingField_25; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CSelectedTargetU3Ek__BackingField_25() { return &___U3CSelectedTargetU3Ek__BackingField_25; }
	inline void set_U3CSelectedTargetU3Ek__BackingField_25(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CSelectedTargetU3Ek__BackingField_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CSelectedTargetU3Ek__BackingField_25), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.FingerCursor
struct FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA  : public BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.FingerCursor::checkForGrabbables
	bool ___checkForGrabbables_25;
	// System.Single Microsoft.MixedReality.Toolkit.Input.FingerCursor::skinSurfaceOffset
	float ___skinSurfaceOffset_26;
	// System.Single Microsoft.MixedReality.Toolkit.Input.FingerCursor::alignWithSurfaceDistance
	float ___alignWithSurfaceDistance_27;
	// UnityEngine.Renderer Microsoft.MixedReality.Toolkit.Input.FingerCursor::indexFingerRingRenderer
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___indexFingerRingRenderer_28;
	// UnityEngine.MaterialPropertyBlock Microsoft.MixedReality.Toolkit.Input.FingerCursor::materialPropertyBlock
	MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * ___materialPropertyBlock_29;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.FingerCursor::proximityDistanceID
	int32_t ___proximityDistanceID_30;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.FingerCursor::fingerPadRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___fingerPadRotation_31;

public:
	inline static int32_t get_offset_of_checkForGrabbables_25() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___checkForGrabbables_25)); }
	inline bool get_checkForGrabbables_25() const { return ___checkForGrabbables_25; }
	inline bool* get_address_of_checkForGrabbables_25() { return &___checkForGrabbables_25; }
	inline void set_checkForGrabbables_25(bool value)
	{
		___checkForGrabbables_25 = value;
	}

	inline static int32_t get_offset_of_skinSurfaceOffset_26() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___skinSurfaceOffset_26)); }
	inline float get_skinSurfaceOffset_26() const { return ___skinSurfaceOffset_26; }
	inline float* get_address_of_skinSurfaceOffset_26() { return &___skinSurfaceOffset_26; }
	inline void set_skinSurfaceOffset_26(float value)
	{
		___skinSurfaceOffset_26 = value;
	}

	inline static int32_t get_offset_of_alignWithSurfaceDistance_27() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___alignWithSurfaceDistance_27)); }
	inline float get_alignWithSurfaceDistance_27() const { return ___alignWithSurfaceDistance_27; }
	inline float* get_address_of_alignWithSurfaceDistance_27() { return &___alignWithSurfaceDistance_27; }
	inline void set_alignWithSurfaceDistance_27(float value)
	{
		___alignWithSurfaceDistance_27 = value;
	}

	inline static int32_t get_offset_of_indexFingerRingRenderer_28() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___indexFingerRingRenderer_28)); }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * get_indexFingerRingRenderer_28() const { return ___indexFingerRingRenderer_28; }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** get_address_of_indexFingerRingRenderer_28() { return &___indexFingerRingRenderer_28; }
	inline void set_indexFingerRingRenderer_28(Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * value)
	{
		___indexFingerRingRenderer_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___indexFingerRingRenderer_28), (void*)value);
	}

	inline static int32_t get_offset_of_materialPropertyBlock_29() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___materialPropertyBlock_29)); }
	inline MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * get_materialPropertyBlock_29() const { return ___materialPropertyBlock_29; }
	inline MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 ** get_address_of_materialPropertyBlock_29() { return &___materialPropertyBlock_29; }
	inline void set_materialPropertyBlock_29(MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * value)
	{
		___materialPropertyBlock_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___materialPropertyBlock_29), (void*)value);
	}

	inline static int32_t get_offset_of_proximityDistanceID_30() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___proximityDistanceID_30)); }
	inline int32_t get_proximityDistanceID_30() const { return ___proximityDistanceID_30; }
	inline int32_t* get_address_of_proximityDistanceID_30() { return &___proximityDistanceID_30; }
	inline void set_proximityDistanceID_30(int32_t value)
	{
		___proximityDistanceID_30 = value;
	}

	inline static int32_t get_offset_of_fingerPadRotation_31() { return static_cast<int32_t>(offsetof(FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA, ___fingerPadRotation_31)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_fingerPadRotation_31() const { return ___fingerPadRotation_31; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_fingerPadRotation_31() { return &___fingerPadRotation_31; }
	inline void set_fingerPadRotation_31(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___fingerPadRotation_31 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GGVPointer
struct GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.GGVPointer::selectAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___selectAction_5;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.GGVPointer::poseAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___poseAction_6;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.GGVPointer::gazeProvider
	RuntimeObject* ___gazeProvider_7;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GGVPointer::sourcePosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___sourcePosition_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::isSelectPressed
	bool ___isSelectPressed_9;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.GGVPointer::lastControllerHandedness
	uint8_t ___lastControllerHandedness_10;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GGVPointer::controller
	RuntimeObject* ___controller_11;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.GGVPointer::pointerId
	uint32_t ___pointerId_12;
	// System.String Microsoft.MixedReality.Toolkit.Input.GGVPointer::pointerName
	String_t* ___pointerName_13;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GGVPointer::<InputSourceParent>k__BackingField
	RuntimeObject* ___U3CInputSourceParentU3Ek__BackingField_14;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.GGVPointer::<BaseCursor>k__BackingField
	RuntimeObject* ___U3CBaseCursorU3Ek__BackingField_15;
	// Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.GGVPointer::<CursorModifier>k__BackingField
	RuntimeObject* ___U3CCursorModifierU3Ek__BackingField_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::<IsActive>k__BackingField
	bool ___U3CIsActiveU3Ek__BackingField_17;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::<IsFocusLocked>k__BackingField
	bool ___U3CIsFocusLockedU3Ek__BackingField_18;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::<IsTargetPositionLockedOnFocusLock>k__BackingField
	bool ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19;
	// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.GGVPointer::<Rays>k__BackingField
	RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___U3CRaysU3Ek__BackingField_20;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.GGVPointer::<PrioritizedLayerMasksOverride>k__BackingField
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler Microsoft.MixedReality.Toolkit.Input.GGVPointer::<FocusTarget>k__BackingField
	RuntimeObject* ___U3CFocusTargetU3Ek__BackingField_22;
	// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.GGVPointer::<Result>k__BackingField
	RuntimeObject* ___U3CResultU3Ek__BackingField_23;
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.GGVPointer::<SceneQueryType>k__BackingField
	int32_t ___U3CSceneQueryTypeU3Ek__BackingField_24;

public:
	inline static int32_t get_offset_of_selectAction_5() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___selectAction_5)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_selectAction_5() const { return ___selectAction_5; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_selectAction_5() { return &___selectAction_5; }
	inline void set_selectAction_5(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___selectAction_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___selectAction_5))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_poseAction_6() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___poseAction_6)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_poseAction_6() const { return ___poseAction_6; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_poseAction_6() { return &___poseAction_6; }
	inline void set_poseAction_6(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___poseAction_6 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___poseAction_6))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_gazeProvider_7() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___gazeProvider_7)); }
	inline RuntimeObject* get_gazeProvider_7() const { return ___gazeProvider_7; }
	inline RuntimeObject** get_address_of_gazeProvider_7() { return &___gazeProvider_7; }
	inline void set_gazeProvider_7(RuntimeObject* value)
	{
		___gazeProvider_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeProvider_7), (void*)value);
	}

	inline static int32_t get_offset_of_sourcePosition_8() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___sourcePosition_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_sourcePosition_8() const { return ___sourcePosition_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_sourcePosition_8() { return &___sourcePosition_8; }
	inline void set_sourcePosition_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___sourcePosition_8 = value;
	}

	inline static int32_t get_offset_of_isSelectPressed_9() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___isSelectPressed_9)); }
	inline bool get_isSelectPressed_9() const { return ___isSelectPressed_9; }
	inline bool* get_address_of_isSelectPressed_9() { return &___isSelectPressed_9; }
	inline void set_isSelectPressed_9(bool value)
	{
		___isSelectPressed_9 = value;
	}

	inline static int32_t get_offset_of_lastControllerHandedness_10() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___lastControllerHandedness_10)); }
	inline uint8_t get_lastControllerHandedness_10() const { return ___lastControllerHandedness_10; }
	inline uint8_t* get_address_of_lastControllerHandedness_10() { return &___lastControllerHandedness_10; }
	inline void set_lastControllerHandedness_10(uint8_t value)
	{
		___lastControllerHandedness_10 = value;
	}

	inline static int32_t get_offset_of_controller_11() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___controller_11)); }
	inline RuntimeObject* get_controller_11() const { return ___controller_11; }
	inline RuntimeObject** get_address_of_controller_11() { return &___controller_11; }
	inline void set_controller_11(RuntimeObject* value)
	{
		___controller_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controller_11), (void*)value);
	}

	inline static int32_t get_offset_of_pointerId_12() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___pointerId_12)); }
	inline uint32_t get_pointerId_12() const { return ___pointerId_12; }
	inline uint32_t* get_address_of_pointerId_12() { return &___pointerId_12; }
	inline void set_pointerId_12(uint32_t value)
	{
		___pointerId_12 = value;
	}

	inline static int32_t get_offset_of_pointerName_13() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___pointerName_13)); }
	inline String_t* get_pointerName_13() const { return ___pointerName_13; }
	inline String_t** get_address_of_pointerName_13() { return &___pointerName_13; }
	inline void set_pointerName_13(String_t* value)
	{
		___pointerName_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerName_13), (void*)value);
	}

	inline static int32_t get_offset_of_U3CInputSourceParentU3Ek__BackingField_14() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CInputSourceParentU3Ek__BackingField_14)); }
	inline RuntimeObject* get_U3CInputSourceParentU3Ek__BackingField_14() const { return ___U3CInputSourceParentU3Ek__BackingField_14; }
	inline RuntimeObject** get_address_of_U3CInputSourceParentU3Ek__BackingField_14() { return &___U3CInputSourceParentU3Ek__BackingField_14; }
	inline void set_U3CInputSourceParentU3Ek__BackingField_14(RuntimeObject* value)
	{
		___U3CInputSourceParentU3Ek__BackingField_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceParentU3Ek__BackingField_14), (void*)value);
	}

	inline static int32_t get_offset_of_U3CBaseCursorU3Ek__BackingField_15() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CBaseCursorU3Ek__BackingField_15)); }
	inline RuntimeObject* get_U3CBaseCursorU3Ek__BackingField_15() const { return ___U3CBaseCursorU3Ek__BackingField_15; }
	inline RuntimeObject** get_address_of_U3CBaseCursorU3Ek__BackingField_15() { return &___U3CBaseCursorU3Ek__BackingField_15; }
	inline void set_U3CBaseCursorU3Ek__BackingField_15(RuntimeObject* value)
	{
		___U3CBaseCursorU3Ek__BackingField_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CBaseCursorU3Ek__BackingField_15), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCursorModifierU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CCursorModifierU3Ek__BackingField_16)); }
	inline RuntimeObject* get_U3CCursorModifierU3Ek__BackingField_16() const { return ___U3CCursorModifierU3Ek__BackingField_16; }
	inline RuntimeObject** get_address_of_U3CCursorModifierU3Ek__BackingField_16() { return &___U3CCursorModifierU3Ek__BackingField_16; }
	inline void set_U3CCursorModifierU3Ek__BackingField_16(RuntimeObject* value)
	{
		___U3CCursorModifierU3Ek__BackingField_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CCursorModifierU3Ek__BackingField_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsActiveU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CIsActiveU3Ek__BackingField_17)); }
	inline bool get_U3CIsActiveU3Ek__BackingField_17() const { return ___U3CIsActiveU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CIsActiveU3Ek__BackingField_17() { return &___U3CIsActiveU3Ek__BackingField_17; }
	inline void set_U3CIsActiveU3Ek__BackingField_17(bool value)
	{
		___U3CIsActiveU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3CIsFocusLockedU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CIsFocusLockedU3Ek__BackingField_18)); }
	inline bool get_U3CIsFocusLockedU3Ek__BackingField_18() const { return ___U3CIsFocusLockedU3Ek__BackingField_18; }
	inline bool* get_address_of_U3CIsFocusLockedU3Ek__BackingField_18() { return &___U3CIsFocusLockedU3Ek__BackingField_18; }
	inline void set_U3CIsFocusLockedU3Ek__BackingField_18(bool value)
	{
		___U3CIsFocusLockedU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19)); }
	inline bool get_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19() const { return ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19; }
	inline bool* get_address_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19() { return &___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19; }
	inline void set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19(bool value)
	{
		___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3CRaysU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CRaysU3Ek__BackingField_20)); }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* get_U3CRaysU3Ek__BackingField_20() const { return ___U3CRaysU3Ek__BackingField_20; }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8** get_address_of_U3CRaysU3Ek__BackingField_20() { return &___U3CRaysU3Ek__BackingField_20; }
	inline void set_U3CRaysU3Ek__BackingField_20(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* value)
	{
		___U3CRaysU3Ek__BackingField_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRaysU3Ek__BackingField_20), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21() const { return ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21() { return &___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21; }
	inline void set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21), (void*)value);
	}

	inline static int32_t get_offset_of_U3CFocusTargetU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CFocusTargetU3Ek__BackingField_22)); }
	inline RuntimeObject* get_U3CFocusTargetU3Ek__BackingField_22() const { return ___U3CFocusTargetU3Ek__BackingField_22; }
	inline RuntimeObject** get_address_of_U3CFocusTargetU3Ek__BackingField_22() { return &___U3CFocusTargetU3Ek__BackingField_22; }
	inline void set_U3CFocusTargetU3Ek__BackingField_22(RuntimeObject* value)
	{
		___U3CFocusTargetU3Ek__BackingField_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusTargetU3Ek__BackingField_22), (void*)value);
	}

	inline static int32_t get_offset_of_U3CResultU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CResultU3Ek__BackingField_23)); }
	inline RuntimeObject* get_U3CResultU3Ek__BackingField_23() const { return ___U3CResultU3Ek__BackingField_23; }
	inline RuntimeObject** get_address_of_U3CResultU3Ek__BackingField_23() { return &___U3CResultU3Ek__BackingField_23; }
	inline void set_U3CResultU3Ek__BackingField_23(RuntimeObject* value)
	{
		___U3CResultU3Ek__BackingField_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CResultU3Ek__BackingField_23), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSceneQueryTypeU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073, ___U3CSceneQueryTypeU3Ek__BackingField_24)); }
	inline int32_t get_U3CSceneQueryTypeU3Ek__BackingField_24() const { return ___U3CSceneQueryTypeU3Ek__BackingField_24; }
	inline int32_t* get_address_of_U3CSceneQueryTypeU3Ek__BackingField_24() { return &___U3CSceneQueryTypeU3Ek__BackingField_24; }
	inline void set_U3CSceneQueryTypeU3Ek__BackingField_24(int32_t value)
	{
		___U3CSceneQueryTypeU3Ek__BackingField_24 = value;
	}
};

struct GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_25;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_26;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnInputUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputUpPerfMarker_27;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnInputDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputDownPerfMarker_28;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_29;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnInputChangedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputChangedPerfMarker_30;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_25() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields, ___OnPreSceneQueryPerfMarker_25)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_25() const { return ___OnPreSceneQueryPerfMarker_25; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_25() { return &___OnPreSceneQueryPerfMarker_25; }
	inline void set_OnPreSceneQueryPerfMarker_25(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_25 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_26() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields, ___OnPostSceneQueryPerfMarker_26)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_26() const { return ___OnPostSceneQueryPerfMarker_26; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_26() { return &___OnPostSceneQueryPerfMarker_26; }
	inline void set_OnPostSceneQueryPerfMarker_26(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_26 = value;
	}

	inline static int32_t get_offset_of_OnInputUpPerfMarker_27() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields, ___OnInputUpPerfMarker_27)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputUpPerfMarker_27() const { return ___OnInputUpPerfMarker_27; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputUpPerfMarker_27() { return &___OnInputUpPerfMarker_27; }
	inline void set_OnInputUpPerfMarker_27(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputUpPerfMarker_27 = value;
	}

	inline static int32_t get_offset_of_OnInputDownPerfMarker_28() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields, ___OnInputDownPerfMarker_28)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputDownPerfMarker_28() const { return ___OnInputDownPerfMarker_28; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputDownPerfMarker_28() { return &___OnInputDownPerfMarker_28; }
	inline void set_OnInputDownPerfMarker_28(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputDownPerfMarker_28 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_29() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields, ___OnSourceLostPerfMarker_29)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_29() const { return ___OnSourceLostPerfMarker_29; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_29() { return &___OnSourceLostPerfMarker_29; }
	inline void set_OnSourceLostPerfMarker_29(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_29 = value;
	}

	inline static int32_t get_offset_of_OnInputChangedPerfMarker_30() { return static_cast<int32_t>(offsetof(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields, ___OnInputChangedPerfMarker_30)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputChangedPerfMarker_30() const { return ___OnInputChangedPerfMarker_30; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputChangedPerfMarker_30() { return &___OnInputChangedPerfMarker_30; }
	inline void set_OnInputChangedPerfMarker_30(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputChangedPerfMarker_30 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor
struct InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04  : public BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::ring
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___ring_25;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::dot
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___dot_26;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::distanceScaleFactor
	float ___distanceScaleFactor_27;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::defaultScale
	float ___defaultScale_28;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::downScale
	float ___downScale_29;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::upScale
	float ___upScale_30;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::scaleTime
	float ___scaleTime_31;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::timer
	float ___timer_32;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::isVisible
	bool ___isVisible_33;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::hasHover
	bool ___hasHover_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::hasHand
	bool ___hasHand_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::isDown
	bool ___isDown_36;
	// System.Single Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::ringDotTargetScale
	float ___ringDotTargetScale_37;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::initialScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialScale_38;

public:
	inline static int32_t get_offset_of_ring_25() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___ring_25)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_ring_25() const { return ___ring_25; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_ring_25() { return &___ring_25; }
	inline void set_ring_25(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___ring_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ring_25), (void*)value);
	}

	inline static int32_t get_offset_of_dot_26() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___dot_26)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_dot_26() const { return ___dot_26; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_dot_26() { return &___dot_26; }
	inline void set_dot_26(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___dot_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dot_26), (void*)value);
	}

	inline static int32_t get_offset_of_distanceScaleFactor_27() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___distanceScaleFactor_27)); }
	inline float get_distanceScaleFactor_27() const { return ___distanceScaleFactor_27; }
	inline float* get_address_of_distanceScaleFactor_27() { return &___distanceScaleFactor_27; }
	inline void set_distanceScaleFactor_27(float value)
	{
		___distanceScaleFactor_27 = value;
	}

	inline static int32_t get_offset_of_defaultScale_28() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___defaultScale_28)); }
	inline float get_defaultScale_28() const { return ___defaultScale_28; }
	inline float* get_address_of_defaultScale_28() { return &___defaultScale_28; }
	inline void set_defaultScale_28(float value)
	{
		___defaultScale_28 = value;
	}

	inline static int32_t get_offset_of_downScale_29() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___downScale_29)); }
	inline float get_downScale_29() const { return ___downScale_29; }
	inline float* get_address_of_downScale_29() { return &___downScale_29; }
	inline void set_downScale_29(float value)
	{
		___downScale_29 = value;
	}

	inline static int32_t get_offset_of_upScale_30() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___upScale_30)); }
	inline float get_upScale_30() const { return ___upScale_30; }
	inline float* get_address_of_upScale_30() { return &___upScale_30; }
	inline void set_upScale_30(float value)
	{
		___upScale_30 = value;
	}

	inline static int32_t get_offset_of_scaleTime_31() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___scaleTime_31)); }
	inline float get_scaleTime_31() const { return ___scaleTime_31; }
	inline float* get_address_of_scaleTime_31() { return &___scaleTime_31; }
	inline void set_scaleTime_31(float value)
	{
		___scaleTime_31 = value;
	}

	inline static int32_t get_offset_of_timer_32() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___timer_32)); }
	inline float get_timer_32() const { return ___timer_32; }
	inline float* get_address_of_timer_32() { return &___timer_32; }
	inline void set_timer_32(float value)
	{
		___timer_32 = value;
	}

	inline static int32_t get_offset_of_isVisible_33() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___isVisible_33)); }
	inline bool get_isVisible_33() const { return ___isVisible_33; }
	inline bool* get_address_of_isVisible_33() { return &___isVisible_33; }
	inline void set_isVisible_33(bool value)
	{
		___isVisible_33 = value;
	}

	inline static int32_t get_offset_of_hasHover_34() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___hasHover_34)); }
	inline bool get_hasHover_34() const { return ___hasHover_34; }
	inline bool* get_address_of_hasHover_34() { return &___hasHover_34; }
	inline void set_hasHover_34(bool value)
	{
		___hasHover_34 = value;
	}

	inline static int32_t get_offset_of_hasHand_35() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___hasHand_35)); }
	inline bool get_hasHand_35() const { return ___hasHand_35; }
	inline bool* get_address_of_hasHand_35() { return &___hasHand_35; }
	inline void set_hasHand_35(bool value)
	{
		___hasHand_35 = value;
	}

	inline static int32_t get_offset_of_isDown_36() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___isDown_36)); }
	inline bool get_isDown_36() const { return ___isDown_36; }
	inline bool* get_address_of_isDown_36() { return &___isDown_36; }
	inline void set_isDown_36(bool value)
	{
		___isDown_36 = value;
	}

	inline static int32_t get_offset_of_ringDotTargetScale_37() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___ringDotTargetScale_37)); }
	inline float get_ringDotTargetScale_37() const { return ___ringDotTargetScale_37; }
	inline float* get_address_of_ringDotTargetScale_37() { return &___ringDotTargetScale_37; }
	inline void set_ringDotTargetScale_37(float value)
	{
		___ringDotTargetScale_37 = value;
	}

	inline static int32_t get_offset_of_initialScale_38() { return static_cast<int32_t>(offsetof(InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04, ___initialScale_38)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialScale_38() const { return ___initialScale_38; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialScale_38() { return &___initialScale_38; }
	inline void set_initialScale_38(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialScale_38 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MeshCursor
struct MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2  : public BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum[] Microsoft.MixedReality.Toolkit.Input.MeshCursor::CursorStateData
	MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* ___CursorStateData_25;
	// UnityEngine.MeshRenderer Microsoft.MixedReality.Toolkit.Input.MeshCursor::TargetRenderer
	MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * ___TargetRenderer_26;

public:
	inline static int32_t get_offset_of_CursorStateData_25() { return static_cast<int32_t>(offsetof(MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2, ___CursorStateData_25)); }
	inline MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* get_CursorStateData_25() const { return ___CursorStateData_25; }
	inline MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0** get_address_of_CursorStateData_25() { return &___CursorStateData_25; }
	inline void set_CursorStateData_25(MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* value)
	{
		___CursorStateData_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CursorStateData_25), (void*)value);
	}

	inline static int32_t get_offset_of_TargetRenderer_26() { return static_cast<int32_t>(offsetof(MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2, ___TargetRenderer_26)); }
	inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * get_TargetRenderer_26() const { return ___TargetRenderer_26; }
	inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED ** get_address_of_TargetRenderer_26() { return &___TargetRenderer_26; }
	inline void set_TargetRenderer_26(MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * value)
	{
		___TargetRenderer_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TargetRenderer_26), (void*)value);
	}
};


// UnityEngine.UI.Graphic
struct Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8  : public UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70
{
public:
	// UnityEngine.Material UnityEngine.UI.Graphic::m_Material
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___m_Material_6;
	// UnityEngine.Color UnityEngine.UI.Graphic::m_Color
	Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___m_Color_7;
	// System.Boolean UnityEngine.UI.Graphic::m_SkipLayoutUpdate
	bool ___m_SkipLayoutUpdate_8;
	// System.Boolean UnityEngine.UI.Graphic::m_SkipMaterialUpdate
	bool ___m_SkipMaterialUpdate_9;
	// System.Boolean UnityEngine.UI.Graphic::m_RaycastTarget
	bool ___m_RaycastTarget_10;
	// UnityEngine.RectTransform UnityEngine.UI.Graphic::m_RectTransform
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___m_RectTransform_11;
	// UnityEngine.CanvasRenderer UnityEngine.UI.Graphic::m_CanvasRenderer
	CanvasRenderer_tB4D9C9FE77FD5C9C4546FC022D6E956960BC2B72 * ___m_CanvasRenderer_12;
	// UnityEngine.Canvas UnityEngine.UI.Graphic::m_Canvas
	Canvas_tBC28BF1DD8D8499A89B5781505833D3728CF8591 * ___m_Canvas_13;
	// System.Boolean UnityEngine.UI.Graphic::m_VertsDirty
	bool ___m_VertsDirty_14;
	// System.Boolean UnityEngine.UI.Graphic::m_MaterialDirty
	bool ___m_MaterialDirty_15;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyLayoutCallback
	UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___m_OnDirtyLayoutCallback_16;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyVertsCallback
	UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___m_OnDirtyVertsCallback_17;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyMaterialCallback
	UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___m_OnDirtyMaterialCallback_18;
	// UnityEngine.Mesh UnityEngine.UI.Graphic::m_CachedMesh
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___m_CachedMesh_21;
	// UnityEngine.Vector2[] UnityEngine.UI.Graphic::m_CachedUvs
	Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* ___m_CachedUvs_22;
	// UnityEngine.UI.CoroutineTween.TweenRunner`1<UnityEngine.UI.CoroutineTween.ColorTween> UnityEngine.UI.Graphic::m_ColorTweenRunner
	TweenRunner_1_t56CEB168ADE3739A1BDDBF258FDC759DF8927172 * ___m_ColorTweenRunner_23;
	// System.Boolean UnityEngine.UI.Graphic::<useLegacyMeshGeneration>k__BackingField
	bool ___U3CuseLegacyMeshGenerationU3Ek__BackingField_24;

public:
	inline static int32_t get_offset_of_m_Material_6() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_Material_6)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_m_Material_6() const { return ___m_Material_6; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_m_Material_6() { return &___m_Material_6; }
	inline void set_m_Material_6(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___m_Material_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Material_6), (void*)value);
	}

	inline static int32_t get_offset_of_m_Color_7() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_Color_7)); }
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  get_m_Color_7() const { return ___m_Color_7; }
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 * get_address_of_m_Color_7() { return &___m_Color_7; }
	inline void set_m_Color_7(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  value)
	{
		___m_Color_7 = value;
	}

	inline static int32_t get_offset_of_m_SkipLayoutUpdate_8() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_SkipLayoutUpdate_8)); }
	inline bool get_m_SkipLayoutUpdate_8() const { return ___m_SkipLayoutUpdate_8; }
	inline bool* get_address_of_m_SkipLayoutUpdate_8() { return &___m_SkipLayoutUpdate_8; }
	inline void set_m_SkipLayoutUpdate_8(bool value)
	{
		___m_SkipLayoutUpdate_8 = value;
	}

	inline static int32_t get_offset_of_m_SkipMaterialUpdate_9() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_SkipMaterialUpdate_9)); }
	inline bool get_m_SkipMaterialUpdate_9() const { return ___m_SkipMaterialUpdate_9; }
	inline bool* get_address_of_m_SkipMaterialUpdate_9() { return &___m_SkipMaterialUpdate_9; }
	inline void set_m_SkipMaterialUpdate_9(bool value)
	{
		___m_SkipMaterialUpdate_9 = value;
	}

	inline static int32_t get_offset_of_m_RaycastTarget_10() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_RaycastTarget_10)); }
	inline bool get_m_RaycastTarget_10() const { return ___m_RaycastTarget_10; }
	inline bool* get_address_of_m_RaycastTarget_10() { return &___m_RaycastTarget_10; }
	inline void set_m_RaycastTarget_10(bool value)
	{
		___m_RaycastTarget_10 = value;
	}

	inline static int32_t get_offset_of_m_RectTransform_11() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_RectTransform_11)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_m_RectTransform_11() const { return ___m_RectTransform_11; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_m_RectTransform_11() { return &___m_RectTransform_11; }
	inline void set_m_RectTransform_11(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___m_RectTransform_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_RectTransform_11), (void*)value);
	}

	inline static int32_t get_offset_of_m_CanvasRenderer_12() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_CanvasRenderer_12)); }
	inline CanvasRenderer_tB4D9C9FE77FD5C9C4546FC022D6E956960BC2B72 * get_m_CanvasRenderer_12() const { return ___m_CanvasRenderer_12; }
	inline CanvasRenderer_tB4D9C9FE77FD5C9C4546FC022D6E956960BC2B72 ** get_address_of_m_CanvasRenderer_12() { return &___m_CanvasRenderer_12; }
	inline void set_m_CanvasRenderer_12(CanvasRenderer_tB4D9C9FE77FD5C9C4546FC022D6E956960BC2B72 * value)
	{
		___m_CanvasRenderer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CanvasRenderer_12), (void*)value);
	}

	inline static int32_t get_offset_of_m_Canvas_13() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_Canvas_13)); }
	inline Canvas_tBC28BF1DD8D8499A89B5781505833D3728CF8591 * get_m_Canvas_13() const { return ___m_Canvas_13; }
	inline Canvas_tBC28BF1DD8D8499A89B5781505833D3728CF8591 ** get_address_of_m_Canvas_13() { return &___m_Canvas_13; }
	inline void set_m_Canvas_13(Canvas_tBC28BF1DD8D8499A89B5781505833D3728CF8591 * value)
	{
		___m_Canvas_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Canvas_13), (void*)value);
	}

	inline static int32_t get_offset_of_m_VertsDirty_14() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_VertsDirty_14)); }
	inline bool get_m_VertsDirty_14() const { return ___m_VertsDirty_14; }
	inline bool* get_address_of_m_VertsDirty_14() { return &___m_VertsDirty_14; }
	inline void set_m_VertsDirty_14(bool value)
	{
		___m_VertsDirty_14 = value;
	}

	inline static int32_t get_offset_of_m_MaterialDirty_15() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_MaterialDirty_15)); }
	inline bool get_m_MaterialDirty_15() const { return ___m_MaterialDirty_15; }
	inline bool* get_address_of_m_MaterialDirty_15() { return &___m_MaterialDirty_15; }
	inline void set_m_MaterialDirty_15(bool value)
	{
		___m_MaterialDirty_15 = value;
	}

	inline static int32_t get_offset_of_m_OnDirtyLayoutCallback_16() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_OnDirtyLayoutCallback_16)); }
	inline UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * get_m_OnDirtyLayoutCallback_16() const { return ___m_OnDirtyLayoutCallback_16; }
	inline UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 ** get_address_of_m_OnDirtyLayoutCallback_16() { return &___m_OnDirtyLayoutCallback_16; }
	inline void set_m_OnDirtyLayoutCallback_16(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * value)
	{
		___m_OnDirtyLayoutCallback_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_OnDirtyLayoutCallback_16), (void*)value);
	}

	inline static int32_t get_offset_of_m_OnDirtyVertsCallback_17() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_OnDirtyVertsCallback_17)); }
	inline UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * get_m_OnDirtyVertsCallback_17() const { return ___m_OnDirtyVertsCallback_17; }
	inline UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 ** get_address_of_m_OnDirtyVertsCallback_17() { return &___m_OnDirtyVertsCallback_17; }
	inline void set_m_OnDirtyVertsCallback_17(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * value)
	{
		___m_OnDirtyVertsCallback_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_OnDirtyVertsCallback_17), (void*)value);
	}

	inline static int32_t get_offset_of_m_OnDirtyMaterialCallback_18() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_OnDirtyMaterialCallback_18)); }
	inline UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * get_m_OnDirtyMaterialCallback_18() const { return ___m_OnDirtyMaterialCallback_18; }
	inline UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 ** get_address_of_m_OnDirtyMaterialCallback_18() { return &___m_OnDirtyMaterialCallback_18; }
	inline void set_m_OnDirtyMaterialCallback_18(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * value)
	{
		___m_OnDirtyMaterialCallback_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_OnDirtyMaterialCallback_18), (void*)value);
	}

	inline static int32_t get_offset_of_m_CachedMesh_21() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_CachedMesh_21)); }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * get_m_CachedMesh_21() const { return ___m_CachedMesh_21; }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C ** get_address_of_m_CachedMesh_21() { return &___m_CachedMesh_21; }
	inline void set_m_CachedMesh_21(Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * value)
	{
		___m_CachedMesh_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CachedMesh_21), (void*)value);
	}

	inline static int32_t get_offset_of_m_CachedUvs_22() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_CachedUvs_22)); }
	inline Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* get_m_CachedUvs_22() const { return ___m_CachedUvs_22; }
	inline Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6** get_address_of_m_CachedUvs_22() { return &___m_CachedUvs_22; }
	inline void set_m_CachedUvs_22(Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* value)
	{
		___m_CachedUvs_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CachedUvs_22), (void*)value);
	}

	inline static int32_t get_offset_of_m_ColorTweenRunner_23() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___m_ColorTweenRunner_23)); }
	inline TweenRunner_1_t56CEB168ADE3739A1BDDBF258FDC759DF8927172 * get_m_ColorTweenRunner_23() const { return ___m_ColorTweenRunner_23; }
	inline TweenRunner_1_t56CEB168ADE3739A1BDDBF258FDC759DF8927172 ** get_address_of_m_ColorTweenRunner_23() { return &___m_ColorTweenRunner_23; }
	inline void set_m_ColorTweenRunner_23(TweenRunner_1_t56CEB168ADE3739A1BDDBF258FDC759DF8927172 * value)
	{
		___m_ColorTweenRunner_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ColorTweenRunner_23), (void*)value);
	}

	inline static int32_t get_offset_of_U3CuseLegacyMeshGenerationU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8, ___U3CuseLegacyMeshGenerationU3Ek__BackingField_24)); }
	inline bool get_U3CuseLegacyMeshGenerationU3Ek__BackingField_24() const { return ___U3CuseLegacyMeshGenerationU3Ek__BackingField_24; }
	inline bool* get_address_of_U3CuseLegacyMeshGenerationU3Ek__BackingField_24() { return &___U3CuseLegacyMeshGenerationU3Ek__BackingField_24; }
	inline void set_U3CuseLegacyMeshGenerationU3Ek__BackingField_24(bool value)
	{
		___U3CuseLegacyMeshGenerationU3Ek__BackingField_24 = value;
	}
};

struct Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8_StaticFields
{
public:
	// UnityEngine.Material UnityEngine.UI.Graphic::s_DefaultUI
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___s_DefaultUI_4;
	// UnityEngine.Texture2D UnityEngine.UI.Graphic::s_WhiteTexture
	Texture2D_tBBF96AC337723E2EF156DF17E09D4379FD05DE1C * ___s_WhiteTexture_5;
	// UnityEngine.Mesh UnityEngine.UI.Graphic::s_Mesh
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___s_Mesh_19;
	// UnityEngine.UI.VertexHelper UnityEngine.UI.Graphic::s_VertexHelper
	VertexHelper_t27373EA2CF0F5810EC8CF873D0A6D6C0B23DAC3F * ___s_VertexHelper_20;

public:
	inline static int32_t get_offset_of_s_DefaultUI_4() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8_StaticFields, ___s_DefaultUI_4)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_s_DefaultUI_4() const { return ___s_DefaultUI_4; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_s_DefaultUI_4() { return &___s_DefaultUI_4; }
	inline void set_s_DefaultUI_4(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___s_DefaultUI_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultUI_4), (void*)value);
	}

	inline static int32_t get_offset_of_s_WhiteTexture_5() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8_StaticFields, ___s_WhiteTexture_5)); }
	inline Texture2D_tBBF96AC337723E2EF156DF17E09D4379FD05DE1C * get_s_WhiteTexture_5() const { return ___s_WhiteTexture_5; }
	inline Texture2D_tBBF96AC337723E2EF156DF17E09D4379FD05DE1C ** get_address_of_s_WhiteTexture_5() { return &___s_WhiteTexture_5; }
	inline void set_s_WhiteTexture_5(Texture2D_tBBF96AC337723E2EF156DF17E09D4379FD05DE1C * value)
	{
		___s_WhiteTexture_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_WhiteTexture_5), (void*)value);
	}

	inline static int32_t get_offset_of_s_Mesh_19() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8_StaticFields, ___s_Mesh_19)); }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * get_s_Mesh_19() const { return ___s_Mesh_19; }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C ** get_address_of_s_Mesh_19() { return &___s_Mesh_19; }
	inline void set_s_Mesh_19(Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * value)
	{
		___s_Mesh_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_Mesh_19), (void*)value);
	}

	inline static int32_t get_offset_of_s_VertexHelper_20() { return static_cast<int32_t>(offsetof(Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8_StaticFields, ___s_VertexHelper_20)); }
	inline VertexHelper_t27373EA2CF0F5810EC8CF873D0A6D6C0B23DAC3F * get_s_VertexHelper_20() const { return ___s_VertexHelper_20; }
	inline VertexHelper_t27373EA2CF0F5810EC8CF873D0A6D6C0B23DAC3F ** get_address_of_s_VertexHelper_20() { return &___s_VertexHelper_20; }
	inline void set_s_VertexHelper_20(VertexHelper_t27373EA2CF0F5810EC8CF873D0A6D6C0B23DAC3F * value)
	{
		___s_VertexHelper_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_VertexHelper_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer
struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7  : public ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::cursorPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursorPrefab_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::disableCursorOnStart
	bool ___disableCursorOnStart_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::setCursorVisibilityOnSourceDetected
	bool ___setCursorVisibilityOnSourceDetected_15;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::cursorInstance
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursorInstance_16;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::raycastOrigin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___raycastOrigin_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::activeHoldAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___activeHoldAction_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___pointerAction_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::grabAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___grabAction_20;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsGrabPressed
	bool ___IsGrabPressed_21;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::requiresHoldAction
	bool ___requiresHoldAction_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::requiresActionBeforeEnabling
	bool ___requiresActionBeforeEnabling_23;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsSelectPressed
	bool ___IsSelectPressed_24;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::HasSelectPressedOnce
	bool ___HasSelectPressedOnce_25;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsHoldPressed
	bool ___IsHoldPressed_26;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::isCursorInstantiatedFromPrefab
	bool ___isCursorInstantiatedFromPrefab_27;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerId
	uint32_t ___pointerId_29;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::basePointerName
	String_t* ___basePointerName_30;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerName
	String_t* ___pointerName_31;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<InputSourceParent>k__BackingField
	RuntimeObject* ___U3CInputSourceParentU3Ek__BackingField_32;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<BaseCursor>k__BackingField
	RuntimeObject* ___U3CBaseCursorU3Ek__BackingField_33;
	// Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<CursorModifier>k__BackingField
	RuntimeObject* ___U3CCursorModifierU3Ek__BackingField_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsActive>k__BackingField
	bool ___U3CIsActiveU3Ek__BackingField_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsFocusLocked>k__BackingField
	bool ___U3CIsFocusLockedU3Ek__BackingField_36;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsTargetPositionLockedOnFocusLock>k__BackingField
	bool ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::overrideGlobalPointerExtent
	bool ___overrideGlobalPointerExtent_38;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerExtent
	float ___pointerExtent_39;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::defaultPointerExtent
	float ___defaultPointerExtent_40;
	// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<Rays>k__BackingField
	RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___U3CRaysU3Ek__BackingField_41;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<PrioritizedLayerMasksOverride>k__BackingField
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<FocusTarget>k__BackingField
	RuntimeObject* ___U3CFocusTargetU3Ek__BackingField_43;
	// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<Result>k__BackingField
	RuntimeObject* ___U3CResultU3Ek__BackingField_44;
	// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<RayStabilizer>k__BackingField
	RuntimeObject* ___U3CRayStabilizerU3Ek__BackingField_45;
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<SceneQueryType>k__BackingField
	int32_t ___U3CSceneQueryTypeU3Ek__BackingField_46;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::sphereCastRadius
	float ___sphereCastRadius_47;

public:
	inline static int32_t get_offset_of_cursorPrefab_13() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___cursorPrefab_13)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_cursorPrefab_13() const { return ___cursorPrefab_13; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_cursorPrefab_13() { return &___cursorPrefab_13; }
	inline void set_cursorPrefab_13(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___cursorPrefab_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cursorPrefab_13), (void*)value);
	}

	inline static int32_t get_offset_of_disableCursorOnStart_14() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___disableCursorOnStart_14)); }
	inline bool get_disableCursorOnStart_14() const { return ___disableCursorOnStart_14; }
	inline bool* get_address_of_disableCursorOnStart_14() { return &___disableCursorOnStart_14; }
	inline void set_disableCursorOnStart_14(bool value)
	{
		___disableCursorOnStart_14 = value;
	}

	inline static int32_t get_offset_of_setCursorVisibilityOnSourceDetected_15() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___setCursorVisibilityOnSourceDetected_15)); }
	inline bool get_setCursorVisibilityOnSourceDetected_15() const { return ___setCursorVisibilityOnSourceDetected_15; }
	inline bool* get_address_of_setCursorVisibilityOnSourceDetected_15() { return &___setCursorVisibilityOnSourceDetected_15; }
	inline void set_setCursorVisibilityOnSourceDetected_15(bool value)
	{
		___setCursorVisibilityOnSourceDetected_15 = value;
	}

	inline static int32_t get_offset_of_cursorInstance_16() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___cursorInstance_16)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_cursorInstance_16() const { return ___cursorInstance_16; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_cursorInstance_16() { return &___cursorInstance_16; }
	inline void set_cursorInstance_16(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___cursorInstance_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cursorInstance_16), (void*)value);
	}

	inline static int32_t get_offset_of_raycastOrigin_17() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___raycastOrigin_17)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_raycastOrigin_17() const { return ___raycastOrigin_17; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_raycastOrigin_17() { return &___raycastOrigin_17; }
	inline void set_raycastOrigin_17(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___raycastOrigin_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastOrigin_17), (void*)value);
	}

	inline static int32_t get_offset_of_activeHoldAction_18() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___activeHoldAction_18)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_activeHoldAction_18() const { return ___activeHoldAction_18; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_activeHoldAction_18() { return &___activeHoldAction_18; }
	inline void set_activeHoldAction_18(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___activeHoldAction_18 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___activeHoldAction_18))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_pointerAction_19() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerAction_19)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_pointerAction_19() const { return ___pointerAction_19; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_pointerAction_19() { return &___pointerAction_19; }
	inline void set_pointerAction_19(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___pointerAction_19 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___pointerAction_19))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_grabAction_20() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___grabAction_20)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_grabAction_20() const { return ___grabAction_20; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_grabAction_20() { return &___grabAction_20; }
	inline void set_grabAction_20(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___grabAction_20 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___grabAction_20))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_IsGrabPressed_21() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsGrabPressed_21)); }
	inline bool get_IsGrabPressed_21() const { return ___IsGrabPressed_21; }
	inline bool* get_address_of_IsGrabPressed_21() { return &___IsGrabPressed_21; }
	inline void set_IsGrabPressed_21(bool value)
	{
		___IsGrabPressed_21 = value;
	}

	inline static int32_t get_offset_of_requiresHoldAction_22() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___requiresHoldAction_22)); }
	inline bool get_requiresHoldAction_22() const { return ___requiresHoldAction_22; }
	inline bool* get_address_of_requiresHoldAction_22() { return &___requiresHoldAction_22; }
	inline void set_requiresHoldAction_22(bool value)
	{
		___requiresHoldAction_22 = value;
	}

	inline static int32_t get_offset_of_requiresActionBeforeEnabling_23() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___requiresActionBeforeEnabling_23)); }
	inline bool get_requiresActionBeforeEnabling_23() const { return ___requiresActionBeforeEnabling_23; }
	inline bool* get_address_of_requiresActionBeforeEnabling_23() { return &___requiresActionBeforeEnabling_23; }
	inline void set_requiresActionBeforeEnabling_23(bool value)
	{
		___requiresActionBeforeEnabling_23 = value;
	}

	inline static int32_t get_offset_of_IsSelectPressed_24() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsSelectPressed_24)); }
	inline bool get_IsSelectPressed_24() const { return ___IsSelectPressed_24; }
	inline bool* get_address_of_IsSelectPressed_24() { return &___IsSelectPressed_24; }
	inline void set_IsSelectPressed_24(bool value)
	{
		___IsSelectPressed_24 = value;
	}

	inline static int32_t get_offset_of_HasSelectPressedOnce_25() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___HasSelectPressedOnce_25)); }
	inline bool get_HasSelectPressedOnce_25() const { return ___HasSelectPressedOnce_25; }
	inline bool* get_address_of_HasSelectPressedOnce_25() { return &___HasSelectPressedOnce_25; }
	inline void set_HasSelectPressedOnce_25(bool value)
	{
		___HasSelectPressedOnce_25 = value;
	}

	inline static int32_t get_offset_of_IsHoldPressed_26() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsHoldPressed_26)); }
	inline bool get_IsHoldPressed_26() const { return ___IsHoldPressed_26; }
	inline bool* get_address_of_IsHoldPressed_26() { return &___IsHoldPressed_26; }
	inline void set_IsHoldPressed_26(bool value)
	{
		___IsHoldPressed_26 = value;
	}

	inline static int32_t get_offset_of_isCursorInstantiatedFromPrefab_27() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___isCursorInstantiatedFromPrefab_27)); }
	inline bool get_isCursorInstantiatedFromPrefab_27() const { return ___isCursorInstantiatedFromPrefab_27; }
	inline bool* get_address_of_isCursorInstantiatedFromPrefab_27() { return &___isCursorInstantiatedFromPrefab_27; }
	inline void set_isCursorInstantiatedFromPrefab_27(bool value)
	{
		___isCursorInstantiatedFromPrefab_27 = value;
	}

	inline static int32_t get_offset_of_pointerId_29() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerId_29)); }
	inline uint32_t get_pointerId_29() const { return ___pointerId_29; }
	inline uint32_t* get_address_of_pointerId_29() { return &___pointerId_29; }
	inline void set_pointerId_29(uint32_t value)
	{
		___pointerId_29 = value;
	}

	inline static int32_t get_offset_of_basePointerName_30() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___basePointerName_30)); }
	inline String_t* get_basePointerName_30() const { return ___basePointerName_30; }
	inline String_t** get_address_of_basePointerName_30() { return &___basePointerName_30; }
	inline void set_basePointerName_30(String_t* value)
	{
		___basePointerName_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___basePointerName_30), (void*)value);
	}

	inline static int32_t get_offset_of_pointerName_31() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerName_31)); }
	inline String_t* get_pointerName_31() const { return ___pointerName_31; }
	inline String_t** get_address_of_pointerName_31() { return &___pointerName_31; }
	inline void set_pointerName_31(String_t* value)
	{
		___pointerName_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerName_31), (void*)value);
	}

	inline static int32_t get_offset_of_U3CInputSourceParentU3Ek__BackingField_32() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CInputSourceParentU3Ek__BackingField_32)); }
	inline RuntimeObject* get_U3CInputSourceParentU3Ek__BackingField_32() const { return ___U3CInputSourceParentU3Ek__BackingField_32; }
	inline RuntimeObject** get_address_of_U3CInputSourceParentU3Ek__BackingField_32() { return &___U3CInputSourceParentU3Ek__BackingField_32; }
	inline void set_U3CInputSourceParentU3Ek__BackingField_32(RuntimeObject* value)
	{
		___U3CInputSourceParentU3Ek__BackingField_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceParentU3Ek__BackingField_32), (void*)value);
	}

	inline static int32_t get_offset_of_U3CBaseCursorU3Ek__BackingField_33() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CBaseCursorU3Ek__BackingField_33)); }
	inline RuntimeObject* get_U3CBaseCursorU3Ek__BackingField_33() const { return ___U3CBaseCursorU3Ek__BackingField_33; }
	inline RuntimeObject** get_address_of_U3CBaseCursorU3Ek__BackingField_33() { return &___U3CBaseCursorU3Ek__BackingField_33; }
	inline void set_U3CBaseCursorU3Ek__BackingField_33(RuntimeObject* value)
	{
		___U3CBaseCursorU3Ek__BackingField_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CBaseCursorU3Ek__BackingField_33), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCursorModifierU3Ek__BackingField_34() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CCursorModifierU3Ek__BackingField_34)); }
	inline RuntimeObject* get_U3CCursorModifierU3Ek__BackingField_34() const { return ___U3CCursorModifierU3Ek__BackingField_34; }
	inline RuntimeObject** get_address_of_U3CCursorModifierU3Ek__BackingField_34() { return &___U3CCursorModifierU3Ek__BackingField_34; }
	inline void set_U3CCursorModifierU3Ek__BackingField_34(RuntimeObject* value)
	{
		___U3CCursorModifierU3Ek__BackingField_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CCursorModifierU3Ek__BackingField_34), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsActiveU3Ek__BackingField_35() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsActiveU3Ek__BackingField_35)); }
	inline bool get_U3CIsActiveU3Ek__BackingField_35() const { return ___U3CIsActiveU3Ek__BackingField_35; }
	inline bool* get_address_of_U3CIsActiveU3Ek__BackingField_35() { return &___U3CIsActiveU3Ek__BackingField_35; }
	inline void set_U3CIsActiveU3Ek__BackingField_35(bool value)
	{
		___U3CIsActiveU3Ek__BackingField_35 = value;
	}

	inline static int32_t get_offset_of_U3CIsFocusLockedU3Ek__BackingField_36() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsFocusLockedU3Ek__BackingField_36)); }
	inline bool get_U3CIsFocusLockedU3Ek__BackingField_36() const { return ___U3CIsFocusLockedU3Ek__BackingField_36; }
	inline bool* get_address_of_U3CIsFocusLockedU3Ek__BackingField_36() { return &___U3CIsFocusLockedU3Ek__BackingField_36; }
	inline void set_U3CIsFocusLockedU3Ek__BackingField_36(bool value)
	{
		___U3CIsFocusLockedU3Ek__BackingField_36 = value;
	}

	inline static int32_t get_offset_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37)); }
	inline bool get_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() const { return ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37; }
	inline bool* get_address_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() { return &___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37; }
	inline void set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37(bool value)
	{
		___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37 = value;
	}

	inline static int32_t get_offset_of_overrideGlobalPointerExtent_38() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___overrideGlobalPointerExtent_38)); }
	inline bool get_overrideGlobalPointerExtent_38() const { return ___overrideGlobalPointerExtent_38; }
	inline bool* get_address_of_overrideGlobalPointerExtent_38() { return &___overrideGlobalPointerExtent_38; }
	inline void set_overrideGlobalPointerExtent_38(bool value)
	{
		___overrideGlobalPointerExtent_38 = value;
	}

	inline static int32_t get_offset_of_pointerExtent_39() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerExtent_39)); }
	inline float get_pointerExtent_39() const { return ___pointerExtent_39; }
	inline float* get_address_of_pointerExtent_39() { return &___pointerExtent_39; }
	inline void set_pointerExtent_39(float value)
	{
		___pointerExtent_39 = value;
	}

	inline static int32_t get_offset_of_defaultPointerExtent_40() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___defaultPointerExtent_40)); }
	inline float get_defaultPointerExtent_40() const { return ___defaultPointerExtent_40; }
	inline float* get_address_of_defaultPointerExtent_40() { return &___defaultPointerExtent_40; }
	inline void set_defaultPointerExtent_40(float value)
	{
		___defaultPointerExtent_40 = value;
	}

	inline static int32_t get_offset_of_U3CRaysU3Ek__BackingField_41() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CRaysU3Ek__BackingField_41)); }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* get_U3CRaysU3Ek__BackingField_41() const { return ___U3CRaysU3Ek__BackingField_41; }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8** get_address_of_U3CRaysU3Ek__BackingField_41() { return &___U3CRaysU3Ek__BackingField_41; }
	inline void set_U3CRaysU3Ek__BackingField_41(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* value)
	{
		___U3CRaysU3Ek__BackingField_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRaysU3Ek__BackingField_41), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() const { return ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() { return &___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42; }
	inline void set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42), (void*)value);
	}

	inline static int32_t get_offset_of_U3CFocusTargetU3Ek__BackingField_43() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CFocusTargetU3Ek__BackingField_43)); }
	inline RuntimeObject* get_U3CFocusTargetU3Ek__BackingField_43() const { return ___U3CFocusTargetU3Ek__BackingField_43; }
	inline RuntimeObject** get_address_of_U3CFocusTargetU3Ek__BackingField_43() { return &___U3CFocusTargetU3Ek__BackingField_43; }
	inline void set_U3CFocusTargetU3Ek__BackingField_43(RuntimeObject* value)
	{
		___U3CFocusTargetU3Ek__BackingField_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusTargetU3Ek__BackingField_43), (void*)value);
	}

	inline static int32_t get_offset_of_U3CResultU3Ek__BackingField_44() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CResultU3Ek__BackingField_44)); }
	inline RuntimeObject* get_U3CResultU3Ek__BackingField_44() const { return ___U3CResultU3Ek__BackingField_44; }
	inline RuntimeObject** get_address_of_U3CResultU3Ek__BackingField_44() { return &___U3CResultU3Ek__BackingField_44; }
	inline void set_U3CResultU3Ek__BackingField_44(RuntimeObject* value)
	{
		___U3CResultU3Ek__BackingField_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CResultU3Ek__BackingField_44), (void*)value);
	}

	inline static int32_t get_offset_of_U3CRayStabilizerU3Ek__BackingField_45() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CRayStabilizerU3Ek__BackingField_45)); }
	inline RuntimeObject* get_U3CRayStabilizerU3Ek__BackingField_45() const { return ___U3CRayStabilizerU3Ek__BackingField_45; }
	inline RuntimeObject** get_address_of_U3CRayStabilizerU3Ek__BackingField_45() { return &___U3CRayStabilizerU3Ek__BackingField_45; }
	inline void set_U3CRayStabilizerU3Ek__BackingField_45(RuntimeObject* value)
	{
		___U3CRayStabilizerU3Ek__BackingField_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRayStabilizerU3Ek__BackingField_45), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSceneQueryTypeU3Ek__BackingField_46() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CSceneQueryTypeU3Ek__BackingField_46)); }
	inline int32_t get_U3CSceneQueryTypeU3Ek__BackingField_46() const { return ___U3CSceneQueryTypeU3Ek__BackingField_46; }
	inline int32_t* get_address_of_U3CSceneQueryTypeU3Ek__BackingField_46() { return &___U3CSceneQueryTypeU3Ek__BackingField_46; }
	inline void set_U3CSceneQueryTypeU3Ek__BackingField_46(int32_t value)
	{
		___U3CSceneQueryTypeU3Ek__BackingField_46 = value;
	}

	inline static int32_t get_offset_of_sphereCastRadius_47() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___sphereCastRadius_47)); }
	inline float get_sphereCastRadius_47() const { return ___sphereCastRadius_47; }
	inline float* get_address_of_sphereCastRadius_47() { return &___sphereCastRadius_47; }
	inline void set_sphereCastRadius_47(float value)
	{
		___sphereCastRadius_47 = value;
	}
};

struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::SetCursorPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___SetCursorPerfMarker_28;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_48;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_49;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnInputUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputUpPerfMarker_50;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnInputDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputDownPerfMarker_51;

public:
	inline static int32_t get_offset_of_SetCursorPerfMarker_28() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___SetCursorPerfMarker_28)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_SetCursorPerfMarker_28() const { return ___SetCursorPerfMarker_28; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_SetCursorPerfMarker_28() { return &___SetCursorPerfMarker_28; }
	inline void set_SetCursorPerfMarker_28(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___SetCursorPerfMarker_28 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_48() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnPostSceneQueryPerfMarker_48)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_48() const { return ___OnPostSceneQueryPerfMarker_48; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_48() { return &___OnPostSceneQueryPerfMarker_48; }
	inline void set_OnPostSceneQueryPerfMarker_48(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_48 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_49() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnSourceLostPerfMarker_49)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_49() const { return ___OnSourceLostPerfMarker_49; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_49() { return &___OnSourceLostPerfMarker_49; }
	inline void set_OnSourceLostPerfMarker_49(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_49 = value;
	}

	inline static int32_t get_offset_of_OnInputUpPerfMarker_50() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnInputUpPerfMarker_50)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputUpPerfMarker_50() const { return ___OnInputUpPerfMarker_50; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputUpPerfMarker_50() { return &___OnInputUpPerfMarker_50; }
	inline void set_OnInputUpPerfMarker_50(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputUpPerfMarker_50 = value;
	}

	inline static int32_t get_offset_of_OnInputDownPerfMarker_51() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnInputDownPerfMarker_51)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputDownPerfMarker_51() const { return ___OnInputDownPerfMarker_51; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputDownPerfMarker_51() { return &___OnInputDownPerfMarker_51; }
	inline void set_OnInputDownPerfMarker_51(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputDownPerfMarker_51 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.DictationHandler
struct DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F  : public BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.DictationHandler::initialSilenceTimeout
	float ___initialSilenceTimeout_7;
	// System.Single Microsoft.MixedReality.Toolkit.Input.DictationHandler::autoSilenceTimeout
	float ___autoSilenceTimeout_8;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.DictationHandler::recordingTime
	int32_t ___recordingTime_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.DictationHandler::startRecordingOnStart
	bool ___startRecordingOnStart_10;
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent Microsoft.MixedReality.Toolkit.Input.DictationHandler::OnDictationHypothesis
	StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * ___OnDictationHypothesis_11;
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent Microsoft.MixedReality.Toolkit.Input.DictationHandler::OnDictationResult
	StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * ___OnDictationResult_12;
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent Microsoft.MixedReality.Toolkit.Input.DictationHandler::OnDictationComplete
	StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * ___OnDictationComplete_13;
	// Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent Microsoft.MixedReality.Toolkit.Input.DictationHandler::OnDictationError
	StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * ___OnDictationError_14;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem Microsoft.MixedReality.Toolkit.Input.DictationHandler::dictationSystem
	RuntimeObject* ___dictationSystem_15;

public:
	inline static int32_t get_offset_of_initialSilenceTimeout_7() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___initialSilenceTimeout_7)); }
	inline float get_initialSilenceTimeout_7() const { return ___initialSilenceTimeout_7; }
	inline float* get_address_of_initialSilenceTimeout_7() { return &___initialSilenceTimeout_7; }
	inline void set_initialSilenceTimeout_7(float value)
	{
		___initialSilenceTimeout_7 = value;
	}

	inline static int32_t get_offset_of_autoSilenceTimeout_8() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___autoSilenceTimeout_8)); }
	inline float get_autoSilenceTimeout_8() const { return ___autoSilenceTimeout_8; }
	inline float* get_address_of_autoSilenceTimeout_8() { return &___autoSilenceTimeout_8; }
	inline void set_autoSilenceTimeout_8(float value)
	{
		___autoSilenceTimeout_8 = value;
	}

	inline static int32_t get_offset_of_recordingTime_9() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___recordingTime_9)); }
	inline int32_t get_recordingTime_9() const { return ___recordingTime_9; }
	inline int32_t* get_address_of_recordingTime_9() { return &___recordingTime_9; }
	inline void set_recordingTime_9(int32_t value)
	{
		___recordingTime_9 = value;
	}

	inline static int32_t get_offset_of_startRecordingOnStart_10() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___startRecordingOnStart_10)); }
	inline bool get_startRecordingOnStart_10() const { return ___startRecordingOnStart_10; }
	inline bool* get_address_of_startRecordingOnStart_10() { return &___startRecordingOnStart_10; }
	inline void set_startRecordingOnStart_10(bool value)
	{
		___startRecordingOnStart_10 = value;
	}

	inline static int32_t get_offset_of_OnDictationHypothesis_11() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___OnDictationHypothesis_11)); }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * get_OnDictationHypothesis_11() const { return ___OnDictationHypothesis_11; }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 ** get_address_of_OnDictationHypothesis_11() { return &___OnDictationHypothesis_11; }
	inline void set_OnDictationHypothesis_11(StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * value)
	{
		___OnDictationHypothesis_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnDictationHypothesis_11), (void*)value);
	}

	inline static int32_t get_offset_of_OnDictationResult_12() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___OnDictationResult_12)); }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * get_OnDictationResult_12() const { return ___OnDictationResult_12; }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 ** get_address_of_OnDictationResult_12() { return &___OnDictationResult_12; }
	inline void set_OnDictationResult_12(StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * value)
	{
		___OnDictationResult_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnDictationResult_12), (void*)value);
	}

	inline static int32_t get_offset_of_OnDictationComplete_13() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___OnDictationComplete_13)); }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * get_OnDictationComplete_13() const { return ___OnDictationComplete_13; }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 ** get_address_of_OnDictationComplete_13() { return &___OnDictationComplete_13; }
	inline void set_OnDictationComplete_13(StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * value)
	{
		___OnDictationComplete_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnDictationComplete_13), (void*)value);
	}

	inline static int32_t get_offset_of_OnDictationError_14() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___OnDictationError_14)); }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * get_OnDictationError_14() const { return ___OnDictationError_14; }
	inline StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 ** get_address_of_OnDictationError_14() { return &___OnDictationError_14; }
	inline void set_OnDictationError_14(StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * value)
	{
		___OnDictationError_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnDictationError_14), (void*)value);
	}

	inline static int32_t get_offset_of_dictationSystem_15() { return static_cast<int32_t>(offsetof(DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F, ___dictationSystem_15)); }
	inline RuntimeObject* get_dictationSystem_15() const { return ___dictationSystem_15; }
	inline RuntimeObject** get_address_of_dictationSystem_15() { return &___dictationSystem_15; }
	inline void set_dictationSystem_15(RuntimeObject* value)
	{
		___dictationSystem_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictationSystem_15), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputActionHandler
struct InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D  : public BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.InputActionHandler::InputAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___InputAction_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputActionHandler::MarkEventsAsUsed
	bool ___MarkEventsAsUsed_8;
	// Microsoft.MixedReality.Toolkit.Input.InputActionUnityEvent Microsoft.MixedReality.Toolkit.Input.InputActionHandler::OnInputActionStarted
	InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * ___OnInputActionStarted_9;
	// Microsoft.MixedReality.Toolkit.Input.InputActionUnityEvent Microsoft.MixedReality.Toolkit.Input.InputActionHandler::OnInputActionEnded
	InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * ___OnInputActionEnded_10;

public:
	inline static int32_t get_offset_of_InputAction_7() { return static_cast<int32_t>(offsetof(InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D, ___InputAction_7)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_InputAction_7() const { return ___InputAction_7; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_InputAction_7() { return &___InputAction_7; }
	inline void set_InputAction_7(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___InputAction_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___InputAction_7))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_MarkEventsAsUsed_8() { return static_cast<int32_t>(offsetof(InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D, ___MarkEventsAsUsed_8)); }
	inline bool get_MarkEventsAsUsed_8() const { return ___MarkEventsAsUsed_8; }
	inline bool* get_address_of_MarkEventsAsUsed_8() { return &___MarkEventsAsUsed_8; }
	inline void set_MarkEventsAsUsed_8(bool value)
	{
		___MarkEventsAsUsed_8 = value;
	}

	inline static int32_t get_offset_of_OnInputActionStarted_9() { return static_cast<int32_t>(offsetof(InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D, ___OnInputActionStarted_9)); }
	inline InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * get_OnInputActionStarted_9() const { return ___OnInputActionStarted_9; }
	inline InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F ** get_address_of_OnInputActionStarted_9() { return &___OnInputActionStarted_9; }
	inline void set_OnInputActionStarted_9(InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * value)
	{
		___OnInputActionStarted_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnInputActionStarted_9), (void*)value);
	}

	inline static int32_t get_offset_of_OnInputActionEnded_10() { return static_cast<int32_t>(offsetof(InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D, ___OnInputActionEnded_10)); }
	inline InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * get_OnInputActionEnded_10() const { return ___OnInputActionEnded_10; }
	inline InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F ** get_address_of_OnInputActionEnded_10() { return &___OnInputActionEnded_10; }
	inline void set_OnInputActionEnded_10(InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * value)
	{
		___OnInputActionEnded_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnInputActionEnded_10), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer
struct MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC  : public ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064
{
public:

public:
};


// UnityEngine.UI.MaskableGraphic
struct MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F  : public Graphic_tBA2C3EF11D3DAEBB57F6879AB0BB4F8BD40D00D8
{
public:
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_ShouldRecalculateStencil
	bool ___m_ShouldRecalculateStencil_25;
	// UnityEngine.Material UnityEngine.UI.MaskableGraphic::m_MaskMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___m_MaskMaterial_26;
	// UnityEngine.UI.RectMask2D UnityEngine.UI.MaskableGraphic::m_ParentMask
	RectMask2D_tF2CF19F2A4FE2D2FFC7E6F7809374757CA2F377B * ___m_ParentMask_27;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_Maskable
	bool ___m_Maskable_28;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_IsMaskingGraphic
	bool ___m_IsMaskingGraphic_29;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_IncludeForMasking
	bool ___m_IncludeForMasking_30;
	// UnityEngine.UI.MaskableGraphic/CullStateChangedEvent UnityEngine.UI.MaskableGraphic::m_OnCullStateChanged
	CullStateChangedEvent_t6BC3E87DBC04B585798460D55F56B86C23B62FE4 * ___m_OnCullStateChanged_31;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_ShouldRecalculate
	bool ___m_ShouldRecalculate_32;
	// System.Int32 UnityEngine.UI.MaskableGraphic::m_StencilValue
	int32_t ___m_StencilValue_33;
	// UnityEngine.Vector3[] UnityEngine.UI.MaskableGraphic::m_Corners
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___m_Corners_34;

public:
	inline static int32_t get_offset_of_m_ShouldRecalculateStencil_25() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_ShouldRecalculateStencil_25)); }
	inline bool get_m_ShouldRecalculateStencil_25() const { return ___m_ShouldRecalculateStencil_25; }
	inline bool* get_address_of_m_ShouldRecalculateStencil_25() { return &___m_ShouldRecalculateStencil_25; }
	inline void set_m_ShouldRecalculateStencil_25(bool value)
	{
		___m_ShouldRecalculateStencil_25 = value;
	}

	inline static int32_t get_offset_of_m_MaskMaterial_26() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_MaskMaterial_26)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_m_MaskMaterial_26() const { return ___m_MaskMaterial_26; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_m_MaskMaterial_26() { return &___m_MaskMaterial_26; }
	inline void set_m_MaskMaterial_26(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___m_MaskMaterial_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_MaskMaterial_26), (void*)value);
	}

	inline static int32_t get_offset_of_m_ParentMask_27() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_ParentMask_27)); }
	inline RectMask2D_tF2CF19F2A4FE2D2FFC7E6F7809374757CA2F377B * get_m_ParentMask_27() const { return ___m_ParentMask_27; }
	inline RectMask2D_tF2CF19F2A4FE2D2FFC7E6F7809374757CA2F377B ** get_address_of_m_ParentMask_27() { return &___m_ParentMask_27; }
	inline void set_m_ParentMask_27(RectMask2D_tF2CF19F2A4FE2D2FFC7E6F7809374757CA2F377B * value)
	{
		___m_ParentMask_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ParentMask_27), (void*)value);
	}

	inline static int32_t get_offset_of_m_Maskable_28() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_Maskable_28)); }
	inline bool get_m_Maskable_28() const { return ___m_Maskable_28; }
	inline bool* get_address_of_m_Maskable_28() { return &___m_Maskable_28; }
	inline void set_m_Maskable_28(bool value)
	{
		___m_Maskable_28 = value;
	}

	inline static int32_t get_offset_of_m_IsMaskingGraphic_29() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_IsMaskingGraphic_29)); }
	inline bool get_m_IsMaskingGraphic_29() const { return ___m_IsMaskingGraphic_29; }
	inline bool* get_address_of_m_IsMaskingGraphic_29() { return &___m_IsMaskingGraphic_29; }
	inline void set_m_IsMaskingGraphic_29(bool value)
	{
		___m_IsMaskingGraphic_29 = value;
	}

	inline static int32_t get_offset_of_m_IncludeForMasking_30() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_IncludeForMasking_30)); }
	inline bool get_m_IncludeForMasking_30() const { return ___m_IncludeForMasking_30; }
	inline bool* get_address_of_m_IncludeForMasking_30() { return &___m_IncludeForMasking_30; }
	inline void set_m_IncludeForMasking_30(bool value)
	{
		___m_IncludeForMasking_30 = value;
	}

	inline static int32_t get_offset_of_m_OnCullStateChanged_31() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_OnCullStateChanged_31)); }
	inline CullStateChangedEvent_t6BC3E87DBC04B585798460D55F56B86C23B62FE4 * get_m_OnCullStateChanged_31() const { return ___m_OnCullStateChanged_31; }
	inline CullStateChangedEvent_t6BC3E87DBC04B585798460D55F56B86C23B62FE4 ** get_address_of_m_OnCullStateChanged_31() { return &___m_OnCullStateChanged_31; }
	inline void set_m_OnCullStateChanged_31(CullStateChangedEvent_t6BC3E87DBC04B585798460D55F56B86C23B62FE4 * value)
	{
		___m_OnCullStateChanged_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_OnCullStateChanged_31), (void*)value);
	}

	inline static int32_t get_offset_of_m_ShouldRecalculate_32() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_ShouldRecalculate_32)); }
	inline bool get_m_ShouldRecalculate_32() const { return ___m_ShouldRecalculate_32; }
	inline bool* get_address_of_m_ShouldRecalculate_32() { return &___m_ShouldRecalculate_32; }
	inline void set_m_ShouldRecalculate_32(bool value)
	{
		___m_ShouldRecalculate_32 = value;
	}

	inline static int32_t get_offset_of_m_StencilValue_33() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_StencilValue_33)); }
	inline int32_t get_m_StencilValue_33() const { return ___m_StencilValue_33; }
	inline int32_t* get_address_of_m_StencilValue_33() { return &___m_StencilValue_33; }
	inline void set_m_StencilValue_33(int32_t value)
	{
		___m_StencilValue_33 = value;
	}

	inline static int32_t get_offset_of_m_Corners_34() { return static_cast<int32_t>(offsetof(MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F, ___m_Corners_34)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_m_Corners_34() const { return ___m_Corners_34; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_m_Corners_34() { return &___m_Corners_34; }
	inline void set_m_Corners_34(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___m_Corners_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Corners_34), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseMousePointer
struct BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::timeoutTimer
	float ___timeoutTimer_52;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::isInteractionEnabled
	bool ___isInteractionEnabled_53;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::cursorWasDisabledOnDown
	bool ___cursorWasDisabledOnDown_54;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::isDisabled
	bool ___isDisabled_55;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::hideCursorWhenInactive
	bool ___hideCursorWhenInactive_56;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::movementThresholdToUnHide
	float ___movementThresholdToUnHide_57;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::hideTimeout
	float ___hideTimeout_58;

public:
	inline static int32_t get_offset_of_timeoutTimer_52() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___timeoutTimer_52)); }
	inline float get_timeoutTimer_52() const { return ___timeoutTimer_52; }
	inline float* get_address_of_timeoutTimer_52() { return &___timeoutTimer_52; }
	inline void set_timeoutTimer_52(float value)
	{
		___timeoutTimer_52 = value;
	}

	inline static int32_t get_offset_of_isInteractionEnabled_53() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___isInteractionEnabled_53)); }
	inline bool get_isInteractionEnabled_53() const { return ___isInteractionEnabled_53; }
	inline bool* get_address_of_isInteractionEnabled_53() { return &___isInteractionEnabled_53; }
	inline void set_isInteractionEnabled_53(bool value)
	{
		___isInteractionEnabled_53 = value;
	}

	inline static int32_t get_offset_of_cursorWasDisabledOnDown_54() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___cursorWasDisabledOnDown_54)); }
	inline bool get_cursorWasDisabledOnDown_54() const { return ___cursorWasDisabledOnDown_54; }
	inline bool* get_address_of_cursorWasDisabledOnDown_54() { return &___cursorWasDisabledOnDown_54; }
	inline void set_cursorWasDisabledOnDown_54(bool value)
	{
		___cursorWasDisabledOnDown_54 = value;
	}

	inline static int32_t get_offset_of_isDisabled_55() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___isDisabled_55)); }
	inline bool get_isDisabled_55() const { return ___isDisabled_55; }
	inline bool* get_address_of_isDisabled_55() { return &___isDisabled_55; }
	inline void set_isDisabled_55(bool value)
	{
		___isDisabled_55 = value;
	}

	inline static int32_t get_offset_of_hideCursorWhenInactive_56() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___hideCursorWhenInactive_56)); }
	inline bool get_hideCursorWhenInactive_56() const { return ___hideCursorWhenInactive_56; }
	inline bool* get_address_of_hideCursorWhenInactive_56() { return &___hideCursorWhenInactive_56; }
	inline void set_hideCursorWhenInactive_56(bool value)
	{
		___hideCursorWhenInactive_56 = value;
	}

	inline static int32_t get_offset_of_movementThresholdToUnHide_57() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___movementThresholdToUnHide_57)); }
	inline float get_movementThresholdToUnHide_57() const { return ___movementThresholdToUnHide_57; }
	inline float* get_address_of_movementThresholdToUnHide_57() { return &___movementThresholdToUnHide_57; }
	inline void set_movementThresholdToUnHide_57(float value)
	{
		___movementThresholdToUnHide_57 = value;
	}

	inline static int32_t get_offset_of_hideTimeout_58() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___hideTimeout_58)); }
	inline float get_hideTimeout_58() const { return ___hideTimeout_58; }
	inline float* get_address_of_hideTimeout_58() { return &___hideTimeout_58; }
	inline void set_hideTimeout_58(float value)
	{
		___hideTimeout_58 = value;
	}
};

struct BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceDetectedPerfMarker_59;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_60;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnInputDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputDownPerfMarker_61;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnInputUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputUpPerfMarker_62;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::ResetCursorPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___ResetCursorPerfMarker_63;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_64;

public:
	inline static int32_t get_offset_of_OnSourceDetectedPerfMarker_59() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnSourceDetectedPerfMarker_59)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceDetectedPerfMarker_59() const { return ___OnSourceDetectedPerfMarker_59; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceDetectedPerfMarker_59() { return &___OnSourceDetectedPerfMarker_59; }
	inline void set_OnSourceDetectedPerfMarker_59(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceDetectedPerfMarker_59 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_60() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnSourceLostPerfMarker_60)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_60() const { return ___OnSourceLostPerfMarker_60; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_60() { return &___OnSourceLostPerfMarker_60; }
	inline void set_OnSourceLostPerfMarker_60(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_60 = value;
	}

	inline static int32_t get_offset_of_OnInputDownPerfMarker_61() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnInputDownPerfMarker_61)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputDownPerfMarker_61() const { return ___OnInputDownPerfMarker_61; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputDownPerfMarker_61() { return &___OnInputDownPerfMarker_61; }
	inline void set_OnInputDownPerfMarker_61(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputDownPerfMarker_61 = value;
	}

	inline static int32_t get_offset_of_OnInputUpPerfMarker_62() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnInputUpPerfMarker_62)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputUpPerfMarker_62() const { return ___OnInputUpPerfMarker_62; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputUpPerfMarker_62() { return &___OnInputUpPerfMarker_62; }
	inline void set_OnInputUpPerfMarker_62(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputUpPerfMarker_62 = value;
	}

	inline static int32_t get_offset_of_ResetCursorPerfMarker_63() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___ResetCursorPerfMarker_63)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_ResetCursorPerfMarker_63() const { return ___ResetCursorPerfMarker_63; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_ResetCursorPerfMarker_63() { return &___ResetCursorPerfMarker_63; }
	inline void set_ResetCursorPerfMarker_63(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___ResetCursorPerfMarker_63 = value;
	}

	inline static int32_t get_offset_of_UpdatePerfMarker_64() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___UpdatePerfMarker_64)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_64() const { return ___UpdatePerfMarker_64; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_64() { return &___UpdatePerfMarker_64; }
	inline void set_UpdatePerfMarker_64(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_64 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.LinePointer
struct LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorSelected
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorSelected_52;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorValid
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorValid_53;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorInvalid
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorInvalid_54;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorNoTarget
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorNoTarget_55;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorLockFocus
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorLockFocus_56;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Input.LinePointer::lineBase
	BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * ___lineBase_57;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[] Microsoft.MixedReality.Toolkit.Input.LinePointer::lineRenderers
	BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* ___lineRenderers_58;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.LinePointer::lineStartPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lineStartPoint_59;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.LinePointer::lineEndPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lineEndPoint_60;

public:
	inline static int32_t get_offset_of_LineColorSelected_52() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorSelected_52)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorSelected_52() const { return ___LineColorSelected_52; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorSelected_52() { return &___LineColorSelected_52; }
	inline void set_LineColorSelected_52(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorSelected_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorSelected_52), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorValid_53() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorValid_53)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorValid_53() const { return ___LineColorValid_53; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorValid_53() { return &___LineColorValid_53; }
	inline void set_LineColorValid_53(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorValid_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorValid_53), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorInvalid_54() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorInvalid_54)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorInvalid_54() const { return ___LineColorInvalid_54; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorInvalid_54() { return &___LineColorInvalid_54; }
	inline void set_LineColorInvalid_54(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorInvalid_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorInvalid_54), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorNoTarget_55() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorNoTarget_55)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorNoTarget_55() const { return ___LineColorNoTarget_55; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorNoTarget_55() { return &___LineColorNoTarget_55; }
	inline void set_LineColorNoTarget_55(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorNoTarget_55 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorNoTarget_55), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorLockFocus_56() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorLockFocus_56)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorLockFocus_56() const { return ___LineColorLockFocus_56; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorLockFocus_56() { return &___LineColorLockFocus_56; }
	inline void set_LineColorLockFocus_56(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorLockFocus_56 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorLockFocus_56), (void*)value);
	}

	inline static int32_t get_offset_of_lineBase_57() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineBase_57)); }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * get_lineBase_57() const { return ___lineBase_57; }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 ** get_address_of_lineBase_57() { return &___lineBase_57; }
	inline void set_lineBase_57(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * value)
	{
		___lineBase_57 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineBase_57), (void*)value);
	}

	inline static int32_t get_offset_of_lineRenderers_58() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineRenderers_58)); }
	inline BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* get_lineRenderers_58() const { return ___lineRenderers_58; }
	inline BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822** get_address_of_lineRenderers_58() { return &___lineRenderers_58; }
	inline void set_lineRenderers_58(BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* value)
	{
		___lineRenderers_58 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineRenderers_58), (void*)value);
	}

	inline static int32_t get_offset_of_lineStartPoint_59() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineStartPoint_59)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_lineStartPoint_59() const { return ___lineStartPoint_59; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_lineStartPoint_59() { return &___lineStartPoint_59; }
	inline void set_lineStartPoint_59(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___lineStartPoint_59 = value;
	}

	inline static int32_t get_offset_of_lineEndPoint_60() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineEndPoint_60)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_lineEndPoint_60() const { return ___lineEndPoint_60; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_lineEndPoint_60() { return &___lineEndPoint_60; }
	inline void set_lineEndPoint_60(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___lineEndPoint_60 = value;
	}
};

struct LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_61;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_62;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::PreUpdateLineRenderersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___PreUpdateLineRenderersPerfMarker_63;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::PostUpdateLineRenderersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___PostUpdateLineRenderersPerfMarker_64;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::UpdateRaysPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateRaysPerfMarker_65;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_61() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___OnPreSceneQueryPerfMarker_61)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_61() const { return ___OnPreSceneQueryPerfMarker_61; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_61() { return &___OnPreSceneQueryPerfMarker_61; }
	inline void set_OnPreSceneQueryPerfMarker_61(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_61 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_62() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___OnPostSceneQueryPerfMarker_62)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_62() const { return ___OnPostSceneQueryPerfMarker_62; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_62() { return &___OnPostSceneQueryPerfMarker_62; }
	inline void set_OnPostSceneQueryPerfMarker_62(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_62 = value;
	}

	inline static int32_t get_offset_of_PreUpdateLineRenderersPerfMarker_63() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___PreUpdateLineRenderersPerfMarker_63)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_PreUpdateLineRenderersPerfMarker_63() const { return ___PreUpdateLineRenderersPerfMarker_63; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_PreUpdateLineRenderersPerfMarker_63() { return &___PreUpdateLineRenderersPerfMarker_63; }
	inline void set_PreUpdateLineRenderersPerfMarker_63(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___PreUpdateLineRenderersPerfMarker_63 = value;
	}

	inline static int32_t get_offset_of_PostUpdateLineRenderersPerfMarker_64() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___PostUpdateLineRenderersPerfMarker_64)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_PostUpdateLineRenderersPerfMarker_64() const { return ___PostUpdateLineRenderersPerfMarker_64; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_PostUpdateLineRenderersPerfMarker_64() { return &___PostUpdateLineRenderersPerfMarker_64; }
	inline void set_PostUpdateLineRenderersPerfMarker_64(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___PostUpdateLineRenderersPerfMarker_64 = value;
	}

	inline static int32_t get_offset_of_UpdateRaysPerfMarker_65() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___UpdateRaysPerfMarker_65)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateRaysPerfMarker_65() const { return ___UpdateRaysPerfMarker_65; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateRaysPerfMarker_65() { return &___UpdateRaysPerfMarker_65; }
	inline void set_UpdateRaysPerfMarker_65(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateRaysPerfMarker_65 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpherePointer
struct SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.SpherePointer::raycastMode
	int32_t ___raycastMode_52;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::pullbackDistance
	float ___pullbackDistance_53;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectSectorAngle
	float ___nearObjectSectorAngle_54;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectMargin
	float ___nearObjectMargin_55;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectAxisLerp
	float ___nearObjectAxisLerp_56;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectSmoothingFactor
	float ___nearObjectSmoothingFactor_57;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.SpherePointer::grabLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___grabLayerMasks_58;
	// UnityEngine.QueryTriggerInteraction Microsoft.MixedReality.Toolkit.Input.SpherePointer::triggerInteraction
	int32_t ___triggerInteraction_59;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.SpherePointer::sceneQueryBufferSize
	int32_t ___sceneQueryBufferSize_60;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::ignoreCollidersNotInFOV
	bool ___ignoreCollidersNotInFOV_61;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer/GraspPointPlacement Microsoft.MixedReality.Toolkit.Input.SpherePointer::graspPointPlacement
	int32_t ___graspPointPlacement_62;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo Microsoft.MixedReality.Toolkit.Input.SpherePointer::queryBufferNearObjectRadius
	SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * ___queryBufferNearObjectRadius_63;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo Microsoft.MixedReality.Toolkit.Input.SpherePointer::queryBufferInteractionRadius
	SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * ___queryBufferInteractionRadius_64;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.SpherePointer::hitObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitObject_66;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SpherePointer::hitPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPoint_67;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::hitDistance
	float ___hitDistance_68;

public:
	inline static int32_t get_offset_of_raycastMode_52() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___raycastMode_52)); }
	inline int32_t get_raycastMode_52() const { return ___raycastMode_52; }
	inline int32_t* get_address_of_raycastMode_52() { return &___raycastMode_52; }
	inline void set_raycastMode_52(int32_t value)
	{
		___raycastMode_52 = value;
	}

	inline static int32_t get_offset_of_pullbackDistance_53() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___pullbackDistance_53)); }
	inline float get_pullbackDistance_53() const { return ___pullbackDistance_53; }
	inline float* get_address_of_pullbackDistance_53() { return &___pullbackDistance_53; }
	inline void set_pullbackDistance_53(float value)
	{
		___pullbackDistance_53 = value;
	}

	inline static int32_t get_offset_of_nearObjectSectorAngle_54() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectSectorAngle_54)); }
	inline float get_nearObjectSectorAngle_54() const { return ___nearObjectSectorAngle_54; }
	inline float* get_address_of_nearObjectSectorAngle_54() { return &___nearObjectSectorAngle_54; }
	inline void set_nearObjectSectorAngle_54(float value)
	{
		___nearObjectSectorAngle_54 = value;
	}

	inline static int32_t get_offset_of_nearObjectMargin_55() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectMargin_55)); }
	inline float get_nearObjectMargin_55() const { return ___nearObjectMargin_55; }
	inline float* get_address_of_nearObjectMargin_55() { return &___nearObjectMargin_55; }
	inline void set_nearObjectMargin_55(float value)
	{
		___nearObjectMargin_55 = value;
	}

	inline static int32_t get_offset_of_nearObjectAxisLerp_56() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectAxisLerp_56)); }
	inline float get_nearObjectAxisLerp_56() const { return ___nearObjectAxisLerp_56; }
	inline float* get_address_of_nearObjectAxisLerp_56() { return &___nearObjectAxisLerp_56; }
	inline void set_nearObjectAxisLerp_56(float value)
	{
		___nearObjectAxisLerp_56 = value;
	}

	inline static int32_t get_offset_of_nearObjectSmoothingFactor_57() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectSmoothingFactor_57)); }
	inline float get_nearObjectSmoothingFactor_57() const { return ___nearObjectSmoothingFactor_57; }
	inline float* get_address_of_nearObjectSmoothingFactor_57() { return &___nearObjectSmoothingFactor_57; }
	inline void set_nearObjectSmoothingFactor_57(float value)
	{
		___nearObjectSmoothingFactor_57 = value;
	}

	inline static int32_t get_offset_of_grabLayerMasks_58() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___grabLayerMasks_58)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_grabLayerMasks_58() const { return ___grabLayerMasks_58; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_grabLayerMasks_58() { return &___grabLayerMasks_58; }
	inline void set_grabLayerMasks_58(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___grabLayerMasks_58 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___grabLayerMasks_58), (void*)value);
	}

	inline static int32_t get_offset_of_triggerInteraction_59() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___triggerInteraction_59)); }
	inline int32_t get_triggerInteraction_59() const { return ___triggerInteraction_59; }
	inline int32_t* get_address_of_triggerInteraction_59() { return &___triggerInteraction_59; }
	inline void set_triggerInteraction_59(int32_t value)
	{
		___triggerInteraction_59 = value;
	}

	inline static int32_t get_offset_of_sceneQueryBufferSize_60() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___sceneQueryBufferSize_60)); }
	inline int32_t get_sceneQueryBufferSize_60() const { return ___sceneQueryBufferSize_60; }
	inline int32_t* get_address_of_sceneQueryBufferSize_60() { return &___sceneQueryBufferSize_60; }
	inline void set_sceneQueryBufferSize_60(int32_t value)
	{
		___sceneQueryBufferSize_60 = value;
	}

	inline static int32_t get_offset_of_ignoreCollidersNotInFOV_61() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___ignoreCollidersNotInFOV_61)); }
	inline bool get_ignoreCollidersNotInFOV_61() const { return ___ignoreCollidersNotInFOV_61; }
	inline bool* get_address_of_ignoreCollidersNotInFOV_61() { return &___ignoreCollidersNotInFOV_61; }
	inline void set_ignoreCollidersNotInFOV_61(bool value)
	{
		___ignoreCollidersNotInFOV_61 = value;
	}

	inline static int32_t get_offset_of_graspPointPlacement_62() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___graspPointPlacement_62)); }
	inline int32_t get_graspPointPlacement_62() const { return ___graspPointPlacement_62; }
	inline int32_t* get_address_of_graspPointPlacement_62() { return &___graspPointPlacement_62; }
	inline void set_graspPointPlacement_62(int32_t value)
	{
		___graspPointPlacement_62 = value;
	}

	inline static int32_t get_offset_of_queryBufferNearObjectRadius_63() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___queryBufferNearObjectRadius_63)); }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * get_queryBufferNearObjectRadius_63() const { return ___queryBufferNearObjectRadius_63; }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A ** get_address_of_queryBufferNearObjectRadius_63() { return &___queryBufferNearObjectRadius_63; }
	inline void set_queryBufferNearObjectRadius_63(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * value)
	{
		___queryBufferNearObjectRadius_63 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBufferNearObjectRadius_63), (void*)value);
	}

	inline static int32_t get_offset_of_queryBufferInteractionRadius_64() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___queryBufferInteractionRadius_64)); }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * get_queryBufferInteractionRadius_64() const { return ___queryBufferInteractionRadius_64; }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A ** get_address_of_queryBufferInteractionRadius_64() { return &___queryBufferInteractionRadius_64; }
	inline void set_queryBufferInteractionRadius_64(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * value)
	{
		___queryBufferInteractionRadius_64 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBufferInteractionRadius_64), (void*)value);
	}

	inline static int32_t get_offset_of_hitObject_66() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___hitObject_66)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_hitObject_66() const { return ___hitObject_66; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_hitObject_66() { return &___hitObject_66; }
	inline void set_hitObject_66(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___hitObject_66 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hitObject_66), (void*)value);
	}

	inline static int32_t get_offset_of_hitPoint_67() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___hitPoint_67)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_hitPoint_67() const { return ___hitPoint_67; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_hitPoint_67() { return &___hitPoint_67; }
	inline void set_hitPoint_67(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___hitPoint_67 = value;
	}

	inline static int32_t get_offset_of_hitDistance_68() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___hitDistance_68)); }
	inline float get_hitDistance_68() const { return ___hitDistance_68; }
	inline float* get_address_of_hitDistance_68() { return &___hitDistance_68; }
	inline void set_hitDistance_68(float value)
	{
		___hitDistance_68 = value;
	}
};

struct SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_65;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspPointPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetNearGraspPointPerfMarker_69;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspAxisPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetNearGraspAxisPerfMarker_70;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetDistanceToNearestSurfacePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetDistanceToNearestSurfacePerfMarker_71;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNormalToNearestSurfacePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetNormalToNearestSurfacePerfMarker_72;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_65() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___OnPreSceneQueryPerfMarker_65)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_65() const { return ___OnPreSceneQueryPerfMarker_65; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_65() { return &___OnPreSceneQueryPerfMarker_65; }
	inline void set_OnPreSceneQueryPerfMarker_65(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_65 = value;
	}

	inline static int32_t get_offset_of_TryGetNearGraspPointPerfMarker_69() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetNearGraspPointPerfMarker_69)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetNearGraspPointPerfMarker_69() const { return ___TryGetNearGraspPointPerfMarker_69; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetNearGraspPointPerfMarker_69() { return &___TryGetNearGraspPointPerfMarker_69; }
	inline void set_TryGetNearGraspPointPerfMarker_69(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetNearGraspPointPerfMarker_69 = value;
	}

	inline static int32_t get_offset_of_TryGetNearGraspAxisPerfMarker_70() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetNearGraspAxisPerfMarker_70)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetNearGraspAxisPerfMarker_70() const { return ___TryGetNearGraspAxisPerfMarker_70; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetNearGraspAxisPerfMarker_70() { return &___TryGetNearGraspAxisPerfMarker_70; }
	inline void set_TryGetNearGraspAxisPerfMarker_70(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetNearGraspAxisPerfMarker_70 = value;
	}

	inline static int32_t get_offset_of_TryGetDistanceToNearestSurfacePerfMarker_71() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetDistanceToNearestSurfacePerfMarker_71)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetDistanceToNearestSurfacePerfMarker_71() const { return ___TryGetDistanceToNearestSurfacePerfMarker_71; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetDistanceToNearestSurfacePerfMarker_71() { return &___TryGetDistanceToNearestSurfacePerfMarker_71; }
	inline void set_TryGetDistanceToNearestSurfacePerfMarker_71(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetDistanceToNearestSurfacePerfMarker_71 = value;
	}

	inline static int32_t get_offset_of_TryGetNormalToNearestSurfacePerfMarker_72() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetNormalToNearestSurfacePerfMarker_72)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetNormalToNearestSurfacePerfMarker_72() const { return ___TryGetNormalToNearestSurfacePerfMarker_72; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetNormalToNearestSurfacePerfMarker_72() { return &___TryGetNormalToNearestSurfacePerfMarker_72; }
	inline void set_TryGetNormalToNearestSurfacePerfMarker_72(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetNormalToNearestSurfacePerfMarker_72 = value;
	}
};


// UnityEngine.UI.Image
struct Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E  : public MaskableGraphic_tDA46A5925C6A2101217C9F52C855B5C1A36A7A0F
{
public:
	// UnityEngine.Sprite UnityEngine.UI.Image::m_Sprite
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___m_Sprite_36;
	// UnityEngine.Sprite UnityEngine.UI.Image::m_OverrideSprite
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___m_OverrideSprite_37;
	// UnityEngine.UI.Image/Type UnityEngine.UI.Image::m_Type
	int32_t ___m_Type_38;
	// System.Boolean UnityEngine.UI.Image::m_PreserveAspect
	bool ___m_PreserveAspect_39;
	// System.Boolean UnityEngine.UI.Image::m_FillCenter
	bool ___m_FillCenter_40;
	// UnityEngine.UI.Image/FillMethod UnityEngine.UI.Image::m_FillMethod
	int32_t ___m_FillMethod_41;
	// System.Single UnityEngine.UI.Image::m_FillAmount
	float ___m_FillAmount_42;
	// System.Boolean UnityEngine.UI.Image::m_FillClockwise
	bool ___m_FillClockwise_43;
	// System.Int32 UnityEngine.UI.Image::m_FillOrigin
	int32_t ___m_FillOrigin_44;
	// System.Single UnityEngine.UI.Image::m_AlphaHitTestMinimumThreshold
	float ___m_AlphaHitTestMinimumThreshold_45;
	// System.Boolean UnityEngine.UI.Image::m_Tracked
	bool ___m_Tracked_46;
	// System.Boolean UnityEngine.UI.Image::m_UseSpriteMesh
	bool ___m_UseSpriteMesh_47;
	// System.Single UnityEngine.UI.Image::m_PixelsPerUnitMultiplier
	float ___m_PixelsPerUnitMultiplier_48;
	// System.Single UnityEngine.UI.Image::m_CachedReferencePixelsPerUnit
	float ___m_CachedReferencePixelsPerUnit_49;

public:
	inline static int32_t get_offset_of_m_Sprite_36() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_Sprite_36)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_m_Sprite_36() const { return ___m_Sprite_36; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_m_Sprite_36() { return &___m_Sprite_36; }
	inline void set_m_Sprite_36(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___m_Sprite_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Sprite_36), (void*)value);
	}

	inline static int32_t get_offset_of_m_OverrideSprite_37() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_OverrideSprite_37)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_m_OverrideSprite_37() const { return ___m_OverrideSprite_37; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_m_OverrideSprite_37() { return &___m_OverrideSprite_37; }
	inline void set_m_OverrideSprite_37(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___m_OverrideSprite_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_OverrideSprite_37), (void*)value);
	}

	inline static int32_t get_offset_of_m_Type_38() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_Type_38)); }
	inline int32_t get_m_Type_38() const { return ___m_Type_38; }
	inline int32_t* get_address_of_m_Type_38() { return &___m_Type_38; }
	inline void set_m_Type_38(int32_t value)
	{
		___m_Type_38 = value;
	}

	inline static int32_t get_offset_of_m_PreserveAspect_39() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_PreserveAspect_39)); }
	inline bool get_m_PreserveAspect_39() const { return ___m_PreserveAspect_39; }
	inline bool* get_address_of_m_PreserveAspect_39() { return &___m_PreserveAspect_39; }
	inline void set_m_PreserveAspect_39(bool value)
	{
		___m_PreserveAspect_39 = value;
	}

	inline static int32_t get_offset_of_m_FillCenter_40() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_FillCenter_40)); }
	inline bool get_m_FillCenter_40() const { return ___m_FillCenter_40; }
	inline bool* get_address_of_m_FillCenter_40() { return &___m_FillCenter_40; }
	inline void set_m_FillCenter_40(bool value)
	{
		___m_FillCenter_40 = value;
	}

	inline static int32_t get_offset_of_m_FillMethod_41() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_FillMethod_41)); }
	inline int32_t get_m_FillMethod_41() const { return ___m_FillMethod_41; }
	inline int32_t* get_address_of_m_FillMethod_41() { return &___m_FillMethod_41; }
	inline void set_m_FillMethod_41(int32_t value)
	{
		___m_FillMethod_41 = value;
	}

	inline static int32_t get_offset_of_m_FillAmount_42() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_FillAmount_42)); }
	inline float get_m_FillAmount_42() const { return ___m_FillAmount_42; }
	inline float* get_address_of_m_FillAmount_42() { return &___m_FillAmount_42; }
	inline void set_m_FillAmount_42(float value)
	{
		___m_FillAmount_42 = value;
	}

	inline static int32_t get_offset_of_m_FillClockwise_43() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_FillClockwise_43)); }
	inline bool get_m_FillClockwise_43() const { return ___m_FillClockwise_43; }
	inline bool* get_address_of_m_FillClockwise_43() { return &___m_FillClockwise_43; }
	inline void set_m_FillClockwise_43(bool value)
	{
		___m_FillClockwise_43 = value;
	}

	inline static int32_t get_offset_of_m_FillOrigin_44() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_FillOrigin_44)); }
	inline int32_t get_m_FillOrigin_44() const { return ___m_FillOrigin_44; }
	inline int32_t* get_address_of_m_FillOrigin_44() { return &___m_FillOrigin_44; }
	inline void set_m_FillOrigin_44(int32_t value)
	{
		___m_FillOrigin_44 = value;
	}

	inline static int32_t get_offset_of_m_AlphaHitTestMinimumThreshold_45() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_AlphaHitTestMinimumThreshold_45)); }
	inline float get_m_AlphaHitTestMinimumThreshold_45() const { return ___m_AlphaHitTestMinimumThreshold_45; }
	inline float* get_address_of_m_AlphaHitTestMinimumThreshold_45() { return &___m_AlphaHitTestMinimumThreshold_45; }
	inline void set_m_AlphaHitTestMinimumThreshold_45(float value)
	{
		___m_AlphaHitTestMinimumThreshold_45 = value;
	}

	inline static int32_t get_offset_of_m_Tracked_46() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_Tracked_46)); }
	inline bool get_m_Tracked_46() const { return ___m_Tracked_46; }
	inline bool* get_address_of_m_Tracked_46() { return &___m_Tracked_46; }
	inline void set_m_Tracked_46(bool value)
	{
		___m_Tracked_46 = value;
	}

	inline static int32_t get_offset_of_m_UseSpriteMesh_47() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_UseSpriteMesh_47)); }
	inline bool get_m_UseSpriteMesh_47() const { return ___m_UseSpriteMesh_47; }
	inline bool* get_address_of_m_UseSpriteMesh_47() { return &___m_UseSpriteMesh_47; }
	inline void set_m_UseSpriteMesh_47(bool value)
	{
		___m_UseSpriteMesh_47 = value;
	}

	inline static int32_t get_offset_of_m_PixelsPerUnitMultiplier_48() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_PixelsPerUnitMultiplier_48)); }
	inline float get_m_PixelsPerUnitMultiplier_48() const { return ___m_PixelsPerUnitMultiplier_48; }
	inline float* get_address_of_m_PixelsPerUnitMultiplier_48() { return &___m_PixelsPerUnitMultiplier_48; }
	inline void set_m_PixelsPerUnitMultiplier_48(float value)
	{
		___m_PixelsPerUnitMultiplier_48 = value;
	}

	inline static int32_t get_offset_of_m_CachedReferencePixelsPerUnit_49() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E, ___m_CachedReferencePixelsPerUnit_49)); }
	inline float get_m_CachedReferencePixelsPerUnit_49() const { return ___m_CachedReferencePixelsPerUnit_49; }
	inline float* get_address_of_m_CachedReferencePixelsPerUnit_49() { return &___m_CachedReferencePixelsPerUnit_49; }
	inline void set_m_CachedReferencePixelsPerUnit_49(float value)
	{
		___m_CachedReferencePixelsPerUnit_49 = value;
	}
};

struct Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields
{
public:
	// UnityEngine.Material UnityEngine.UI.Image::s_ETC1DefaultUI
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___s_ETC1DefaultUI_35;
	// UnityEngine.Vector2[] UnityEngine.UI.Image::s_VertScratch
	Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* ___s_VertScratch_50;
	// UnityEngine.Vector2[] UnityEngine.UI.Image::s_UVScratch
	Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* ___s_UVScratch_51;
	// UnityEngine.Vector3[] UnityEngine.UI.Image::s_Xy
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___s_Xy_52;
	// UnityEngine.Vector3[] UnityEngine.UI.Image::s_Uv
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___s_Uv_53;
	// System.Collections.Generic.List`1<UnityEngine.UI.Image> UnityEngine.UI.Image::m_TrackedTexturelessImages
	List_1_tA9C10612DACE8F188F3B35F6173354C7225A0883 * ___m_TrackedTexturelessImages_54;
	// System.Boolean UnityEngine.UI.Image::s_Initialized
	bool ___s_Initialized_55;

public:
	inline static int32_t get_offset_of_s_ETC1DefaultUI_35() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___s_ETC1DefaultUI_35)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_s_ETC1DefaultUI_35() const { return ___s_ETC1DefaultUI_35; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_s_ETC1DefaultUI_35() { return &___s_ETC1DefaultUI_35; }
	inline void set_s_ETC1DefaultUI_35(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___s_ETC1DefaultUI_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_ETC1DefaultUI_35), (void*)value);
	}

	inline static int32_t get_offset_of_s_VertScratch_50() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___s_VertScratch_50)); }
	inline Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* get_s_VertScratch_50() const { return ___s_VertScratch_50; }
	inline Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6** get_address_of_s_VertScratch_50() { return &___s_VertScratch_50; }
	inline void set_s_VertScratch_50(Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* value)
	{
		___s_VertScratch_50 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_VertScratch_50), (void*)value);
	}

	inline static int32_t get_offset_of_s_UVScratch_51() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___s_UVScratch_51)); }
	inline Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* get_s_UVScratch_51() const { return ___s_UVScratch_51; }
	inline Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6** get_address_of_s_UVScratch_51() { return &___s_UVScratch_51; }
	inline void set_s_UVScratch_51(Vector2U5BU5D_tA065A07DFC060C1B8786BBAA5F3A6577CCEB27D6* value)
	{
		___s_UVScratch_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_UVScratch_51), (void*)value);
	}

	inline static int32_t get_offset_of_s_Xy_52() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___s_Xy_52)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_s_Xy_52() const { return ___s_Xy_52; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_s_Xy_52() { return &___s_Xy_52; }
	inline void set_s_Xy_52(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___s_Xy_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_Xy_52), (void*)value);
	}

	inline static int32_t get_offset_of_s_Uv_53() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___s_Uv_53)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_s_Uv_53() const { return ___s_Uv_53; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_s_Uv_53() { return &___s_Uv_53; }
	inline void set_s_Uv_53(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___s_Uv_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_Uv_53), (void*)value);
	}

	inline static int32_t get_offset_of_m_TrackedTexturelessImages_54() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___m_TrackedTexturelessImages_54)); }
	inline List_1_tA9C10612DACE8F188F3B35F6173354C7225A0883 * get_m_TrackedTexturelessImages_54() const { return ___m_TrackedTexturelessImages_54; }
	inline List_1_tA9C10612DACE8F188F3B35F6173354C7225A0883 ** get_address_of_m_TrackedTexturelessImages_54() { return &___m_TrackedTexturelessImages_54; }
	inline void set_m_TrackedTexturelessImages_54(List_1_tA9C10612DACE8F188F3B35F6173354C7225A0883 * value)
	{
		___m_TrackedTexturelessImages_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_TrackedTexturelessImages_54), (void*)value);
	}

	inline static int32_t get_offset_of_s_Initialized_55() { return static_cast<int32_t>(offsetof(Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E_StaticFields, ___s_Initialized_55)); }
	inline bool get_s_Initialized_55() const { return ___s_Initialized_55; }
	inline bool* get_address_of_s_Initialized_55() { return &___s_Initialized_55; }
	inline void set_s_Initialized_55(bool value)
	{
		___s_Initialized_55 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MousePointer
struct MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB  : public BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99
{
public:

public:
};

struct MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.MousePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_65;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.MousePointer::OnInputChangedVector2PerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputChangedVector2PerfMarker_66;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.MousePointer::OnInputChangedPosePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputChangedPosePerfMarker_67;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.MousePointer::UpdateMouseRotationPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateMouseRotationPerfMarker_68;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_65() { return static_cast<int32_t>(offsetof(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields, ___OnPreSceneQueryPerfMarker_65)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_65() const { return ___OnPreSceneQueryPerfMarker_65; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_65() { return &___OnPreSceneQueryPerfMarker_65; }
	inline void set_OnPreSceneQueryPerfMarker_65(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_65 = value;
	}

	inline static int32_t get_offset_of_OnInputChangedVector2PerfMarker_66() { return static_cast<int32_t>(offsetof(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields, ___OnInputChangedVector2PerfMarker_66)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputChangedVector2PerfMarker_66() const { return ___OnInputChangedVector2PerfMarker_66; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputChangedVector2PerfMarker_66() { return &___OnInputChangedVector2PerfMarker_66; }
	inline void set_OnInputChangedVector2PerfMarker_66(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputChangedVector2PerfMarker_66 = value;
	}

	inline static int32_t get_offset_of_OnInputChangedPosePerfMarker_67() { return static_cast<int32_t>(offsetof(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields, ___OnInputChangedPosePerfMarker_67)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputChangedPosePerfMarker_67() const { return ___OnInputChangedPosePerfMarker_67; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputChangedPosePerfMarker_67() { return &___OnInputChangedPosePerfMarker_67; }
	inline void set_OnInputChangedPosePerfMarker_67(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputChangedPosePerfMarker_67 = value;
	}

	inline static int32_t get_offset_of_UpdateMouseRotationPerfMarker_68() { return static_cast<int32_t>(offsetof(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields, ___UpdateMouseRotationPerfMarker_68)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateMouseRotationPerfMarker_68() const { return ___UpdateMouseRotationPerfMarker_68; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateMouseRotationPerfMarker_68() { return &___UpdateMouseRotationPerfMarker_68; }
	inline void set_UpdateMouseRotationPerfMarker_68(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateMouseRotationPerfMarker_68 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction[]
struct MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  m_Items[1];

public:
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___description_2), (void*)NULL);
	}
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___description_2), (void*)NULL);
	}
};
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  m_Items[1];

public:
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  m_Items[1];

public:
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		m_Items[index] = value;
	}
};
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[]
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * m_Items[1];

public:
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[]
struct BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * m_Items[1];

public:
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum[]
struct MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  m_Items[1];

public:
	inline MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___Name_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___CursorMesh_2), (void*)NULL);
		#endif
	}
	inline MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___Name_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___CursorMesh_2), (void*)NULL);
		#endif
	}
};
// UnityEngine.Transform[]
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * m_Items[1];

public:
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.MeshRenderer[]
struct MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * m_Items[1];

public:
	inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mC741BBB0A647C814227953DB9B23CB1BDF571C5B_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_m0FCCD33CE2C6A7589E52A2AB0872FE361BF5EF60_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.Object,System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB  Dictionary_2_GetEnumerator_mF1CF1D13F3E70C6D20D96D9AC88E44454E4C0053_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_gshared_inline (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>::get_Key()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m9B9FB07EC2C1D82E921C9316A4E0901C933BBF6C_gshared (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mE363888280B72ED50538416C060EF9FC94B3BB00_gshared (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Object>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_m3455807C552312C60038DF52EF328C3687442DE3_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, RuntimeObject ** ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m2C7E51568033239B506E15E7804A0B8658246498_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::Invoke(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, RuntimeObject * ___arg00, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared (const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.DateTime>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29_gshared (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.DateTime>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_gshared_inline (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<System.DateTime>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_gshared_inline (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<System.DateTime>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  Nullable_1_get_Value_m9412E5B49A0FFC6C10C293C29DF5EAF3DD759594_gshared (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1<System.UInt32>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294_gshared (List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * __this, uint32_t ___item0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.UInt32>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m30083179A7DD6C14E23B28334B0849E1C8C151A2_gshared (List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * __this, uint32_t ___item0, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.UInt32>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_gshared (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, uint32_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.UInt32>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.UInt32>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.ByteEnum>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_mA37A97B81445268412FC4754069FD1AD7ED89B8E_gshared (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, uint8_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.ByteEnum>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint8_t Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.ByteEnum>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_InputData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_gshared_inline (InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * __this, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133  HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.HashSet`1/Enumerator<System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.HashSet`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0[] UnityEngine.Component::GetComponentsInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum>()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_gshared_inline (const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponentInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponentInChildren_TisRuntimeObject_m2094C39A775FDD39B5FB9B5A77E988F3482DC46B_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0[] UnityEngine.GameObject::GetComponentsInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* GameObject_GetComponentsInChildren_TisRuntimeObject_m800C0157D5841A8D4C6A741E6C4F9FFFC0E0E33F_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>::get_InputData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_gshared_inline (InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * __this, const RuntimeMethod* method);

// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem Microsoft.MixedReality.Toolkit.CoreServices::get_InputSystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::Add(!0,!1)
inline void Dictionary_2_Add_mC8F0A0F1C988BECD28E03E831402359CEC153834 (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * __this, RuntimeObject* ___key0, PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D *, RuntimeObject*, PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 *, const RuntimeMethod*))Dictionary_2_Add_mC741BBB0A647C814227953DB9B23CB1BDF571C5B_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::Remove(!0)
inline bool Dictionary_2_Remove_m4E6D3F2F2D80F86E327D053484DD04F6DE4AE288 (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * __this, RuntimeObject* ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D *, RuntimeObject*, const RuntimeMethod*))Dictionary_2_Remove_m0FCCD33CE2C6A7589E52A2AB0872FE361BF5EF60_gshared)(__this, ___key0, method);
}
// Unity.Profiling.ProfilerMarker/AutoScope Unity.Profiling.ProfilerMarker::Auto()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::GetEnumerator()
inline Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F  Dictionary_2_GetEnumerator_m396BD3F263C5AB448724B461910D54D4E8C231F6 (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F  (*) (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D *, const RuntimeMethod*))Dictionary_2_GetEnumerator_mF1CF1D13F3E70C6D20D96D9AC88E44454E4C0053_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::get_Current()
inline KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  Enumerator_get_Current_m77543FA2993EDE6CAB24EBB9C65A97564C3FE677_inline (Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  (*) (Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F *, const RuntimeMethod*))Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_gshared_inline)(__this, method);
}
// !0 System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::get_Key()
inline RuntimeObject* KeyValuePair_2_get_Key_mA68682BB6B7272E8AA584DF449F80B7ECF2ADC3E_inline (KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 *, const RuntimeMethod*))KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::get_Value()
inline PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * KeyValuePair_2_get_Value_mA22939BED47EBE722D9815A2D9E1D9CDD060F2E5_inline (KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 * __this, const RuntimeMethod* method)
{
	return ((  PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * (*) (KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 *, const RuntimeMethod*))KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::Update(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_IsPressed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method);
// System.Int64 Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_PressedTimestamp()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int64_t PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method);
// System.Int64 Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_ReleasedTimestamp()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int64_t PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::MoveNext()
inline bool Enumerator_MoveNext_m82687B6661CBBEF189717B055A8BCB0ED8A2A143 (Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F *, const RuntimeMethod*))Enumerator_MoveNext_m9B9FB07EC2C1D82E921C9316A4E0901C933BBF6C_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::Dispose()
inline void Enumerator_Dispose_m834933BF9C154F01C3C471483B9309C00711E36B (Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F *, const RuntimeMethod*))Enumerator_Dispose_mE363888280B72ED50538416C060EF9FC94B3BB00_gshared)(__this, method);
}
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::Dispose()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::get_Pointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_mA0986E57B6FF2C88C2750BC23F756447C4FCEEC3 (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * __this, RuntimeObject* ___key0, PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 ** ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D *, RuntimeObject*, PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 **, const RuntimeMethod*))Dictionary_2_TryGetValue_m3455807C552312C60038DF52EF328C3687442DE3_gshared)(__this, ___key0, ___value1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_IsPressed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo>::.ctor()
inline void Dictionary_2__ctor_m59C848BE0E49AF9F55537F3652BF01ECA8499D9D (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D *, const RuntimeMethod*))Dictionary_2__ctor_m2C7E51568033239B506E15E7804A0B8658246498_gshared)(__this, method);
}
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::.ctor(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method);
// System.Int64 System.Diagnostics.Stopwatch::GetTimestamp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t Stopwatch_GetTimestamp_m7A4B2D144D880343DB783326F36F6996C1D1A1CA (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_ReleasedTimestamp(System.Int64)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, int64_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_PressedTimestamp(System.Int64)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, int64_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_IsInteractionEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, bool ___value0, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.DictationEventData::get_DictationResult()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_inline (DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.String>::Invoke(!0)
inline void UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD (UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4 * __this, String_t* ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4 *, String_t*, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputHandler_Start_mCA77A9C29C7AF11676971F429ABF0E2D3BC04EBE (BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem>()
inline RuntimeObject* CoreServices_GetInputSystemDataProvider_TisIMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_mFC40140D549A09B97112A2717B47E8E60AE60A4A (const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (const RuntimeMethod*))CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared)(method);
}
// System.Void UnityEngine.Debug::Assert(System.Boolean,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC (bool ___condition0, String_t* ___message1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::StartRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::StopRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputHandler_OnDisable_m7EC6FD89C384F45FD08DFE9EEAD8C9AF9AD6BC74 (BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59 (BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.String>::.ctor()
inline void UnityEvent_1__ctor_m08DA3398D67E0E0B82E658405A8FAE4A36268F2D (UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_tF04CCC69367372DFA68351B5B674F40CDBD54CE4 *, const RuntimeMethod*))UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener_Start_m3F7B3567D47950736A655C05B9961B8C6C3EC60B (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_IsLookedAt(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_LookedAtEyeTarget(Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::UpdateHitTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_LookedAtTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_IsLookedAt()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusStop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusStay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener_OnDisable_m73FB8CF4D56F72E3BEF936FCC5F25883AE90BDA5 (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.DateTime>::.ctor(!0)
inline void Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29 (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 , const RuntimeMethod*))Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29_gshared)(__this, ___value0, method);
}
// System.Boolean System.Nullable`1<System.DateTime>::get_HasValue()
inline bool Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_inline (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *, const RuntimeMethod*))Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_gshared_inline)(__this, method);
}
// !0 System.Nullable`1<System.DateTime>::GetValueOrDefault()
inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_inline (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method)
{
	return ((  DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  (*) (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_gshared_inline)(__this, method);
}
// System.Boolean System.DateTime::op_Inequality(System.DateTime,System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DateTime_op_Inequality_m3CE79ABD4AA011CAA6E6EDE6D1028AEB56BFF5A1 (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d10, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d21, const RuntimeMethod* method);
// !0 System.Nullable`1<System.DateTime>::get_Value()
inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  Nullable_1_get_Value_m9412E5B49A0FFC6C10C293C29DF5EAF3DD759594 (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method)
{
	return ((  DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  (*) (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *, const RuntimeMethod*))Nullable_1_get_Value_m9412E5B49A0FFC6C10C293C29DF5EAF3DD759594_gshared)(__this, method);
}
// System.DateTime System.DateTime::get_UtcNow()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget>()
inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * GameObject_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_mAB8CBEA110AEC9DB7152FBD9678CA0F25C43B8FA (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.TimeSpan System.DateTime::op_Subtraction(System.DateTime,System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021 (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d10, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d21, const RuntimeMethod* method);
// System.Double System.TimeSpan::get_TotalMilliseconds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double TimeSpan_get_TotalMilliseconds_m48B00B27D485CC556C10A5119BC11E1A1E0FE363 (TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * __this, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnLookAtStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_WhileLookingAtTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_IsDwelledOn()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Double System.TimeSpan::get_TotalSeconds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA (TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusDwell()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_IsDwelledOn(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnDwell()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnLookAway()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_MixedRealityInputAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::op_Equality(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F (MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___left0, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___right1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_SelectedTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_inline (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnSelected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener__ctor_m772E8CE6C735B09CA4990109CA6700A4C7EA86A3 (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.MaterialPropertyBlock::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MaterialPropertyBlock__ctor_m9055A333A5DA8CC70CC3D837BD59B54C313D39F3 (MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Shader::PropertyToID(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Shader_PropertyToID_m831E5B48743620DB9E3E3DD15A8DEA483981DD45 (String_t* ___name0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_UseUnscaledTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BaseCursor_get_UseUnscaledTime_m3A6C284846D12E2407215C53BEF0BCB86D1658D7 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E (const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_unscaledDeltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_unscaledDeltaTime_mA0AE7A144C88AE8AABB42DF17B0F3F0714BA06B2 (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FingerCursor::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Vector3&,UnityEngine.Quaternion&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, int32_t ___joint0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___position1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation2, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::TranslateToFinger(UnityEngine.Transform,System.Single,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, float ___deltaTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___fingerPosition2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___knucklePosition3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::RotateToSurfaceNormal(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___surfaceNormal1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___pointerRotation2, float ___distance3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::TranslateFromTipToPad(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___fingerPosition1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___knucklePosition2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___surfaceNormal3, float ___distance4, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::RotateToFinger(UnityEngine.Transform,System.Single,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, float ___deltaTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___pointerRotation2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::UpdateCursorTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_UpdateCursorTransform_mA854CD7582220F22DE7B8B6F63E4637E7B2CC767 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Renderer::GetPropertyBlock(UnityEngine.MaterialPropertyBlock)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_GetPropertyBlock_mCD279F8A7CEB56ABB9EF9D150103FB1C4FB3CE8C (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * ___properties0, const RuntimeMethod* method);
// System.Void UnityEngine.MaterialPropertyBlock::SetFloat(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MaterialPropertyBlock_SetFloat_m4563FC96949F1755182A96E6CDAFDACA107EDFDC (MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * __this, int32_t ___nameID0, float ___value1, const RuntimeMethod* method);
// System.Void UnityEngine.Renderer::SetPropertyBlock(UnityEngine.MaterialPropertyBlock)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_SetPropertyBlock_m1B999AB9B425587EF44CF1CB83CDE0A191F76C40 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * ___properties0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_PositionLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseCursor_get_PositionLerpTime_mAE3A61C0446C31A1F299BF6CF12A48B8DB55FCF7 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Lerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, float ___t2, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_RotationLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseCursor_get_RotationLerpTime_mCE288A66DE1F18FA045E205ABA98E3E6B91FE993 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Lerp(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, float ___t2, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_UnaryNegation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::LookRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Slerp(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Slerp_m56DE173C3520C83DF3F1C6EDFA82FF88A2C9E756 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, float ___t2, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Dot(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_right()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_right_mC32CE648E98D3D4F62F897A2751EE567C7C0CFB0 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05 (float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Controller()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA (String_t* ___format0, RuntimeObject * ___arg01, const RuntimeMethod* method);
// System.Void UnityEngine.Object::set_name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_InputSourceParent(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_IsActive()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.Void System.NotImplementedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotImplementedException__ctor_m8BEA657E260FC05F0C6D2C43A6E9BC08040F59C4 (NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4 * __this, const RuntimeMethod* method);
// System.Type System.Object::GetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Boolean System.Type::op_Inequality(System.Type,System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Type_op_Inequality_m615014191FB05FD50F63A24EB9A6CCA785E7CEC9 (Type_t * ___left0, Type_t * ___right1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::Equals(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___other0, const RuntimeMethod* method);
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_PointerId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_PointerName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.Boolean System.String::Equals(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_Equals_m90EB651A751C3444BADBBD5401109CE05B3E1CFB (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Origin()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Direction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Rays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.RayStep::UpdateRayStep(UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___terminus1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Length()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSimplePhysicsStep(Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Single,UnityEngine.LayerMask[],System.Boolean,UnityEngine.RaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityRaycaster_RaycastSimplePhysicsStep_mBA9AACC9AA39AE0591D905C3E5B680CC6C90821D (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step0, float ___maxDistance1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, bool ___focusIndividualCompoundCollider3, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * ___physicsHit4, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::.ctor(System.Boolean,UnityEngine.RaycastHit)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76 (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * __this, bool ___raycastValid0, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ___hitInfo1, const RuntimeMethod* method);
// UnityEngine.Collider UnityEngine.RaycastHit::get_collider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.RaycastHit::get_point()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RaycastHit_get_point_m0E564B2A72C7A744B889AE9D596F3EFA55059001 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.RaycastHit::get_distance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float RaycastHit_get_distance_m1CBA60855C35F29BBC348D374BBC76386A243543 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_BaseCursor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_IsActive(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_IsFocusLocked(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Utilities.CameraCache::get_Main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Equality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_SourceId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_InputSourceParent()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1<System.UInt32>::Remove(!0)
inline bool List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294 (List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * __this, uint32_t ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E *, uint32_t, const RuntimeMethod*))List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<System.UInt32>::Add(!0)
inline void List_1_Add_m30083179A7DD6C14E23B28334B0849E1C8C151A2 (List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * __this, uint32_t ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E *, uint32_t, const RuntimeMethod*))List_1_Add_m30083179A7DD6C14E23B28334B0849E1C8C151A2_gshared)(__this, ___item0, method);
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Object()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener_OnEnable_m6CA5222111D2EA860C0F38480674D00948767597 (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_VisibleSourcesCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t BaseCursor_get_VisibleSourcesCount_m842A096FC9AEA4261C87C49AC90C07E672BE0C81 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::set_VisibleSourcesCount(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_set_VisibleSourcesCount_mC884E9520D4EB7A9357B0A1D233D55B0135B40B0 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, uint32_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.GameObjectExtensions::DestroyGameObject(UnityEngine.GameObject,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObjectExtensions_DestroyGameObject_m7114755BE0C5889143147379AD4AD37BAA8F1000 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, float ___t1, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.UInt32>::.ctor(!0)
inline void Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, uint32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, uint32_t, const RuntimeMethod*))Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_gshared)(__this, ___value0, method);
}
// !0 System.Nullable`1<System.UInt32>::GetValueOrDefault()
inline uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	return ((  uint32_t (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline)(__this, method);
}
// System.Boolean System.Nullable`1<System.UInt32>::get_HasValue()
inline bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, const RuntimeMethod*))Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline)(__this, method);
}
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::get_Handedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>::.ctor(!0)
inline void Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 * __this, uint8_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *, uint8_t, const RuntimeMethod*))Nullable_1__ctor_mA37A97B81445268412FC4754069FD1AD7ED89B8E_gshared)(__this, ___value0, method);
}
// !0 System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>::GetValueOrDefault()
inline uint8_t Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_inline (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 * __this, const RuntimeMethod* method)
{
	return ((  uint8_t (*) (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_gshared_inline)(__this, method);
}
// System.Boolean System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>::get_HasValue()
inline bool Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_inline (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *, const RuntimeMethod*))Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_gshared_inline)(__this, method);
}
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_InputData()
inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_inline (InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * __this, const RuntimeMethod* method)
{
	return ((  MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (*) (InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 *, const RuntimeMethod*))InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_gshared_inline)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Vector3::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.RayStep::.ctor(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RayStep__ctor_m21DEB0B3953B9DCFD8BE3666BC28050C9954354D (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___terminus1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.BaseInputEventData>::Invoke(!0)
inline void UnityEvent_1_Invoke_mAB35D2B53B861757A29E7496B236DAD54A49F096 (UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085 * __this, BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085 *, BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE *, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.BaseInputEventData>::.ctor()
inline void UnityEvent_1__ctor_mD2CC4D61F76F2B6222356EE45D15481994CCCAD2 (UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_tAC1073C214DD5FC8A72C57C3452D8052B030F085 *, const RuntimeMethod*))UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Transform::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Ray::.ctor(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Ray__ctor_m695D219349B8AA4C82F96C55A27D384C07736F6B (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetControllerInstance(Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2 (int32_t ___sourceType0, uint8_t ___hand1, RuntimeObject** ___controller2, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetInteractionMapping(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.DeviceInputType,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E (RuntimeObject* ___controller0, int32_t ___inputType1, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** ___mapping2, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_PositionData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Ray::set_origin(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Ray_set_origin_m6E0F02140356CBC1BA9B448CBBA065AAB492A132 (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_RotationData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MathUtilities::GetDirection(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MathUtilities_GetDirection_m40B3D7517923E0A792A9920A59A0105D94D4341F (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, const RuntimeMethod* method);
// System.Void UnityEngine.Ray::set_direction(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Ray_set_direction_mD4D0EA72276CF43ABFE2C190DFD24930ED977D8B (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::GetEnumerator()
inline Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD  HashSet_1_GetEnumerator_mA889029FA07B9D545D789ABAEF094BDF9A228416 (HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD  (*) (HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 *, const RuntimeMethod*))HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared)(__this, method);
}
// !0 System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::get_Current()
inline RuntimeObject* Enumerator_get_Current_m5C3D3DFB017C501D03F223E3463AB91458CC44B7_inline (Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD *, const RuntimeMethod*))Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::MoveNext()
inline bool Enumerator_MoveNext_m9B9126E05AE57185E1C1B2007019CB72B2D7E992 (Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD *, const RuntimeMethod*))Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared)(__this, method);
}
// System.Void System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::Dispose()
inline void Enumerator_Dispose_m3897751F5615B83A9E0565DD015002AE963DB69B (Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD *, const RuntimeMethod*))Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared)(__this, method);
}
// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_InputType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.InputRayUtils::GetHeadGazeRay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36 (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetEyeGazeRay(UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetHandRay(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7 (uint8_t ___hand0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetMotionControllerRay(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50 (uint8_t ___hand0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray1, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708 (RuntimeObject * ___message0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_OnCursorStateChange_mB3E67F6CCF7D497558679F79677E809536D27FB4 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, int32_t ___state0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_IsSourceDetected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BaseCursor_get_IsSourceDetected_m4F69B30F7720B96639B0A0F88A44225DB9651763 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_IsPointerDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BaseCursor_get_IsPointerDown_m33736993BA24441F805F2996B881DBBB22A85EB2 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::ElementVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5 (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, bool ___visible0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_one()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB (const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Lerp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Lerp_m9A74C5A0C37D0CDF45EE66E7774D12A9B93B1364 (float ___a0, float ___b1, float ___t2, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_DefaultCursorDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseCursor_get_DefaultCursorDistance_m98644B3BC2BF9AAA389ECCC49997C74D24FFF478 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::SetVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_SetVisibility_m9121318DA5D0CF2C7B151546F69ED9D63AC2F549 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, bool ___visible0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_CursorState()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59_inline (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsFocusLocked()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_IsTracked()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ControllerPoseSynchronizer_get_IsTracked_m603E52C39FF1E41295D21576E595DD2EBBCE49BB (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BaseControllerPointer_get_IsInteractionEnabled_m9F18E5E5A529EC82BA41F7D71E069E96D61F4C21 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider>()
inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * Component_GetComponent_TisBaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4_mB5C56A9C6C71E5882C6561D2C525F6E8AD702558 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// !!0[] UnityEngine.Component::GetComponentsInChildren<Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer>()
inline BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* Component_GetComponentsInChildren_TisBaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA_mA222E47A759E225CC830FD9EC3D5B7846EF6A0C9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared)(__this, method);
}
// System.Void UnityEngine.Behaviour::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B (Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_OnEnable_m76A38FA289173B6CA59393DB0A8CD8AC2AA5354F (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::CheckInitialization()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_OnDisable_mBEBFA694AE56F54831EEC9B0CFB2857FE8565B6F (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_OnPostSceneQuery_m81D5B744DA4836BD0A7476D37141F0F0864C3FBF (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Input.LinePointer::get_LineBase()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_BaseCursor()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E (bool ___condition0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::UpdateMatrix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_UpdateMatrix_m65C70EA4BA3A85F0B7435D54157F40494F543307 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Result()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Point()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::SetLinePoints(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___startPoint0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___endPoint1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_DefaultPointerExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseControllerPointer_get_DefaultPointerExtent_mFEEB522B2CE35341FFBA375F71D8D5D93E42B653 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_RayDistance()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[] Microsoft.MixedReality.Toolkit.Input.LinePointer::get_LineRenderers()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::get_LineStepCount()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EF_inline (BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Mathf::Max(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Mathf_Max_mBDE4C6F1883EE3215CD7AE62550B2AC90592BC3F (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::set_LineColor(UnityEngine.Gradient)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AF_inline (BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * __this, Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_back()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_back_mE7EF8625637E6F8B9E6B42A6AE140777C51E02F7 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::set_LineEndClamp(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_set_LineEndClamp_m53926A0470B70691BA76A6522460AC3BB1067999 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, float ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::GetNormalizedLengthFromWorldLength(System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseMixedRealityLineDataProvider_GetNormalizedLengthFromWorldLength_mB1702F7BC31880A32A81198089D482AF16EDBC94 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, float ___worldLength0, int32_t ___searchResolution1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::set_Rays(Microsoft.MixedReality.Toolkit.Physics.RayStep[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::set_FirstPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_set_FirstPoint_mC089D0A2B0C719699AD08F9DDC3D472C099650A8 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::set_LastPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_set_LastPoint_m743B217D19D640DFEEE1BE06AAF643A0D616B2C9 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Gradient::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Gradient__ctor_m297B6B928FDA6BD99A142736017F5C0E2B30BE7F (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer__ctor_m8374A8CF3D902194835061AD6EC89AAE3FA48071 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum>()
inline MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_inline (const RuntimeMethod* method)
{
	return ((  MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* (*) (const RuntimeMethod*))Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_gshared_inline)(method);
}
// !!0 UnityEngine.Component::GetComponentInChildren<UnityEngine.MeshRenderer>()
inline MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * Component_GetComponentInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mC210673BE9A285437FF73A2988A9DBAAF9FE337E (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponentInChildren_TisRuntimeObject_m2094C39A775FDD39B5FB9B5A77E988F3482DC46B_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_OnEnable_m99AC865286A0229699D1A68C08F7E49043BB4858 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MeshCursor::SetCursorState(Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37 (MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2 * __this, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  ___stateDatum0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.MeshFilter>()
inline MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Void UnityEngine.MeshFilter::set_mesh(UnityEngine.Mesh)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshFilter_set_mesh_mA18AA96C75CC91CF0917BA1F437626499FAAF496 (MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * __this, Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.String System.String::ToLower()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8 (String_t* __this, const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.UInt32 <PrivateImplementationDetails>::ComputeStringHash(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t U3CPrivateImplementationDetailsU3E_ComputeStringHash_mDE4C1B254DA56F4B01F2A2C9AC0F946365FFA75D (String_t* ___s0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::SetLocalPositionAndRotation(UnityEngine.GameObject,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___buttonGameObject0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___newTransform1, const RuntimeMethod* method);
// System.Boolean System.Single::Equals(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7 (float* __this, float ___obj0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_localRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector2::op_Inequality(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lhs0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::get_one()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_get_one_m6E01BE09CEA40781CB12CCB6AF33BBDA0F60CEED (const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Addition(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Multiply(UnityEngine.Vector2,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, float ___d1, const RuntimeMethod* method);
// !!0[] UnityEngine.GameObject::GetComponentsInChildren<UnityEngine.MeshRenderer>()
inline MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3* GameObject_GetComponentsInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mA32C4E24AF4AF3533AE3E69E88F7CBC0AA9051FB (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3* (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponentsInChildren_TisRuntimeObject_m800C0157D5841A8D4C6A741E6C4F9FFFC0E0E33F_gshared)(__this, method);
}
// System.Void UnityEngine.Renderer::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_set_enabled_m0933766657F2685BAAE3340B0A984C0E63925303 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer_OnInputDown_m97B0DC81F1BF459E9930B9C53B3C49D9925AEF7A (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer_OnInputUp_m63A54F67BAA46CEF20CBD409A07DE90AAEF3C724 (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer_OnInputChanged_mFD462CE4BBF3902FF93C24A23D36D0775919A1ED (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer_OnInputChanged_m5BD16169B74D4D53B665C747B54B8EF1E9E3F3BF (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer__ctor_m8CCEBA6AF8A48CD3A2B0FF72C6F6FDCCC8E2F9AA (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PointerExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.RayStep::CopyRay(UnityEngine.Ray,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RayStep_CopyRay_mC78083BBF0A93F22A477DD547E3D552EB9D2FE29 (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___ray0, float ___rayLength1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_origin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187 (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_green()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0 (const RuntimeMethod* method);
// System.Void UnityEngine.Debug::DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___start0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dir1, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___color2, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_PoseAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76_inline (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_UseSourcePoseData()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28C_inline (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>::get_InputData()
inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_inline (InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * __this, const RuntimeMethod* method)
{
	return ((  Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  (*) (InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 *, const RuntimeMethod*))InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_gshared_inline)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector2_op_Implicit_mD152B6A34B4DB7FFECC2844D74718568FE867D6F (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___v0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::UpdateMouseRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___mouseDeltaRotation0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::get_eulerAngles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::get_MovementThresholdToUnHide()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_inline (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::Rotate(UnityEngine.Vector3,UnityEngine.Space)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_Rotate_m3424566A0D19A1487AE3A82B08C47F2A2D2A26CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___eulers0, int32_t ___relativeTo1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMousePointer_Start_m4A9F473B8A683934ED0E187AF2EA5F4EC0083ED8 (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Cursor::set_visible(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Cursor_set_visible_mDB51E60B3D7B14873A6F5FBE5E0A432D4A46C431 (bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Cursor::set_lockState(UnityEngine.CursorLockMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Cursor_set_lockState_m019E27A0FE021A28A1C672801416ACA5E770933F (int32_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::SetVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMousePointer_SetVisibility_m2C5A3D32733170C1A50630E16E6DB10AA552AA35 (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, bool ___visible0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMousePointer__ctor_m9826535EE189FA825A0267AB8C1757E9B7F809EC (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::.ctor(System.IntPtr)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_End(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A (intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.IntPtr Unity.Profiling.ProfilerMarker::Internal_Create(System.String,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370 (String_t* ___name0, uint16_t ___flags1, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_Begin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5 (intptr_t ___markerPtr0, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_Initialize_m6A5E8F97CC205DEC79697939CD8062B57C76E987 (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Initialize_m6A5E8F97CC205DEC79697939CD8062B57C76E987_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Initialize_m6A5E8F97CC205DEC79697939CD8062B57C76E987_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13855));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13856));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13857));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13858));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13860));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13860));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13861));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m8045547AED9E0A33D8E70DE66F076E2EE6E206DC_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13861));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13859));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Destroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_Destroy_m5942250584F3DC35B5247A1C61ECA49B7FC45472 (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Destroy_m5942250584F3DC35B5247A1C61ECA49B7FC45472_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Destroy_m5942250584F3DC35B5247A1C61ECA49B7FC45472_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13862));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13863));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13864));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13865));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13867));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13867));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13868));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m7DF6B444D35B11AACB65301352ED33F3F466774D_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13868));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13866));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::RegisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_RegisterPointer_mE6E8988CE765471977AA1469843B29D1690E3FC1 (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_RegisterPointer_mE6E8988CE765471977AA1469843B29D1690E3FC1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_RegisterPointer_mE6E8988CE765471977AA1469843B29D1690E3FC1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13869));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13870));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13871));
		// var pointerInfo = new PointerInfo(pointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13872));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13875));
		PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_1 = (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 *)il2cpp_codegen_object_new(PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458_il2cpp_TypeInfo_var);
		PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0(L_1, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13875));
		V_0 = L_1;
		// pointerInfos.Add(pointer, pointerInfo);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13873));
		Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * L_2 = __this->get_pointerInfos_0();
		RuntimeObject* L_3 = ___pointer0;
		PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13876));
		NullCheck(L_2);
		Dictionary_2_Add_mC8F0A0F1C988BECD28E03E831402359CEC153834(L_2, L_3, L_4, /*hidden argument*/Dictionary_2_Add_mC8F0A0F1C988BECD28E03E831402359CEC153834_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13876));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13874));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::UnregisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_UnregisterPointer_m3A73FAB6DB98E9F255C9F8C563E463E172E3CC0B (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_UnregisterPointer_m3A73FAB6DB98E9F255C9F8C563E463E172E3CC0B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_UnregisterPointer_m3A73FAB6DB98E9F255C9F8C563E463E172E3CC0B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13877));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13878));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13879));
		// pointerInfos.Remove(pointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13880));
		Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * L_0 = __this->get_pointerInfos_0();
		RuntimeObject* L_1 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13882));
		NullCheck(L_0);
		Dictionary_2_Remove_m4E6D3F2F2D80F86E327D053484DD04F6DE4AE288(L_0, L_1, /*hidden argument*/Dictionary_2_Remove_m4E6D3F2F2D80F86E327D053484DD04F6DE4AE288_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13882));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13881));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DefaultPrimaryPointerSelector_Update_mA628E5340FE9482CAD5EC7FE5273D3605EBF9934 (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Update_mA628E5340FE9482CAD5EC7FE5273D3605EBF9934_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * V_3 = NULL;
	Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F  V_4;
	memset((&V_4), 0, sizeof(V_4));
	KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  V_5;
	memset((&V_5), 0, sizeof(V_5));
	RuntimeObject* V_6 = NULL;
	PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * V_7 = NULL;
	bool V_8 = false;
	RuntimeObject* V_9 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_5), (&V_6), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Update_mA628E5340FE9482CAD5EC7FE5273D3605EBF9934_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13883));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13884));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B11_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B15_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13885));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13886));
		IL2CPP_RUNTIME_CLASS_INIT(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields*)il2cpp_codegen_static_fields_for(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_1();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13910));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13910));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13887));
			// IMixedRealityPointer primaryPointer = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13888));
			V_2 = (RuntimeObject*)NULL;
			// PointerInfo primaryInfo = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13889));
			V_3 = (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 *)NULL;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13890));
			// foreach (var keyValue in pointerInfos)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13891));
			Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * L_2 = __this->get_pointerInfos_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13911));
			NullCheck(L_2);
			Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F  L_3 = Dictionary_2_GetEnumerator_m396BD3F263C5AB448724B461910D54D4E8C231F6(L_2, /*hidden argument*/Dictionary_2_GetEnumerator_m396BD3F263C5AB448724B461910D54D4E8C231F6_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13911));
			V_4 = L_3;
		}

IL_0022:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13892));
				goto IL_00a8;
			}

IL_0027:
			{
				// foreach (var keyValue in pointerInfos)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13893));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13912));
				KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930  L_4 = Enumerator_get_Current_m77543FA2993EDE6CAB24EBB9C65A97564C3FE677_inline((Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F *)(&V_4), /*hidden argument*/Enumerator_get_Current_m77543FA2993EDE6CAB24EBB9C65A97564C3FE677_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13912));
				V_5 = L_4;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13894));
				// var pointer = keyValue.Key;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13895));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13913));
				RuntimeObject* L_5 = KeyValuePair_2_get_Key_mA68682BB6B7272E8AA584DF449F80B7ECF2ADC3E_inline((KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 *)(&V_5), /*hidden argument*/KeyValuePair_2_get_Key_mA68682BB6B7272E8AA584DF449F80B7ECF2ADC3E_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13913));
				V_6 = L_5;
				// var info = keyValue.Value;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13896));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13914));
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_6 = KeyValuePair_2_get_Value_mA22939BED47EBE722D9815A2D9E1D9CDD060F2E5_inline((KeyValuePair_2_tCA477D67A39813B23FEB346520A4172FD7F0F930 *)(&V_5), /*hidden argument*/KeyValuePair_2_get_Value_mA22939BED47EBE722D9815A2D9E1D9CDD060F2E5_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13914));
				V_7 = L_6;
				// info.Update(pointer);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13897));
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_7 = V_7;
				RuntimeObject* L_8 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13915));
				NullCheck(L_7);
				PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A(L_7, L_8, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13915));
				// if (info.IsInteractionEnabled &&
				//     (primaryInfo == null ||
				//     (info.IsPressed && (!primaryInfo.IsPressed || info.PressedTimestamp < primaryInfo.PressedTimestamp)) ||
				//     (!primaryInfo.IsPressed && info.ReleasedTimestamp > primaryInfo.ReleasedTimestamp)))
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13898));
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_9 = V_7;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13916));
				NullCheck(L_9);
				bool L_10 = PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7(L_9, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13916));
				if (!L_10)
				{
					goto IL_0098;
				}
			}

IL_0056:
			{
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_11 = V_3;
				if (!L_11)
				{
					goto IL_0095;
				}
			}

IL_0059:
			{
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_12 = V_7;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13917));
				NullCheck(L_12);
				bool L_13 = PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883(L_12, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13917));
				if (!L_13)
				{
					goto IL_0079;
				}
			}

IL_0062:
			{
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_14 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13918));
				NullCheck(L_14);
				bool L_15 = PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883(L_14, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13918));
				if (!L_15)
				{
					goto IL_0095;
				}
			}

IL_006a:
			{
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_16 = V_7;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13919));
				NullCheck(L_16);
				int64_t L_17 = PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_inline(L_16, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13919));
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_18 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13920));
				NullCheck(L_18);
				int64_t L_19 = PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_inline(L_18, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13920));
				if ((((int64_t)L_17) < ((int64_t)L_19)))
				{
					goto IL_0095;
				}
			}

IL_0079:
			{
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_20 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13921));
				NullCheck(L_20);
				bool L_21 = PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883(L_20, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13921));
				if (L_21)
				{
					goto IL_0092;
				}
			}

IL_0081:
			{
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_22 = V_7;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13922));
				NullCheck(L_22);
				int64_t L_23 = PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_inline(L_22, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13922));
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_24 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13923));
				NullCheck(L_24);
				int64_t L_25 = PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_inline(L_24, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13923));
				G_B11_0 = ((((int64_t)L_23) > ((int64_t)L_25))? 1 : 0);
				goto IL_0093;
			}

IL_0092:
			{
				G_B11_0 = 0;
			}

IL_0093:
			{
				G_B13_0 = G_B11_0;
				goto IL_0096;
			}

IL_0095:
			{
				G_B13_0 = 1;
			}

IL_0096:
			{
				G_B15_0 = G_B13_0;
				goto IL_0099;
			}

IL_0098:
			{
				G_B15_0 = 0;
			}

IL_0099:
			{
				V_8 = (bool)G_B15_0;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13899));
				bool L_26 = V_8;
				if (!L_26)
				{
					goto IL_00a7;
				}
			}

IL_009f:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13900));
				// primaryPointer = pointer;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13901));
				RuntimeObject* L_27 = V_6;
				V_2 = L_27;
				// primaryInfo = info;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13902));
				PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_28 = V_7;
				V_3 = L_28;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13903));
			}

IL_00a7:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13904));
			}

IL_00a8:
			{
				// foreach (var keyValue in pointerInfos)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13905));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13924));
				bool L_29 = Enumerator_MoveNext_m82687B6661CBBEF189717B055A8BCB0ED8A2A143((Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F *)(&V_4), /*hidden argument*/Enumerator_MoveNext_m82687B6661CBBEF189717B055A8BCB0ED8A2A143_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13924));
				if (L_29)
				{
					goto IL_0027;
				}
			}

IL_00b4:
			{
				IL2CPP_LEAVE(0xC5, FINALLY_00b6);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_00b6;
		}

FINALLY_00b6:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13906));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13925));
			Enumerator_Dispose_m834933BF9C154F01C3C471483B9309C00711E36B((Enumerator_t46D3F153CB4C8B98DE08BC41CE290BF52016610F *)(&V_4), /*hidden argument*/Enumerator_Dispose_m834933BF9C154F01C3C471483B9309C00711E36B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13925));
			IL2CPP_END_FINALLY(182)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(182)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0xC5, IL_00c5)
		}

IL_00c5:
		{
			// return primaryPointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13907));
			RuntimeObject* L_30 = V_2;
			V_9 = L_30;
			IL2CPP_LEAVE(0xD9, FINALLY_00ca);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00ca;
	}

FINALLY_00ca:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13908));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13926));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13926));
		IL2CPP_END_FINALLY(202)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(202)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xD9, IL_00d9)
	}

IL_00d9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13909));
		RuntimeObject* L_31 = V_9;
		return L_31;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m248D34DEC424BCFE4A290B76B15C25794AD613BD (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m248D34DEC424BCFE4A290B76B15C25794AD613BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * V_2 = NULL;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m248D34DEC424BCFE4A290B76B15C25794AD613BD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13927));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13928));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13929));
		// using (OnPointerDownPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13930));
		IL2CPP_RUNTIME_CLASS_INIT(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields*)il2cpp_codegen_static_fields_for(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var))->get_OnPointerDownPerfMarker_2();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13941));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13941));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13931));
			// PointerInfo info = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13932));
			V_2 = (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 *)NULL;
			// if (pointerInfos.TryGetValue(eventData.Pointer, out info))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13933));
			Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * L_2 = __this->get_pointerInfos_0();
			MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_3 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13942));
			NullCheck(L_3);
			RuntimeObject* L_4 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13942));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13943));
			NullCheck(L_2);
			bool L_5 = Dictionary_2_TryGetValue_mA0986E57B6FF2C88C2750BC23F756447C4FCEEC3(L_2, L_4, (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 **)(&V_2), /*hidden argument*/Dictionary_2_TryGetValue_mA0986E57B6FF2C88C2750BC23F756447C4FCEEC3_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13943));
			V_3 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13934));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_0033;
			}
		}

IL_0029:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13935));
			// info.IsPressed = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13936));
			PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_7 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13944));
			NullCheck(L_7);
			PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F(L_7, (bool)1, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13944));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13937));
		}

IL_0033:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13938));
			IL2CPP_LEAVE(0x45, FINALLY_0036);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0036;
	}

FINALLY_0036:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13939));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13945));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13945));
		IL2CPP_END_FINALLY(54)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(54)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x45, IL_0045)
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13940));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFF7AE1D6F7948ED5C706C35AAB6036CF183F02A3 (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFF7AE1D6F7948ED5C706C35AAB6036CF183F02A3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * V_2 = NULL;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFF7AE1D6F7948ED5C706C35AAB6036CF183F02A3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13946));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13947));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13948));
		// using (OnPointerUpPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13949));
		IL2CPP_RUNTIME_CLASS_INIT(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields*)il2cpp_codegen_static_fields_for(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var))->get_OnPointerUpPerfMarker_3();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13960));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13960));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13950));
			// PointerInfo info = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13951));
			V_2 = (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 *)NULL;
			// if (pointerInfos.TryGetValue(eventData.Pointer, out info))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13952));
			Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * L_2 = __this->get_pointerInfos_0();
			MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_3 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13961));
			NullCheck(L_3);
			RuntimeObject* L_4 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13961));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13962));
			NullCheck(L_2);
			bool L_5 = Dictionary_2_TryGetValue_mA0986E57B6FF2C88C2750BC23F756447C4FCEEC3(L_2, L_4, (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 **)(&V_2), /*hidden argument*/Dictionary_2_TryGetValue_mA0986E57B6FF2C88C2750BC23F756447C4FCEEC3_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13962));
			V_3 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13953));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_0033;
			}
		}

IL_0029:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13954));
			// info.IsPressed = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13955));
			PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * L_7 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13963));
			NullCheck(L_7);
			PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F(L_7, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13963));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13956));
		}

IL_0033:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13957));
			IL2CPP_LEAVE(0x45, FINALLY_0036);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0036;
	}

FINALLY_0036:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13958));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13964));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13964));
		IL2CPP_END_FINALLY(54)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(54)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x45, IL_0045)
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13959));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m9A14AA4EAF3B04D6B8C53946FDD197009EE13F1C (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m9A14AA4EAF3B04D6B8C53946FDD197009EE13F1C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m9A14AA4EAF3B04D6B8C53946FDD197009EE13F1C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13965));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13966));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13967));
		// void IMixedRealityPointerHandler.OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13968));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mB38717CA47236014BBE2825632948450AEC8D8EE (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mB38717CA47236014BBE2825632948450AEC8D8EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mB38717CA47236014BBE2825632948450AEC8D8EE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13969));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13970));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13971));
		// void IMixedRealityPointerHandler.OnPointerClicked(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13972));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector__ctor_m062B0EE4AFBA428CC92A23DE1D4D6B596F9AF56C (DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector__ctor_m062B0EE4AFBA428CC92A23DE1D4D6B596F9AF56C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector__ctor_m062B0EE4AFBA428CC92A23DE1D4D6B596F9AF56C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13973));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13974));
	{
		// private readonly Dictionary<IMixedRealityPointer, PointerInfo> pointerInfos = new Dictionary<IMixedRealityPointer, PointerInfo>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13975));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13976));
		Dictionary_2_t722E61C14764100A873E595E33D47898108D108D * L_0 = (Dictionary_2_t722E61C14764100A873E595E33D47898108D108D *)il2cpp_codegen_object_new(Dictionary_2_t722E61C14764100A873E595E33D47898108D108D_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m59C848BE0E49AF9F55537F3652BF01ECA8499D9D(L_0, /*hidden argument*/Dictionary_2__ctor_m59C848BE0E49AF9F55537F3652BF01ECA8499D9D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13976));
		__this->set_pointerInfos_0(L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13977));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13977));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultPrimaryPointerSelector__cctor_mCA51CA80824F986A1BBC4A96D11FD4F509276C64 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultPrimaryPointerSelector__cctor_mCA51CA80824F986A1BBC4A96D11FD4F509276C64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultPrimaryPointerSelector__cctor_mCA51CA80824F986A1BBC4A96D11FD4F509276C64_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13979));
	{
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] DefaultPrimaryPointerSelector.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13980));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13983));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralB34896A16E48562D3BAC13902180B35541637EFE, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13983));
		((DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields*)il2cpp_codegen_static_fields_for(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_1(L_0);
		// private static readonly ProfilerMarker OnPointerDownPerfMarker = new ProfilerMarker("[MRTK] DefaultPrimaryPointerSelector.OnPointerDown");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13981));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13984));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral13168B64CDD9CDDDBAD9634C5B0D1CF907B6A255, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13984));
		((DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields*)il2cpp_codegen_static_fields_for(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var))->set_OnPointerDownPerfMarker_2(L_1);
		// private static readonly ProfilerMarker OnPointerUpPerfMarker = new ProfilerMarker("[MRTK] DefaultPrimaryPointerSelector.OnPointerUp");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13982));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13985));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteralF0960B32773B5C86F4796FD3E0C0E91CC49AB605, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13985));
		((DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_StaticFields*)il2cpp_codegen_static_fields_for(DefaultPrimaryPointerSelector_tDFD629F34F0F498C04B42EBD39F9FB79176E3E80_il2cpp_TypeInfo_var))->set_OnPointerUpPerfMarker_3(L_2);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_get_IsInteractionEnabled_mF5619F6C0CBD9F63A8958CCE89D4F7DE7A89A6A7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13986));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13987));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13988));
		// get { return isInteractionEnabled; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13989));
		bool L_0 = __this->get_isInteractionEnabled_0();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return isInteractionEnabled; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13990));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_IsInteractionEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13991));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13992));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13993));
		// if (value && !isInteractionEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13994));
		bool L_0 = ___value0;
		if (!L_0)
		{
			goto IL_000f;
		}
	}
	{
		bool L_1 = __this->get_isInteractionEnabled_0();
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_0010;
	}

IL_000f:
	{
		G_B3_0 = 0;
	}

IL_0010:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13995));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0022;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13996));
		// ReleasedTimestamp = System.Diagnostics.Stopwatch.GetTimestamp();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13997));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14001));
		IL2CPP_RUNTIME_CLASS_INIT(Stopwatch_t0778B5C8DF8FE1D87FC57A2411DA695850BD64D4_il2cpp_TypeInfo_var);
		int64_t L_3 = Stopwatch_GetTimestamp_m7A4B2D144D880343DB783326F36F6996C1D1A1CA(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14001));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14002));
		PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14002));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13998));
	}

IL_0022:
	{
		// isInteractionEnabled = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13999));
		bool L_4 = ___value0;
		__this->set_isInteractionEnabled_0(L_4);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14000));
		return;
	}
}
// System.Int64 Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_ReleasedTimestamp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14003));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14004));
	{
		// public long ReleasedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14005));
		int64_t L_0 = __this->get_U3CReleasedTimestampU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_ReleasedTimestamp(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, int64_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14006));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14007));
	{
		// public long ReleasedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14008));
		int64_t L_0 = ___value0;
		__this->set_U3CReleasedTimestampU3Ek__BackingField_1(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_IsPressed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_get_IsPressed_m1C29C284BB91E05061964E83B96C21E9F6659883_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14009));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14010));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14011));
		// get { return isPressed; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14012));
		bool L_0 = __this->get_isPressed_2();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return isPressed; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14013));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_IsPressed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_set_IsPressed_m78C0F86A7552D9600FA4D57966622842B59F011F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14014));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14015));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14016));
		// if (value && !isPressed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14017));
		bool L_0 = ___value0;
		if (!L_0)
		{
			goto IL_000f;
		}
	}
	{
		bool L_1 = __this->get_isPressed_2();
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_0010;
	}

IL_000f:
	{
		G_B3_0 = 0;
	}

IL_0010:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14018));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14019));
		// PressedTimestamp = System.Diagnostics.Stopwatch.GetTimestamp();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14020));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14029));
		IL2CPP_RUNTIME_CLASS_INIT(Stopwatch_t0778B5C8DF8FE1D87FC57A2411DA695850BD64D4_il2cpp_TypeInfo_var);
		int64_t L_3 = Stopwatch_GetTimestamp_m7A4B2D144D880343DB783326F36F6996C1D1A1CA(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14030));
		PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14030));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14021));
		goto IL_0042;
	}

IL_0024:
	{
		// else if (!value && isPressed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14022));
		bool L_4 = ___value0;
		if (L_4)
		{
			goto IL_002f;
		}
	}
	{
		bool L_5 = __this->get_isPressed_2();
		G_B8_0 = ((int32_t)(L_5));
		goto IL_0030;
	}

IL_002f:
	{
		G_B8_0 = 0;
	}

IL_0030:
	{
		V_1 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14023));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14024));
		// ReleasedTimestamp = System.Diagnostics.Stopwatch.GetTimestamp();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14025));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14031));
		IL2CPP_RUNTIME_CLASS_INIT(Stopwatch_t0778B5C8DF8FE1D87FC57A2411DA695850BD64D4_il2cpp_TypeInfo_var);
		int64_t L_7 = Stopwatch_GetTimestamp_m7A4B2D144D880343DB783326F36F6996C1D1A1CA(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14031));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14032));
		PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_inline(__this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14032));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14026));
	}

IL_0042:
	{
		// isPressed = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14027));
		bool L_8 = ___value0;
		__this->set_isPressed_2(L_8);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14028));
		return;
	}
}
// System.Int64 Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::get_PressedTimestamp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14034));
	{
		// public long PressedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14035));
		int64_t L_0 = __this->get_U3CPressedTimestampU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::set_PressedTimestamp(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, int64_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14036));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14037));
	{
		// public long PressedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14038));
		int64_t L_0 = ___value0;
		__this->set_U3CPressedTimestampU3Ek__BackingField_3(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0 (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo__ctor_m9ABB19AC39D8D32A75C29DDFA8F948D7E378EDA0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14039));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14040));
	{
		// public PointerInfo(IMixedRealityPointer pointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14045));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14045));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14042));
		// IsInteractionEnabled = pointer.IsInteractionEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14043));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14046));
		NullCheck(L_0);
		bool L_1 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsInteractionEnabled() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14046));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14047));
		PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14047));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14044));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultPrimaryPointerSelector/PointerInfo::Update(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_Update_mA575031BA3FE1B1107725D8488CDF3C8CD8FF46A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14049));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14050));
		// IsInteractionEnabled = pointer.IsInteractionEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14051));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14053));
		NullCheck(L_0);
		bool L_1 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsInteractionEnabled() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14053));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14054));
		PointerInfo_set_IsInteractionEnabled_m0836DB514C3B50DA257BED558344A84F8A644550(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14054));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14052));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::StartRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8920));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8921));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8922));
		// if (dictationSystem != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8923));
		RuntimeObject* L_0 = __this->get_dictationSystem_15();
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8924));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8925));
		// dictationSystem.StartRecording(gameObject, initialSilenceTimeout, autoSilenceTimeout, recordingTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8926));
		RuntimeObject* L_2 = __this->get_dictationSystem_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8929));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8929));
		float L_4 = __this->get_initialSilenceTimeout_7();
		float L_5 = __this->get_autoSilenceTimeout_8();
		int32_t L_6 = __this->get_recordingTime_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8930));
		NullCheck(L_2);
		InterfaceActionInvoker5< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, float, float, int32_t, String_t* >::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem::StartRecording(UnityEngine.GameObject,System.Single,System.Single,System.Int32,System.String) */, IMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_il2cpp_TypeInfo_var, L_2, L_3, L_4, L_5, L_6, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8930));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8927));
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8928));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::StopRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8931));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8932));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8933));
		// if (dictationSystem != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8934));
		RuntimeObject* L_0 = __this->get_dictationSystem_15();
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8935));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8936));
		// dictationSystem.StopRecording();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8937));
		RuntimeObject* L_2 = __this->get_dictationSystem_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8940));
		NullCheck(L_2);
		InterfaceActionInvoker0::Invoke(3 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem::StopRecording() */, IMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8940));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8938));
	}

IL_001c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8939));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DictationHandler::get_IsListening()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DictationHandler_get_IsListening_m4C7D36D6AE714ED11F47049C0B0C566900033816 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_get_IsListening_m4C7D36D6AE714ED11F47049C0B0C566900033816_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_get_IsListening_m4C7D36D6AE714ED11F47049C0B0C566900033816_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8941));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8942));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8943));
		// get { return dictationSystem.IsListening; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8944));
		RuntimeObject* L_0 = __this->get_dictationSystem_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8946));
		NullCheck(L_0);
		bool L_1 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem::get_IsListening() */, IMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8946));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// get { return dictationSystem.IsListening; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8945));
		bool L_2 = V_0;
		return L_2;
	}
}
// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Input.DictationHandler::get_AudioClip()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * DictationHandler_get_AudioClip_m4699568E50331CA70E7DCF9061ADA1027CC249B2 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_get_AudioClip_m4699568E50331CA70E7DCF9061ADA1027CC249B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_get_AudioClip_m4699568E50331CA70E7DCF9061ADA1027CC249B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8947));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8948));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8949));
		// get { return dictationSystem.AudioClip; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8950));
		RuntimeObject* L_0 = __this->get_dictationSystem_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8952));
		NullCheck(L_0);
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_1 = InterfaceFuncInvoker0< AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * >::Invoke(5 /* UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationSystem::get_AudioClip() */, IMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8952));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// get { return dictationSystem.AudioClip; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8951));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_2 = V_0;
		return L_2;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_RegisterHandlers_m82252940A1747765CB35378DF117FAB13AFF01B2 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_RegisterHandlers_m82252940A1747765CB35378DF117FAB13AFF01B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_RegisterHandlers_m82252940A1747765CB35378DF117FAB13AFF01B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8953));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8954));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8955));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityDictationHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8956));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8958));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8958));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8959));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityDictationHandler_t286C960AD98D6EA11892BA6AADEBE97C5E616CB5_m7CEAFD4C70726D49D236DEACE147CEF6C3F6CAB6_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8959));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8957));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_UnregisterHandlers_mE97E8A82ECD5AC899E0923B461B16BB078190726 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_UnregisterHandlers_mE97E8A82ECD5AC899E0923B461B16BB078190726_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_UnregisterHandlers_mE97E8A82ECD5AC899E0923B461B16BB078190726_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8960));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8961));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8962));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityDictationHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8963));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8965));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8965));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8966));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityDictationHandler_t286C960AD98D6EA11892BA6AADEBE97C5E616CB5_mD81586BC0A250A3E4FF3A962D137540AEF228A02_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8966));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8964));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationHandler.OnDictationHypothesis(Microsoft.MixedReality.Toolkit.Input.DictationEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationHypothesis_mE259BC76AAF34741A2C54279C564EB0459085575 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationHypothesis_mE259BC76AAF34741A2C54279C564EB0459085575_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationHypothesis_mE259BC76AAF34741A2C54279C564EB0459085575_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8967));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8968));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8969));
		// OnDictationHypothesis.Invoke(eventData.DictationResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8970));
		StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * L_0 = __this->get_OnDictationHypothesis_11();
		DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8972));
		NullCheck(L_1);
		String_t* L_2 = DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8972));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8973));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD(L_0, L_2, /*hidden argument*/UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8973));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8971));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationHandler.OnDictationResult(Microsoft.MixedReality.Toolkit.Input.DictationEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationResult_mE437E4925340185D2383401872B15404388DA4C8 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationResult_mE437E4925340185D2383401872B15404388DA4C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationResult_mE437E4925340185D2383401872B15404388DA4C8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8974));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8975));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8976));
		// OnDictationResult.Invoke(eventData.DictationResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8977));
		StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * L_0 = __this->get_OnDictationResult_12();
		DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8979));
		NullCheck(L_1);
		String_t* L_2 = DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8979));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8980));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD(L_0, L_2, /*hidden argument*/UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8980));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8978));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationHandler.OnDictationComplete(Microsoft.MixedReality.Toolkit.Input.DictationEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationComplete_mD3DE8C82061205BD2683B5DD1E63C9FCCA0995C0 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationComplete_mD3DE8C82061205BD2683B5DD1E63C9FCCA0995C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationComplete_mD3DE8C82061205BD2683B5DD1E63C9FCCA0995C0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8981));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8982));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8983));
		// OnDictationComplete.Invoke(eventData.DictationResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8984));
		StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * L_0 = __this->get_OnDictationComplete_13();
		DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8986));
		NullCheck(L_1);
		String_t* L_2 = DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8986));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8987));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD(L_0, L_2, /*hidden argument*/UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8987));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8985));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityDictationHandler.OnDictationError(Microsoft.MixedReality.Toolkit.Input.DictationEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationError_m7F88E9E422B61B4465536D3E67B0427BFBC58AFA (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationError_m7F88E9E422B61B4465536D3E67B0427BFBC58AFA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityDictationHandler_OnDictationError_m7F88E9E422B61B4465536D3E67B0427BFBC58AFA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8988));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8989));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8990));
		// OnDictationError.Invoke(eventData.DictationResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8991));
		StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * L_0 = __this->get_OnDictationError_14();
		DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8993));
		NullCheck(L_1);
		String_t* L_2 = DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8993));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8994));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD(L_0, L_2, /*hidden argument*/UnityEvent_1_Invoke_m817A02148BF54A8B8495008BD1E2D771A381E6FD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8994));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8992));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_Start_mE9D8B38752E8DD1E4CCCC675DF8FDEC24D768D17 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_Start_mE9D8B38752E8DD1E4CCCC675DF8FDEC24D768D17_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_Start_mE9D8B38752E8DD1E4CCCC675DF8FDEC24D768D17_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8995));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8996));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8997));
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8998));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9007));
		BaseInputHandler_Start_mCA77A9C29C7AF11676971F429ABF0E2D3BC04EBE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9007));
		// dictationSystem = CoreServices.GetInputSystemDataProvider<IMixedRealityDictationSystem>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8999));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9008));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_GetInputSystemDataProvider_TisIMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_mFC40140D549A09B97112A2717B47E8E60AE60A4A(/*hidden argument*/CoreServices_GetInputSystemDataProvider_TisIMixedRealityDictationSystem_tEDA518BC97FB4BF80FB0D367503261384B7B5558_mFC40140D549A09B97112A2717B47E8E60AE60A4A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9008));
		__this->set_dictationSystem_15(L_0);
		// Debug.Assert(dictationSystem != null, "No dictation system found. In order to use dictation, add a dictation system like 'Windows Dictation Input Provider' to the Data Providers in the Input System profile");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9000));
		RuntimeObject* L_1 = __this->get_dictationSystem_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9009));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)((!(((RuntimeObject*)(RuntimeObject*)L_1) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0), _stringLiteral85AD5490B6A3E5BC797CB2B45E6E716C4C57F148, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9009));
		// if (startRecordingOnStart)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9001));
		bool L_2 = __this->get_startRecordingOnStart_10();
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9002));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9003));
		// StartRecording();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9004));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9010));
		DictationHandler_StartRecording_mF63FC2A095F97626ADE3C3F30F0DDF37A414121F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9010));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9005));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9006));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler_OnDisable_mA510751D96783140DD27E6B68F95E8F699714559 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler_OnDisable_mA510751D96783140DD27E6B68F95E8F699714559_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler_OnDisable_mA510751D96783140DD27E6B68F95E8F699714559_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9012));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9013));
		// StopRecording();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9014));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9017));
		DictationHandler_StopRecording_mF7C09CD37AA8239E0DFC45B779D346EB0DD7272B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9017));
		// base.OnDisable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9015));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9018));
		BaseInputHandler_OnDisable_m7EC6FD89C384F45FD08DFE9EEAD8C9AF9AD6BC74(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9018));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9016));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DictationHandler__ctor_m329C03E40D22FD2A17BB75D98E567EF58D7A6E36 (DictationHandler_tE9CE8A8760392D20472B5CE197940E8DD93B283F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationHandler__ctor_m329C03E40D22FD2A17BB75D98E567EF58D7A6E36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationHandler__ctor_m329C03E40D22FD2A17BB75D98E567EF58D7A6E36_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9019));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9020));
	{
		// private float initialSilenceTimeout = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9021));
		__this->set_initialSilenceTimeout_7((5.0f));
		// private float autoSilenceTimeout = 20f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9022));
		__this->set_autoSilenceTimeout_8((20.0f));
		// private int recordingTime = 10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9023));
		__this->set_recordingTime_9(((int32_t)10));
		// private bool startRecordingOnStart = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9024));
		__this->set_startRecordingOnStart_10((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9025));
		BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9025));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.DictationHandler/StringUnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringUnityEvent__ctor_m9AA46217465CB60E77D7C2EDCC737F0CDD74916E (StringUnityEvent_t2CD9F500686BD8A0C7D0A37082F7D00DCC3DDE58 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StringUnityEvent__ctor_m9AA46217465CB60E77D7C2EDCC737F0CDD74916E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, StringUnityEvent__ctor_m9AA46217465CB60E77D7C2EDCC737F0CDD74916E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_1__ctor_m08DA3398D67E0E0B82E658405A8FAE4A36268F2D(__this, /*hidden argument*/UnityEvent_1__ctor_m08DA3398D67E0E0B82E658405A8FAE4A36268F2D_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnLookAtStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9026));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9027));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9028));
		// get { return onLookAtStart; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9029));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onLookAtStart_8();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onLookAtStart; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9030));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_OnLookAtStart(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_OnLookAtStart_mDE592AB66517E0F59869EA41AB1CBE6C946B53B0 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_OnLookAtStart_mDE592AB66517E0F59869EA41AB1CBE6C946B53B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_OnLookAtStart_mDE592AB66517E0F59869EA41AB1CBE6C946B53B0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9031));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9032));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9033));
		// set { onLookAtStart = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9034));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onLookAtStart_8(L_0);
		// set { onLookAtStart = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9035));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_WhileLookingAtTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9036));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9037));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9038));
		// get { return whileLookingAtTarget; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9039));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_whileLookingAtTarget_9();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return whileLookingAtTarget; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9040));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_WhileLookingAtTarget(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_WhileLookingAtTarget_m014AB59D3687C9CB102331B73A8E40B8BA3F2956 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_WhileLookingAtTarget_m014AB59D3687C9CB102331B73A8E40B8BA3F2956_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_WhileLookingAtTarget_m014AB59D3687C9CB102331B73A8E40B8BA3F2956_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9041));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9042));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9043));
		// set { whileLookingAtTarget = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9044));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_whileLookingAtTarget_9(L_0);
		// set { whileLookingAtTarget = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9045));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnLookAway()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9046));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9047));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9048));
		// get { return onLookAway; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9049));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onLookAway_10();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onLookAway; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9050));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_OnLookAway(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_OnLookAway_m423823E6F190BDB069CACCD53029EE8E9F5CA169 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_OnLookAway_m423823E6F190BDB069CACCD53029EE8E9F5CA169_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_OnLookAway_m423823E6F190BDB069CACCD53029EE8E9F5CA169_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9052));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9053));
		// set { onLookAway = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9054));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onLookAway_10(L_0);
		// set { onLookAway = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9055));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnDwell()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9056));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9057));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9058));
		// get { return onDwell; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9059));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onDwell_11();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onDwell; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9060));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_OnDwell(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_OnDwell_mE2D4D9342C356D17C7EB8C0F68A877268C5CEAE6 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_OnDwell_mE2D4D9342C356D17C7EB8C0F68A877268C5CEAE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_OnDwell_mE2D4D9342C356D17C7EB8C0F68A877268C5CEAE6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9061));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9062));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9063));
		// set { onDwell = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9064));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onDwell_11(L_0);
		// set { onDwell = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9065));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnSelected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9066));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9067));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9068));
		// get { return onSelected; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9069));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onSelected_12();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onSelected; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9070));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_OnSelected(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_OnSelected_m0F4B9799848D33AF740CF337CB5F754BCA0B034C (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_OnSelected_m0F4B9799848D33AF740CF337CB5F754BCA0B034C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_OnSelected_m0F4B9799848D33AF740CF337CB5F754BCA0B034C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9071));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9072));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9073));
		// set { onSelected = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9074));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onSelected_12(L_0);
		// set { onSelected = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9075));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnTapDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnTapDown_m8230F34E6B15F17A829B4DE729B355C54DF974EA (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_OnTapDown_m8230F34E6B15F17A829B4DE729B355C54DF974EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_OnTapDown_m8230F34E6B15F17A829B4DE729B355C54DF974EA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9076));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9077));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9078));
		// get { return onTapDown; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9079));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onTapDown_13();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onTapDown; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9080));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_OnTapDown(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_OnTapDown_mD56986F13F7B20FA676D79EAB25937667CAB710D (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_OnTapDown_mD56986F13F7B20FA676D79EAB25937667CAB710D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_OnTapDown_mD56986F13F7B20FA676D79EAB25937667CAB710D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9081));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9082));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9083));
		// set { onTapDown = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9084));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onTapDown_13(L_0);
		// set { onTapDown = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9085));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_OnTapUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * EyeTrackingTarget_get_OnTapUp_m7B2665A2B185338F2968EB73FCB4141CC8EDAA01 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_OnTapUp_m7B2665A2B185338F2968EB73FCB4141CC8EDAA01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_OnTapUp_m7B2665A2B185338F2968EB73FCB4141CC8EDAA01_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9086));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9087));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9088));
		// get { return onTapUp; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9089));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onTapUp_14();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onTapUp; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9090));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_OnTapUp(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_OnTapUp_m8B558CA5660AEB76BBA69F1CE5327250B84F4A0D (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_OnTapUp_m8B558CA5660AEB76BBA69F1CE5327250B84F4A0D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_OnTapUp_m8B558CA5660AEB76BBA69F1CE5327250B84F4A0D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9091));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9092));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9093));
		// set { onTapUp = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9094));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onTapUp_14(L_0);
		// set { onTapUp = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9095));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_EyeCursorSnapToTargetCenter()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_EyeCursorSnapToTargetCenter_m2D8CF1787B8D46FF917FE704B0F2744AE57E6F95 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_EyeCursorSnapToTargetCenter_m2D8CF1787B8D46FF917FE704B0F2744AE57E6F95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_EyeCursorSnapToTargetCenter_m2D8CF1787B8D46FF917FE704B0F2744AE57E6F95_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9096));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9097));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9098));
		// get { return eyeCursorSnapToTargetCenter; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9099));
		bool L_0 = __this->get_eyeCursorSnapToTargetCenter_15();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return eyeCursorSnapToTargetCenter; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9100));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_EyeCursorSnapToTargetCenter(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_EyeCursorSnapToTargetCenter_mB4CE85BAC9C9834A3540DD7965BB46294F282099 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_EyeCursorSnapToTargetCenter_mB4CE85BAC9C9834A3540DD7965BB46294F282099_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_EyeCursorSnapToTargetCenter_mB4CE85BAC9C9834A3540DD7965BB46294F282099_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9101));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9102));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9103));
		// set { eyeCursorSnapToTargetCenter = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9104));
		bool L_0 = ___value0;
		__this->set_eyeCursorSnapToTargetCenter_15(L_0);
		// set { eyeCursorSnapToTargetCenter = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9105));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_IsLookedAt()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9106));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9107));
	{
		// public bool IsLookedAt { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9108));
		bool L_0 = __this->get_U3CIsLookedAtU3Ek__BackingField_16();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_IsLookedAt(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9109));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9110));
	{
		// public bool IsLookedAt { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9111));
		bool L_0 = ___value0;
		__this->set_U3CIsLookedAtU3Ek__BackingField_16(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_IsDwelledOn()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9112));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9113));
	{
		// public bool IsDwelledOn { get; private set; } = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9114));
		bool L_0 = __this->get_U3CIsDwelledOnU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_IsDwelledOn(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9115));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9116));
	{
		// public bool IsDwelledOn { get; private set; } = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9117));
		bool L_0 = ___value0;
		__this->set_U3CIsDwelledOnU3Ek__BackingField_17(L_0);
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_LookedAtTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9118));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9119));
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B5_0 = NULL;
	{
		// (CoreServices.InputSystem != null &&
		// CoreServices.InputSystem.EyeGazeProvider != null &&
		// CoreServices.InputSystem.EyeGazeProvider.IsEyeTrackingEnabledAndValid) ? CoreServices.InputSystem.EyeGazeProvider.GazeTarget : null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9121));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9121));
		if (!L_0)
		{
			goto IL_0024;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9122));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_1 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9122));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9123));
		NullCheck(L_1);
		RuntimeObject* L_2 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9123));
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9124));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9124));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9125));
		NullCheck(L_3);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9125));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9126));
		NullCheck(L_4);
		bool L_5 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_IsEyeTrackingEnabledAndValid() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9126));
		if (L_5)
		{
			goto IL_0027;
		}
	}

IL_0024:
	{
		G_B5_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_0036;
	}

IL_0027:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9127));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_6 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9127));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9128));
		NullCheck(L_6);
		RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9129));
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9129));
		G_B5_0 = L_8;
	}

IL_0036:
	{
		return G_B5_0;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_LookedAtPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  EyeTrackingTarget_get_LookedAtPoint_mE06E9249D1597EE50695549AA7C255F7719D26F3 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_LookedAtPoint_mE06E9249D1597EE50695549AA7C255F7719D26F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_LookedAtPoint_mE06E9249D1597EE50695549AA7C255F7719D26F3_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9130));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9131));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B5_0;
	memset((&G_B5_0), 0, sizeof(G_B5_0));
	{
		// (CoreServices.InputSystem != null &&
		// CoreServices.InputSystem.EyeGazeProvider != null &&
		// CoreServices.InputSystem.EyeGazeProvider.IsEyeTrackingEnabledAndValid) ? CoreServices.InputSystem.EyeGazeProvider.HitPosition : Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9132));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9133));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9133));
		if (!L_0)
		{
			goto IL_0024;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9134));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_1 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9134));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9135));
		NullCheck(L_1);
		RuntimeObject* L_2 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9135));
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9136));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9136));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9137));
		NullCheck(L_3);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9137));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9138));
		NullCheck(L_4);
		bool L_5 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_IsEyeTrackingEnabledAndValid() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9138));
		if (L_5)
		{
			goto IL_002b;
		}
	}

IL_0024:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9139));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9139));
		G_B5_0 = L_6;
		goto IL_003a;
	}

IL_002b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9140));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_7 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9140));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9141));
		NullCheck(L_7);
		RuntimeObject* L_8 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9142));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9142));
		G_B5_0 = L_9;
	}

IL_003a:
	{
		return G_B5_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_LookedAtEyeTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * EyeTrackingTarget_get_LookedAtEyeTarget_mEB3CF3BD747AC4759C20995D7F4B466DCD241365 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_LookedAtEyeTarget_mEB3CF3BD747AC4759C20995D7F4B466DCD241365_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_LookedAtEyeTarget_mEB3CF3BD747AC4759C20995D7F4B466DCD241365_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9143));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9144));
	{
		// public static EyeTrackingTarget LookedAtEyeTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9145));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->get_U3CLookedAtEyeTargetU3Ek__BackingField_24();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_LookedAtEyeTarget(Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9147));
	{
		// public static EyeTrackingTarget LookedAtEyeTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9148));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ___value0;
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_U3CLookedAtEyeTargetU3Ek__BackingField_24(L_0);
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_SelectedTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * EyeTrackingTarget_get_SelectedTarget_m9BDB88B91CAF7E8611E5F5E3757288F9E938D45B (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_SelectedTarget_m9BDB88B91CAF7E8611E5F5E3757288F9E938D45B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_SelectedTarget_m9BDB88B91CAF7E8611E5F5E3757288F9E938D45B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9149));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9150));
	{
		// public static GameObject SelectedTarget { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9151));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->get_U3CSelectedTargetU3Ek__BackingField_25();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::set_SelectedTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9152));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9153));
	{
		// public static GameObject SelectedTarget { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9154));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_U3CSelectedTargetU3Ek__BackingField_25(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Start_m8D6A312C56F79F3068B1D33C75DAE2B594419902 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Start_m8D6A312C56F79F3068B1D33C75DAE2B594419902_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Start_m8D6A312C56F79F3068B1D33C75DAE2B594419902_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9155));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9156));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9157));
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9158));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9162));
		InputSystemGlobalHandlerListener_Start_m3F7B3567D47950736A655C05B9961B8C6C3EC60B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9162));
		// IsLookedAt = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9159));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9163));
		EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9163));
		// LookedAtEyeTarget = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9160));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9164));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_inline((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9164));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9161));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Update_m6605D30B481D3CD4A5C9383D17B3F1E604D3EBA8 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Update_m6605D30B481D3CD4A5C9383D17B3F1E604D3EBA8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Update_m6605D30B481D3CD4A5C9383D17B3F1E604D3EBA8_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9165));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9166));
	int32_t G_B5_0 = 0;
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9167));
		// if ((CoreServices.InputSystem != null) && (CoreServices.InputSystem.EyeGazeProvider != null) &&
		//     CoreServices.InputSystem.EyeGazeProvider.IsEyeTrackingEnabled &&
		//     CoreServices.InputSystem.EyeGazeProvider.IsEyeTrackingDataValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9190));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9190));
		if (!L_0)
		{
			goto IL_0036;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9191));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_1 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9191));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9192));
		NullCheck(L_1);
		RuntimeObject* L_2 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9192));
		if (!L_2)
		{
			goto IL_0036;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9193));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9193));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9194));
		NullCheck(L_3);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9194));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9195));
		NullCheck(L_4);
		bool L_5 = InterfaceFuncInvoker0< bool >::Invoke(4 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_IsEyeTrackingEnabled() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9195));
		if (!L_5)
		{
			goto IL_0036;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9196));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_6 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9196));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9197));
		NullCheck(L_6);
		RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9197));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9198));
		NullCheck(L_7);
		bool L_8 = InterfaceFuncInvoker0< bool >::Invoke(1 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_IsEyeTrackingDataValid() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9198));
		G_B5_0 = ((int32_t)(L_8));
		goto IL_0037;
	}

IL_0036:
	{
		G_B5_0 = 0;
	}

IL_0037:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9169));
		bool L_9 = V_0;
		if (!L_9)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9170));
		// UpdateHitTarget();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9171));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9199));
		EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9199));
		// bool isLookedAtNow = (LookedAtTarget == this.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9172));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9200));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9200));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9201));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9201));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9202));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9202));
		V_1 = L_12;
		// if (IsLookedAt && (!isLookedAtNow))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9173));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9203));
		bool L_13 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9203));
		if (!L_13)
		{
			goto IL_0062;
		}
	}
	{
		bool L_14 = V_1;
		G_B9_0 = ((((int32_t)L_14) == ((int32_t)0))? 1 : 0);
		goto IL_0063;
	}

IL_0062:
	{
		G_B9_0 = 0;
	}

IL_0063:
	{
		V_2 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9174));
		bool L_15 = V_2;
		if (!L_15)
		{
			goto IL_0072;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9175));
		// OnEyeFocusStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9176));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9204));
		EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9204));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9177));
		goto IL_00a3;
	}

IL_0072:
	{
		// else if ((!IsLookedAt) && (isLookedAtNow))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9205));
		bool L_16 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9205));
		bool L_17 = V_1;
		V_3 = (bool)((int32_t)((int32_t)((((int32_t)L_16) == ((int32_t)0))? 1 : 0)&(int32_t)L_17));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9179));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_008c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9180));
		// OnEyeFocusStart();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9181));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9206));
		EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9206));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9182));
		goto IL_00a3;
	}

IL_008c:
	{
		// else if (IsLookedAt && (isLookedAtNow))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9183));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9207));
		bool L_19 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9207));
		bool L_20 = V_1;
		V_4 = (bool)((int32_t)((int32_t)L_19&(int32_t)L_20));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9184));
		bool L_21 = V_4;
		if (!L_21)
		{
			goto IL_00a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9185));
		// OnEyeFocusStay();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9186));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9208));
		EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9208));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9187));
	}

IL_00a3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9188));
	}

IL_00a4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9189));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnDisable_mB4B55660146D3095E9DB5049591FAD7476BF3C36 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_OnDisable_mB4B55660146D3095E9DB5049591FAD7476BF3C36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_OnDisable_mB4B55660146D3095E9DB5049591FAD7476BF3C36_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9209));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9210));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9211));
		// base.OnDisable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9212));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9215));
		InputSystemGlobalHandlerListener_OnDisable_m73FB8CF4D56F72E3BEF936FCC5F25883AE90BDA5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9215));
		// OnEyeFocusStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9213));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9216));
		EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9216));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9214));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_RegisterHandlers_m553AF274B7CFC1C7D5643B99064A71A4CE9FEAB8 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_RegisterHandlers_m553AF274B7CFC1C7D5643B99064A71A4CE9FEAB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_RegisterHandlers_m553AF274B7CFC1C7D5643B99064A71A4CE9FEAB8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9217));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9218));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9219));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9220));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9223));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9223));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9224));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m8045547AED9E0A33D8E70DE66F076E2EE6E206DC_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9224));
	}

IL_0013:
	{
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealitySpeechHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9221));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9225));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9225));
		RuntimeObject* L_3 = L_2;
		G_B4_0 = L_3;
		if (L_3)
		{
			G_B5_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0025;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9226));
		NullCheck(G_B5_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m15D9DD6955A5C09C418FC0763139AC5CF0BF02DB_RuntimeMethod_var, G_B5_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9226));
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9222));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_UnregisterHandlers_mF87106515727B5FFDF0FA5944A0F375C38D8219B (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_UnregisterHandlers_mF87106515727B5FFDF0FA5944A0F375C38D8219B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_UnregisterHandlers_mF87106515727B5FFDF0FA5944A0F375C38D8219B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9227));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9228));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9229));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9230));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9233));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9233));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9234));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m7DF6B444D35B11AACB65301352ED33F3F466774D_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9234));
	}

IL_0013:
	{
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealitySpeechHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9231));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9235));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9235));
		RuntimeObject* L_3 = L_2;
		G_B4_0 = L_3;
		if (L_3)
		{
			G_B5_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0025;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9236));
		NullCheck(G_B5_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m8A7D870AD5804E1F3F2B85756B79AD5736774C41_RuntimeMethod_var, G_B5_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9236));
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9232));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::UpdateHitTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_UpdateHitTarget_mC89ED781D46D2D69362467880B2A031BBF7B32A4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9237));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9238));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  G_B5_0;
	memset((&G_B5_0), 0, sizeof(G_B5_0));
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	int32_t G_B8_0 = 0;
	int32_t G_B12_0 = 0;
	RuntimeObject* G_B15_0 = NULL;
	RuntimeObject* G_B14_0 = NULL;
	Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  G_B18_0;
	memset((&G_B18_0), 0, sizeof(G_B18_0));
	RuntimeObject* G_B17_0 = NULL;
	RuntimeObject* G_B16_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9239));
		// if (lastEyeSignalUpdateTimeFromET != CoreServices.InputSystem?.EyeGazeProvider?.Timestamp)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9240));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = ((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->get_lastEyeSignalUpdateTimeFromET_20();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9261));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_1 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9261));
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_001b;
		}
	}
	{
		il2cpp_codegen_initobj((&V_3), sizeof(Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 ));
		Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  L_3 = V_3;
		G_B5_0 = L_3;
		goto IL_0039;
	}

IL_001b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9262));
		NullCheck(G_B2_0);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9262));
		RuntimeObject* L_5 = L_4;
		G_B3_0 = L_5;
		if (L_5)
		{
			G_B4_0 = L_5;
			goto IL_002f;
		}
	}
	{
		il2cpp_codegen_initobj((&V_3), sizeof(Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 ));
		Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  L_6 = V_3;
		G_B5_0 = L_6;
		goto IL_0039;
	}

IL_002f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9263));
		NullCheck(G_B4_0);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_7 = InterfaceFuncInvoker0< DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  >::Invoke(6 /* System.DateTime Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_Timestamp() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, G_B4_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9263));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9264));
		Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  L_8;
		memset((&L_8), 0, sizeof(L_8));
		Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29((&L_8), L_7, /*hidden argument*/Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9264));
		G_B5_0 = L_8;
	}

IL_0039:
	{
		V_2 = G_B5_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9265));
		bool L_9 = Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_inline((Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *)(&V_2), /*hidden argument*/Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9265));
		if (L_9)
		{
			goto IL_0046;
		}
	}
	{
		G_B8_0 = 1;
		goto IL_0053;
	}

IL_0046:
	{
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_10 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9266));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_11 = Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_inline((Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *)(&V_2), /*hidden argument*/Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9266));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9267));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		bool L_12 = DateTime_op_Inequality_m3CE79ABD4AA011CAA6E6EDE6D1028AEB56BFF5A1(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9267));
		G_B8_0 = ((int32_t)(L_12));
	}

IL_0053:
	{
		V_0 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9241));
		bool L_13 = V_0;
		if (!L_13)
		{
			goto IL_00e9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9242));
		// if ((CoreServices.InputSystem != null) && (CoreServices.InputSystem.EyeGazeProvider != null))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9243));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9268));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_14 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9268));
		if (!L_14)
		{
			goto IL_0071;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9269));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_15 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9269));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9270));
		NullCheck(L_15);
		RuntimeObject* L_16 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9270));
		G_B12_0 = ((!(((RuntimeObject*)(RuntimeObject*)L_16) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0072;
	}

IL_0071:
	{
		G_B12_0 = 0;
	}

IL_0072:
	{
		V_4 = (bool)G_B12_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9244));
		bool L_17 = V_4;
		if (!L_17)
		{
			goto IL_00e6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9245));
		// lastEyeSignalUpdateTimeFromET = (CoreServices.InputSystem?.EyeGazeProvider?.Timestamp).Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9246));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9271));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_18 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9271));
		RuntimeObject* L_19 = L_18;
		G_B14_0 = L_19;
		if (L_19)
		{
			G_B15_0 = L_19;
			goto IL_008d;
		}
	}
	{
		il2cpp_codegen_initobj((&V_2), sizeof(Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 ));
		Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  L_20 = V_2;
		G_B18_0 = L_20;
		goto IL_00ab;
	}

IL_008d:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9272));
		NullCheck(G_B15_0);
		RuntimeObject* L_21 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B15_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9272));
		RuntimeObject* L_22 = L_21;
		G_B16_0 = L_22;
		if (L_22)
		{
			G_B17_0 = L_22;
			goto IL_00a1;
		}
	}
	{
		il2cpp_codegen_initobj((&V_2), sizeof(Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 ));
		Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  L_23 = V_2;
		G_B18_0 = L_23;
		goto IL_00ab;
	}

IL_00a1:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9273));
		NullCheck(G_B17_0);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_24 = InterfaceFuncInvoker0< DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  >::Invoke(6 /* System.DateTime Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_Timestamp() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, G_B17_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9273));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9274));
		Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78  L_25;
		memset((&L_25), 0, sizeof(L_25));
		Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29((&L_25), L_24, /*hidden argument*/Nullable_1__ctor_m381D5B1CD79C026584C8072033C17C7F05398C29_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9274));
		G_B18_0 = L_25;
	}

IL_00ab:
	{
		V_2 = G_B18_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9275));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_26 = Nullable_1_get_Value_m9412E5B49A0FFC6C10C293C29DF5EAF3DD759594((Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 *)(&V_2), /*hidden argument*/Nullable_1_get_Value_m9412E5B49A0FFC6C10C293C29DF5EAF3DD759594_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9275));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_lastEyeSignalUpdateTimeFromET_20(L_26);
		// lastEyeSignalUpdateTimeLocal = DateTime.UtcNow;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9247));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9276));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_27 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9276));
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_lastEyeSignalUpdateTimeLocal_21(L_27);
		// if(LookedAtTarget != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9248));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9277));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_28 = EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9277));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9278));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_29 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_28, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9278));
		V_5 = L_29;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9249));
		bool L_30 = V_5;
		if (!L_30)
		{
			goto IL_00e5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9250));
		// LookedAtEyeTarget = LookedAtTarget.GetComponent<EyeTrackingTarget>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9279));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9279));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9280));
		NullCheck(L_31);
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_32 = GameObject_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_mAB8CBEA110AEC9DB7152FBD9678CA0F25C43B8FA(L_31, /*hidden argument*/GameObject_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_mAB8CBEA110AEC9DB7152FBD9678CA0F25C43B8FA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9280));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9281));
		EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_inline(L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9281));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9252));
	}

IL_00e5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9253));
	}

IL_00e6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9254));
		goto IL_0119;
	}

IL_00e9:
	{
		// else if ((DateTime.UtcNow - lastEyeSignalUpdateTimeLocal).TotalMilliseconds > EyeTrackingTimeoutInMilliseconds)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9255));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9282));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_33 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9282));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_34 = ((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->get_lastEyeSignalUpdateTimeLocal_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9283));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_35 = DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021(L_33, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9283));
		V_7 = L_35;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9284));
		double L_36 = TimeSpan_get_TotalMilliseconds_m48B00B27D485CC556C10A5119BC11E1A1E0FE363((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9284));
		float L_37 = __this->get_EyeTrackingTimeoutInMilliseconds_19();
		V_6 = (bool)((((double)L_36) > ((double)(((double)((double)L_37)))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9256));
		bool L_38 = V_6;
		if (!L_38)
		{
			goto IL_0119;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9257));
		// LookedAtEyeTarget = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9258));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9285));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_inline((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9285));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9259));
	}

IL_0119:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9260));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_OnEyeFocusStart_m8039BCD3DDD11E38982B47D09B6E1113A6EBFAA4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9286));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9287));
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B2_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9288));
		// lookAtStartTime = DateTime.UtcNow;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9289));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9293));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9293));
		__this->set_lookAtStartTime_18(L_0);
		// IsLookedAt = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9290));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9294));
		EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_inline(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9294));
		// OnLookAtStart?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9291));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9295));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = EyeTrackingTarget_get_OnLookAtStart_mEF870BEFEB72A2B65072E2406723E357C1126ECE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9295));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0020;
		}
	}
	{
		goto IL_0026;
	}

IL_0020:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9296));
		NullCheck(G_B2_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B2_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9296));
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9292));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusStay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_OnEyeFocusStay_mB7DACDBC1952DAB7898286F250DD0A99414DBC3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9297));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9298));
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B2_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B1_0 = NULL;
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9299));
		// WhileLookingAtTarget?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9300));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9307));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = EyeTrackingTarget_get_WhileLookingAtTarget_m3F04513E1F667675316FC1DAB8B8CCF577BE6322(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9307));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000d;
		}
	}
	{
		goto IL_0013;
	}

IL_000d:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9308));
		NullCheck(G_B2_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B2_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9308));
	}

IL_0013:
	{
		// if ((!IsDwelledOn) && (DateTime.UtcNow - lookAtStartTime).TotalSeconds > dwellTimeInSec)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9301));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9309));
		bool L_2 = EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9309));
		if (L_2)
		{
			goto IL_003e;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9310));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_3 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9310));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_4 = __this->get_lookAtStartTime_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9311));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_5 = DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9311));
		V_1 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9312));
		double L_6 = TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9312));
		float L_7 = __this->get_dwellTimeInSec_7();
		G_B6_0 = ((((double)L_6) > ((double)(((double)((double)L_7)))))? 1 : 0);
		goto IL_003f;
	}

IL_003e:
	{
		G_B6_0 = 0;
	}

IL_003f:
	{
		V_0 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9302));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_004c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9303));
		// OnEyeFocusDwell();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9304));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9313));
		EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9313));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9305));
	}

IL_004c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9306));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusDwell()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_OnEyeFocusDwell_mB44A3B913E71B0739DF861320C7FA293E8F6C2CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9314));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9315));
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B2_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9316));
		// IsDwelledOn = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9317));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9320));
		EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_inline(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9320));
		// OnDwell?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9318));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9321));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = EyeTrackingTarget_get_OnDwell_m14FB9B20416E4490F11F8C2FDF0A7AFF1072048B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9321));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_0015;
		}
	}
	{
		goto IL_001b;
	}

IL_0015:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9322));
		NullCheck(G_B2_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B2_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9322));
	}

IL_001b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9319));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::OnEyeFocusStop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_OnEyeFocusStop_m552EA211812D2EF5E89EA63F406FA3A91BA6CF8A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9323));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9324));
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B2_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9325));
		// IsDwelledOn = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9326));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9330));
		EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9330));
		// IsLookedAt = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9327));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9331));
		EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9331));
		// OnLookAway?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9328));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9332));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = EyeTrackingTarget_get_OnLookAway_m19B089465BC7A170A979F4CA9FD2D188EF7C8BB8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9332));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_001d;
		}
	}
	{
		goto IL_0023;
	}

IL_001d:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9333));
		NullCheck(G_B2_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B2_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9333));
	}

IL_0023:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9329));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFC247EEC45A7789DB938A4FCCD4C13432FC55C95 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFC247EEC45A7789DB938A4FCCD4C13432FC55C95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mFC247EEC45A7789DB938A4FCCD4C13432FC55C95_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9334));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9335));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9336));
		// void IMixedRealityPointerHandler.OnPointerUp(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9337));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mBF9F504FEC8218057A3DB0DE573B83C4E477E905 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mBF9F504FEC8218057A3DB0DE573B83C4E477E905_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mBF9F504FEC8218057A3DB0DE573B83C4E477E905_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9339));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9340));
		// void IMixedRealityPointerHandler.OnPointerDown(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9341));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m14F12DE16899487D41F09E0BB4C0AE1A1EC8F549 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m14F12DE16899487D41F09E0BB4C0AE1A1EC8F549_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m14F12DE16899487D41F09E0BB4C0AE1A1EC8F549_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9342));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9343));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9344));
		// void IMixedRealityPointerHandler.OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9345));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAB01AAB27B91E506675A3187C8BD438F01D4578A (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAB01AAB27B91E506675A3187C8BD438F01D4578A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAB01AAB27B91E506675A3187C8BD438F01D4578A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9346));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9347));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9348));
		// if ((eventData.MixedRealityInputAction == selectAction) && IsLookedAt && ((DateTime.UtcNow - lastTimeClicked).TotalMilliseconds > minTimeoutBetweenClicksInMs))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9349));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9357));
		NullCheck(L_0);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9357));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = __this->get_selectAction_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9358));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9358));
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9359));
		bool L_4 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9359));
		if (!L_4)
		{
			goto IL_003f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9360));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_5 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9360));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_6 = __this->get_lastTimeClicked_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9361));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_7 = DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9361));
		V_1 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9362));
		double L_8 = TimeSpan_get_TotalMilliseconds_m48B00B27D485CC556C10A5119BC11E1A1E0FE363((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9362));
		float L_9 = __this->get_minTimeoutBetweenClicksInMs_23();
		G_B4_0 = ((((double)L_8) > ((double)(((double)((double)L_9)))))? 1 : 0);
		goto IL_0040;
	}

IL_003f:
	{
		G_B4_0 = 0;
	}

IL_0040:
	{
		V_0 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9350));
		bool L_10 = V_0;
		if (!L_10)
		{
			goto IL_0069;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9351));
		// lastTimeClicked = DateTime.UtcNow;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9352));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9363));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_11 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9363));
		__this->set_lastTimeClicked_22(L_11);
		// EyeTrackingTarget.SelectedTarget = this.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9353));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9364));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9364));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9365));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_inline(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9365));
		// OnSelected.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9354));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9366));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_13 = EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9366));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9367));
		NullCheck(L_13);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9367));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9355));
	}

IL_0069:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9356));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySpeechHandler.OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m481FB936CA05939E5E7CDCF0F88A917E0FFE4695 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m481FB936CA05939E5E7CDCF0F88A917E0FFE4695_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m481FB936CA05939E5E7CDCF0F88A917E0FFE4695_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9368));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9369));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9370));
		// if ((IsLookedAt) && (this.gameObject == LookedAtTarget))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9371));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9393));
		bool L_0 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9393));
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9394));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9394));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9395));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = EyeTrackingTarget_get_LookedAtTarget_mDE439735202ACA73A1543669CE490478EBFCA5F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9395));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9396));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9396));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9372));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0081;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9373));
		// if (voiceSelect != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9374));
		MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* L_5 = __this->get_voiceSelect_6();
		V_1 = (bool)((!(((RuntimeObject*)(MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9375));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0080;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9376));
		// for (int i = 0; i < voiceSelect.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9377));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9378));
		goto IL_006e;
	}

IL_0033:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9379));
		// if (eventData.MixedRealityInputAction == voiceSelect[i])
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9380));
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9397));
		NullCheck(L_7);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9397));
		MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* L_9 = __this->get_voiceSelect_6();
		int32_t L_10 = V_2;
		NullCheck(L_9);
		int32_t L_11 = L_10;
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_12 = (L_9)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9398));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_13 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_8, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9398));
		V_3 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9381));
		bool L_14 = V_3;
		if (!L_14)
		{
			goto IL_0069;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9382));
		// EyeTrackingTarget.SelectedTarget = this.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9383));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9399));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9399));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9400));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9400));
		// OnSelected.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9384));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9401));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_16 = EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9401));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9402));
		NullCheck(L_16);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9402));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9385));
	}

IL_0069:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9386));
		// for (int i = 0; i < voiceSelect.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9387));
		int32_t L_17 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_006e:
	{
		// for (int i = 0; i < voiceSelect.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9388));
		int32_t L_18 = V_2;
		MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* L_19 = __this->get_voiceSelect_6();
		NullCheck(L_19);
		V_4 = (bool)((((int32_t)L_18) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_19)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9389));
		bool L_20 = V_4;
		if (L_20)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9390));
	}

IL_0080:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9391));
	}

IL_0081:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9392));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::RaiseSelectEventManually()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget_RaiseSelectEventManually_m8D6E57AE292FF43BD85102AA0D20816C46A426AC (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_RaiseSelectEventManually_m8D6E57AE292FF43BD85102AA0D20816C46A426AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_RaiseSelectEventManually_m8D6E57AE292FF43BD85102AA0D20816C46A426AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9403));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9404));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9405));
		// EyeTrackingTarget.SelectedTarget = this.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9406));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9409));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9409));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9410));
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9410));
		// OnSelected.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9407));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9411));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = EyeTrackingTarget_get_OnSelected_mBB0328961850727204A05EE07E4790C93535EF5C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9411));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9412));
		NullCheck(L_1);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9412));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9408));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget__ctor_mEDE6BD23CB1524F729EBF841994F9F30B9F67373 (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget__ctor_mEDE6BD23CB1524F729EBF841994F9F30B9F67373_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget__ctor_mEDE6BD23CB1524F729EBF841994F9F30B9F67373_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9413));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9414));
	{
		// private MixedRealityInputAction selectAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9415));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9429));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9429));
		__this->set_selectAction_5(L_0);
		// private MixedRealityInputAction[] voiceSelect = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9416));
		__this->set_voiceSelect_6((MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B*)NULL);
		// private float dwellTimeInSec = 0.8f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9417));
		__this->set_dwellTimeInSec_7((0.8f));
		// private UnityEvent onLookAtStart = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9418));
		__this->set_onLookAtStart_8((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private UnityEvent whileLookingAtTarget = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9419));
		__this->set_whileLookingAtTarget_9((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private UnityEvent onLookAway = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9420));
		__this->set_onLookAway_10((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private UnityEvent onDwell = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9421));
		__this->set_onDwell_11((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private UnityEvent onSelected = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9422));
		__this->set_onSelected_12((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private UnityEvent onTapDown = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9423));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9430));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9430));
		__this->set_onTapDown_13(L_1);
		// private UnityEvent onTapUp = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9424));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9431));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_2 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9431));
		__this->set_onTapUp_14(L_2);
		// private bool eyeCursorSnapToTargetCenter = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9425));
		__this->set_eyeCursorSnapToTargetCenter_15((bool)0);
		// public bool IsDwelledOn { get; private set; } = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9426));
		__this->set_U3CIsDwelledOnU3Ek__BackingField_17((bool)0);
		// private float EyeTrackingTimeoutInMilliseconds = 200;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9427));
		__this->set_EyeTrackingTimeoutInMilliseconds_19((200.0f));
		// private float minTimeoutBetweenClicksInMs = 20f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9428));
		__this->set_minTimeoutBetweenClicksInMs_23((20.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9432));
		InputSystemGlobalHandlerListener__ctor_m772E8CE6C735B09CA4990109CA6700A4C7EA86A3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9432));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingTarget__cctor_m1AC7E59699C8D377AFD69D7830482592E4AC93EF (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget__cctor_m1AC7E59699C8D377AFD69D7830482592E4AC93EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget__cctor_m1AC7E59699C8D377AFD69D7830482592E4AC93EF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9433));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9434));
	{
		// private static DateTime lastEyeSignalUpdateTimeFromET = DateTime.MinValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9435));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = ((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields*)il2cpp_codegen_static_fields_for(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var))->get_MinValue_31();
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_lastEyeSignalUpdateTimeFromET_20(L_0);
		// private static DateTime lastEyeSignalUpdateTimeLocal = DateTime.MinValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9436));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_1 = ((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields*)il2cpp_codegen_static_fields_for(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var))->get_MinValue_31();
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_lastEyeSignalUpdateTimeLocal_21(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_Awake_m10A07214DA11207192D7D1FAC0F73CEACEE11BD2 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_Awake_m10A07214DA11207192D7D1FAC0F73CEACEE11BD2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_Awake_m10A07214DA11207192D7D1FAC0F73CEACEE11BD2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11750));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11751));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11752));
		// materialPropertyBlock = new MaterialPropertyBlock();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11753));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11756));
		MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * L_0 = (MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 *)il2cpp_codegen_object_new(MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13_il2cpp_TypeInfo_var);
		MaterialPropertyBlock__ctor_m9055A333A5DA8CC70CC3D837BD59B54C313D39F3(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11756));
		__this->set_materialPropertyBlock_29(L_0);
		// proximityDistanceID = Shader.PropertyToID("_Proximity_Distance_");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11754));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11757));
		int32_t L_1 = Shader_PropertyToID_m831E5B48743620DB9E3E3DD15A8DEA483981DD45(_stringLiteral818BBF7AAF974575D251C6931932A3D1025C35C6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11757));
		__this->set_proximityDistanceID_30(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11755));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::UpdateCursorTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_UpdateCursorTransform_m8415F27338C65DE106F7AFF0719DE949D76EAAA9 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_UpdateCursorTransform_m8415F27338C65DE106F7AFF0719DE949D76EAAA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	float V_2 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	float V_6 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_13;
	memset((&V_13), 0, sizeof(V_13));
	bool V_14 = false;
	bool V_15 = false;
	bool V_16 = false;
	bool V_17 = false;
	bool V_18 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6), (&V_7), (&V_8), (&V_9), (&V_10), (&V_16));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_UpdateCursorTransform_m8415F27338C65DE106F7AFF0719DE949D76EAAA9_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11758));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11759));
	float G_B4_0 = 0.0f;
	int32_t G_B15_0 = 0;
	float G_B18_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11760));
		// IMixedRealityNearPointer nearPointer = (IMixedRealityNearPointer)Pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11761));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11818));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11818));
		V_0 = ((RuntimeObject*)Castclass((RuntimeObject*)L_0, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var));
		// if (nearPointer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11762));
		RuntimeObject* L_1 = V_0;
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_1) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11763));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_019b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11764));
		// float deltaTime = UseUnscaledTime
		//     ? Time.unscaledDeltaTime
		//     : Time.deltaTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11765));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11819));
		bool L_3 = BaseCursor_get_UseUnscaledTime_m3A6C284846D12E2407215C53BEF0BCB86D1658D7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11819));
		if (L_3)
		{
			goto IL_0028;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11820));
		float L_4 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11820));
		G_B4_0 = L_4;
		goto IL_002d;
	}

IL_0028:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11821));
		float L_5 = Time_get_unscaledDeltaTime_mA0AE7A144C88AE8AABB42DF17B0F3F0714BA06B2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11821));
		G_B4_0 = L_5;
	}

IL_002d:
	{
		V_2 = G_B4_0;
		// if (!TryGetJoint(TrackedHandJoint.IndexTip, out indexFingerPosition, out indexFingerRotation))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11766));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11822));
		bool L_6 = FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2(__this, ((int32_t)11), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11822));
		V_11 = (bool)((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11767));
		bool L_7 = V_11;
		if (!L_7)
		{
			goto IL_005e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11768));
		// indexFingerPosition = Pointer.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11769));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11823));
		RuntimeObject* L_8 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11823));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11824));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11824));
		V_3 = L_9;
		// indexFingerRotation = Pointer.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11770));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11825));
		RuntimeObject* L_10 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11826));
		NullCheck(L_10);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11826));
		V_4 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11771));
	}

IL_005e:
	{
		// if (!TryGetJoint(TrackedHandJoint.IndexKnuckle, out indexKnucklePosition, out _)) // knuckle rotation not used
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11772));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11827));
		bool L_12 = FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2(__this, 8, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_5), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_13), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11827));
		V_12 = (bool)((((int32_t)L_12) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11773));
		bool L_13 = V_12;
		if (!L_13)
		{
			goto IL_0081;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11774));
		// indexKnucklePosition = Pointer.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11828));
		RuntimeObject* L_14 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11828));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11829));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11829));
		V_5 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11776));
	}

IL_0081:
	{
		// float distance = float.MaxValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11777));
		V_6 = ((std::numeric_limits<float>::max)());
		// Vector3 surfaceNormal = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11778));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11830));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11830));
		V_7 = L_16;
		// bool surfaceNormalFound = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11779));
		V_8 = (bool)0;
		// bool showVisual = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11780));
		V_9 = (bool)1;
		// bool nearPokeable = nearPointer.IsNearObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11781));
		RuntimeObject* L_17 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11831));
		NullCheck(L_17);
		bool L_18 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer::get_IsNearObject() */, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11831));
		V_10 = L_18;
		// if (nearPokeable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11782));
		bool L_19 = V_10;
		V_14 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11783));
		bool L_20 = V_14;
		if (!L_20)
		{
			goto IL_00cd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11784));
		// if (!nearPointer.TryGetDistanceToNearestSurface(out distance))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11785));
		RuntimeObject* L_21 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11832));
		NullCheck(L_21);
		bool L_22 = InterfaceFuncInvoker1< bool, float* >::Invoke(2 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer::TryGetDistanceToNearestSurface(System.Single&) */, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var, L_21, (float*)(&V_6));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11832));
		V_15 = (bool)((((int32_t)L_22) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11786));
		bool L_23 = V_15;
		if (!L_23)
		{
			goto IL_00c0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11787));
		// distance = float.MaxValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11788));
		V_6 = ((std::numeric_limits<float>::max)());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11789));
	}

IL_00c0:
	{
		// surfaceNormalFound = nearPointer.TryGetNormalToNearestSurface(out surfaceNormal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11790));
		RuntimeObject* L_24 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11833));
		NullCheck(L_24);
		bool L_25 = InterfaceFuncInvoker1< bool, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * >::Invoke(3 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer::TryGetNormalToNearestSurface(UnityEngine.Vector3&) */, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var, L_24, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_7));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11833));
		V_8 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11791));
		goto IL_00fb;
	}

IL_00cd:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11792));
		// bool nearGrabbable = checkForGrabbables && IsNearGrabbableObject();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11793));
		bool L_26 = __this->get_checkForGrabbables_25();
		if (!L_26)
		{
			goto IL_00de;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11834));
		bool L_27 = VirtFuncInvoker0< bool >::Invoke(55 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.FingerCursor::IsNearGrabbableObject() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11834));
		G_B15_0 = ((int32_t)(L_27));
		goto IL_00df;
	}

IL_00de:
	{
		G_B15_0 = 0;
	}

IL_00df:
	{
		V_16 = (bool)G_B15_0;
		// distance = nearGrabbable ? MinVisibleRingDistance : 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11794));
		bool L_28 = V_16;
		if (L_28)
		{
			goto IL_00ec;
		}
	}
	{
		G_B18_0 = (1.0f);
		goto IL_00f1;
	}

IL_00ec:
	{
		G_B18_0 = (0.1f);
	}

IL_00f1:
	{
		V_6 = G_B18_0;
		// showVisual = nearGrabbable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11795));
		bool L_29 = V_16;
		V_9 = L_29;
		// surfaceNormalFound = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11796));
		V_8 = (bool)0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11797));
	}

IL_00fb:
	{
		// if (indexFingerRingRenderer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11798));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_30 = __this->get_indexFingerRingRenderer_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11835));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_31 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_30, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11835));
		V_17 = L_31;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11799));
		bool L_32 = V_17;
		if (!L_32)
		{
			goto IL_0198;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11800));
		// TranslateToFinger(indexFingerRingRenderer.transform, deltaTime, indexFingerPosition, indexKnucklePosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11801));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_33 = __this->get_indexFingerRingRenderer_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11836));
		NullCheck(L_33);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_34 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11836));
		float L_35 = V_2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11837));
		FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288(__this, L_34, L_35, L_36, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11837));
		// if ((distance < alignWithSurfaceDistance) && surfaceNormalFound)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11802));
		float L_38 = V_6;
		float L_39 = __this->get_alignWithSurfaceDistance_27();
		bool L_40 = V_8;
		V_18 = (bool)((int32_t)((int32_t)((((float)L_38) < ((float)L_39))? 1 : 0)&(int32_t)L_40));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11803));
		bool L_41 = V_18;
		if (!L_41)
		{
			goto IL_016f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11804));
		// RotateToSurfaceNormal(indexFingerRingRenderer.transform, surfaceNormal, indexFingerRotation, distance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11805));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_42 = __this->get_indexFingerRingRenderer_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11838));
		NullCheck(L_42);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11838));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_44 = V_7;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_45 = V_4;
		float L_46 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11839));
		FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7(__this, L_43, L_44, L_45, L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11839));
		// TranslateFromTipToPad(indexFingerRingRenderer.transform, indexFingerPosition, indexKnucklePosition, surfaceNormal, distance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11806));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_47 = __this->get_indexFingerRingRenderer_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11840));
		NullCheck(L_47);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_48 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11840));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = V_7;
		float L_52 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11841));
		FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D(__this, L_48, L_49, L_50, L_51, L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11841));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11807));
		goto IL_0186;
	}

IL_016f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11808));
		// RotateToFinger(indexFingerRingRenderer.transform, deltaTime, indexFingerRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11809));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_53 = __this->get_indexFingerRingRenderer_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11842));
		NullCheck(L_53);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_54 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11842));
		float L_55 = V_2;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_56 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11843));
		FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0(__this, L_54, L_55, L_56, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11843));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11810));
	}

IL_0186:
	{
		// UpdateVisuals(indexFingerRingRenderer, distance, showVisual);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11811));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_57 = __this->get_indexFingerRingRenderer_28();
		float L_58 = V_6;
		bool L_59 = V_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11844));
		VirtActionInvoker3< Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 *, float, bool >::Invoke(54 /* System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::UpdateVisuals(UnityEngine.Renderer,System.Single,System.Boolean) */, __this, L_57, L_58, L_59);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11844));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11812));
	}

IL_0198:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11813));
		goto IL_01a4;
	}

IL_019b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11814));
		// base.UpdateCursorTransform();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11815));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11845));
		BaseCursor_UpdateCursorTransform_mA854CD7582220F22DE7B8B6F63E4637E7B2CC767(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11845));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11816));
	}

IL_01a4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11817));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::UpdateVisuals(UnityEngine.Renderer,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_UpdateVisuals_m34E2903BDE12CC11A5B0E9508BB351103B8F5AA3 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___ringRenderer0, float ___distance1, bool ___visible2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_UpdateVisuals_m34E2903BDE12CC11A5B0E9508BB351103B8F5AA3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___ringRenderer0), (&___distance1), (&___visible2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_UpdateVisuals_m34E2903BDE12CC11A5B0E9508BB351103B8F5AA3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11846));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11847));
	int32_t G_B2_0 = 0;
	MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * G_B2_1 = NULL;
	int32_t G_B1_0 = 0;
	MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * G_B1_1 = NULL;
	float G_B3_0 = 0.0f;
	int32_t G_B3_1 = 0;
	MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * G_B3_2 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11848));
		// ringRenderer.GetPropertyBlock(materialPropertyBlock);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11849));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_0 = ___ringRenderer0;
		MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * L_1 = __this->get_materialPropertyBlock_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11853));
		NullCheck(L_0);
		Renderer_GetPropertyBlock_mCD279F8A7CEB56ABB9EF9D150103FB1C4FB3CE8C(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11853));
		// materialPropertyBlock.SetFloat(proximityDistanceID, visible ? distance : 1.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11850));
		MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * L_2 = __this->get_materialPropertyBlock_29();
		int32_t L_3 = __this->get_proximityDistanceID_30();
		bool L_4 = ___visible2;
		G_B1_0 = L_3;
		G_B1_1 = L_2;
		if (L_4)
		{
			G_B2_0 = L_3;
			G_B2_1 = L_2;
			goto IL_0024;
		}
	}
	{
		G_B3_0 = (1.0f);
		G_B3_1 = G_B1_0;
		G_B3_2 = G_B1_1;
		goto IL_0025;
	}

IL_0024:
	{
		float L_5 = ___distance1;
		G_B3_0 = L_5;
		G_B3_1 = G_B2_0;
		G_B3_2 = G_B2_1;
	}

IL_0025:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11854));
		NullCheck(G_B3_2);
		MaterialPropertyBlock_SetFloat_m4563FC96949F1755182A96E6CDAFDACA107EDFDC(G_B3_2, G_B3_1, G_B3_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11854));
		// ringRenderer.SetPropertyBlock(materialPropertyBlock);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11851));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_6 = ___ringRenderer0;
		MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * L_7 = __this->get_materialPropertyBlock_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11855));
		NullCheck(L_6);
		Renderer_SetPropertyBlock_m1B999AB9B425587EF44CF1CB83CDE0A191F76C40(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11855));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11852));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FingerCursor::IsNearGrabbableObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FingerCursor_IsNearGrabbableObject_mCB782215E8587D8B89DBD7896759069107AFE95E (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_IsNearGrabbableObject_mCB782215E8587D8B89DBD7896759069107AFE95E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	RuntimeObject* V_2 = NULL;
	RuntimeObject* V_3 = NULL;
	SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * V_4 = NULL;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_IsNearGrabbableObject_mCB782215E8587D8B89DBD7896759069107AFE95E_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11856));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11857));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11858));
		// var focusProvider = CoreServices.InputSystem?.FocusProvider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11859));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11880));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11880));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000d;
		}
	}
	{
		G_B3_0 = ((RuntimeObject*)(NULL));
		goto IL_0012;
	}

IL_000d:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11881));
		NullCheck(G_B2_0);
		RuntimeObject* L_2 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(7 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_FocusProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11881));
		G_B3_0 = L_2;
	}

IL_0012:
	{
		V_0 = G_B3_0;
		// if (focusProvider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11860));
		RuntimeObject* L_3 = V_0;
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_3) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11861));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0073;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11862));
		// var spherePointers = focusProvider.GetPointers<SpherePointer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11863));
		RuntimeObject* L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11882));
		NullCheck(L_5);
		RuntimeObject* L_6 = GenericInterfaceFuncInvoker0< RuntimeObject* >::Invoke(IMixedRealityFocusProvider_GetPointers_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mA7AF50FE60BE630D44C589045EBA633B3F8223FB_RuntimeMethod_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11882));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11864));
		// foreach (var spherePointer in spherePointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11865));
		RuntimeObject* L_7 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11883));
		NullCheck(L_7);
		RuntimeObject* L_8 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* System.Collections.Generic.IEnumerator`1<!0> System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.Input.SpherePointer>::GetEnumerator() */, IEnumerable_1_t19D371D5397612F70C0A4E6CC349E8EA27500ABA_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11883));
		V_3 = L_8;
	}

IL_002b:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11866));
			goto IL_005d;
		}

IL_002d:
		{
			// foreach (var spherePointer in spherePointers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11867));
			RuntimeObject* L_9 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11884));
			NullCheck(L_9);
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_10 = InterfaceFuncInvoker0< SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * >::Invoke(0 /* !0 System.Collections.Generic.IEnumerator`1<Microsoft.MixedReality.Toolkit.Input.SpherePointer>::get_Current() */, IEnumerator_1_t803289C0820529EF837EACBA5D5250227930E668_il2cpp_TypeInfo_var, L_9);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11884));
			V_4 = L_10;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11868));
			// if (spherePointer.Controller == Pointer.Controller)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11869));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_11 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11885));
			NullCheck(L_11);
			RuntimeObject* L_12 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11885));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11886));
			RuntimeObject* L_13 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11886));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11887));
			NullCheck(L_13);
			RuntimeObject* L_14 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_13);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11887));
			V_5 = (bool)((((RuntimeObject*)(RuntimeObject*)L_12) == ((RuntimeObject*)(RuntimeObject*)L_14))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11870));
			bool L_15 = V_5;
			if (!L_15)
			{
				goto IL_005c;
			}
		}

IL_0050:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11871));
			// return spherePointer.IsNearObject;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11872));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_16 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11888));
			NullCheck(L_16);
			bool L_17 = VirtFuncInvoker0< bool >::Invoke(108 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_IsNearObject() */, L_16);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11888));
			V_6 = L_17;
			IL2CPP_LEAVE(0x78, FINALLY_0067);
		}

IL_005c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11873));
		}

IL_005d:
		{
			// foreach (var spherePointer in spherePointers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11874));
			RuntimeObject* L_18 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11889));
			NullCheck(L_18);
			bool L_19 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean System.Collections.IEnumerator::MoveNext() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11889));
			if (L_19)
			{
				goto IL_002d;
			}
		}

IL_0065:
		{
			IL2CPP_LEAVE(0x72, FINALLY_0067);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0067;
	}

FINALLY_0067:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11875));
			RuntimeObject* L_20 = V_3;
			if (!L_20)
			{
				goto IL_0071;
			}
		}

IL_006a:
		{
			RuntimeObject* L_21 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11890));
			NullCheck(L_21);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_21);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11890));
		}

IL_0071:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11876));
			IL2CPP_END_FINALLY(103)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(103)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x78, IL_0078)
		IL2CPP_JUMP_TBL(0x72, IL_0072)
	}

IL_0072:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11877));
	}

IL_0073:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11878));
		V_6 = (bool)0;
		goto IL_0078;
	}

IL_0078:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11879));
		bool L_22 = V_6;
		return L_22;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FingerCursor::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Vector3&,UnityEngine.Quaternion&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, int32_t ___joint0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___position1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RuntimeObject* V_1 = NULL;
	bool V_2 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joint0), (&___position1), (&___rotation2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_TryGetJoint_mAAF94932049D146B06CF11F560279559E77CC6C2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11891));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11892));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11893));
		// if (Pointer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11912));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11912));
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11895));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11896));
		// if (Pointer.Controller is IMixedRealityHand hand)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11897));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11913));
		RuntimeObject* L_2 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11913));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11914));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11914));
		RuntimeObject* L_4 = ((RuntimeObject*)IsInst((RuntimeObject*)L_3, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var));
		V_1 = L_4;
		V_2 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11898));
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_0059;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11899));
		// if (hand.TryGetJoint(joint, out MixedRealityPose handJoint))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11900));
		RuntimeObject* L_6 = V_1;
		int32_t L_7 = ___joint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11915));
		NullCheck(L_6);
		bool L_8 = InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose&) */, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var, L_6, L_7, (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_3));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11915));
		V_4 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11901));
		bool L_9 = V_4;
		if (!L_9)
		{
			goto IL_0058;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11902));
		// position = handJoint.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11903));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_10 = ___position1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11916));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11916));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_10 = L_11;
		// rotation = handJoint.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11904));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_12 = ___rotation2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11917));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11917));
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_12 = L_13;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11905));
		V_5 = (bool)1;
		goto IL_0075;
	}

IL_0058:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11906));
	}

IL_0059:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11907));
	}

IL_005a:
	{
		// position = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11908));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_14 = ___position1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11918));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11918));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_14 = L_15;
		// rotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11909));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_16 = ___rotation2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11919));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11919));
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_16 = L_17;
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11910));
		V_5 = (bool)0;
		goto IL_0075;
	}

IL_0075:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11911));
		bool L_18 = V_5;
		return L_18;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::TranslateToFinger(UnityEngine.Transform,System.Single,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, float ___deltaTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___fingerPosition2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___knucklePosition3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___target0), (&___deltaTime1), (&___fingerPosition2), (&___knucklePosition3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_TranslateToFinger_m623E97D8D86539BF3CECFE661F3B99593DE6A288_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11920));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11921));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11922));
		// var targetPosition = fingerPosition + (fingerPosition - knucklePosition).normalized * skinSurfaceOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11923));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___fingerPosition2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___fingerPosition2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___knucklePosition3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11926));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11926));
		V_1 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11927));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11927));
		float L_5 = __this->get_skinSurfaceOffset_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11928));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11928));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11929));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_0, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11929));
		V_0 = L_7;
		// target.position = Vector3.Lerp(target.position, targetPosition, deltaTime / PositionLerpTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11924));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = ___target0;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = ___target0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11930));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11930));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_0;
		float L_12 = ___deltaTime1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11931));
		float L_13 = BaseCursor_get_PositionLerpTime_mAE3A61C0446C31A1F299BF6CF12A48B8DB55FCF7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11932));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_10, L_11, ((float)((float)L_12/(float)L_13)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11932));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11933));
		NullCheck(L_8);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_8, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11933));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11925));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::RotateToFinger(UnityEngine.Transform,System.Single,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, float ___deltaTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___pointerRotation2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___target0), (&___deltaTime1), (&___pointerRotation2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_RotateToFinger_m6C96864330E0F4F88A5BC06EA4F18EE8E2033AF0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11934));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11935));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11936));
		// target.rotation = Quaternion.Lerp(target.rotation, pointerRotation, deltaTime / RotationLerpTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11937));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___target0;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = ___target0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11939));
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11939));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = ___pointerRotation2;
		float L_4 = ___deltaTime1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11940));
		float L_5 = BaseCursor_get_RotationLerpTime_mCE288A66DE1F18FA045E205ABA98E3E6B91FE993(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11940));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11941));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_2, L_3, ((float)((float)L_4/(float)L_5)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11941));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11942));
		NullCheck(L_0);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_0, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11942));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11938));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::RotateToSurfaceNormal(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7 (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___surfaceNormal1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___pointerRotation2, float ___distance3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___target0), (&___surfaceNormal1), (&___pointerRotation2), (&___distance3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_RotateToSurfaceNormal_m9EA209FE8ADD66FFFD58236F361E6A06C23355B7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11943));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11944));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11945));
		// var t = distance / alignWithSurfaceDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11946));
		float L_0 = ___distance3;
		float L_1 = __this->get_alignWithSurfaceDistance_27();
		V_0 = ((float)((float)L_0/(float)L_1));
		// var targetRotation = Quaternion.LookRotation(-surfaceNormal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11947));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___surfaceNormal1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11950));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11951));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_4 = Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11951));
		V_1 = L_4;
		// target.rotation = Quaternion.Slerp(targetRotation, pointerRotation, t);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11948));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = ___target0;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = V_1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = ___pointerRotation2;
		float L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11952));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_9 = Quaternion_Slerp_m56DE173C3520C83DF3F1C6EDFA82FF88A2C9E756(L_6, L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11952));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11953));
		NullCheck(L_5);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_5, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11953));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11949));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::TranslateFromTipToPad(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___target0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___fingerPosition1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___knucklePosition2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___surfaceNormal3, float ___distance4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	float V_4 = 0.0f;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___target0), (&___fingerPosition1), (&___knucklePosition2), (&___surfaceNormal3), (&___distance4));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor_TranslateFromTipToPad_m6C90D9565C5F3C407357277EED4B2AA2DE057F5D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11954));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11955));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11956));
		// var t = distance / alignWithSurfaceDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11957));
		float L_0 = ___distance4;
		float L_1 = __this->get_alignWithSurfaceDistance_27();
		V_0 = ((float)((float)L_0/(float)L_1));
		// Vector3 tipNormal = (fingerPosition - knucklePosition).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11958));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___fingerPosition1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = ___knucklePosition2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11966));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11966));
		V_7 = L_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11967));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11967));
		V_1 = L_5;
		// Vector3 tipPosition = fingerPosition + tipNormal * skinSurfaceOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11959));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = ___fingerPosition1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		float L_8 = __this->get_skinSurfaceOffset_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11968));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11968));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11969));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_6, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11969));
		V_2 = L_10;
		// Vector3 tipOffset = tipPosition - fingerPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11960));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = ___fingerPosition1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11970));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11970));
		V_3 = L_13;
		// float fingerSurfaceDot = Vector3.Dot(tipNormal, -surfaceNormal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11961));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = ___surfaceNormal3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11971));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11971));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11972));
		float L_17 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_14, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11972));
		V_4 = L_17;
		// Quaternion degreesRelative = Quaternion.AngleAxis((1f - t) * 90f * (1f - fingerSurfaceDot), target.right);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11962));
		float L_18 = V_0;
		float L_19 = V_4;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = ___target0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11973));
		NullCheck(L_20);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = Transform_get_right_mC32CE648E98D3D4F62F897A2751EE567C7C0CFB0(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11973));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11974));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_22 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_18)), (float)(90.0f))), (float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_19)))), L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11974));
		V_5 = L_22;
		// Vector3 tipToPadPosition = fingerPosition + degreesRelative * tipOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11963));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = ___fingerPosition1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_24 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11975));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11975));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11976));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_23, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11976));
		V_6 = L_27;
		// target.position = tipToPadPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11964));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = ___target0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11977));
		NullCheck(L_28);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11977));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11965));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FingerCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FingerCursor__ctor_mDFB34D40A65E8F4EB92949514EFADF0EFC02A14F (FingerCursor_t8F38FF945DA9CD2B8AC0C5DC6891AC80E2F221EA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FingerCursor__ctor_mDFB34D40A65E8F4EB92949514EFADF0EFC02A14F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FingerCursor__ctor_mDFB34D40A65E8F4EB92949514EFADF0EFC02A14F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11979));
	{
		// private bool checkForGrabbables = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11980));
		__this->set_checkForGrabbables_25((bool)0);
		// private float skinSurfaceOffset = 0.01f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11981));
		__this->set_skinSurfaceOffset_26((0.01f));
		// private float alignWithSurfaceDistance = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11982));
		__this->set_alignWithSurfaceDistance_27((0.1f));
		// private readonly Quaternion fingerPadRotation = Quaternion.Euler(90.0f, 0.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11983));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11984));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05((90.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11984));
		__this->set_fingerPadRotation_31(L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11985));
		BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11985));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusHandler::get_MarkEventsAsUsed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusHandler_get_MarkEventsAsUsed_m81D6F951DB05D622AA101E05CC794860DA103318 (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_get_MarkEventsAsUsed_m81D6F951DB05D622AA101E05CC794860DA103318_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_get_MarkEventsAsUsed_m81D6F951DB05D622AA101E05CC794860DA103318_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9437));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9438));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9439));
		// get { return markEventsAsUsed; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9440));
		bool L_0 = __this->get_markEventsAsUsed_4();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return markEventsAsUsed; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9441));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusHandler::set_MarkEventsAsUsed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusHandler_set_MarkEventsAsUsed_m75D691638E7C7726DC4371980A60D81755B4FB58 (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_set_MarkEventsAsUsed_m75D691638E7C7726DC4371980A60D81755B4FB58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_set_MarkEventsAsUsed_m75D691638E7C7726DC4371980A60D81755B4FB58_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9442));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9443));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9444));
		// set { markEventsAsUsed = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9445));
		bool L_0 = ___value0;
		__this->set_markEventsAsUsed_4(L_0);
		// set { markEventsAsUsed = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9446));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.FocusHandler::get_OnFocusEnterEvent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * FocusHandler_get_OnFocusEnterEvent_mCEFEB1C1FD085EDEE8D561DDF04EEFF69171C02C (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_get_OnFocusEnterEvent_mCEFEB1C1FD085EDEE8D561DDF04EEFF69171C02C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_get_OnFocusEnterEvent_mCEFEB1C1FD085EDEE8D561DDF04EEFF69171C02C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9447));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9448));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9449));
		// get { return onFocusEnterEvent; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9450));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onFocusEnterEvent_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onFocusEnterEvent; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9451));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusHandler::set_OnFocusEnterEvent(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusHandler_set_OnFocusEnterEvent_mFC9405D0789A67BA7FEE8D4E8FC6EEE08716581D (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_set_OnFocusEnterEvent_mFC9405D0789A67BA7FEE8D4E8FC6EEE08716581D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_set_OnFocusEnterEvent_mFC9405D0789A67BA7FEE8D4E8FC6EEE08716581D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9452));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9453));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9454));
		// set { onFocusEnterEvent = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9455));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onFocusEnterEvent_5(L_0);
		// set { onFocusEnterEvent = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9456));
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.FocusHandler::get_OnFocusExitEvent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * FocusHandler_get_OnFocusExitEvent_mE488A91F523C44EACE609051E3E3C5D96C3C418C (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_get_OnFocusExitEvent_mE488A91F523C44EACE609051E3E3C5D96C3C418C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_get_OnFocusExitEvent_mE488A91F523C44EACE609051E3E3C5D96C3C418C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9457));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9458));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9459));
		// get { return onFocusExitEvent; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9460));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_onFocusExitEvent_6();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return onFocusExitEvent; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9461));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusHandler::set_OnFocusExitEvent(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusHandler_set_OnFocusExitEvent_mAA6752700F488C13DE82153BDF70DF9BAF264838 (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_set_OnFocusExitEvent_mAA6752700F488C13DE82153BDF70DF9BAF264838_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_set_OnFocusExitEvent_mAA6752700F488C13DE82153BDF70DF9BAF264838_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9462));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9463));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9464));
		// set { onFocusExitEvent = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9465));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_onFocusExitEvent_6(L_0);
		// set { onFocusExitEvent = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9466));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusHandler::OnFocusEnter(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusHandler_OnFocusEnter_m13772B32658EC278034F053BD06953684074D38D (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_OnFocusEnter_m13772B32658EC278034F053BD06953684074D38D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_OnFocusEnter_m13772B32658EC278034F053BD06953684074D38D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9467));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9468));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9469));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9470));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9481));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9481));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9471));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9472));
		// onFocusEnterEvent.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9473));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_3 = __this->get_onFocusEnterEvent_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9482));
		NullCheck(L_3);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9482));
		// if (markEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9474));
		bool L_4 = __this->get_markEventsAsUsed_4();
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9475));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9476));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9477));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9483));
		NullCheck(L_6);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9483));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9478));
	}

IL_002e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9479));
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9480));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusHandler::OnFocusExit(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusHandler_OnFocusExit_mEC57FE3014977C0FDA8F9ACD84415704B7373D8F (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler_OnFocusExit_mEC57FE3014977C0FDA8F9ACD84415704B7373D8F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler_OnFocusExit_mEC57FE3014977C0FDA8F9ACD84415704B7373D8F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9484));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9485));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9486));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9487));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9498));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9498));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9488));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9489));
		// onFocusExitEvent.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9490));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_3 = __this->get_onFocusExitEvent_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9499));
		NullCheck(L_3);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9499));
		// if (markEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9491));
		bool L_4 = __this->get_markEventsAsUsed_4();
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9492));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9493));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9494));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9500));
		NullCheck(L_6);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9500));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9495));
	}

IL_002e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9496));
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9497));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusHandler__ctor_m352868996278A795185C1FCBB3109087AE8872EC (FocusHandler_t845B5E7CF84B56708A7B554F613D8E870742831B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusHandler__ctor_m352868996278A795185C1FCBB3109087AE8872EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusHandler__ctor_m352868996278A795185C1FCBB3109087AE8872EC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9501));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9502));
	{
		// private bool markEventsAsUsed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9503));
		__this->set_markEventsAsUsed_4((bool)0);
		// private UnityEvent onFocusEnterEvent = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9504));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9506));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9506));
		__this->set_onFocusEnterEvent_5(L_0);
		// private UnityEvent onFocusExitEvent = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9505));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9507));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9507));
		__this->set_onFocusExitEvent_6(L_1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9508));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9508));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Controller()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14055));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14056));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14057));
		// get { return controller; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14058));
		RuntimeObject* L_0 = __this->get_controller_11();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return controller; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14059));
		RuntimeObject* L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14060));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14061));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14062));
		// controller = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14063));
		RuntimeObject* L_0 = ___value0;
		__this->set_controller_11(L_0);
		// if (controller != null && this != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14064));
		RuntimeObject* L_1 = __this->get_controller_11();
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14072));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(__this, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14072));
		G_B3_0 = ((int32_t)(L_2));
		goto IL_001a;
	}

IL_0019:
	{
		G_B3_0 = 0;
	}

IL_001a:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14065));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0069;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14066));
		// gameObject.name = $"{Controller.ControllerHandedness}_GGVPointer";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14067));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14073));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14073));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14074));
		RuntimeObject* L_5 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14075));
		NullCheck(L_5);
		uint8_t L_6 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14075));
		uint8_t L_7 = L_6;
		RuntimeObject * L_8 = Box(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_il2cpp_TypeInfo_var, &L_7);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14076));
		String_t* L_9 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralDF7E6B796C64796FB043DF09F9DECFF5F4595B0C, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14076));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14077));
		NullCheck(L_4);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_4, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14077));
		// pointerName = gameObject.name;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14068));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14078));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14078));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14079));
		NullCheck(L_10);
		String_t* L_11 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14079));
		__this->set_pointerName_13(L_11);
		// InputSourceParent = controller.InputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14069));
		RuntimeObject* L_12 = __this->get_controller_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14080));
		NullCheck(L_12);
		RuntimeObject* L_13 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14080));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14081));
		GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_inline(__this, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14081));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14070));
	}

IL_0069:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14071));
		return;
	}
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_PointerId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	uint32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14082));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14083));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14084));
		// if (pointerId == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14085));
		uint32_t L_0 = __this->get_pointerId_12();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14086));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0025;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14087));
		// pointerId = CoreServices.InputSystem.FocusProvider.GenerateNewPointerId();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14092));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14093));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(7 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_FocusProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14093));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14094));
		NullCheck(L_3);
		uint32_t L_4 = InterfaceFuncInvoker0< uint32_t >::Invoke(7 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider::GenerateNewPointerId() */, IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14094));
		__this->set_pointerId_12(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14089));
	}

IL_0025:
	{
		// return pointerId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14090));
		uint32_t L_5 = __this->get_pointerId_12();
		V_1 = L_5;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14091));
		uint32_t L_6 = V_1;
		return L_6;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_PointerName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14095));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14096));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14097));
		// get { return pointerName; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14098));
		String_t* L_0 = __this->get_pointerName_13();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return pointerName; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14099));
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_PointerName(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_PointerName_mD7C04E02D0FFF16FABA116653FF85197B30BCCCD (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_PointerName_mD7C04E02D0FFF16FABA116653FF85197B30BCCCD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_PointerName_mD7C04E02D0FFF16FABA116653FF85197B30BCCCD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14100));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14101));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14102));
		// pointerName = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14103));
		String_t* L_0 = ___value0;
		__this->set_pointerName_13(L_0);
		// if (this != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14104));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14110));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(__this, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14110));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14105));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0022;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14106));
		// gameObject.name = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14107));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14111));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14111));
		String_t* L_4 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14112));
		NullCheck(L_3);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14112));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14108));
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14109));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_InputSourceParent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14113));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14114));
	{
		// public IMixedRealityInputSource InputSourceParent { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14115));
		RuntimeObject* L_0 = __this->get_U3CInputSourceParentU3Ek__BackingField_14();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_InputSourceParent(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14116));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14117));
	{
		// public IMixedRealityInputSource InputSourceParent { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14118));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CInputSourceParentU3Ek__BackingField_14(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_BaseCursor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_BaseCursor_m807BA10BD92F363E6261FB290D0E9806021F52E2 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_BaseCursor_m807BA10BD92F363E6261FB290D0E9806021F52E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_BaseCursor_m807BA10BD92F363E6261FB290D0E9806021F52E2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14119));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14120));
	{
		// public IMixedRealityCursor BaseCursor { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14121));
		RuntimeObject* L_0 = __this->get_U3CBaseCursorU3Ek__BackingField_15();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_BaseCursor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14123));
	{
		// public IMixedRealityCursor BaseCursor { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14124));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CBaseCursorU3Ek__BackingField_15(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_CursorModifier()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_CursorModifier_mE086929852C8761E79A8380263EAE7FDA41ACCB4 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_CursorModifier_mE086929852C8761E79A8380263EAE7FDA41ACCB4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_CursorModifier_mE086929852C8761E79A8380263EAE7FDA41ACCB4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14125));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14126));
	{
		// public ICursorModifier CursorModifier { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14127));
		RuntimeObject* L_0 = __this->get_U3CCursorModifierU3Ek__BackingField_16();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_CursorModifier(Microsoft.MixedReality.Toolkit.Input.ICursorModifier)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_CursorModifier_mDE0874027BDDD134CE025A31F18DF59455F70D1F (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_CursorModifier_mDE0874027BDDD134CE025A31F18DF59455F70D1F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_CursorModifier_mDE0874027BDDD134CE025A31F18DF59455F70D1F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14128));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14129));
	{
		// public ICursorModifier CursorModifier { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14130));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CCursorModifierU3Ek__BackingField_16(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14131));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14132));
	{
		// public bool IsInteractionEnabled => IsActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14133));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14134));
		bool L_0 = GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14134));
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_IsActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14136));
	{
		// public bool IsActive { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14137));
		bool L_0 = __this->get_U3CIsActiveU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_IsActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14139));
	{
		// public bool IsActive { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14140));
		bool L_0 = ___value0;
		__this->set_U3CIsActiveU3Ek__BackingField_17(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_IsFocusLocked()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_get_IsFocusLocked_m4ADD1AAFBD40913C0204708626334F86CB5EE7BB (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_IsFocusLocked_m4ADD1AAFBD40913C0204708626334F86CB5EE7BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_IsFocusLocked_m4ADD1AAFBD40913C0204708626334F86CB5EE7BB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14141));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14142));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14143));
		bool L_0 = __this->get_U3CIsFocusLockedU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_IsFocusLocked(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14144));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14145));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14146));
		bool L_0 = ___value0;
		__this->set_U3CIsFocusLockedU3Ek__BackingField_18(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_IsTargetPositionLockedOnFocusLock()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_get_IsTargetPositionLockedOnFocusLock_m11BD29BF5856533B56641125F2570B8ED7346F95 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_IsTargetPositionLockedOnFocusLock_m11BD29BF5856533B56641125F2570B8ED7346F95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_IsTargetPositionLockedOnFocusLock_m11BD29BF5856533B56641125F2570B8ED7346F95_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14147));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14148));
	{
		// public bool IsTargetPositionLockedOnFocusLock { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14149));
		bool L_0 = __this->get_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_IsTargetPositionLockedOnFocusLock(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_IsTargetPositionLockedOnFocusLock_mAACD40BE8DECB54978E37C3D2E63D8686EAD94FB (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_IsTargetPositionLockedOnFocusLock_mAACD40BE8DECB54978E37C3D2E63D8686EAD94FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_IsTargetPositionLockedOnFocusLock_mAACD40BE8DECB54978E37C3D2E63D8686EAD94FB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14150));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14151));
	{
		// public bool IsTargetPositionLockedOnFocusLock { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14152));
		bool L_0 = ___value0;
		__this->set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_19(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Rays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14153));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14154));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14155));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = __this->get_U3CRaysU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_Rays(Microsoft.MixedReality.Toolkit.Physics.RayStep[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_Rays_m0283C96E7BD6273E3EBCF2877F4435B870A487F5 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_Rays_m0283C96E7BD6273E3EBCF2877F4435B870A487F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_Rays_m0283C96E7BD6273E3EBCF2877F4435B870A487F5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14156));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14157));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14158));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = ___value0;
		__this->set_U3CRaysU3Ek__BackingField_20(L_0);
		return;
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_PrioritizedLayerMasksOverride()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* GGVPointer_get_PrioritizedLayerMasksOverride_mF8E42D368D8C3308DB649511CD2A9392C8C7FB01 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_PrioritizedLayerMasksOverride_mF8E42D368D8C3308DB649511CD2A9392C8C7FB01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_PrioritizedLayerMasksOverride_mF8E42D368D8C3308DB649511CD2A9392C8C7FB01_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14159));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14160));
	{
		// public LayerMask[] PrioritizedLayerMasksOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14161));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_PrioritizedLayerMasksOverride(UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_PrioritizedLayerMasksOverride_mDF48C9480AEC64988E190CA7A514DB9A15B0BA7E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_PrioritizedLayerMasksOverride_mDF48C9480AEC64988E190CA7A514DB9A15B0BA7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_PrioritizedLayerMasksOverride_mDF48C9480AEC64988E190CA7A514DB9A15B0BA7E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14162));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14163));
	{
		// public LayerMask[] PrioritizedLayerMasksOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14164));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___value0;
		__this->set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_21(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_FocusTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_FocusTarget_m852937B83792105BA3C05F0D858260A477D1408F (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_FocusTarget_m852937B83792105BA3C05F0D858260A477D1408F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_FocusTarget_m852937B83792105BA3C05F0D858260A477D1408F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14165));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14166));
	{
		// public IMixedRealityFocusHandler FocusTarget { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14167));
		RuntimeObject* L_0 = __this->get_U3CFocusTargetU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_FocusTarget(Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_FocusTarget_m868E9301F45EF68320AFE4BFDF9211ED6A03D902 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_FocusTarget_m868E9301F45EF68320AFE4BFDF9211ED6A03D902_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_FocusTarget_m868E9301F45EF68320AFE4BFDF9211ED6A03D902_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14168));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14169));
	{
		// public IMixedRealityFocusHandler FocusTarget { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14170));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CFocusTargetU3Ek__BackingField_22(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Result()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_Result_mDA9C3183EB62A2E97F3620694BD75D488A175FE7 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_Result_mDA9C3183EB62A2E97F3620694BD75D488A175FE7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_Result_mDA9C3183EB62A2E97F3620694BD75D488A175FE7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14171));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14172));
	{
		// public IPointerResult Result { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14173));
		RuntimeObject* L_0 = __this->get_U3CResultU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_Result(Microsoft.MixedReality.Toolkit.Input.IPointerResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_Result_m7A9213A139640B3AFCF91DB367CAE7A7BE37C9E4 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_Result_m7A9213A139640B3AFCF91DB367CAE7A7BE37C9E4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_Result_m7A9213A139640B3AFCF91DB367CAE7A7BE37C9E4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14174));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14175));
	{
		// public IPointerResult Result { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14176));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CResultU3Ek__BackingField_23(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_SceneQueryType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GGVPointer_get_SceneQueryType_m13246BA82C3BFE73864C83723428CB85FACA3919 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_SceneQueryType_m13246BA82C3BFE73864C83723428CB85FACA3919_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_SceneQueryType_m13246BA82C3BFE73864C83723428CB85FACA3919_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14177));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14178));
	{
		// public virtual SceneQueryType SceneQueryType { get; set; } = SceneQueryType.SimpleRaycast;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14179));
		int32_t L_0 = __this->get_U3CSceneQueryTypeU3Ek__BackingField_24();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_SceneQueryType(Microsoft.MixedReality.Toolkit.Physics.SceneQueryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_SceneQueryType_mE6A653026D416F6CA599D3E71923F69826756CB4 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_SceneQueryType_mE6A653026D416F6CA599D3E71923F69826756CB4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_SceneQueryType_mE6A653026D416F6CA599D3E71923F69826756CB4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14180));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14181));
	{
		// public virtual SceneQueryType SceneQueryType { get; set; } = SceneQueryType.SimpleRaycast;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14182));
		int32_t L_0 = ___value0;
		__this->set_U3CSceneQueryTypeU3Ek__BackingField_24(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_SphereCastRadius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float GGVPointer_get_SphereCastRadius_m6D6503722CE2449C196EAA2E76F7770BCF5AF533 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_SphereCastRadius_m6D6503722CE2449C196EAA2E76F7770BCF5AF533_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_SphereCastRadius_m6D6503722CE2449C196EAA2E76F7770BCF5AF533_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14183));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14184));
	{
		// get => throw new System.NotImplementedException();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14185));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14186));
		NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4 * L_0 = (NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4 *)il2cpp_codegen_object_new(NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4_il2cpp_TypeInfo_var);
		NotImplementedException__ctor_m8BEA657E260FC05F0C6D2C43A6E9BC08040F59C4(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14186));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, GGVPointer_get_SphereCastRadius_m6D6503722CE2449C196EAA2E76F7770BCF5AF533_RuntimeMethod_var);
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::set_SphereCastRadius(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_set_SphereCastRadius_m96070C41D9597EC8833278593C9AFEA2E705FA91 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_SphereCastRadius_m96070C41D9597EC8833278593C9AFEA2E705FA91_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_SphereCastRadius_m96070C41D9597EC8833278593C9AFEA2E705FA91_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14187));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14188));
	{
		// set => throw new System.NotImplementedException();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14189));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14190));
		NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4 * L_0 = (NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4 *)il2cpp_codegen_object_new(NotImplementedException_t8AD6EBE5FEDB0AEBECEE0961CF73C35B372EFFA4_il2cpp_TypeInfo_var);
		NotImplementedException__ctor_m8BEA657E260FC05F0C6D2C43A6E9BC08040F59C4(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14190));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, GGVPointer_set_SphereCastRadius_m96070C41D9597EC8833278593C9AFEA2E705FA91_RuntimeMethod_var);
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::Equals(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_Equals_m01B4B8C762472B617E00E28E280A0A6E429D31A8 (RuntimeObject* ___left0, RuntimeObject* ___right1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_Equals_m01B4B8C762472B617E00E28E280A0A6E429D31A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___left0), (&___right1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_Equals_m01B4B8C762472B617E00E28E280A0A6E429D31A8_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14191));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14192));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14193));
		// return left != null && left.Equals(right);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14194));
		RuntimeObject* L_0 = ___left0;
		if (!L_0)
		{
			goto IL_000d;
		}
	}
	{
		RuntimeObject* L_1 = ___left0;
		RuntimeObject* L_2 = ___right1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14196));
		NullCheck(L_1);
		bool L_3 = VirtFuncInvoker1< bool, RuntimeObject * >::Invoke(0 /* System.Boolean System.Object::Equals(System.Object) */, L_1, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14196));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_000e;
	}

IL_000d:
	{
		G_B3_0 = 0;
	}

IL_000e:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0011;
	}

IL_0011:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14195));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_System_Collections_IEqualityComparer_Equals_mCA44BD0FEB1306E33F961324A7775114DE24C427 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject * ___left0, RuntimeObject * ___right1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_System_Collections_IEqualityComparer_Equals_mCA44BD0FEB1306E33F961324A7775114DE24C427_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___left0), (&___right1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_System_Collections_IEqualityComparer_Equals_mCA44BD0FEB1306E33F961324A7775114DE24C427_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14198));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14199));
		// return left.Equals(right);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14200));
		RuntimeObject * L_0 = ___left0;
		RuntimeObject * L_1 = ___right1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14202));
		NullCheck(L_0);
		bool L_2 = VirtFuncInvoker1< bool, RuntimeObject * >::Invoke(0 /* System.Boolean System.Object::Equals(System.Object) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14202));
		V_0 = L_2;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14201));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::Equals(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_Equals_mF8D8E58FB3664FCB3D285A2D785C3C6748878FE0 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject * ___obj0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_Equals_mF8D8E58FB3664FCB3D285A2D785C3C6748878FE0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___obj0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_Equals_mF8D8E58FB3664FCB3D285A2D785C3C6748878FE0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14203));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14204));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14205));
		// if (ReferenceEquals(null, obj)) { return false; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14206));
		RuntimeObject * L_0 = ___obj0;
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14207));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14208));
		// if (ReferenceEquals(null, obj)) { return false; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14209));
		V_1 = (bool)0;
		goto IL_0044;
	}

IL_000e:
	{
		// if (ReferenceEquals(this, obj)) { return true; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14210));
		RuntimeObject * L_2 = ___obj0;
		V_2 = (bool)((((RuntimeObject*)(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 *)__this) == ((RuntimeObject*)(RuntimeObject *)L_2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14211));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14212));
		// if (ReferenceEquals(this, obj)) { return true; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14213));
		V_1 = (bool)1;
		goto IL_0044;
	}

IL_001b:
	{
		// if (obj.GetType() != GetType()) { return false; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14214));
		RuntimeObject * L_4 = ___obj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14220));
		NullCheck(L_4);
		Type_t * L_5 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14220));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14221));
		Type_t * L_6 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14221));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14222));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		bool L_7 = Type_op_Inequality_m615014191FB05FD50F63A24EB9A6CCA785E7CEC9(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14222));
		V_3 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14215));
		bool L_8 = V_3;
		if (!L_8)
		{
			goto IL_0035;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14216));
		// if (obj.GetType() != GetType()) { return false; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14217));
		V_1 = (bool)0;
		goto IL_0044;
	}

IL_0035:
	{
		// return Equals((IMixedRealityPointer)obj);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14218));
		RuntimeObject * L_9 = ___obj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14223));
		bool L_10 = GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38(__this, ((RuntimeObject*)Castclass((RuntimeObject*)L_9, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14223));
		V_1 = L_10;
		goto IL_0044;
	}

IL_0044:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14219));
		bool L_11 = V_1;
		return L_11;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::Equals(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___other0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___other0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_Equals_mFCF0EEB13DA2EAA4A45A9316D86231BEF426EE38_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14224));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14225));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14226));
		// return other != null && PointerId == other.PointerId && string.Equals(PointerName, other.PointerName);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14227));
		RuntimeObject* L_0 = ___other0;
		if (!L_0)
		{
			goto IL_0025;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14229));
		uint32_t L_1 = GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14229));
		RuntimeObject* L_2 = ___other0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14230));
		NullCheck(L_2);
		uint32_t L_3 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14230));
		if ((!(((uint32_t)L_1) == ((uint32_t)L_3))))
		{
			goto IL_0025;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14231));
		String_t* L_4 = GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14231));
		RuntimeObject* L_5 = ___other0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14232));
		NullCheck(L_5);
		String_t* L_6 = InterfaceFuncInvoker0< String_t* >::Invoke(3 /* System.String Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerName() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14232));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14233));
		bool L_7 = String_Equals_m90EB651A751C3444BADBBD5401109CE05B3E1CFB(L_4, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14233));
		G_B4_0 = ((int32_t)(L_7));
		goto IL_0026;
	}

IL_0025:
	{
		G_B4_0 = 0;
	}

IL_0026:
	{
		V_0 = (bool)G_B4_0;
		goto IL_0029;
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14228));
		bool L_8 = V_0;
		return L_8;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.GGVPointer::System.Collections.IEqualityComparer.GetHashCode(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GGVPointer_System_Collections_IEqualityComparer_GetHashCode_m0EBB3CEF54870856E56537FDD3227D12EABDDBE4 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject * ___obj0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_System_Collections_IEqualityComparer_GetHashCode_m0EBB3CEF54870856E56537FDD3227D12EABDDBE4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___obj0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_System_Collections_IEqualityComparer_GetHashCode_m0EBB3CEF54870856E56537FDD3227D12EABDDBE4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14234));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14235));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14236));
		// return obj.GetHashCode();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14237));
		RuntimeObject * L_0 = ___obj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14239));
		NullCheck(L_0);
		int32_t L_1 = VirtFuncInvoker0< int32_t >::Invoke(2 /* System.Int32 System.Object::GetHashCode() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14239));
		V_0 = L_1;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14238));
		int32_t L_2 = V_0;
		return L_2;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.GGVPointer::GetHashCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GGVPointer_GetHashCode_m526546019E2153A2FF458AE7B679FCB6692D8C87 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_GetHashCode_m526546019E2153A2FF458AE7B679FCB6692D8C87_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_GetHashCode_m526546019E2153A2FF458AE7B679FCB6692D8C87_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14240));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14241));
	int32_t G_B2_0 = 0;
	int32_t G_B1_0 = 0;
	int32_t G_B3_0 = 0;
	int32_t G_B3_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14242));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14243));
		// int hashCode = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14244));
		V_0 = 0;
		// hashCode = (hashCode * 397) ^ (int)PointerId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14245));
		int32_t L_0 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14249));
		uint32_t L_1 = GGVPointer_get_PointerId_m7BB4321895CD86ACEA87CDDDB7F64557AB9FD8D3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14249));
		V_0 = ((int32_t)((int32_t)((int32_t)il2cpp_codegen_multiply((int32_t)L_0, (int32_t)((int32_t)397)))^(int32_t)L_1));
		// hashCode = (hashCode * 397) ^ (PointerName != null ? PointerName.GetHashCode() : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14246));
		int32_t L_2 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14250));
		String_t* L_3 = GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14250));
		G_B1_0 = ((int32_t)il2cpp_codegen_multiply((int32_t)L_2, (int32_t)((int32_t)397)));
		if (L_3)
		{
			G_B2_0 = ((int32_t)il2cpp_codegen_multiply((int32_t)L_2, (int32_t)((int32_t)397)));
			goto IL_0025;
		}
	}
	{
		G_B3_0 = 0;
		G_B3_1 = G_B1_0;
		goto IL_0030;
	}

IL_0025:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14251));
		String_t* L_4 = GGVPointer_get_PointerName_m07E50403D546D3D3F2A73267A3B94CE2F9D845C2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14252));
		NullCheck(L_4);
		int32_t L_5 = VirtFuncInvoker0< int32_t >::Invoke(2 /* System.Int32 System.Object::GetHashCode() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14252));
		G_B3_0 = L_5;
		G_B3_1 = G_B2_0;
	}

IL_0030:
	{
		V_0 = ((int32_t)((int32_t)G_B3_1^(int32_t)G_B3_0));
		// return hashCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14247));
		int32_t L_6 = V_0;
		V_1 = L_6;
		goto IL_0036;
	}

IL_0036:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14248));
		int32_t L_7 = V_1;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnPreSceneQuery_m6615C2CB46AB999EE6D8C1ADF3BA93F637529B3E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnPreSceneQuery_m6615C2CB46AB999EE6D8C1ADF3BA93F637529B3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnPreSceneQuery_m6615C2CB46AB999EE6D8C1ADF3BA93F637529B3E_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14253));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14254));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14255));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14256));
		IL2CPP_RUNTIME_CLASS_INIT(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_25();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14264));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14264));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14257));
		// Vector3 newGazeOrigin = gazeProvider.GazePointer.Rays[0].Origin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14258));
		RuntimeObject* L_2 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14265));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14265));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14266));
		NullCheck(L_3);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14266));
		NullCheck(L_4);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14267));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_4)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14267));
		V_2 = L_5;
		// Vector3 endPoint = newGazeOrigin + (gazeProvider.GazePointer.Rays[0].Direction * CoreServices.InputSystem.FocusProvider.GlobalPointingExtent);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14259));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_2;
		RuntimeObject* L_7 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14268));
		NullCheck(L_7);
		RuntimeObject* L_8 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14268));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14269));
		NullCheck(L_8);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_9 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14269));
		NullCheck(L_9);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14270));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_9)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14270));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14271));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_11 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14271));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14272));
		NullCheck(L_11);
		RuntimeObject* L_12 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(7 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_FocusProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14272));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14273));
		NullCheck(L_12);
		float L_13 = InterfaceFuncInvoker0< float >::Invoke(0 /* System.Single Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider::get_GlobalPointingExtent() */, IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14273));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14274));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_10, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14274));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14275));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_6, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14275));
		V_3 = L_15;
		// Rays[0].UpdateRayStep(ref newGazeOrigin, ref endPoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14260));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14276));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_16 = GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14276));
		NullCheck(L_16);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14277));
		RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_16)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14277));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14261));
		IL2CPP_LEAVE(0x8A, FINALLY_007b);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_007b;
	}

FINALLY_007b:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14262));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14278));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14278));
		IL2CPP_END_FINALLY(123)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(123)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x8A, IL_008a)
	}

IL_008a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14263));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_OnSceneQuery_mE5FB0B7B0A61B5CC4FD17A8B5F22A62C71E1102A (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks0, bool ___focusIndividualCompoundCollider1, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * ___hitInfo2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnSceneQuery_mE5FB0B7B0A61B5CC4FD17A8B5F22A62C71E1102A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___prioritizedLayerMasks0), (&___focusIndividualCompoundCollider1), (&___hitInfo2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnSceneQuery_mE5FB0B7B0A61B5CC4FD17A8B5F22A62C71E1102A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14279));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14280));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14281));
		// if (gazeProvider.GazePointer is IMixedRealityQueryablePointer queryPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14282));
		RuntimeObject* L_0 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14291));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14291));
		RuntimeObject* L_2 = ((RuntimeObject*)IsInst((RuntimeObject*)L_1, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var));
		V_0 = L_2;
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14283));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14284));
		// return queryPointer.OnSceneQuery(prioritizedLayerMasks, focusIndividualCompoundCollider, out hitInfo);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14285));
		RuntimeObject* L_4 = V_0;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_5 = ___prioritizedLayerMasks0;
		bool L_6 = ___focusIndividualCompoundCollider1;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_7 = ___hitInfo2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14292));
		NullCheck(L_4);
		bool L_8 = InterfaceFuncInvoker3< bool, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*, bool, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&) */, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var, L_4, L_5, L_6, (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14292));
		V_2 = L_8;
		goto IL_0061;
	}

IL_0027:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14286));
		// bool didHit = MixedRealityRaycaster.RaycastSimplePhysicsStep(Rays[0], Rays[0].Length, prioritizedLayerMasks, focusIndividualCompoundCollider, out RaycastHit physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14287));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14293));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_9 = GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14293));
		NullCheck(L_9);
		int32_t L_10 = 0;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_11 = (L_9)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14294));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_12 = GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14294));
		NullCheck(L_12);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14295));
		float L_13 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_12)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14295));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_14 = ___prioritizedLayerMasks0;
		bool L_15 = ___focusIndividualCompoundCollider1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14296));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
		bool L_16 = MixedRealityRaycaster_RaycastSimplePhysicsStep_mBA9AACC9AA39AE0591D905C3E5B680CC6C90821D(L_11, L_13, L_14, L_15, (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14296));
		V_3 = L_16;
		// hitInfo = new MixedRealityRaycastHit(didHit, physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14288));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_17 = ___hitInfo2;
		bool L_18 = V_3;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  L_19 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14297));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_20;
		memset((&L_20), 0, sizeof(L_20));
		MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76((&L_20), L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14297));
		*(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_17 = L_20;
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_17)->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_17)->___collider_10), (void*)NULL);
		#endif
		// return didHit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14289));
		bool L_21 = V_3;
		V_2 = L_21;
		goto IL_0061;
	}

IL_0061:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14290));
		bool L_22 = V_2;
		return L_22;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,UnityEngine.GameObject&,UnityEngine.Vector3&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GGVPointer_OnSceneQuery_m7C97DABCC9085447A49F2367B1EAB341571DE4DC (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks0, bool ___focusIndividualCompoundCollider1, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** ___hitObject2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___hitPoint3, float* ___hitDistance4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnSceneQuery_m7C97DABCC9085447A49F2367B1EAB341571DE4DC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___prioritizedLayerMasks0), (&___focusIndividualCompoundCollider1), (&___hitObject2), (&___hitPoint3), (&___hitDistance4));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnSceneQuery_m7C97DABCC9085447A49F2367B1EAB341571DE4DC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14298));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14299));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14300));
		// if (gazeProvider.GazePointer is IMixedRealityQueryablePointer queryPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14301));
		RuntimeObject* L_0 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14320));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14320));
		RuntimeObject* L_2 = ((RuntimeObject*)IsInst((RuntimeObject*)L_1, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var));
		V_0 = L_2;
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14302));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14303));
		// return queryPointer.OnSceneQuery(prioritizedLayerMasks, focusIndividualCompoundCollider, out hitObject, out hitPoint, out hitDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14304));
		RuntimeObject* L_4 = V_0;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_5 = ___prioritizedLayerMasks0;
		bool L_6 = ___focusIndividualCompoundCollider1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_7 = ___hitObject2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_8 = ___hitPoint3;
		float* L_9 = ___hitDistance4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14321));
		NullCheck(L_4);
		bool L_10 = InterfaceFuncInvoker5< bool, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*, bool, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F **, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *, float* >::Invoke(1 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,UnityEngine.GameObject&,UnityEngine.Vector3&,System.Single&) */, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var, L_4, L_5, L_6, (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F **)L_7, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_8, (float*)L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14321));
		V_2 = L_10;
		goto IL_00a1;
	}

IL_002b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14305));
		// bool didHit = MixedRealityRaycaster.RaycastSimplePhysicsStep(Rays[0], Rays[0].Length, prioritizedLayerMasks, focusIndividualCompoundCollider, out RaycastHit physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14306));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14322));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_11 = GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14322));
		NullCheck(L_11);
		int32_t L_12 = 0;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_13 = (L_11)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14323));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_14 = GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14323));
		NullCheck(L_14);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14324));
		float L_15 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_14)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14324));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_16 = ___prioritizedLayerMasks0;
		bool L_17 = ___focusIndividualCompoundCollider1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14325));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
		bool L_18 = MixedRealityRaycaster_RaycastSimplePhysicsStep_mBA9AACC9AA39AE0591D905C3E5B680CC6C90821D(L_13, L_15, L_16, L_17, (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14325));
		V_3 = L_18;
		// if (didHit)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14307));
		bool L_19 = V_3;
		V_5 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14308));
		bool L_20 = V_5;
		if (!L_20)
		{
			goto IL_0085;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14309));
		// hitObject = physicsHit.collider.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14310));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_21 = ___hitObject2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14326));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_22 = RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14326));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14327));
		NullCheck(L_22);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14327));
		*((RuntimeObject **)L_21) = (RuntimeObject *)L_23;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_21, (void*)(RuntimeObject *)L_23);
		// hitPoint = physicsHit.point;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14311));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_24 = ___hitPoint3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14328));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = RaycastHit_get_point_m0E564B2A72C7A744B889AE9D596F3EFA55059001((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14328));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_24 = L_25;
		// hitDistance = physicsHit.distance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14312));
		float* L_26 = ___hitDistance4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14329));
		float L_27 = RaycastHit_get_distance_m1CBA60855C35F29BBC348D374BBC76386A243543((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14329));
		*((float*)L_26) = (float)L_27;
		// return didHit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14313));
		bool L_28 = V_3;
		V_2 = L_28;
		goto IL_00a1;
	}

IL_0085:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14314));
		// hitObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14315));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_29 = ___hitObject2;
		*((RuntimeObject **)L_29) = (RuntimeObject *)NULL;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_29, (void*)(RuntimeObject *)NULL);
		// hitPoint = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14316));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_30 = ___hitPoint3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14330));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14330));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_30 = L_31;
		// hitDistance = Mathf.Infinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14317));
		float* L_32 = ___hitDistance4;
		*((float*)L_32) = (float)(std::numeric_limits<float>::infinity());
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14318));
		V_2 = (bool)0;
		goto IL_00a1;
	}

IL_00a1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14319));
		bool L_33 = V_2;
		return L_33;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnPostSceneQuery_mBBC6A0C203397243B633D5F872F8D392FB1727B0 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnPostSceneQuery_mBBC6A0C203397243B633D5F872F8D392FB1727B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnPostSceneQuery_mBBC6A0C203397243B633D5F872F8D392FB1727B0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14331));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14332));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14333));
		// using (OnPostSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14334));
		IL2CPP_RUNTIME_CLASS_INIT(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->get_OnPostSceneQueryPerfMarker_26();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14344));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14344));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14335));
			// if (isSelectPressed && IsInteractionEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14336));
			bool L_2 = __this->get_isSelectPressed_9();
			if (!L_2)
			{
				goto IL_0020;
			}
		}

IL_0018:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14345));
			bool L_3 = GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14345));
			G_B4_0 = ((int32_t)(L_3));
			goto IL_0021;
		}

IL_0020:
		{
			G_B4_0 = 0;
		}

IL_0021:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14337));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0044;
			}
		}

IL_0025:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14338));
			// CoreServices.InputSystem.RaisePointerDragged(this, MixedRealityInputAction.None, Controller.ControllerHandedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14339));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14346));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_5 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14346));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14347));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_6 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14347));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14348));
			RuntimeObject* L_7 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14348));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14349));
			NullCheck(L_7);
			uint8_t L_8 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14349));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14350));
			NullCheck(L_5);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(36 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDragged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_5, __this, L_6, L_8, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14350));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14340));
		}

IL_0044:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14341));
			IL2CPP_LEAVE(0x56, FINALLY_0047);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0047;
	}

FINALLY_0047:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14342));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14351));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14351));
		IL2CPP_END_FINALLY(71)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(71)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x56, IL_0056)
	}

IL_0056:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14343));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnPreCurrentPointerTargetChange()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnPreCurrentPointerTargetChange_m0FA1115B192308DE370F31BEA4AB2663A11FE36C (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnPreCurrentPointerTargetChange_m0FA1115B192308DE370F31BEA4AB2663A11FE36C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnPreCurrentPointerTargetChange_m0FA1115B192308DE370F31BEA4AB2663A11FE36C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14352));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14353));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14354));
		// public void OnPreCurrentPointerTargetChange() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14355));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_Reset_m46156ED65B48947AEB45FB3DD439009BBC4D2227 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_Reset_m46156ED65B48947AEB45FB3DD439009BBC4D2227_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_Reset_m46156ED65B48947AEB45FB3DD439009BBC4D2227_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14356));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14357));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14358));
		// Controller = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14359));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14364));
		GGVPointer_set_Controller_mABF30C2A34F61AB61E5905C3C730FF6BC24D7A05(__this, (RuntimeObject*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14364));
		// BaseCursor = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14360));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14365));
		GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_inline(__this, (RuntimeObject*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14365));
		// IsActive = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14361));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14366));
		GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14366));
		// IsFocusLocked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14362));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14367));
		GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14367));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14363));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GGVPointer_get_Position_mB7B593643FB1DB7BE14A2C9B04E62D0AB4C254BC (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_Position_mB7B593643FB1DB7BE14A2C9B04E62D0AB4C254BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_Position_mB7B593643FB1DB7BE14A2C9B04E62D0AB4C254BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14368));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14369));
	{
		// public virtual Vector3 Position => sourcePosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14370));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_sourcePosition_8();
		return L_0;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GGVPointer_get_Rotation_mB007404376B7C484493E9F354E12B04040E2CE93 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_Rotation_mB007404376B7C484493E9F354E12B04040E2CE93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_Rotation_mB007404376B7C484493E9F354E12B04040E2CE93_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14371));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14372));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14373));
		// Vector3 look = Position - CameraCache.Main.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14374));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14381));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(54 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GGVPointer::get_Position() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14381));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14382));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_1 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14382));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14383));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14383));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14384));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14384));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14385));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14385));
		V_0 = L_4;
		// if (look == Vector3.zero)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14375));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14386));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14386));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14387));
		bool L_7 = Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14387));
		V_1 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14376));
		bool L_8 = V_1;
		if (!L_8)
		{
			goto IL_004f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14377));
		// return Quaternion.LookRotation(gazeProvider.GazePointer.Rays[0].Direction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14378));
		RuntimeObject* L_9 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14388));
		NullCheck(L_9);
		RuntimeObject* L_10 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14388));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14389));
		NullCheck(L_10);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_11 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14389));
		NullCheck(L_11);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14390));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_11)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14390));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14391));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14391));
		V_2 = L_13;
		goto IL_0058;
	}

IL_004f:
	{
		// return Quaternion.LookRotation(look);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14379));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14392));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14392));
		V_2 = L_15;
		goto IL_0058;
	}

IL_0058:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14380));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = V_2;
		return L_16;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnInputUp_m8297C3DC4A78FB3B27A01C9AA6B3F6430DC098CC (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnInputUp_m8297C3DC4A78FB3B27A01C9AA6B3F6430DC098CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * V_5 = NULL;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnInputUp_m8297C3DC4A78FB3B27A01C9AA6B3F6430DC098CC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14393));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14394));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14395));
		// using (OnInputUpPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14396));
		IL2CPP_RUNTIME_CLASS_INIT(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->get_OnInputUpPerfMarker_27();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14423));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14423));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14397));
			// if (eventData.SourceId == InputSourceParent.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14398));
			InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14424));
			NullCheck(L_2);
			uint32_t L_3 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14424));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14425));
			RuntimeObject* L_4 = GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14425));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14426));
			NullCheck(L_4);
			uint32_t L_5 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_4);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14426));
			V_2 = (bool)((((int32_t)L_3) == ((int32_t)L_5))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14399));
			bool L_6 = V_2;
			if (!L_6)
			{
				goto IL_00e7;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14400));
			// if (eventData.MixedRealityInputAction == selectAction)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14401));
			InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_7 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14427));
			NullCheck(L_7);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14427));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_9 = __this->get_selectAction_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14428));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
			bool L_10 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_8, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14428));
			V_3 = L_10;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14402));
			bool L_11 = V_3;
			if (!L_11)
			{
				goto IL_00e6;
			}
		}

IL_0043:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14403));
			// isSelectPressed = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14404));
			__this->set_isSelectPressed_9((bool)0);
			// if (IsInteractionEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14405));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14429));
			bool L_12 = GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14429));
			V_4 = L_12;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14406));
			bool L_13 = V_4;
			if (!L_13)
			{
				goto IL_00e5;
			}
		}

IL_005a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14407));
			// BaseCursor c = gazeProvider.GazePointer.BaseCursor as BaseCursor;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14408));
			RuntimeObject* L_14 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14430));
			NullCheck(L_14);
			RuntimeObject* L_15 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14430));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14431));
			NullCheck(L_15);
			RuntimeObject* L_16 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_15);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14431));
			V_5 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)IsInstClass((RuntimeObject*)L_16, BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_il2cpp_TypeInfo_var));
			// if (c != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14409));
			BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_17 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14432));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_18 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_17, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14432));
			V_6 = L_18;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14410));
			bool L_19 = V_6;
			if (!L_19)
			{
				goto IL_0095;
			}
		}

IL_0080:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14411));
			// c.SourceDownIds.Remove(eventData.SourceId);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14412));
			BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_20 = V_5;
			NullCheck(L_20);
			List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * L_21 = L_20->get_SourceDownIds_15();
			InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_22 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14433));
			NullCheck(L_22);
			uint32_t L_23 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14433));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14434));
			NullCheck(L_21);
			List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294(L_21, L_23, /*hidden argument*/List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14434));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14413));
		}

IL_0095:
		{
			// CoreServices.InputSystem.RaisePointerClicked(this, selectAction, 0, Controller.ControllerHandedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14414));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14435));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_24 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14435));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_25 = __this->get_selectAction_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14436));
			RuntimeObject* L_26 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14436));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14437));
			NullCheck(L_26);
			uint8_t L_27 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_26);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14437));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14438));
			NullCheck(L_24);
			InterfaceActionInvoker5< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , int32_t, uint8_t, RuntimeObject* >::Invoke(37 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerClicked(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Int32,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_24, __this, L_25, 0, L_27, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14438));
			// CoreServices.InputSystem.RaisePointerUp(this, selectAction, Controller.ControllerHandedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14415));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14439));
			RuntimeObject* L_28 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14439));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_29 = __this->get_selectAction_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14440));
			RuntimeObject* L_30 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14440));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14441));
			NullCheck(L_30);
			uint8_t L_31 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_30);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14441));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14442));
			NullCheck(L_28);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(38 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_28, __this, L_29, L_31, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14442));
			// gazeProvider.GazePointer.IsFocusLocked = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14416));
			RuntimeObject* L_32 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14443));
			NullCheck(L_32);
			RuntimeObject* L_33 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_32);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14443));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14444));
			NullCheck(L_33);
			InterfaceActionInvoker1< bool >::Invoke(14 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_IsFocusLocked(System.Boolean) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_33, (bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14444));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14417));
		}

IL_00e5:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14418));
		}

IL_00e6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14419));
		}

IL_00e7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14420));
			IL2CPP_LEAVE(0xF9, FINALLY_00ea);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00ea;
	}

FINALLY_00ea:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14421));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14445));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14445));
		IL2CPP_END_FINALLY(234)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(234)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xF9, IL_00f9)
	}

IL_00f9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14422));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnInputDown_m93183313CA468D5F9A7B927E9EF9DB1C55FE0227 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnInputDown_m93183313CA468D5F9A7B927E9EF9DB1C55FE0227_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * V_5 = NULL;
	bool V_6 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnInputDown_m93183313CA468D5F9A7B927E9EF9DB1C55FE0227_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14446));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14447));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B8_1 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	RuntimeObject* G_B7_1 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B9_0 = NULL;
	RuntimeObject* G_B9_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14448));
		// using (OnInputDownPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14449));
		IL2CPP_RUNTIME_CLASS_INIT(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->get_OnInputDownPerfMarker_28();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14476));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14476));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14450));
			// if (eventData.SourceId == InputSourceParent.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14451));
			InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14477));
			NullCheck(L_2);
			uint32_t L_3 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14477));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14478));
			RuntimeObject* L_4 = GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14478));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14479));
			NullCheck(L_4);
			uint32_t L_5 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_4);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14479));
			V_2 = (bool)((((int32_t)L_3) == ((int32_t)L_5))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14452));
			bool L_6 = V_2;
			if (!L_6)
			{
				goto IL_0103;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14453));
			// if (eventData.MixedRealityInputAction == selectAction)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14454));
			InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_7 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14480));
			NullCheck(L_7);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14480));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_9 = __this->get_selectAction_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14481));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
			bool L_10 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_8, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14481));
			V_3 = L_10;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14455));
			bool L_11 = V_3;
			if (!L_11)
			{
				goto IL_0102;
			}
		}

IL_0043:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14456));
			// isSelectPressed = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14457));
			__this->set_isSelectPressed_9((bool)1);
			// lastControllerHandedness = Controller.ControllerHandedness;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14458));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14482));
			RuntimeObject* L_12 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14482));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14483));
			NullCheck(L_12);
			uint8_t L_13 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14483));
			__this->set_lastControllerHandedness_10(L_13);
			// if (IsInteractionEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14459));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14484));
			bool L_14 = GGVPointer_get_IsInteractionEnabled_m7DD68511AE79EAB3DA09A957892828B630A4F033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14484));
			V_4 = L_14;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14460));
			bool L_15 = V_4;
			if (!L_15)
			{
				goto IL_0101;
			}
		}

IL_006b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14461));
			// BaseCursor c = gazeProvider.GazePointer.BaseCursor as BaseCursor;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14462));
			RuntimeObject* L_16 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14485));
			NullCheck(L_16);
			RuntimeObject* L_17 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_16);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14485));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14486));
			NullCheck(L_17);
			RuntimeObject* L_18 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_17);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14486));
			V_5 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)IsInstClass((RuntimeObject*)L_18, BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_il2cpp_TypeInfo_var));
			// if (c != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14463));
			BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_19 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14487));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_20 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_19, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14487));
			V_6 = L_20;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14464));
			bool L_21 = V_6;
			if (!L_21)
			{
				goto IL_00a6;
			}
		}

IL_0091:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14465));
			// c.SourceDownIds.Add(eventData.SourceId);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14466));
			BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_22 = V_5;
			NullCheck(L_22);
			List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * L_23 = L_22->get_SourceDownIds_15();
			InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_24 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14488));
			NullCheck(L_24);
			uint32_t L_25 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14488));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14489));
			NullCheck(L_23);
			List_1_Add_m30083179A7DD6C14E23B28334B0849E1C8C151A2(L_23, L_25, /*hidden argument*/List_1_Add_m30083179A7DD6C14E23B28334B0849E1C8C151A2_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14489));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14467));
		}

IL_00a6:
		{
			// CoreServices.InputSystem.RaisePointerDown(this, selectAction, Controller.ControllerHandedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14468));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14490));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_26 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14490));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_27 = __this->get_selectAction_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14491));
			RuntimeObject* L_28 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14491));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14492));
			NullCheck(L_28);
			uint8_t L_29 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_28);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14492));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14493));
			NullCheck(L_26);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(35 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_26, __this, L_27, L_29, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14493));
			// gazeProvider.GazePointer.IsFocusLocked = (gazeProvider.GazePointer.Result?.Details.Object != null);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14469));
			RuntimeObject* L_30 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14494));
			NullCheck(L_30);
			RuntimeObject* L_31 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_30);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14494));
			RuntimeObject* L_32 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14495));
			NullCheck(L_32);
			RuntimeObject* L_33 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_32);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14495));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14496));
			NullCheck(L_33);
			RuntimeObject* L_34 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_33);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14496));
			RuntimeObject* L_35 = L_34;
			G_B7_0 = L_35;
			G_B7_1 = L_31;
			if (L_35)
			{
				G_B8_0 = L_35;
				G_B8_1 = L_31;
				goto IL_00e6;
			}
		}

IL_00e2:
		{
			G_B9_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			G_B9_1 = G_B7_1;
			goto IL_00f4;
		}

IL_00e6:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14497));
			NullCheck(G_B8_0);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_36 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, G_B8_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14497));
			V_7 = L_36;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14498));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_37 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14498));
			G_B9_0 = L_37;
			G_B9_1 = G_B8_1;
		}

IL_00f4:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14499));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_38 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B9_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14499));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14500));
			NullCheck(G_B9_1);
			InterfaceActionInvoker1< bool >::Invoke(14 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_IsFocusLocked(System.Boolean) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, G_B9_1, L_38);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14500));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14470));
		}

IL_0101:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14471));
		}

IL_0102:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14472));
		}

IL_0103:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14473));
			IL2CPP_LEAVE(0x115, FINALLY_0106);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0106;
	}

FINALLY_0106:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14474));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14501));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14501));
		IL2CPP_END_FINALLY(262)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(262)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x115, IL_0115)
	}

IL_0115:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14475));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnEnable_m883EF90D7DDA351FDD19AC43E891B39E52F3594E (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnEnable_m883EF90D7DDA351FDD19AC43E891B39E52F3594E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * V_0 = NULL;
	bool V_1 = false;
	uint32_t V_2 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnEnable_m883EF90D7DDA351FDD19AC43E891B39E52F3594E_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14503));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14504));
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14505));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14514));
		InputSystemGlobalHandlerListener_OnEnable_m6CA5222111D2EA860C0F38480674D00948767597(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14514));
		// gazeProvider = CoreServices.InputSystem.GazeProvider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14506));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14515));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14515));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14516));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14516));
		__this->set_gazeProvider_7(L_1);
		// BaseCursor c = gazeProvider.GazePointer.BaseCursor as BaseCursor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14507));
		RuntimeObject* L_2 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14517));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14517));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14518));
		NullCheck(L_3);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14518));
		V_0 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)IsInstClass((RuntimeObject*)L_4, BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_il2cpp_TypeInfo_var));
		// if (c != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14508));
		BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14519));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14519));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14509));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_004c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14510));
		// c.VisibleSourcesCount++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14511));
		BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_8 = V_0;
		BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_9 = L_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14520));
		NullCheck(L_9);
		uint32_t L_10 = BaseCursor_get_VisibleSourcesCount_m842A096FC9AEA4261C87C49AC90C07E672BE0C81(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14520));
		V_2 = L_10;
		uint32_t L_11 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14521));
		NullCheck(L_9);
		BaseCursor_set_VisibleSourcesCount_mC884E9520D4EB7A9357B0A1D233D55B0135B40B0(L_9, ((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)1)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14521));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14512));
	}

IL_004c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14513));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnDisable_m464B945C943F97F3E284B87344E3E181CB5431B3 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnDisable_m464B945C943F97F3E284B87344E3E181CB5431B3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * V_1 = NULL;
	bool V_2 = false;
	uint32_t V_3 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnDisable_m464B945C943F97F3E284B87344E3E181CB5431B3_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14522));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14523));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14524));
		// base.OnDisable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14525));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14537));
		InputSystemGlobalHandlerListener_OnDisable_m73FB8CF4D56F72E3BEF936FCC5F25883AE90BDA5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14537));
		// if (gazeProvider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14526));
		RuntimeObject* L_0 = __this->get_gazeProvider_7();
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14527));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14528));
		// BaseCursor c = gazeProvider.GazePointer.BaseCursor as BaseCursor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14529));
		RuntimeObject* L_2 = __this->get_gazeProvider_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14538));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14538));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14539));
		NullCheck(L_3);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14539));
		V_1 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)IsInstClass((RuntimeObject*)L_4, BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_il2cpp_TypeInfo_var));
		// if (c != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14530));
		BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14540));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14540));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14531));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14532));
		// c.VisibleSourcesCount--;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14533));
		BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_8 = V_1;
		BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_9 = L_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14541));
		NullCheck(L_9);
		uint32_t L_10 = BaseCursor_get_VisibleSourcesCount_m842A096FC9AEA4261C87C49AC90C07E672BE0C81(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14541));
		V_3 = L_10;
		uint32_t L_11 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14542));
		NullCheck(L_9);
		BaseCursor_set_VisibleSourcesCount_mC884E9520D4EB7A9357B0A1D233D55B0135B40B0(L_9, ((int32_t)il2cpp_codegen_subtract((int32_t)L_11, (int32_t)1)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14542));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14534));
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14535));
	}

IL_004b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14536));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_RegisterHandlers_m65E7217D694B6D133DD94807D9F009968613BEDE (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_RegisterHandlers_m65E7217D694B6D133DD94807D9F009968613BEDE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_RegisterHandlers_m65E7217D694B6D133DD94807D9F009968613BEDE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14543));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14544));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14545));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityInputHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14546));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14550));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14550));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14551));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_m2C0DAF3964D680743B8ABDBF97EC2581FA7788E2_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14551));
	}

IL_0013:
	{
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityInputHandler<MixedRealityPose>>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14547));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14552));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14552));
		RuntimeObject* L_3 = L_2;
		G_B4_0 = L_3;
		if (L_3)
		{
			G_B5_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0025;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14553));
		NullCheck(G_B5_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputHandler_1_t3EE04449D345A7F996E872ABEF6FE79969011CD8_mD94F8F69927423AB2074983E1BF31CF2CEC0A2CA_RuntimeMethod_var, G_B5_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14553));
	}

IL_0025:
	{
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealitySourceStateHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14548));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14554));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_4 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14554));
		RuntimeObject* L_5 = L_4;
		G_B7_0 = L_5;
		if (L_5)
		{
			G_B8_0 = L_5;
			goto IL_0030;
		}
	}
	{
		goto IL_0037;
	}

IL_0030:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14555));
		NullCheck(G_B8_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_m47B07025FD5C8A66BA152D91C274B257BC986164_RuntimeMethod_var, G_B8_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14555));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14549));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_UnregisterHandlers_mF92BAD287482FA24ECD91E3738853484733B1ED7 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_UnregisterHandlers_mF92BAD287482FA24ECD91E3738853484733B1ED7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_UnregisterHandlers_mF92BAD287482FA24ECD91E3738853484733B1ED7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14556));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14557));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14558));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityInputHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14559));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14563));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14563));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14564));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_mB45C244DC51FBA1370CE95E485680FD2CB1B75FC_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14564));
	}

IL_0013:
	{
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityInputHandler<MixedRealityPose>>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14565));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14565));
		RuntimeObject* L_3 = L_2;
		G_B4_0 = L_3;
		if (L_3)
		{
			G_B5_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0025;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14566));
		NullCheck(G_B5_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputHandler_1_t3EE04449D345A7F996E872ABEF6FE79969011CD8_mAFB88D5943EFDD7C4C44A7D8513AD20AE0DD8CB7_RuntimeMethod_var, G_B5_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14566));
	}

IL_0025:
	{
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealitySourceStateHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14561));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14567));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_4 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14567));
		RuntimeObject* L_5 = L_4;
		G_B7_0 = L_5;
		if (L_5)
		{
			G_B8_0 = L_5;
			goto IL_0030;
		}
	}
	{
		goto IL_0037;
	}

IL_0030:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14568));
		NullCheck(G_B8_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_mF0FE6BDF3711F115C265014A0CB44A0F61EAF864_RuntimeMethod_var, G_B8_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14568));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14562));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnSourceDetected_mFC615A13180D3171BFB74717100605DD968C6FD8 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnSourceDetected_mFC615A13180D3171BFB74717100605DD968C6FD8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnSourceDetected_mFC615A13180D3171BFB74717100605DD968C6FD8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14569));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14570));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14571));
		// public void OnSourceDetected(SourceStateEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14572));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnSourceLost_mCF16A12EFBD3EC3FACE264E24248DF099F65EE7F (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnSourceLost_mCF16A12EFBD3EC3FACE264E24248DF099F65EE7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnSourceLost_mCF16A12EFBD3EC3FACE264E24248DF099F65EE7F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14573));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14574));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14575));
		// using (OnSourceLostPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14576));
		IL2CPP_RUNTIME_CLASS_INIT(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->get_OnSourceLostPerfMarker_29();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14598));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14598));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14577));
			// if (eventData.SourceId == InputSourceParent.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14578));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14599));
			NullCheck(L_2);
			uint32_t L_3 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14599));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14600));
			RuntimeObject* L_4 = GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14600));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14601));
			NullCheck(L_4);
			uint32_t L_5 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_4);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14601));
			V_2 = (bool)((((int32_t)L_3) == ((int32_t)L_5))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14579));
			bool L_6 = V_2;
			if (!L_6)
			{
				goto IL_00ad;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14580));
			// BaseCursor c = gazeProvider.GazePointer.BaseCursor as BaseCursor;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14581));
			RuntimeObject* L_7 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14602));
			NullCheck(L_7);
			RuntimeObject* L_8 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14602));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14603));
			NullCheck(L_8);
			RuntimeObject* L_9 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14603));
			V_3 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)IsInstClass((RuntimeObject*)L_9, BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8_il2cpp_TypeInfo_var));
			// if (c != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14582));
			BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_10 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14604));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14604));
			V_4 = L_11;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14583));
			bool L_12 = V_4;
			if (!L_12)
			{
				goto IL_0062;
			}
		}

IL_004e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14584));
			// c.SourceDownIds.Remove(eventData.SourceId);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14585));
			BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * L_13 = V_3;
			NullCheck(L_13);
			List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * L_14 = L_13->get_SourceDownIds_15();
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_15 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14605));
			NullCheck(L_15);
			uint32_t L_16 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14605));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14606));
			NullCheck(L_14);
			List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294(L_14, L_16, /*hidden argument*/List_1_Remove_mBF6ECC0BA31E447300222D7C995F3C8831F29294_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14606));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14586));
		}

IL_0062:
		{
			// if (isSelectPressed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14587));
			bool L_17 = __this->get_isSelectPressed_9();
			V_5 = L_17;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14588));
			bool L_18 = V_5;
			if (!L_18)
			{
				goto IL_009b;
			}
		}

IL_006e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14589));
			// CoreServices.InputSystem.RaisePointerUp(this, selectAction, lastControllerHandedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14590));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14607));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_19 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14607));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_20 = __this->get_selectAction_5();
			uint8_t L_21 = __this->get_lastControllerHandedness_10();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14608));
			NullCheck(L_19);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(38 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_19, __this, L_20, L_21, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14608));
			// gazeProvider.GazePointer.IsFocusLocked = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14591));
			RuntimeObject* L_22 = __this->get_gazeProvider_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14609));
			NullCheck(L_22);
			RuntimeObject* L_23 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_22);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14609));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14610));
			NullCheck(L_23);
			InterfaceActionInvoker1< bool >::Invoke(14 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_IsFocusLocked(System.Boolean) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_23, (bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14610));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14592));
		}

IL_009b:
		{
			// GameObjectExtensions.DestroyGameObject(gameObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14593));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14611));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14611));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14612));
			GameObjectExtensions_DestroyGameObject_m7114755BE0C5889143147379AD4AD37BAA8F1000(L_24, (0.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14612));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14594));
		}

IL_00ad:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14595));
			IL2CPP_LEAVE(0xBF, FINALLY_00b0);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00b0;
	}

FINALLY_00b0:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14596));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14613));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14613));
		IL2CPP_END_FINALLY(176)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(176)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xBF, IL_00bf)
	}

IL_00bf:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14597));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer_OnInputChanged_m9C5819A6ABBFFDFFE1713C0281647BE725810C93 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_OnInputChanged_m9C5819A6ABBFFDFFE1713C0281647BE725810C93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_6;
	memset((&V_6), 0, sizeof(V_6));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_OnInputChanged_m9C5819A6ABBFFDFFE1713C0281647BE725810C93_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14615));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	uint32_t G_B3_1 = 0;
	RuntimeObject* G_B2_0 = NULL;
	uint32_t G_B2_1 = 0;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  G_B4_0;
	memset((&G_B4_0), 0, sizeof(G_B4_0));
	uint32_t G_B4_1 = 0;
	RuntimeObject* G_B7_0 = NULL;
	uint8_t G_B7_1 = 0;
	RuntimeObject* G_B6_0 = NULL;
	uint8_t G_B6_1 = 0;
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  G_B8_0;
	memset((&G_B8_0), 0, sizeof(G_B8_0));
	uint8_t G_B8_1 = 0;
	int32_t G_B11_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14616));
		// using (OnInputChangedPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14617));
		IL2CPP_RUNTIME_CLASS_INIT(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->get_OnInputChangedPerfMarker_30();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14627));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14627));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14618));
			// if (eventData.SourceId == Controller?.InputSource.SourceId &&
			//     eventData.Handedness == Controller?.ControllerHandedness &&
			//     eventData.MixedRealityInputAction == poseAction)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14619));
			InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14628));
			NullCheck(L_2);
			uint32_t L_3 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14628));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14629));
			RuntimeObject* L_4 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14629));
			RuntimeObject* L_5 = L_4;
			G_B2_0 = L_5;
			G_B2_1 = L_3;
			if (L_5)
			{
				G_B3_0 = L_5;
				G_B3_1 = L_3;
				goto IL_002c;
			}
		}

IL_001f:
		{
			il2cpp_codegen_initobj((&V_4), sizeof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 ));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_6 = V_4;
			G_B4_0 = L_6;
			G_B4_1 = G_B2_1;
			goto IL_003b;
		}

IL_002c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14630));
			NullCheck(G_B3_0);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14630));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14631));
			NullCheck(L_7);
			uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14631));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14632));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_9;
			memset((&L_9), 0, sizeof(L_9));
			Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B((&L_9), L_8, /*hidden argument*/Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14632));
			G_B4_0 = L_9;
			G_B4_1 = G_B3_1;
		}

IL_003b:
		{
			V_3 = G_B4_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14633));
			uint32_t L_10 = Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_3), /*hidden argument*/Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14633));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14634));
			bool L_11 = Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_3), /*hidden argument*/Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14634));
			if (!((int32_t)((int32_t)((((int32_t)G_B4_1) == ((int32_t)L_10))? 1 : 0)&(int32_t)L_11)))
			{
				goto IL_009d;
			}
		}

IL_004f:
		{
			InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * L_12 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14635));
			NullCheck(L_12);
			uint8_t L_13 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14635));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14636));
			RuntimeObject* L_14 = GGVPointer_get_Controller_m4F71F2C4565A995476531BE0004DBC430642AF0E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14636));
			RuntimeObject* L_15 = L_14;
			G_B6_0 = L_15;
			G_B6_1 = L_13;
			if (L_15)
			{
				G_B7_0 = L_15;
				G_B7_1 = L_13;
				goto IL_006b;
			}
		}

IL_005e:
		{
			il2cpp_codegen_initobj((&V_6), sizeof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 ));
			Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_16 = V_6;
			G_B8_0 = L_16;
			G_B8_1 = G_B6_1;
			goto IL_0075;
		}

IL_006b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14637));
			NullCheck(G_B7_0);
			uint8_t L_17 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B7_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14637));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14638));
			Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_18;
			memset((&L_18), 0, sizeof(L_18));
			Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B((&L_18), L_17, /*hidden argument*/Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14638));
			G_B8_0 = L_18;
			G_B8_1 = G_B7_1;
		}

IL_0075:
		{
			V_5 = G_B8_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14639));
			uint8_t L_19 = Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_inline((Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *)(&V_5), /*hidden argument*/Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14639));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14640));
			bool L_20 = Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_inline((Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *)(&V_5), /*hidden argument*/Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14640));
			if (!((int32_t)((int32_t)((((int32_t)G_B8_1) == ((int32_t)L_19))? 1 : 0)&(int32_t)L_20)))
			{
				goto IL_009d;
			}
		}

IL_008a:
		{
			InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * L_21 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14641));
			NullCheck(L_21);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_22 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14641));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_23 = __this->get_poseAction_6();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14642));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
			bool L_24 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_22, L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14642));
			G_B11_0 = ((int32_t)(L_24));
			goto IL_009e;
		}

IL_009d:
		{
			G_B11_0 = 0;
		}

IL_009e:
		{
			V_2 = (bool)G_B11_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14620));
			bool L_25 = V_2;
			if (!L_25)
			{
				goto IL_00b9;
			}
		}

IL_00a2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14621));
			// sourcePosition = eventData.InputData.Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14622));
			InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * L_26 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14643));
			NullCheck(L_26);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_27 = InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_inline(L_26, /*hidden argument*/InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14643));
			V_7 = L_27;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14644));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14644));
			__this->set_sourcePosition_8(L_28);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14623));
		}

IL_00b9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14624));
			IL2CPP_LEAVE(0xCB, FINALLY_00bc);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00bc;
	}

FINALLY_00bc:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14645));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14645));
		IL2CPP_END_FINALLY(188)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(188)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xCB, IL_00cb)
	}

IL_00cb:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14626));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer__ctor_mAFA4AB6351845B8EE32E5400C88D3CAEBB4B4B94 (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer__ctor_mAFA4AB6351845B8EE32E5400C88D3CAEBB4B4B94_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer__ctor_mAFA4AB6351845B8EE32E5400C88D3CAEBB4B4B94_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14646));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14647));
	{
		// private MixedRealityInputAction selectAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14653));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14653));
		__this->set_selectAction_5(L_0);
		// private MixedRealityInputAction poseAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14654));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14654));
		__this->set_poseAction_6(L_1);
		// private string pointerName = string.Empty;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14650));
		String_t* L_2 = ((String_t_StaticFields*)il2cpp_codegen_static_fields_for(String_t_il2cpp_TypeInfo_var))->get_Empty_5();
		__this->set_pointerName_13(L_2);
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14651));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_3 = (RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)SZArrayNew(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_il2cpp_TypeInfo_var, (uint32_t)1);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14655));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14655));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14656));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14656));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14657));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_7;
		memset((&L_7), 0, sizeof(L_7));
		RayStep__ctor_m21DEB0B3953B9DCFD8BE3666BC28050C9954354D((&L_7), L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14657));
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(0), (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B )L_7);
		__this->set_U3CRaysU3Ek__BackingField_20(L_4);
		// public virtual SceneQueryType SceneQueryType { get; set; } = SceneQueryType.SimpleRaycast;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14652));
		__this->set_U3CSceneQueryTypeU3Ek__BackingField_24(0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14658));
		InputSystemGlobalHandlerListener__ctor_m772E8CE6C735B09CA4990109CA6700A4C7EA86A3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14658));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GGVPointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GGVPointer__cctor_mB4EC52BB2538676987FA553D93336E29843E9B4B (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer__cctor_mB4EC52BB2538676987FA553D93336E29843E9B4B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer__cctor_mB4EC52BB2538676987FA553D93336E29843E9B4B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14659));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14660));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] GGVPointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14661));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14667));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral515DD1B0876607DEFB1DDDE2E7AA0A0CB5A73686, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14667));
		((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_25(L_0);
		// private static readonly ProfilerMarker OnPostSceneQueryPerfMarker = new ProfilerMarker("[MRTK] GGVPointer.OnPostSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14662));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14668));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteralA2F280A77105536EEF030ED35F7A0C2AF577D5D9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14668));
		((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->set_OnPostSceneQueryPerfMarker_26(L_1);
		// private static readonly ProfilerMarker OnInputUpPerfMarker = new ProfilerMarker("[MRTK] GGVPointer.OnInputUp");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14663));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14669));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral9D5F1AB0894D28D45C7852C057707AAC4965125F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14669));
		((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->set_OnInputUpPerfMarker_27(L_2);
		// private static readonly ProfilerMarker OnInputDownPerfMarker = new ProfilerMarker("[MRTK] GGVPointer.OnInputDown");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14664));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14670));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteralDBB21C1FE99A4E77C37A887B0B10CEBDA67D152F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14670));
		((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->set_OnInputDownPerfMarker_28(L_3);
		// private static readonly ProfilerMarker OnSourceLostPerfMarker = new ProfilerMarker("[MRTK] GGVPointer.OnSourceLost");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14665));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14671));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral9DA3A9F990FF64C656A1CD615E165AFAFE53B3C7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14671));
		((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->set_OnSourceLostPerfMarker_29(L_4);
		// private static readonly ProfilerMarker OnInputChangedPerfMarker = new ProfilerMarker("[MRTK] GGVPointer.OnInputChanged");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14672));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_5;
		memset((&L_5), 0, sizeof(L_5));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_5), _stringLiteralF12377BC951958E5CA6F1662EEE8E8AE084C0B9A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14672));
		((GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_StaticFields*)il2cpp_codegen_static_fields_for(GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_il2cpp_TypeInfo_var))->set_OnInputChangedPerfMarker_30(L_5);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.InputActionHandler::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputActionHandler_RegisterHandlers_m2C2B828C0CCCC6A56DEBCAA867D660486EB02B8C (InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionHandler_RegisterHandlers_m2C2B828C0CCCC6A56DEBCAA867D660486EB02B8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionHandler_RegisterHandlers_m2C2B828C0CCCC6A56DEBCAA867D660486EB02B8C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9509));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9510));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9511));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityInputActionHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9512));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9514));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9514));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9515));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputActionHandler_t4C9327D5054CD4AB52F6F396865C9C6127DA6C73_mB76CE07396F226DB5997424B6AF3CF2E37474242_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9515));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9513));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InputActionHandler::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputActionHandler_UnregisterHandlers_mC0CAE50A1631D2606435D7E3A761ED6D087A0828 (InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionHandler_UnregisterHandlers_mC0CAE50A1631D2606435D7E3A761ED6D087A0828_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionHandler_UnregisterHandlers_mC0CAE50A1631D2606435D7E3A761ED6D087A0828_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9516));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9517));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9518));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityInputActionHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9519));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9521));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9521));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9522));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputActionHandler_t4C9327D5054CD4AB52F6F396865C9C6127DA6C73_mF1A3680F271ADD00BA2A2B97E4AC73635D008B22_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9522));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9520));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InputActionHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputActionHandler.OnActionStarted(Microsoft.MixedReality.Toolkit.Input.BaseInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionStarted_mDF9DDEBF7EC886837FB985706712BB6E688C2E27 (InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D * __this, BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionStarted_mDF9DDEBF7EC886837FB985706712BB6E688C2E27_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionStarted_mDF9DDEBF7EC886837FB985706712BB6E688C2E27_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9523));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9524));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9525));
		// if (eventData.MixedRealityInputAction == InputAction && !eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9526));
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9537));
		NullCheck(L_0);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9537));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = __this->get_InputAction_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9538));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9538));
		if (!L_3)
		{
			goto IL_001f;
		}
	}
	{
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9539));
		NullCheck(L_4);
		bool L_5 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9539));
		G_B3_0 = ((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
		goto IL_0020;
	}

IL_001f:
	{
		G_B3_0 = 0;
	}

IL_0020:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9527));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9528));
		// OnInputActionStarted.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9529));
		InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * L_7 = __this->get_OnInputActionStarted_9();
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9540));
		NullCheck(L_7);
		UnityEvent_1_Invoke_mAB35D2B53B861757A29E7496B236DAD54A49F096(L_7, L_8, /*hidden argument*/UnityEvent_1_Invoke_mAB35D2B53B861757A29E7496B236DAD54A49F096_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9540));
		// if (MarkEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9530));
		bool L_9 = __this->get_MarkEventsAsUsed_8();
		V_1 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9531));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_0045;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9532));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9533));
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9541));
		NullCheck(L_11);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9541));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9534));
	}

IL_0045:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9535));
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9536));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InputActionHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputActionHandler.OnActionEnded(Microsoft.MixedReality.Toolkit.Input.BaseInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionEnded_m934CF04FBC7FD558E6A78C61261F4B41FCEC8524 (InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D * __this, BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionEnded_m934CF04FBC7FD558E6A78C61261F4B41FCEC8524_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputActionHandler_OnActionEnded_m934CF04FBC7FD558E6A78C61261F4B41FCEC8524_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9542));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9543));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9544));
		// if (eventData.MixedRealityInputAction == InputAction && !eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9545));
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9556));
		NullCheck(L_0);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9556));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = __this->get_InputAction_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9557));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9557));
		if (!L_3)
		{
			goto IL_001f;
		}
	}
	{
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9558));
		NullCheck(L_4);
		bool L_5 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9558));
		G_B3_0 = ((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
		goto IL_0020;
	}

IL_001f:
	{
		G_B3_0 = 0;
	}

IL_0020:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9546));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9547));
		// OnInputActionEnded.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9548));
		InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * L_7 = __this->get_OnInputActionEnded_10();
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9559));
		NullCheck(L_7);
		UnityEvent_1_Invoke_mAB35D2B53B861757A29E7496B236DAD54A49F096(L_7, L_8, /*hidden argument*/UnityEvent_1_Invoke_mAB35D2B53B861757A29E7496B236DAD54A49F096_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9559));
		// if (MarkEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9549));
		bool L_9 = __this->get_MarkEventsAsUsed_8();
		V_1 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9550));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_0045;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9551));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9552));
		BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9560));
		NullCheck(L_11);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9560));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9553));
	}

IL_0045:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9554));
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9555));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InputActionHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputActionHandler__ctor_m27C0CFB958874FC8FA3DAD78A6AB7D5C218BB92B (InputActionHandler_tEE04653A2ACEC1144C53E66C0F0243EA90C99C6D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionHandler__ctor_m27C0CFB958874FC8FA3DAD78A6AB7D5C218BB92B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionHandler__ctor_m27C0CFB958874FC8FA3DAD78A6AB7D5C218BB92B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9561));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9562));
	{
		// private MixedRealityInputAction InputAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9563));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9565));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9565));
		__this->set_InputAction_7(L_0);
		// private bool MarkEventsAsUsed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9564));
		__this->set_MarkEventsAsUsed_8((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9566));
		BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9566));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.InputActionUnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputActionUnityEvent__ctor_m448CB2FBF1184A293CDEACA9EC7A8A5EFF2E8EC5 (InputActionUnityEvent_t45F56C203C1B3E93D1DFBEACF0DE2828CB8A811F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionUnityEvent__ctor_m448CB2FBF1184A293CDEACA9EC7A8A5EFF2E8EC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionUnityEvent__ctor_m448CB2FBF1184A293CDEACA9EC7A8A5EFF2E8EC5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_1__ctor_mD2CC4D61F76F2B6222356EE45D15481994CCCAD2(__this, /*hidden argument*/UnityEvent_1__ctor_mD2CC4D61F76F2B6222356EE45D15481994CCCAD2_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.InputRayUtils::GetHeadGazeRay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17548));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17549));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17550));
		// return new Ray(CameraCache.Main.transform.position, CameraCache.Main.transform.forward);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17551));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17553));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_0 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17553));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17554));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17554));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17555));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17555));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17556));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_3 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17556));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17557));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17557));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17558));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17558));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17559));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_6;
		memset((&L_6), 0, sizeof(L_6));
		Ray__ctor_m695D219349B8AA4C82F96C55A27D384C07736F6B((&L_6), L_2, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17559));
		V_0 = L_6;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17552));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_7 = V_0;
		return L_7;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetEyeGazeRay(UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___ray0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17560));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17561));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17562));
		// ray = new Ray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17563));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_0 = ___ray0;
		il2cpp_codegen_initobj(L_0, sizeof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 ));
		// IMixedRealityEyeGazeProvider eyeGazeProvider = CoreServices.InputSystem?.EyeGazeProvider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17564));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17572));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_1 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17572));
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0014;
		}
	}
	{
		G_B3_0 = ((RuntimeObject*)(NULL));
		goto IL_0019;
	}

IL_0014:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17573));
		NullCheck(G_B2_0);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17573));
		G_B3_0 = L_3;
	}

IL_0019:
	{
		V_0 = G_B3_0;
		// if ((eyeGazeProvider == null) ||
		//     !eyeGazeProvider.IsEyeTrackingDataValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17565));
		RuntimeObject* L_4 = V_0;
		if (!L_4)
		{
			goto IL_0028;
		}
	}
	{
		RuntimeObject* L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17574));
		NullCheck(L_5);
		bool L_6 = InterfaceFuncInvoker0< bool >::Invoke(1 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_IsEyeTrackingDataValid() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17574));
		G_B6_0 = ((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		goto IL_0029;
	}

IL_0028:
	{
		G_B6_0 = 1;
	}

IL_0029:
	{
		V_1 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17566));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17567));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17568));
		V_2 = (bool)0;
		goto IL_0042;
	}

IL_0032:
	{
		// ray = eyeGazeProvider.LatestEyeGaze;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17569));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_8 = ___ray0;
		RuntimeObject* L_9 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17575));
		NullCheck(L_9);
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_10 = InterfaceFuncInvoker0< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(3 /* UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_LatestEyeGaze() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17575));
		*(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_8 = L_10;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17570));
		V_2 = (bool)1;
		goto IL_0042;
	}

IL_0042:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17571));
		bool L_11 = V_2;
		return L_11;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetHandRay(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7 (uint8_t ___hand0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hand0), (&___ray1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17576));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17577));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17578));
		// ray = new Ray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17579));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_0 = ___ray1;
		il2cpp_codegen_initobj(L_0, sizeof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 ));
		// if (TryGetControllerInstance(InputSourceType.Hand, hand, out controller))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17580));
		uint8_t L_1 = ___hand0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17592));
		bool L_2 = InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2(1, L_1, (RuntimeObject**)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17592));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17581));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0049;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17582));
		// if (TryGetInteractionMapping(controller, DeviceInputType.SpatialPointer, out mapping))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17583));
		RuntimeObject* L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17593));
		bool L_5 = InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E(L_4, 3, (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 **)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17593));
		V_3 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17584));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_0048;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17585));
		// ray.origin = mapping.PositionData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17586));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_7 = ___ray1;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_8 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17594));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17594));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17595));
		Ray_set_origin_m6E0F02140356CBC1BA9B448CBBA065AAB492A132((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_7, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17595));
		// ray.direction = MathUtilities.GetDirection(mapping.RotationData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17587));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_10 = ___ray1;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_11 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17596));
		NullCheck(L_11);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17596));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17597));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = MathUtilities_GetDirection_m40B3D7517923E0A792A9920A59A0105D94D4341F(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17598));
		Ray_set_direction_mD4D0EA72276CF43ABFE2C190DFD24930ED977D8B((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_10, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17598));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17588));
		V_4 = (bool)1;
		goto IL_004e;
	}

IL_0048:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17589));
	}

IL_0049:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17590));
		V_4 = (bool)0;
		goto IL_004e;
	}

IL_004e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17591));
		bool L_14 = V_4;
		return L_14;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetMotionControllerRay(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50 (uint8_t ___hand0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hand0), (&___ray1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17599));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17600));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17601));
		// ray = new Ray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17602));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_0 = ___ray1;
		il2cpp_codegen_initobj(L_0, sizeof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 ));
		// if (TryGetControllerInstance(InputSourceType.Controller, hand, out controller))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17603));
		uint8_t L_1 = ___hand0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17615));
		bool L_2 = InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2(2, L_1, (RuntimeObject**)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17615));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17604));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0049;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17605));
		// if (TryGetInteractionMapping(controller, DeviceInputType.SpatialPointer, out mapping))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17606));
		RuntimeObject* L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17616));
		bool L_5 = InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E(L_4, 3, (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 **)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17616));
		V_3 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17607));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_0048;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17608));
		// ray.origin = mapping.PositionData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17609));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_7 = ___ray1;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_8 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17617));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17618));
		Ray_set_origin_m6E0F02140356CBC1BA9B448CBBA065AAB492A132((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_7, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17618));
		// ray.direction = MathUtilities.GetDirection(mapping.RotationData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17610));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_10 = ___ray1;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_11 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17619));
		NullCheck(L_11);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17619));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17620));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = MathUtilities_GetDirection_m40B3D7517923E0A792A9920A59A0105D94D4341F(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17620));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17621));
		Ray_set_direction_mD4D0EA72276CF43ABFE2C190DFD24930ED977D8B((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_10, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17621));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17611));
		V_4 = (bool)1;
		goto IL_004e;
	}

IL_0048:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17612));
	}

IL_0049:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17613));
		V_4 = (bool)0;
		goto IL_004e;
	}

IL_004e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17614));
		bool L_14 = V_4;
		return L_14;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetControllerInstance(Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2 (int32_t ___sourceType0, uint8_t ___hand1, RuntimeObject** ___controller2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD  V_3;
	memset((&V_3), 0, sizeof(V_3));
	RuntimeObject* V_4 = NULL;
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___sourceType0), (&___hand1), (&___controller2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_TryGetControllerInstance_m103A39E567BF9AD13C3A58BE9D01113CF2734CD2_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17622));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17623));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * G_B3_0 = NULL;
	RuntimeObject* G_B9_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	int32_t G_B10_0 = 0;
	int32_t G_B13_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17624));
		// controller = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17625));
		RuntimeObject** L_0 = ___controller2;
		*((RuntimeObject **)L_0) = (RuntimeObject *)NULL;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_0, (void*)(RuntimeObject *)NULL);
		// System.Collections.Generic.HashSet<IMixedRealityController> controllers = CoreServices.InputSystem?.DetectedControllers;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17626));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17646));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_1 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17646));
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0010;
		}
	}
	{
		G_B3_0 = ((HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 *)(NULL));
		goto IL_0015;
	}

IL_0010:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17647));
		NullCheck(G_B2_0);
		HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * L_3 = InterfaceFuncInvoker0< HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * >::Invoke(5 /* System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_DetectedControllers() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17647));
		G_B3_0 = L_3;
	}

IL_0015:
	{
		V_0 = G_B3_0;
		// if (controllers == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17627));
		HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * L_4 = V_0;
		V_1 = (bool)((((RuntimeObject*)(HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 *)L_4) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17628));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0023;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17629));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17630));
		V_2 = (bool)0;
		goto IL_008a;
	}

IL_0023:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17631));
		// foreach (IMixedRealityController c in controllers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17632));
		HashSet_1_t02265BFDCA60AA11C8DAAD2906D880F8171B5229 * L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17648));
		NullCheck(L_6);
		Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD  L_7 = HashSet_1_GetEnumerator_mA889029FA07B9D545D789ABAEF094BDF9A228416(L_6, /*hidden argument*/HashSet_1_GetEnumerator_mA889029FA07B9D545D789ABAEF094BDF9A228416_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17648));
		V_3 = L_7;
	}

IL_002b:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17633));
			goto IL_006c;
		}

IL_002d:
		{
			// foreach (IMixedRealityController c in controllers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17634));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17649));
			RuntimeObject* L_8 = Enumerator_get_Current_m5C3D3DFB017C501D03F223E3463AB91458CC44B7_inline((Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD *)(&V_3), /*hidden argument*/Enumerator_get_Current_m5C3D3DFB017C501D03F223E3463AB91458CC44B7_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17649));
			V_4 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17635));
			// if ((c.InputSource?.SourceType == sourceType) &&
			//     (c.ControllerHandedness == hand))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17636));
			RuntimeObject* L_9 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17650));
			NullCheck(L_9);
			RuntimeObject* L_10 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_9);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17650));
			RuntimeObject* L_11 = L_10;
			G_B8_0 = L_11;
			if (L_11)
			{
				G_B9_0 = L_11;
				goto IL_0045;
			}
		}

IL_0041:
		{
			G_B10_0 = 0;
			goto IL_004d;
		}

IL_0045:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17651));
			NullCheck(G_B9_0);
			int32_t L_12 = InterfaceFuncInvoker0< int32_t >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Input.InputSourceType Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_SourceType() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, G_B9_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17651));
			int32_t L_13 = ___sourceType0;
			G_B10_0 = ((((int32_t)L_12) == ((int32_t)L_13))? 1 : 0);
		}

IL_004d:
		{
			if (!G_B10_0)
			{
				goto IL_005b;
			}
		}

IL_004f:
		{
			RuntimeObject* L_14 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17652));
			NullCheck(L_14);
			uint8_t L_15 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17652));
			uint8_t L_16 = ___hand1;
			G_B13_0 = ((((int32_t)L_15) == ((int32_t)L_16))? 1 : 0);
			goto IL_005c;
		}

IL_005b:
		{
			G_B13_0 = 0;
		}

IL_005c:
		{
			V_5 = (bool)G_B13_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17637));
			bool L_17 = V_5;
			if (!L_17)
			{
				goto IL_006b;
			}
		}

IL_0062:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17638));
			// controller = c;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17639));
			RuntimeObject** L_18 = ___controller2;
			RuntimeObject* L_19 = V_4;
			*((RuntimeObject **)L_18) = (RuntimeObject *)L_19;
			Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_18, (void*)(RuntimeObject *)L_19);
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17640));
			V_2 = (bool)1;
			IL2CPP_LEAVE(0x8A, FINALLY_0077);
		}

IL_006b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17641));
		}

IL_006c:
		{
			// foreach (IMixedRealityController c in controllers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17642));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17653));
			bool L_20 = Enumerator_MoveNext_m9B9126E05AE57185E1C1B2007019CB72B2D7E992((Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD *)(&V_3), /*hidden argument*/Enumerator_MoveNext_m9B9126E05AE57185E1C1B2007019CB72B2D7E992_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17653));
			if (L_20)
			{
				goto IL_002d;
			}
		}

IL_0075:
		{
			IL2CPP_LEAVE(0x86, FINALLY_0077);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0077;
	}

FINALLY_0077:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17654));
		Enumerator_Dispose_m3897751F5615B83A9E0565DD015002AE963DB69B((Enumerator_t42984CA33BF22C1464CD34BCEA40497BAFFD7DCD *)(&V_3), /*hidden argument*/Enumerator_Dispose_m3897751F5615B83A9E0565DD015002AE963DB69B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17654));
		IL2CPP_END_FINALLY(119)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(119)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x8A, IL_008a)
		IL2CPP_JUMP_TBL(0x86, IL_0086)
	}

IL_0086:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17644));
		V_2 = (bool)0;
		goto IL_008a;
	}

IL_008a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17645));
		bool L_21 = V_2;
		return L_21;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetInteractionMapping(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.DeviceInputType,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E (RuntimeObject* ___controller0, int32_t ___inputType1, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** ___mapping2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___controller0), (&___inputType1), (&___mapping2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_TryGetInteractionMapping_m6EC02CD70C995831204DC096EE41734A6A81908E_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17655));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17656));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17657));
		// mapping = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17658));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** L_0 = ___mapping2;
		*((RuntimeObject **)L_0) = (RuntimeObject *)NULL;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_0, (void*)(RuntimeObject *)NULL);
		// MixedRealityInteractionMapping[] mappings = controller.Interactions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17659));
		RuntimeObject* L_1 = ___controller0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17674));
		NullCheck(L_1);
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_2 = InterfaceFuncInvoker0< MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_Interactions() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17674));
		V_0 = L_2;
		// for (int i = 0; i < mappings.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17660));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17661));
		goto IL_002e;
	}

IL_000f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17662));
		// if (mappings[i].InputType == inputType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17663));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_3 = V_0;
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17675));
		NullCheck(L_6);
		int32_t L_7 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17675));
		int32_t L_8 = ___inputType1;
		V_2 = (bool)((((int32_t)L_7) == ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17664));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17665));
		// mapping = mappings[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17666));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** L_10 = ___mapping2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_11 = V_0;
		int32_t L_12 = V_1;
		NullCheck(L_11);
		int32_t L_13 = L_12;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_14 = (L_11)->GetAt(static_cast<il2cpp_array_size_t>(L_13));
		*((RuntimeObject **)L_10) = (RuntimeObject *)L_14;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_10, (void*)(RuntimeObject *)L_14);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17667));
		V_3 = (bool)1;
		goto IL_003e;
	}

IL_0029:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17668));
		// for (int i = 0; i < mappings.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17669));
		int32_t L_15 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_15, (int32_t)1));
	}

IL_002e:
	{
		// for (int i = 0; i < mappings.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17670));
		int32_t L_16 = V_1;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_17 = V_0;
		NullCheck(L_17);
		V_4 = (bool)((((int32_t)L_16) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_17)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17671));
		bool L_18 = V_4;
		if (L_18)
		{
			goto IL_000f;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17672));
		V_3 = (bool)0;
		goto IL_003e;
	}

IL_003e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17673));
		bool L_19 = V_3;
		return L_19;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputRayUtils::TryGetRay(Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Ray&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool InputRayUtils_TryGetRay_m90ECCB18366EF1AF38E75715F51C33DDD071ED01 (int32_t ___sourceType0, uint8_t ___hand1, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * ___ray2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputRayUtils_TryGetRay_m90ECCB18366EF1AF38E75715F51C33DDD071ED01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___sourceType0), (&___hand1), (&___ray2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputRayUtils_TryGetRay_m90ECCB18366EF1AF38E75715F51C33DDD071ED01_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17677));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17678));
		// bool success = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17679));
		V_0 = (bool)0;
		// switch (sourceType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17680));
		int32_t L_0 = ___sourceType0;
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17681));
		int32_t L_1 = V_1;
		switch (((int32_t)il2cpp_codegen_subtract((int32_t)L_1, (int32_t)1)))
		{
			case 0:
			{
				goto IL_003b;
			}
			case 1:
			{
				goto IL_0045;
			}
			case 2:
			{
				goto IL_004f;
			}
			case 3:
			{
				goto IL_0023;
			}
			case 4:
			{
				goto IL_0032;
			}
		}
	}
	{
		goto IL_004f;
	}

IL_0023:
	{
		// ray = GetHeadGazeRay();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17682));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_2 = ___ray2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17697));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_3 = InputRayUtils_GetHeadGazeRay_mE6B2493569E8D305AD58C5ED020433259A208D36(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17697));
		*(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_2 = L_3;
		// success = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17683));
		V_0 = (bool)1;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17684));
		goto IL_0070;
	}

IL_0032:
	{
		// success = TryGetEyeGazeRay(out ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17685));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_4 = ___ray2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17698));
		bool L_5 = InputRayUtils_TryGetEyeGazeRay_m856CFC29DAAA57B8C0C9AB3CF2972C47447DDD7D((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17698));
		V_0 = L_5;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17686));
		goto IL_0070;
	}

IL_003b:
	{
		// success = TryGetHandRay(hand, out ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17687));
		uint8_t L_6 = ___hand1;
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_7 = ___ray2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17699));
		bool L_8 = InputRayUtils_TryGetHandRay_mEEEC27F4D7677886655995C29D63C62C928031E7(L_6, (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17699));
		V_0 = L_8;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17688));
		goto IL_0070;
	}

IL_0045:
	{
		// success = TryGetMotionControllerRay(hand, out ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17689));
		uint8_t L_9 = ___hand1;
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_10 = ___ray2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17700));
		bool L_11 = InputRayUtils_TryGetMotionControllerRay_m791F49EA3003F8F4A174BF3730D3C562CC9ECF50(L_9, (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17700));
		V_0 = L_11;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17690));
		goto IL_0070;
	}

IL_004f:
	{
		// Debug.Log($"It is not supported to get the ray for {sourceType} sources.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17691));
		int32_t L_12 = ___sourceType0;
		int32_t L_13 = L_12;
		RuntimeObject * L_14 = Box(InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_il2cpp_TypeInfo_var, &L_13);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17701));
		String_t* L_15 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral48B0B76AB7816B414FB53B9461553AA34638F005, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17701));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17702));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17702));
		// ray = new Ray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17692));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_16 = ___ray2;
		il2cpp_codegen_initobj(L_16, sizeof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 ));
		// success = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17693));
		V_0 = (bool)0;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17694));
		goto IL_0070;
	}

IL_0070:
	{
		// return success;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17695));
		bool L_17 = V_0;
		V_2 = L_17;
		goto IL_0074;
	}

IL_0074:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17696));
		bool L_18 = V_2;
		return L_18;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSimulationIndicators::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSimulationIndicators__ctor_m78970F5A3A8D4CA8CB81B6328B48061EC6D1F9DD (InputSimulationIndicators_t7A90972FBC4ED331103EC30BDAC56959712508B3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputSimulationIndicators__ctor_m78970F5A3A8D4CA8CB81B6328B48061EC6D1F9DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputSimulationIndicators__ctor_m78970F5A3A8D4CA8CB81B6328B48061EC6D1F9DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9931));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9932));
	{
		// public UnityEngine.UI.Image imageHandLeft = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9933));
		__this->set_imageHandLeft_4((Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E *)NULL);
		// public UnityEngine.UI.Image imageHandRight = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9934));
		__this->set_imageHandRight_5((Image_t18FED07D8646917E1C563745518CF3DD57FF0B3E *)NULL);
		// public Sprite iconHandActiveLeft = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9935));
		__this->set_iconHandActiveLeft_6((Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 *)NULL);
		// public Sprite iconHandActiveRight = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9936));
		__this->set_iconHandActiveRight_7((Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 *)NULL);
		// public Sprite iconHandIdleLeft = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9937));
		__this->set_iconHandIdleLeft_8((Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 *)NULL);
		// public Sprite iconHandIdleRight = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9938));
		__this->set_iconHandIdleRight_9((Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 *)NULL);
		// public Sprite iconHandUntrackedLeft = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9939));
		__this->set_iconHandUntrackedLeft_10((Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 *)NULL);
		// public Sprite iconHandUntrackedRight = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9940));
		__this->set_iconHandUntrackedRight_11((Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9941));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9941));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor_Awake_m7134A5EB63651FFCF487AD9AE524EB136E09C725 (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InteractiveMeshCursor_Awake_m7134A5EB63651FFCF487AD9AE524EB136E09C725_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InteractiveMeshCursor_Awake_m7134A5EB63651FFCF487AD9AE524EB136E09C725_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11986));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11987));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11988));
		// initialScale = transform.localScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11989));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11991));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11991));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11992));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11992));
		__this->set_initialScale_38(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11990));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor_OnCursorStateChange_m18E3B36A6718D5132C1869E7EF19A0955A0EC297 (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, int32_t ___state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InteractiveMeshCursor_OnCursorStateChange_m18E3B36A6718D5132C1869E7EF19A0955A0EC297_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InteractiveMeshCursor_OnCursorStateChange_m18E3B36A6718D5132C1869E7EF19A0955A0EC297_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11993));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11994));
	int32_t G_B4_0 = 0;
	int32_t G_B21_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11995));
		// base.OnCursorStateChange(state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11996));
		int32_t L_0 = ___state0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12035));
		BaseCursor_OnCursorStateChange_mB3E67F6CCF7D497558679F79677E809536D27FB4(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12035));
		// if (hasHand != IsSourceDetected || isDown != IsPointerDown || hasHover != (TargetedObject != null))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11997));
		bool L_1 = __this->get_hasHand_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12036));
		bool L_2 = BaseCursor_get_IsSourceDetected_m4F69B30F7720B96639B0A0F88A44225DB9651763(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12036));
		if ((!(((uint32_t)L_1) == ((uint32_t)L_2))))
		{
			goto IL_003e;
		}
	}
	{
		bool L_3 = __this->get_isDown_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12037));
		bool L_4 = BaseCursor_get_IsPointerDown_m33736993BA24441F805F2996B881DBBB22A85EB2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12037));
		if ((!(((uint32_t)L_3) == ((uint32_t)L_4))))
		{
			goto IL_003e;
		}
	}
	{
		bool L_5 = __this->get_hasHover_34();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)__this)->get_TargetedObject_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12038));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12038));
		G_B4_0 = ((((int32_t)((((int32_t)L_5) == ((int32_t)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_003f;
	}

IL_003e:
	{
		G_B4_0 = 1;
	}

IL_003f:
	{
		V_1 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11998));
		bool L_8 = V_1;
		if (!L_8)
		{
			goto IL_0050;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 11999));
		// timer = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12000));
		__this->set_timer_32((0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12001));
	}

IL_0050:
	{
		// hasHand = IsSourceDetected;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12002));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12039));
		bool L_9 = BaseCursor_get_IsSourceDetected_m4F69B30F7720B96639B0A0F88A44225DB9651763(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12039));
		__this->set_hasHand_35(L_9);
		// isDown = IsPointerDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12003));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12040));
		bool L_10 = BaseCursor_get_IsPointerDown_m33736993BA24441F805F2996B881DBBB22A85EB2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12040));
		__this->set_isDown_36(L_10);
		// hasHover = TargetedObject != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12004));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = ((BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 *)__this)->get_TargetedObject_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12041));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_11, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12041));
		__this->set_hasHover_34(L_12);
		// ringDotTargetScale = defaultScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12005));
		float L_13 = __this->get_defaultScale_28();
		__this->set_ringDotTargetScale_37(L_13);
		// bool showRing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12006));
		V_0 = (bool)0;
		// switch (state)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12007));
		int32_t L_14 = ___state0;
		V_2 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12008));
		int32_t L_15 = V_2;
		switch (((int32_t)il2cpp_codegen_subtract((int32_t)L_15, (int32_t)(-1))))
		{
			case 0:
			{
				goto IL_00b4;
			}
			case 1:
			{
				goto IL_00b6;
			}
			case 2:
			{
				goto IL_00b8;
			}
			case 3:
			{
				goto IL_00bc;
			}
			case 4:
			{
				goto IL_00cc;
			}
			case 5:
			{
				goto IL_00dc;
			}
			case 6:
			{
				goto IL_00ea;
			}
			case 7:
			{
				goto IL_00ec;
			}
		}
	}
	{
		goto IL_00ee;
	}

IL_00b4:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12009));
		goto IL_00ee;
	}

IL_00b6:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12010));
		goto IL_00ee;
	}

IL_00b8:
	{
		// showRing = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12011));
		V_0 = (bool)1;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12012));
		goto IL_00ee;
	}

IL_00bc:
	{
		// showRing = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12013));
		V_0 = (bool)1;
		// ringDotTargetScale = downScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12014));
		float L_16 = __this->get_downScale_29();
		__this->set_ringDotTargetScale_37(L_16);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12015));
		goto IL_00ee;
	}

IL_00cc:
	{
		// showRing = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12016));
		V_0 = (bool)1;
		// ringDotTargetScale = upScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12017));
		float L_17 = __this->get_upScale_30();
		__this->set_ringDotTargetScale_37(L_17);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12018));
		goto IL_00ee;
	}

IL_00dc:
	{
		// ringDotTargetScale = upScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12019));
		float L_18 = __this->get_upScale_30();
		__this->set_ringDotTargetScale_37(L_18);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12020));
		goto IL_00ee;
	}

IL_00ea:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12021));
		goto IL_00ee;
	}

IL_00ec:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12022));
		goto IL_00ee;
	}

IL_00ee:
	{
		// if (!isVisible)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12023));
		bool L_19 = __this->get_isVisible_33();
		V_3 = (bool)((((int32_t)L_19) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12024));
		bool L_20 = V_3;
		if (!L_20)
		{
			goto IL_00fe;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12025));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12026));
		goto IL_0153;
	}

IL_00fe:
	{
		// ring.SetActive(showRing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12027));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = __this->get_ring_25();
		bool L_22 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12042));
		NullCheck(L_21);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_21, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12042));
		// dot.SetActive(!showRing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12028));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = __this->get_dot_26();
		bool L_24 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12043));
		NullCheck(L_23);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_23, (bool)((((int32_t)L_24) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12043));
		// if (Pointer.CursorModifier != null && hasHover)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12044));
		RuntimeObject* L_25 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12044));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12045));
		NullCheck(L_25);
		RuntimeObject* L_26 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(8 /* Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_CursorModifier() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_25);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12045));
		if (!L_26)
		{
			goto IL_0130;
		}
	}
	{
		bool L_27 = __this->get_hasHover_34();
		G_B21_0 = ((int32_t)(L_27));
		goto IL_0131;
	}

IL_0130:
	{
		G_B21_0 = 0;
	}

IL_0131:
	{
		V_4 = (bool)G_B21_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12030));
		bool L_28 = V_4;
		if (!L_28)
		{
			goto IL_0153;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12031));
		// ElementVisibility(!Pointer.CursorModifier.GetCursorVisibility());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12032));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12046));
		RuntimeObject* L_29 = VirtFuncInvoker0< RuntimeObject* >::Invoke(26 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::get_Pointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12046));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12047));
		NullCheck(L_29);
		RuntimeObject* L_30 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(8 /* Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_CursorModifier() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_29);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12047));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12048));
		NullCheck(L_30);
		bool L_31 = InterfaceFuncInvoker0< bool >::Invoke(15 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.ICursorModifier::GetCursorVisibility() */, ICursorModifier_tDE9922B058ED50BEA8696DA85B1548D40B879493_il2cpp_TypeInfo_var, L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12048));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12049));
		InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5(__this, (bool)((((int32_t)L_31) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12049));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12033));
	}

IL_0153:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12034));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::UpdateCursorTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor_UpdateCursorTransform_m8F7D7CAE0C06A08D20892C9FAC39FAB029CA72EB (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InteractiveMeshCursor_UpdateCursorTransform_m8F7D7CAE0C06A08D20892C9FAC39FAB029CA72EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	bool V_2 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InteractiveMeshCursor_UpdateCursorTransform_m8F7D7CAE0C06A08D20892C9FAC39FAB029CA72EB_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12050));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12051));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12052));
		// base.UpdateCursorTransform();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12053));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12071));
		BaseCursor_UpdateCursorTransform_mA854CD7582220F22DE7B8B6F63E4637E7B2CC767(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12071));
		// if (timer < scaleTime)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12054));
		float L_0 = __this->get_timer_32();
		float L_1 = __this->get_scaleTime_31();
		V_2 = (bool)((((float)L_0) < ((float)L_1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12055));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_00a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12056));
		// timer += Time.deltaTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12057));
		float L_3 = __this->get_timer_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12072));
		float L_4 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12072));
		__this->set_timer_32(((float)il2cpp_codegen_add((float)L_3, (float)L_4)));
		// if (timer > scaleTime)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12058));
		float L_5 = __this->get_timer_32();
		float L_6 = __this->get_scaleTime_31();
		V_4 = (bool)((((float)L_5) > ((float)L_6))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12059));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_0052;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12060));
		// timer = scaleTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12061));
		float L_8 = __this->get_scaleTime_31();
		__this->set_timer_32(L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12062));
	}

IL_0052:
	{
		// Vector3 useScale = Vector3.one * Mathf.Lerp(defaultScale, ringDotTargetScale, timer / scaleTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12063));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12073));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12073));
		float L_10 = __this->get_defaultScale_28();
		float L_11 = __this->get_ringDotTargetScale_37();
		float L_12 = __this->get_timer_32();
		float L_13 = __this->get_scaleTime_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12074));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_14 = Mathf_Lerp_m9A74C5A0C37D0CDF45EE66E7774D12A9B93B1364(L_10, L_11, ((float)((float)L_12/(float)L_13)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12075));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_9, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12075));
		V_3 = L_15;
		// ring.transform.localScale = useScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12064));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = __this->get_ring_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12076));
		NullCheck(L_16);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_17 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12076));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12077));
		NullCheck(L_17);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12077));
		// dot.transform.localScale = useScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12065));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = __this->get_dot_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12078));
		NullCheck(L_19);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12078));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12079));
		NullCheck(L_20);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12079));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12066));
	}

IL_00a0:
	{
		// float distance = Vector3.Distance(CoreServices.InputSystem.GazeProvider.GazeOrigin, transform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12067));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12080));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_22 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12080));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12081));
		NullCheck(L_22);
		RuntimeObject* L_23 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12082));
		NullCheck(L_23);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(10 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeOrigin() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_23);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12082));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12083));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12083));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12084));
		NullCheck(L_25);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12084));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12085));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_27 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_24, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12085));
		V_0 = L_27;
		// float smoothScaling = 1 - DefaultCursorDistance * distanceScaleFactor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12068));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12086));
		float L_28 = BaseCursor_get_DefaultCursorDistance_m98644B3BC2BF9AAA389ECCC49997C74D24FFF478(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12086));
		float L_29 = __this->get_distanceScaleFactor_27();
		V_1 = ((float)il2cpp_codegen_subtract((float)(1.0f), (float)((float)il2cpp_codegen_multiply((float)L_28, (float)L_29))));
		// transform.localScale = initialScale * (distance * distanceScaleFactor + smoothScaling);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12069));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12087));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12087));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = __this->get_initialScale_38();
		float L_32 = V_0;
		float L_33 = __this->get_distanceScaleFactor_27();
		float L_34 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12088));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_31, ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)L_32, (float)L_33)), (float)L_34)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12089));
		NullCheck(L_30);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_30, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12089));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12070));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::SetVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor_SetVisibility_m083DE45CCBDAEC67DFCFAF8E05903AF32269F77E (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, bool ___visible0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InteractiveMeshCursor_SetVisibility_m083DE45CCBDAEC67DFCFAF8E05903AF32269F77E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___visible0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InteractiveMeshCursor_SetVisibility_m083DE45CCBDAEC67DFCFAF8E05903AF32269F77E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12090));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12091));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12092));
		// base.SetVisibility(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12093));
		bool L_0 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12102));
		BaseCursor_SetVisibility_m9121318DA5D0CF2C7B151546F69ED9D63AC2F549(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12102));
		// isVisible = visible;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12094));
		bool L_1 = ___visible0;
		__this->set_isVisible_33(L_1);
		// ElementVisibility(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12095));
		bool L_2 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12103));
		InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12103));
		// if (visible)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12096));
		bool L_3 = ___visible0;
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12097));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12098));
		// OnCursorStateChange(CursorState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12104));
		int32_t L_5 = BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12104));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12105));
		VirtActionInvoker1< int32_t >::Invoke(51 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum) */, __this, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12105));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12100));
	}

IL_002c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12101));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::ElementVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5 (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, bool ___visible0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___visible0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InteractiveMeshCursor_ElementVisibility_m1B98EE7DAE0CEF618B6D3D4CEF675CF49D0C7BC5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12106));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12107));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12108));
		// if (ring != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12109));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_ring_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12120));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12120));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12110));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12111));
		// ring.SetActive(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12112));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_ring_25();
		bool L_4 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12121));
		NullCheck(L_3);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12121));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12113));
	}

IL_0020:
	{
		// if (dot != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12114));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = __this->get_dot_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12122));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12122));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12115));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12116));
		// dot.SetActive(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12117));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_dot_26();
		bool L_9 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12123));
		NullCheck(L_8);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12123));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12118));
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12119));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.InteractiveMeshCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InteractiveMeshCursor__ctor_m43A596BAA8852B3370968DD9397A8AEDEFAA3A07 (InteractiveMeshCursor_t67B9262884E8AB520107CE0D3D543BE6B2ADAF04 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InteractiveMeshCursor__ctor_m43A596BAA8852B3370968DD9397A8AEDEFAA3A07_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InteractiveMeshCursor__ctor_m43A596BAA8852B3370968DD9397A8AEDEFAA3A07_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12124));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12125));
	{
		// private GameObject ring = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12126));
		__this->set_ring_25((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject dot = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12127));
		__this->set_dot_26((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private float distanceScaleFactor = 0.3f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12128));
		__this->set_distanceScaleFactor_27((0.3f));
		// private float defaultScale = 0.75f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12129));
		__this->set_defaultScale_28((0.75f));
		// private float downScale = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12130));
		__this->set_downScale_29((0.5f));
		// private float upScale = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12131));
		__this->set_upScale_30((1.0f));
		// private float scaleTime = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12132));
		__this->set_scaleTime_31((0.5f));
		// private float timer = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12133));
		__this->set_timer_32((0.0f));
		// private bool isVisible = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12134));
		__this->set_isVisible_33((bool)1);
		// private bool hasHover = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12135));
		__this->set_hasHover_34((bool)0);
		// private bool hasHand = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12136));
		__this->set_hasHand_35((bool)0);
		// private bool isDown = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12137));
		__this->set_isDown_36((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12138));
		BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12138));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Input.LinePointer::get_LineBase()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14673));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14674));
	{
		// public BaseMixedRealityLineDataProvider LineBase => lineBase;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14675));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_0 = __this->get_lineBase_57();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[] Microsoft.MixedReality.Toolkit.Input.LinePointer::get_LineRenderers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14677));
	{
		// public BaseMixedRealityLineRenderer[] LineRenderers => lineRenderers;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14678));
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_0 = __this->get_lineRenderers_58();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.LinePointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool LinePointer_get_IsInteractionEnabled_mEE9BFEBCF3C1BD807747BAC84671C13E84C94D24 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_IsInteractionEnabled_mEE9BFEBCF3C1BD807747BAC84671C13E84C94D24_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_IsInteractionEnabled_mEE9BFEBCF3C1BD807747BAC84671C13E84C94D24_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14680));
	int32_t G_B6_0 = 0;
	int32_t G_B8_0 = 0;
	{
		// IsFocusLocked || (IsTracked && Controller != null && Controller.IsInPointingPose && base.IsInteractionEnabled);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14681));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14682));
		bool L_0 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14682));
		if (L_0)
		{
			goto IL_0030;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14683));
		bool L_1 = ControllerPoseSynchronizer_get_IsTracked_m603E52C39FF1E41295D21576E595DD2EBBCE49BB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14683));
		if (!L_1)
		{
			goto IL_002d;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14684));
		RuntimeObject* L_2 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14684));
		if (!L_2)
		{
			goto IL_002d;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14685));
		RuntimeObject* L_3 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14685));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14686));
		NullCheck(L_3);
		bool L_4 = InterfaceFuncInvoker0< bool >::Invoke(12 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_IsInPointingPose() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14686));
		if (!L_4)
		{
			goto IL_002d;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14687));
		bool L_5 = BaseControllerPointer_get_IsInteractionEnabled_m9F18E5E5A529EC82BA41F7D71E069E96D61F4C21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14687));
		G_B6_0 = ((int32_t)(L_5));
		goto IL_002e;
	}

IL_002d:
	{
		G_B6_0 = 0;
	}

IL_002e:
	{
		G_B8_0 = G_B6_0;
		goto IL_0031;
	}

IL_0030:
	{
		G_B8_0 = 1;
	}

IL_0031:
	{
		return (bool)G_B8_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::CheckInitialization()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14688));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14689));
	int32_t G_B8_0 = 0;
	int32_t G_B10_0 = 0;
	int32_t G_B15_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14690));
		// if (lineBase == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14691));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_0 = __this->get_lineBase_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14720));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14720));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14692));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14693));
		// lineBase = GetComponent<BaseMixedRealityLineDataProvider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14694));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14721));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_3 = Component_GetComponent_TisBaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4_mB5C56A9C6C71E5882C6561D2C525F6E8AD702558(__this, /*hidden argument*/Component_GetComponent_TisBaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4_mB5C56A9C6C71E5882C6561D2C525F6E8AD702558_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14721));
		__this->set_lineBase_57(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14695));
	}

IL_001f:
	{
		// if (lineBase == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14696));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_4 = __this->get_lineBase_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14722));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14722));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14697));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14698));
		// Debug.LogError($"No Mixed Reality Line Data Provider found on {gameObject.name}. Did you forget to add a Line Data provider?");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14699));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14723));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14723));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14724));
		NullCheck(L_7);
		String_t* L_8 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14724));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14725));
		String_t* L_9 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteral6A8C87F4B7B90CB69424E1EFF76FB9DB92090A8F, L_8, _stringLiteralA16CE5379A04E2FCC1CC4B6265BBEF14FA2490C3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14725));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14726));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14726));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14700));
	}

IL_0051:
	{
		// if (lineBase != null && (lineRenderers == null || lineRenderers.Length == 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14701));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_10 = __this->get_lineBase_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14727));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14727));
		if (!L_11)
		{
			goto IL_0076;
		}
	}
	{
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_12 = __this->get_lineRenderers_58();
		if (!L_12)
		{
			goto IL_0073;
		}
	}
	{
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_13 = __this->get_lineRenderers_58();
		NullCheck(L_13);
		G_B8_0 = ((((int32_t)(((RuntimeArray*)L_13)->max_length)) == ((int32_t)0))? 1 : 0);
		goto IL_0074;
	}

IL_0073:
	{
		G_B8_0 = 1;
	}

IL_0074:
	{
		G_B10_0 = G_B8_0;
		goto IL_0077;
	}

IL_0076:
	{
		G_B10_0 = 0;
	}

IL_0077:
	{
		V_2 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14702));
		bool L_14 = V_2;
		if (!L_14)
		{
			goto IL_008e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14703));
		// lineRenderers = lineBase.GetComponentsInChildren<BaseMixedRealityLineRenderer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14704));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_15 = __this->get_lineBase_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14728));
		NullCheck(L_15);
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_16 = Component_GetComponentsInChildren_TisBaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA_mA222E47A759E225CC830FD9EC3D5B7846EF6A0C9(L_15, /*hidden argument*/Component_GetComponentsInChildren_TisBaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA_mA222E47A759E225CC830FD9EC3D5B7846EF6A0C9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14728));
		__this->set_lineRenderers_58(L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14705));
	}

IL_008e:
	{
		// if (lineRenderers == null || lineRenderers.Length == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14706));
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_17 = __this->get_lineRenderers_58();
		if (!L_17)
		{
			goto IL_00a2;
		}
	}
	{
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_18 = __this->get_lineRenderers_58();
		NullCheck(L_18);
		G_B15_0 = ((((int32_t)(((RuntimeArray*)L_18)->max_length)) == ((int32_t)0))? 1 : 0);
		goto IL_00a3;
	}

IL_00a2:
	{
		G_B15_0 = 1;
	}

IL_00a3:
	{
		V_3 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14707));
		bool L_19 = V_3;
		if (!L_19)
		{
			goto IL_00c9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14708));
		// Debug.LogError($"No Mixed Reality Line Renderers found on {gameObject.name}. Did you forget to add a Mixed Reality Line Renderer?");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14709));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14729));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14730));
		NullCheck(L_20);
		String_t* L_21 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14730));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14731));
		String_t* L_22 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralD838216601C85FC1FC17E921D7483450557511A1, L_21, _stringLiteralB3FF438BFC29E3DAE5D94CCB71675C05DB5F939C, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14731));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14732));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14732));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14710));
	}

IL_00c9:
	{
		// for (int i = 0; i < lineRenderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14711));
		V_4 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14712));
		goto IL_00e6;
	}

IL_00ce:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14713));
		// lineRenderers[i].enabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14714));
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_23 = __this->get_lineRenderers_58();
		int32_t L_24 = V_4;
		NullCheck(L_23);
		int32_t L_25 = L_24;
		BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_26 = (L_23)->GetAt(static_cast<il2cpp_array_size_t>(L_25));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14733));
		NullCheck(L_26);
		Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(L_26, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14733));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14715));
		// for (int i = 0; i < lineRenderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14716));
		int32_t L_27 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_27, (int32_t)1));
	}

IL_00e6:
	{
		// for (int i = 0; i < lineRenderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14717));
		int32_t L_28 = V_4;
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_29 = __this->get_lineRenderers_58();
		NullCheck(L_29);
		V_5 = (bool)((((int32_t)L_28) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14718));
		bool L_30 = V_5;
		if (L_30)
		{
			goto IL_00ce;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14719));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14734));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14735));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14736));
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14737));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14740));
		BaseControllerPointer_OnEnable_m76A38FA289173B6CA59393DB0A8CD8AC2AA5354F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14740));
		// CheckInitialization();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14738));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14741));
		LinePointer_CheckInitialization_mD3B7C6D3A1288C60C0699A79540F49B8C4550517(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14741));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14739));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_OnDisable_mC311C362DCD6577944729820E1E275A88BF8D5B0 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_OnDisable_mC311C362DCD6577944729820E1E275A88BF8D5B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_OnDisable_mC311C362DCD6577944729820E1E275A88BF8D5B0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14742));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14743));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14744));
		// base.OnDisable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14745));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14755));
		BaseControllerPointer_OnDisable_mBEBFA694AE56F54831EEC9B0CFB2857FE8565B6F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14755));
		// for (int i = 0; i < lineRenderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14746));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14747));
		goto IL_0021;
	}

IL_000c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14748));
		// lineRenderers[i].enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14749));
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_0 = __this->get_lineRenderers_58();
		int32_t L_1 = V_0;
		NullCheck(L_0);
		int32_t L_2 = L_1;
		BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_3 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_2));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14756));
		NullCheck(L_3);
		Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(L_3, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14756));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14750));
		// for (int i = 0; i < lineRenderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14751));
		int32_t L_4 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_4, (int32_t)1));
	}

IL_0021:
	{
		// for (int i = 0; i < lineRenderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14752));
		int32_t L_5 = V_0;
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_6 = __this->get_lineRenderers_58();
		NullCheck(L_6);
		V_1 = (bool)((((int32_t)L_5) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_6)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14753));
		bool L_7 = V_1;
		if (L_7)
		{
			goto IL_000c;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14754));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_OnPreSceneQuery_mF9567D5E3F0B99BC3FAF85566B3AFF523BFAC1A5 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_OnPreSceneQuery_mF9567D5E3F0B99BC3FAF85566B3AFF523BFAC1A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_OnPreSceneQuery_mF9567D5E3F0B99BC3FAF85566B3AFF523BFAC1A5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14757));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14758));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14759));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14760));
		IL2CPP_RUNTIME_CLASS_INIT(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_61();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14767));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14767));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14761));
		// PreUpdateLineRenderers();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14762));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14768));
		VirtActionInvoker0::Invoke(104 /* System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::PreUpdateLineRenderers() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14768));
		// UpdateRays();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14763));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14769));
		VirtActionInvoker0::Invoke(106 /* System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::UpdateRays() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14769));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14764));
		IL2CPP_LEAVE(0x30, FINALLY_0021);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0021;
	}

FINALLY_0021:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14765));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14770));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14770));
		IL2CPP_END_FINALLY(33)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(33)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x30, IL_0030)
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14766));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14771));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14772));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14773));
		// using (OnPostSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14774));
		IL2CPP_RUNTIME_CLASS_INIT(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->get_OnPostSceneQueryPerfMarker_62();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14788));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14788));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14775));
			// base.OnPostSceneQuery();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14776));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14789));
			BaseControllerPointer_OnPostSceneQuery_m81D5B744DA4836BD0A7476D37141F0F0864C3FBF(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14789));
			// bool isEnabled = IsInteractionEnabled;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14777));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14790));
			bool L_2 = VirtFuncInvoker0< bool >::Invoke(87 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsInteractionEnabled() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14790));
			V_2 = L_2;
			// LineBase.enabled = isEnabled;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14778));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14791));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_3 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14791));
			bool L_4 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14792));
			NullCheck(L_3);
			Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(L_3, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14792));
			// if (BaseCursor != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14779));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14793));
			RuntimeObject* L_5 = BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14793));
			V_3 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14780));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_0047;
			}
		}

IL_0038:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14781));
			// BaseCursor.SetVisibility(isEnabled);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14782));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14794));
			RuntimeObject* L_7 = BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14794));
			bool L_8 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14795));
			NullCheck(L_7);
			InterfaceActionInvoker1< bool >::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::SetVisibility(System.Boolean) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_7, L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14795));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14783));
		}

IL_0047:
		{
			// PostUpdateLineRenderers();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14784));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14796));
			VirtActionInvoker0::Invoke(105 /* System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::PostUpdateLineRenderers() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14796));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14785));
			IL2CPP_LEAVE(0x60, FINALLY_0051);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0051;
	}

FINALLY_0051:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14786));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14797));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14797));
		IL2CPP_END_FINALLY(81)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(81)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x60, IL_0060)
	}

IL_0060:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14787));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::PreUpdateLineRenderers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14798));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14799));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14800));
		// using (PreUpdateLineRenderersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14801));
		IL2CPP_RUNTIME_CLASS_INIT(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->get_PreUpdateLineRenderersPerfMarker_63();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14816));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14816));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14802));
			// Debug.Assert(lineBase != null);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14803));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_2 = __this->get_lineBase_57();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14817));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14817));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14818));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14818));
			// lineBase.UpdateMatrix();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14804));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_4 = __this->get_lineBase_57();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14819));
			NullCheck(L_4);
			BaseMixedRealityLineDataProvider_UpdateMatrix_m65C70EA4BA3A85F0B7435D54157F40494F543307(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14819));
			// if (IsFocusLocked && IsTargetPositionLockedOnFocusLock && Result != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14805));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14820));
			bool L_5 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14820));
			if (!L_5)
			{
				goto IL_0049;
			}
		}

IL_0036:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14821));
			bool L_6 = VirtFuncInvoker0< bool >::Invoke(90 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsTargetPositionLockedOnFocusLock() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14821));
			if (!L_6)
			{
				goto IL_0049;
			}
		}

IL_003e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14822));
			RuntimeObject* L_7 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14822));
			G_B5_0 = ((!(((RuntimeObject*)(RuntimeObject*)L_7) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			goto IL_004a;
		}

IL_0049:
		{
			G_B5_0 = 0;
		}

IL_004a:
		{
			V_2 = (bool)G_B5_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14806));
			bool L_8 = V_2;
			if (!L_8)
			{
				goto IL_0072;
			}
		}

IL_004e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14807));
			// SetLinePoints(Position, Result.Details.Point);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14808));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14823));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14823));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14824));
			RuntimeObject* L_10 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14824));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14825));
			NullCheck(L_10);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_11 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14825));
			V_3 = L_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14826));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14826));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14827));
			LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273(__this, L_9, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14827));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14809));
			goto IL_00a7;
		}

IL_0072:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14810));
			// SetLinePoints(Position, Position + Rotation * Vector3.forward * DefaultPointerExtent);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14811));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14828));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14828));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14829));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14829));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14830));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = VirtFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(97 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rotation() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14830));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14831));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14831));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14832));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_15, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14832));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14833));
			float L_18 = BaseControllerPointer_get_DefaultPointerExtent_mFEEB522B2CE35341FFBA375F71D8D5D93E42B653(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14833));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14834));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_17, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14834));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14835));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_14, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14835));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14836));
			LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273(__this, L_13, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14836));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14812));
		}

IL_00a7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14813));
			IL2CPP_LEAVE(0xB9, FINALLY_00aa);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00aa;
	}

FINALLY_00aa:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14814));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14837));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14837));
		IL2CPP_END_FINALLY(170)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(170)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xB9, IL_00b9)
	}

IL_00b9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14815));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::PostUpdateLineRenderers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_PostUpdateLineRenderers_m2D388F5C36D18E614EC4E7A5F73505A0F6203110 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_PostUpdateLineRenderers_m2D388F5C36D18E614EC4E7A5F73505A0F6203110_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * V_3 = NULL;
	int32_t V_4 = 0;
	float V_5 = 0.0f;
	bool V_6 = false;
	bool V_7 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	int32_t V_10 = 0;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	float V_14 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_4), (&V_5), (&V_10), (&V_14));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_PostUpdateLineRenderers_m2D388F5C36D18E614EC4E7A5F73505A0F6203110_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14838));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14839));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B6_0 = NULL;
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * G_B11_0 = NULL;
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * G_B16_0 = NULL;
	float G_B25_0 = 0.0f;
	int32_t G_B29_0 = 0;
	int32_t G_B34_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14840));
		// using (PostUpdateLineRenderersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14841));
		IL2CPP_RUNTIME_CLASS_INIT(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->get_PostUpdateLineRenderersPerfMarker_64();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14891));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14891));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14842));
			// if (!IsInteractionEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14843));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14892));
			bool L_2 = VirtFuncInvoker0< bool >::Invoke(87 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsInteractionEnabled() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14892));
			V_6 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14844));
			bool L_3 = V_6;
			if (!L_3)
			{
				goto IL_0025;
			}
		}

IL_001f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14845));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14846));
			IL2CPP_LEAVE(0x1E6, FINALLY_01d7);
		}

IL_0025:
		{
			// Gradient lineColor = LineColorNoTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14847));
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_4 = __this->get_LineColorNoTarget_55();
			V_3 = L_4;
			// if (Result?.CurrentPointerTarget != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14848));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14893));
			RuntimeObject* L_5 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14893));
			RuntimeObject* L_6 = L_5;
			G_B4_0 = L_6;
			if (L_6)
			{
				G_B5_0 = L_6;
				goto IL_0039;
			}
		}

IL_0035:
		{
			G_B6_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			goto IL_003e;
		}

IL_0039:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14894));
			NullCheck(G_B5_0);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, G_B5_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14894));
			G_B6_0 = L_7;
		}

IL_003e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14895));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_8 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B6_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14895));
			V_7 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14849));
			bool L_9 = V_7;
			if (!L_9)
			{
				goto IL_0082;
			}
		}

IL_004a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14850));
			// clearWorldLength = Result.Details.RayDistance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14851));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14896));
			RuntimeObject* L_10 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14896));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14897));
			NullCheck(L_10);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_11 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14897));
			V_8 = L_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14898));
			float L_12 = FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14898));
			V_2 = L_12;
			// lineColor = IsSelectPressed || IsGrabPressed ? LineColorSelected : LineColorValid;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14852));
			bool L_13 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsSelectPressed_24();
			if (L_13)
			{
				goto IL_0078;
			}
		}

IL_0068:
		{
			bool L_14 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsGrabPressed_21();
			if (L_14)
			{
				goto IL_0078;
			}
		}

IL_0070:
		{
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_15 = __this->get_LineColorValid_53();
			G_B11_0 = L_15;
			goto IL_007e;
		}

IL_0078:
		{
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_16 = __this->get_LineColorSelected_52();
			G_B11_0 = L_16;
		}

IL_007e:
		{
			V_3 = G_B11_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14853));
			goto IL_00aa;
		}

IL_0082:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14854));
			// clearWorldLength = DefaultPointerExtent;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14855));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14899));
			float L_17 = BaseControllerPointer_get_DefaultPointerExtent_mFEEB522B2CE35341FFBA375F71D8D5D93E42B653(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14899));
			V_2 = L_17;
			// lineColor = IsSelectPressed || IsGrabPressed ? LineColorSelected : LineColorNoTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14856));
			bool L_18 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsSelectPressed_24();
			if (L_18)
			{
				goto IL_00a2;
			}
		}

IL_0092:
		{
			bool L_19 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsGrabPressed_21();
			if (L_19)
			{
				goto IL_00a2;
			}
		}

IL_009a:
		{
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_20 = __this->get_LineColorNoTarget_55();
			G_B16_0 = L_20;
			goto IL_00a8;
		}

IL_00a2:
		{
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_21 = __this->get_LineColorSelected_52();
			G_B16_0 = L_21;
		}

IL_00a8:
		{
			V_3 = G_B16_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14857));
		}

IL_00aa:
		{
			// if (IsFocusLocked)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14858));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14900));
			bool L_22 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14900));
			V_9 = L_22;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14859));
			bool L_23 = V_9;
			if (!L_23)
			{
				goto IL_00bf;
			}
		}

IL_00b6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14860));
			// lineColor = LineColorLockFocus;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14861));
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_24 = __this->get_LineColorLockFocus_56();
			V_3 = L_24;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14862));
		}

IL_00bf:
		{
			// int maxClampLineSteps = 2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14863));
			V_4 = 2;
			// for (int i = 0; i < LineRenderers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14864));
			V_10 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14865));
			goto IL_00f6;
		}

IL_00c7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14866));
			// maxClampLineSteps = Mathf.Max(maxClampLineSteps, LineRenderers[i].LineStepCount);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14867));
			int32_t L_25 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14901));
			BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_26 = LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14901));
			int32_t L_27 = V_10;
			NullCheck(L_26);
			int32_t L_28 = L_27;
			BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_29 = (L_26)->GetAt(static_cast<il2cpp_array_size_t>(L_28));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14902));
			NullCheck(L_29);
			int32_t L_30 = BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EF_inline(L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14902));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14903));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			int32_t L_31 = Mathf_Max_mBDE4C6F1883EE3215CD7AE62550B2AC90592BC3F(L_25, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14903));
			V_4 = L_31;
			// LineRenderers[i].LineColor = lineColor;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14868));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14904));
			BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_32 = LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14904));
			int32_t L_33 = V_10;
			NullCheck(L_32);
			int32_t L_34 = L_33;
			BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_35 = (L_32)->GetAt(static_cast<il2cpp_array_size_t>(L_34));
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_36 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14905));
			NullCheck(L_35);
			BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AF_inline(L_35, L_36, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14905));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14869));
			// for (int i = 0; i < LineRenderers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14870));
			int32_t L_37 = V_10;
			V_10 = ((int32_t)il2cpp_codegen_add((int32_t)L_37, (int32_t)1));
		}

IL_00f6:
		{
			// for (int i = 0; i < LineRenderers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14871));
			int32_t L_38 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14906));
			BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_39 = LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14906));
			NullCheck(L_39);
			V_11 = (bool)((((int32_t)L_38) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_39)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14872));
			bool L_40 = V_11;
			if (L_40)
			{
				goto IL_00c7;
			}
		}

IL_0108:
		{
			// float cursorOffsetWorldLength = (BaseCursor != null) ? BaseCursor.SurfaceCursorDistance : 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14873));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14907));
			RuntimeObject* L_41 = BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14907));
			if (L_41)
			{
				goto IL_0117;
			}
		}

IL_0110:
		{
			G_B25_0 = (0.0f);
			goto IL_0122;
		}

IL_0117:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14908));
			RuntimeObject* L_42 = BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14908));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14909));
			NullCheck(L_42);
			float L_43 = InterfaceFuncInvoker0< float >::Invoke(2 /* System.Single Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::get_SurfaceCursorDistance() */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_42);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14909));
			G_B25_0 = L_43;
		}

IL_0122:
		{
			V_5 = G_B25_0;
			// if (IsFocusLocked && IsTargetPositionLockedOnFocusLock && Result != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14874));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14910));
			bool L_44 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14910));
			if (!L_44)
			{
				goto IL_013f;
			}
		}

IL_012c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14911));
			bool L_45 = VirtFuncInvoker0< bool >::Invoke(90 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsTargetPositionLockedOnFocusLock() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14911));
			if (!L_45)
			{
				goto IL_013f;
			}
		}

IL_0134:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14912));
			RuntimeObject* L_46 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14912));
			G_B29_0 = ((!(((RuntimeObject*)(RuntimeObject*)L_46) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			goto IL_0140;
		}

IL_013f:
		{
			G_B29_0 = 0;
		}

IL_0140:
		{
			V_12 = (bool)G_B29_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14875));
			bool L_47 = V_12;
			if (!L_47)
			{
				goto IL_0185;
			}
		}

IL_0146:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14876));
			// SetLinePoints(Position, Result.Details.Point + Rotation * Vector3.back * cursorOffsetWorldLength);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14877));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14913));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14913));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14914));
			RuntimeObject* L_49 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14914));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14915));
			NullCheck(L_49);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_50 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_49);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14915));
			V_8 = L_50;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14916));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14916));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14917));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_52 = VirtFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(97 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rotation() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14917));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14918));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = Vector3_get_back_mE7EF8625637E6F8B9E6B42A6AE140777C51E02F7(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14918));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14919));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_52, L_53, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14919));
			float L_55 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14920));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_56 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_54, L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14920));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14921));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_51, L_56, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14921));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14922));
			LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273(__this, L_48, L_57, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14922));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14878));
		}

IL_0185:
		{
			// if (IsFocusLocked && IsTargetPositionLockedOnFocusLock)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14879));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14923));
			bool L_58 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14923));
			if (!L_58)
			{
				goto IL_0195;
			}
		}

IL_018d:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14924));
			bool L_59 = VirtFuncInvoker0< bool >::Invoke(90 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsTargetPositionLockedOnFocusLock() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14924));
			G_B34_0 = ((int32_t)(L_59));
			goto IL_0196;
		}

IL_0195:
		{
			G_B34_0 = 0;
		}

IL_0196:
		{
			V_13 = (bool)G_B34_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14880));
			bool L_60 = V_13;
			if (!L_60)
			{
				goto IL_01b1;
			}
		}

IL_019c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14881));
			// LineBase.LineEndClamp = 1;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14882));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14925));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_61 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14925));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14926));
			NullCheck(L_61);
			BaseMixedRealityLineDataProvider_set_LineEndClamp_m53926A0470B70691BA76A6522460AC3BB1067999(L_61, (1.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14926));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14883));
			goto IL_01d4;
		}

IL_01b1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14884));
			// float clearLocalLength = lineBase.GetNormalizedLengthFromWorldLength(clearWorldLength - cursorOffsetWorldLength, maxClampLineSteps);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14885));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_62 = __this->get_lineBase_57();
			float L_63 = V_2;
			float L_64 = V_5;
			int32_t L_65 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14927));
			NullCheck(L_62);
			float L_66 = BaseMixedRealityLineDataProvider_GetNormalizedLengthFromWorldLength_mB1702F7BC31880A32A81198089D482AF16EDBC94(L_62, ((float)il2cpp_codegen_subtract((float)L_63, (float)L_64)), L_65, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14927));
			V_14 = L_66;
			// LineBase.LineEndClamp = clearLocalLength;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14886));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14928));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_67 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14928));
			float L_68 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14929));
			NullCheck(L_67);
			BaseMixedRealityLineDataProvider_set_LineEndClamp_m53926A0470B70691BA76A6522460AC3BB1067999(L_67, L_68, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14929));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14887));
		}

IL_01d4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14888));
			IL2CPP_LEAVE(0x1E6, FINALLY_01d7);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01d7;
	}

FINALLY_01d7:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14889));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14930));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14930));
		IL2CPP_END_FINALLY(471)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(471)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1E6, IL_01e6)
	}

IL_01e6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14890));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::UpdateRays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_UpdateRays_m406AC1AF74E39C76AF28C9175E7455D57CD1666C (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_UpdateRays_m406AC1AF74E39C76AF28C9175E7455D57CD1666C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_UpdateRays_m406AC1AF74E39C76AF28C9175E7455D57CD1666C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14931));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14932));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14933));
		// using (UpdateRaysPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14934));
		IL2CPP_RUNTIME_CLASS_INIT(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->get_UpdateRaysPerfMarker_65();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14945));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14945));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14935));
			// if (Rays == null || Rays.Length != LineLength)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14936));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14946));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_2 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14946));
			if (!L_2)
			{
				goto IL_0028;
			}
		}

IL_0018:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14947));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_3 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14947));
			NullCheck(L_3);
			G_B4_0 = ((((int32_t)((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_3)->max_length))))) == ((int32_t)1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			goto IL_0029;
		}

IL_0028:
		{
			G_B4_0 = 1;
		}

IL_0029:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14937));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_003c;
			}
		}

IL_002d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14938));
			// Rays = new RayStep[LineLength];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14939));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_5 = (RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)SZArrayNew(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_il2cpp_TypeInfo_var, (uint32_t)1);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14948));
			BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline(__this, L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14948));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14940));
		}

IL_003c:
		{
			// Rays[0].UpdateRayStep(ref lineStartPoint, ref lineEndPoint);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14941));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14949));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_6 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14949));
			NullCheck(L_6);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_7 = __this->get_address_of_lineStartPoint_59();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_8 = __this->get_address_of_lineEndPoint_60();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14950));
			RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_6)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_7, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14950));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14942));
			IL2CPP_LEAVE(0x6C, FINALLY_005d);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_005d;
	}

FINALLY_005d:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14943));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14951));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14951));
		IL2CPP_END_FINALLY(93)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(93)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x6C, IL_006c)
	}

IL_006c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14944));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::SetLinePoints(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___startPoint0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___endPoint1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___startPoint0), (&___endPoint1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_SetLinePoints_m0AED55BA99EA617E06C179B72A16BD0DE17B9273_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14953));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14954));
		// lineStartPoint = startPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14955));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___startPoint0;
		__this->set_lineStartPoint_59(L_0);
		// lineEndPoint = endPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14956));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___endPoint1;
		__this->set_lineEndPoint_60(L_1);
		// lineBase.FirstPoint = startPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14957));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_2 = __this->get_lineBase_57();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = ___startPoint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14960));
		NullCheck(L_2);
		BaseMixedRealityLineDataProvider_set_FirstPoint_mC089D0A2B0C719699AD08F9DDC3D472C099650A8(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14960));
		// lineBase.LastPoint = endPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14958));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_4 = __this->get_lineBase_57();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = ___endPoint1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14961));
		NullCheck(L_4);
		BaseMixedRealityLineDataProvider_set_LastPoint_m743B217D19D640DFEEE1BE06AAF643A0D616B2C9(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14961));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14959));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14962));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14963));
	{
		// protected Gradient LineColorSelected = new Gradient();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14964));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14969));
		Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_0 = (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A *)il2cpp_codegen_object_new(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_il2cpp_TypeInfo_var);
		Gradient__ctor_m297B6B928FDA6BD99A142736017F5C0E2B30BE7F(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14969));
		__this->set_LineColorSelected_52(L_0);
		// protected Gradient LineColorValid = new Gradient();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14965));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14970));
		Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_1 = (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A *)il2cpp_codegen_object_new(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_il2cpp_TypeInfo_var);
		Gradient__ctor_m297B6B928FDA6BD99A142736017F5C0E2B30BE7F(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14970));
		__this->set_LineColorValid_53(L_1);
		// protected Gradient LineColorInvalid = new Gradient();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14966));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14971));
		Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_2 = (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A *)il2cpp_codegen_object_new(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_il2cpp_TypeInfo_var);
		Gradient__ctor_m297B6B928FDA6BD99A142736017F5C0E2B30BE7F(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14971));
		__this->set_LineColorInvalid_54(L_2);
		// protected Gradient LineColorNoTarget = new Gradient();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14967));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14972));
		Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_3 = (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A *)il2cpp_codegen_object_new(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_il2cpp_TypeInfo_var);
		Gradient__ctor_m297B6B928FDA6BD99A142736017F5C0E2B30BE7F(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14972));
		__this->set_LineColorNoTarget_55(L_3);
		// protected Gradient LineColorLockFocus = new Gradient();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14968));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14973));
		Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_4 = (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A *)il2cpp_codegen_object_new(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_il2cpp_TypeInfo_var);
		Gradient__ctor_m297B6B928FDA6BD99A142736017F5C0E2B30BE7F(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14973));
		__this->set_LineColorLockFocus_56(L_4);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14974));
		IL2CPP_RUNTIME_CLASS_INIT(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_il2cpp_TypeInfo_var);
		BaseControllerPointer__ctor_m8374A8CF3D902194835061AD6EC89AAE3FA48071(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14974));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer__cctor_mCCC6789AE415DE3032CE53F3DC0FC6B22A511D76 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer__cctor_mCCC6789AE415DE3032CE53F3DC0FC6B22A511D76_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer__cctor_mCCC6789AE415DE3032CE53F3DC0FC6B22A511D76_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14975));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14976));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] LinePointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14977));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14982));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralFFF4B2E7FB82E87991160140C78C713BA58E7DA3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14982));
		((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_61(L_0);
		// private static readonly ProfilerMarker OnPostSceneQueryPerfMarker = new ProfilerMarker("[MRTK] LinePointer.OnPostSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14978));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14983));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral3BA88217D19F0F82136D00799A4A4A1039A6BB0C, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14983));
		((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->set_OnPostSceneQueryPerfMarker_62(L_1);
		// private static readonly ProfilerMarker PreUpdateLineRenderersPerfMarker = new ProfilerMarker("[MRTK] LinePointer.PreUpdateLineRenderers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14979));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14984));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteralAAC31089F3BA29B166D763FD9A6D11BD71121EA8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14984));
		((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->set_PreUpdateLineRenderersPerfMarker_63(L_2);
		// private static readonly ProfilerMarker PostUpdateLineRenderersPerfMarker = new ProfilerMarker("[MRTK] LinePointer.PostUpdateLineRenderers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14980));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14985));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteral5A845836AC9E976E51293A35C46BE1C02C7F55ED, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14985));
		((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->set_PostUpdateLineRenderersPerfMarker_64(L_3);
		// private static readonly ProfilerMarker UpdateRaysPerfMarker = new ProfilerMarker("[MRTK] LinePointer.UpdateRays");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14981));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14986));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteralA87B920C29B3D65CE67BF530027F31EC09119719, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14986));
		((LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields*)il2cpp_codegen_static_fields_for(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var))->set_UpdateRaysPerfMarker_65(L_4);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.MeshCursor::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshCursor_OnEnable_mF4CBEA8A56D1B8D44E4E3FBF6C0FFAC4F6A5C22F (MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MeshCursor_OnEnable_mF4CBEA8A56D1B8D44E4E3FBF6C0FFAC4F6A5C22F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MeshCursor_OnEnable_mF4CBEA8A56D1B8D44E4E3FBF6C0FFAC4F6A5C22F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12139));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12140));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12141));
		// if (CursorStateData == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12142));
		MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* L_0 = __this->get_CursorStateData_25();
		V_0 = (bool)((((RuntimeObject*)(MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12143));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12144));
		// CursorStateData = Array.Empty<MeshCursorDatum>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12145));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12154));
		MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* L_2 = Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_inline(/*hidden argument*/Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12154));
		__this->set_CursorStateData_25(L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12146));
	}

IL_001b:
	{
		// if (TargetRenderer == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12147));
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_3 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12155));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12155));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12148));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12149));
		// TargetRenderer = GetComponentInChildren<MeshRenderer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12150));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12156));
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_6 = Component_GetComponentInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mC210673BE9A285437FF73A2988A9DBAAF9FE337E(__this, /*hidden argument*/Component_GetComponentInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mC210673BE9A285437FF73A2988A9DBAAF9FE337E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12156));
		__this->set_TargetRenderer_26(L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12151));
	}

IL_0039:
	{
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12152));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12157));
		BaseCursor_OnEnable_m99AC865286A0229699D1A68C08F7E49043BB4858(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12157));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12153));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MeshCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshCursor_OnCursorStateChange_mBA80B45C81EC530D45FDFBEB61008B8D04526B60 (MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2 * __this, int32_t ___state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MeshCursor_OnCursorStateChange_mBA80B45C81EC530D45FDFBEB61008B8D04526B60_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MeshCursor_OnCursorStateChange_mBA80B45C81EC530D45FDFBEB61008B8D04526B60_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12158));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12159));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12160));
		// base.OnCursorStateChange(state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12161));
		int32_t L_0 = ___state0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12179));
		BaseCursor_OnCursorStateChange_mB3E67F6CCF7D497558679F79677E809536D27FB4(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12179));
		// if (state != CursorStateEnum.Contextual)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12162));
		int32_t L_1 = ___state0;
		V_0 = (bool)((((int32_t)((((int32_t)L_1) == ((int32_t)6))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12163));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_005c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12164));
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12165));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12166));
		goto IL_004c;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12167));
		// if (CursorStateData[i].CursorState == state)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12168));
		MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* L_3 = __this->get_CursorStateData_25();
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = ((L_3)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_4)))->get_CursorState_1();
		int32_t L_6 = ___state0;
		V_2 = (bool)((((int32_t)L_5) == ((int32_t)L_6))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12169));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0047;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12170));
		// SetCursorState(CursorStateData[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12171));
		MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* L_8 = __this->get_CursorStateData_25();
		int32_t L_9 = V_1;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12180));
		MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37(__this, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12180));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12172));
	}

IL_0047:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12173));
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12174));
		int32_t L_12 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_004c:
	{
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12175));
		int32_t L_13 = V_1;
		MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* L_14 = __this->get_CursorStateData_25();
		NullCheck(L_14);
		V_3 = (bool)((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12176));
		bool L_15 = V_3;
		if (L_15)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12177));
	}

IL_005c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12178));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MeshCursor::SetCursorState(Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37 (MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2 * __this, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  ___stateDatum0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * V_1 = NULL;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___stateDatum0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MeshCursor_SetCursorState_mFD01441CD89518534A374D0C1FD9F520760AFD37_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12181));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12182));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12183));
		// if (TargetRenderer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12184));
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_0 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12197));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12197));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12185));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_007d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12186));
		// var filter = TargetRenderer.gameObject.GetComponent<MeshFilter>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12187));
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_3 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12198));
		NullCheck(L_3);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12198));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12199));
		NullCheck(L_4);
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_5 = GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4(L_4, /*hidden argument*/GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12199));
		V_1 = L_5;
		// if (filter != null && stateDatum.CursorMesh != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12188));
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12200));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12200));
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  L_8 = ___stateDatum0;
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_9 = L_8.get_CursorMesh_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12201));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_10 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_9, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12201));
		G_B4_0 = ((int32_t)(L_10));
		goto IL_003b;
	}

IL_003a:
	{
		G_B4_0 = 0;
	}

IL_003b:
	{
		V_2 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12189));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_004e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12190));
		// filter.mesh = stateDatum.CursorMesh;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12191));
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_12 = V_1;
		MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  L_13 = ___stateDatum0;
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_14 = L_13.get_CursorMesh_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12202));
		NullCheck(L_12);
		MeshFilter_set_mesh_mA18AA96C75CC91CF0917BA1F437626499FAAF496(L_12, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12202));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12192));
	}

IL_004e:
	{
		// TargetRenderer.transform.localPosition = stateDatum.LocalOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12193));
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_15 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12203));
		NullCheck(L_15);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_16 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12203));
		MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  L_17 = ___stateDatum0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = L_17.get_LocalOffset_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12204));
		NullCheck(L_16);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_16, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12204));
		// TargetRenderer.transform.localScale = stateDatum.LocalScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12194));
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_19 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12205));
		NullCheck(L_19);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12205));
		MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B  L_21 = ___stateDatum0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = L_21.get_LocalScale_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12206));
		NullCheck(L_20);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_20, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12206));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12195));
	}

IL_007d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12196));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MeshCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshCursor__ctor_m0B149F0B75D1CFEAFBAA0B23A6F8F9682FDF6C6E (MeshCursor_t0C836CBC9E03F349334085846F2B51A86F4833F2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MeshCursor__ctor_m0B149F0B75D1CFEAFBAA0B23A6F8F9682FDF6C6E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MeshCursor__ctor_m0B149F0B75D1CFEAFBAA0B23A6F8F9682FDF6C6E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
IL2CPP_EXTERN_C void MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshal_pinvoke(const MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B& unmarshaled, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_pinvoke& marshaled)
{
	Exception_t* ___CursorMesh_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorMesh' of type 'MeshCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorMesh_2Exception, NULL);
}
IL2CPP_EXTERN_C void MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshal_pinvoke_back(const MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_pinvoke& marshaled, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B& unmarshaled)
{
	Exception_t* ___CursorMesh_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorMesh' of type 'MeshCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorMesh_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
IL2CPP_EXTERN_C void MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshal_pinvoke_cleanup(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
IL2CPP_EXTERN_C void MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshal_com(const MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B& unmarshaled, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_com& marshaled)
{
	Exception_t* ___CursorMesh_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorMesh' of type 'MeshCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorMesh_2Exception, NULL);
}
IL2CPP_EXTERN_C void MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshal_com_back(const MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_com& marshaled, MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B& unmarshaled)
{
	Exception_t* ___CursorMesh_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorMesh' of type 'MeshCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorMesh_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.MeshCursor/MeshCursorDatum
IL2CPP_EXTERN_C void MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshal_com_cleanup(MeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::.ctor(UnityEngine.GameObject,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo__ctor_m59D7703929CE359882BCDB2F5A3AD11D8FC4DB1E (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___controllerParent0, uint8_t ___handedness1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo__ctor_m59D7703929CE359882BCDB2F5A3AD11D8FC4DB1E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___controllerParent0), (&___handedness1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo__ctor_m59D7703929CE359882BCDB2F5A3AD11D8FC4DB1E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9942));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9943));
	{
		// private GameObject touchpadTouchVisualizer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9944));
		__this->set_touchpadTouchVisualizer_32((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// public MixedRealityControllerInfo(GameObject controllerParent, Handedness handedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9945));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9950));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9950));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9946));
		// ControllerParent = controllerParent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9947));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___controllerParent0;
		__this->set_ControllerParent_0(L_0);
		// Handedness = handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9948));
		uint8_t L_1 = ___handedness1;
		__this->set_Handedness_1(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9949));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::TryGetElement(Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo/ControllerElementEnum,UnityEngine.Transform&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityControllerInfo_TryGetElement_mA06E8C7ECD39523FA33AA6C510DB5A50BA93D127 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, int32_t ___element0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** ___elementTransform1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_TryGetElement_mA06E8C7ECD39523FA33AA6C510DB5A50BA93D127_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___element0), (&___elementTransform1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_TryGetElement_mA06E8C7ECD39523FA33AA6C510DB5A50BA93D127_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9951));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9952));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9953));
		// switch (element)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9954));
		int32_t L_0 = ___element0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9955));
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_002a;
			}
			case 1:
			{
				goto IL_0054;
			}
			case 2:
			{
				goto IL_00aa;
			}
			case 3:
			{
				goto IL_00d0;
			}
			case 4:
			{
				goto IL_007e;
			}
			case 5:
			{
				goto IL_00f6;
			}
			case 6:
			{
				goto IL_011c;
			}
		}
	}
	{
		goto IL_0142;
	}

IL_002a:
	{
		// if (home != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9956));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = __this->get_home_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10001));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10001));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9957));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_004f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9958));
		// elementTransform = home.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9959));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_5 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = __this->get_home_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10002));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10002));
		*((RuntimeObject **)L_5) = (RuntimeObject *)L_7;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_5, (void*)(RuntimeObject *)L_7);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9960));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_004f:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9961));
		goto IL_0142;
	}

IL_0054:
	{
		// if (menu != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9962));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_menu_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10003));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_9 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_8, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10003));
		V_3 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9963));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0079;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9964));
		// elementTransform = menu.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9965));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_11 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = __this->get_menu_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10004));
		NullCheck(L_12);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10004));
		*((RuntimeObject **)L_11) = (RuntimeObject *)L_13;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_11, (void*)(RuntimeObject *)L_13);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9966));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_0079:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9967));
		goto IL_0142;
	}

IL_007e:
	{
		// if (select != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9968));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = __this->get_select_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10005));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10005));
		V_4 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9969));
		bool L_16 = V_4;
		if (!L_16)
		{
			goto IL_00a5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9970));
		// elementTransform = select.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9971));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_17 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = __this->get_select_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10006));
		NullCheck(L_18);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10006));
		*((RuntimeObject **)L_17) = (RuntimeObject *)L_19;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_17, (void*)(RuntimeObject *)L_19);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9972));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_00a5:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9973));
		goto IL_0142;
	}

IL_00aa:
	{
		// if (grasp != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9974));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = __this->get_grasp_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10007));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_21 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_20, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10007));
		V_5 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9975));
		bool L_22 = V_5;
		if (!L_22)
		{
			goto IL_00ce;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9976));
		// elementTransform = grasp.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9977));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_23 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = __this->get_grasp_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10008));
		NullCheck(L_24);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10008));
		*((RuntimeObject **)L_23) = (RuntimeObject *)L_25;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_23, (void*)(RuntimeObject *)L_25);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9978));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_00ce:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9979));
		goto IL_0142;
	}

IL_00d0:
	{
		// if (thumbstickPress != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9980));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_26 = __this->get_thumbstickPress_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10009));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_27 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_26, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10009));
		V_6 = L_27;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9981));
		bool L_28 = V_6;
		if (!L_28)
		{
			goto IL_00f4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9982));
		// elementTransform = thumbstickPress.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9983));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_29 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_30 = __this->get_thumbstickPress_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10010));
		NullCheck(L_30);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10010));
		*((RuntimeObject **)L_29) = (RuntimeObject *)L_31;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_29, (void*)(RuntimeObject *)L_31);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9984));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_00f4:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9985));
		goto IL_0142;
	}

IL_00f6:
	{
		// if (touchpadPress != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9986));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_32 = __this->get_touchpadPress_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10011));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_33 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_32, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10011));
		V_7 = L_33;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9987));
		bool L_34 = V_7;
		if (!L_34)
		{
			goto IL_011a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9988));
		// elementTransform = touchpadPress.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9989));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_35 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_36 = __this->get_touchpadPress_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10012));
		NullCheck(L_36);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10012));
		*((RuntimeObject **)L_35) = (RuntimeObject *)L_37;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_35, (void*)(RuntimeObject *)L_37);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9990));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_011a:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9991));
		goto IL_0142;
	}

IL_011c:
	{
		// if (pointingPose != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9992));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_38 = __this->get_pointingPose_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10013));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_39 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_38, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10013));
		V_8 = L_39;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9993));
		bool L_40 = V_8;
		if (!L_40)
		{
			goto IL_0140;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9994));
		// elementTransform = pointingPose.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9995));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_41 = ___elementTransform1;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_42 = __this->get_pointingPose_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10014));
		NullCheck(L_42);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10014));
		*((RuntimeObject **)L_41) = (RuntimeObject *)L_43;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_41, (void*)(RuntimeObject *)L_43);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9996));
		V_2 = (bool)1;
		goto IL_0149;
	}

IL_0140:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9997));
		goto IL_0142;
	}

IL_0142:
	{
		// elementTransform = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9998));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** L_44 = ___elementTransform1;
		*((RuntimeObject **)L_44) = (RuntimeObject *)NULL;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_44, (void*)(RuntimeObject *)NULL);
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9999));
		V_2 = (bool)0;
		goto IL_0149;
	}

IL_0149:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10000));
		bool L_45 = V_2;
		return L_45;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::LoadInfo(UnityEngine.Transform[],Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_LoadInfo_mC0C6730CC2D73D38127AA4F40B7D7C5FB0869905 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ___childTransforms0, MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * ___motionControllerVisualizer1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_LoadInfo_mC0C6730CC2D73D38127AA4F40B7D7C5FB0869905_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* V_0 = NULL;
	int32_t V_1 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_2 = NULL;
	String_t* V_3 = NULL;
	String_t* V_4 = NULL;
	String_t* V_5 = NULL;
	String_t* V_6 = NULL;
	String_t* V_7 = NULL;
	String_t* V_8 = NULL;
	uint32_t V_9 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___childTransforms0), (&___motionControllerVisualizer1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_LoadInfo_mC0C6730CC2D73D38127AA4F40B7D7C5FB0869905_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10015));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10016));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10017));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10018));
		// foreach (Transform child in childTransforms)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10019));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_0 = ___childTransforms0;
		V_0 = L_0;
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10020));
		goto IL_04f0;
	}

IL_000b:
	{
		// foreach (Transform child in childTransforms)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10021));
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_1 = V_0;
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_2 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10022));
		// switch (child.name.ToLower())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10023));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10106));
		NullCheck(L_5);
		String_t* L_6 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10106));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10107));
		NullCheck(L_6);
		String_t* L_7 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10107));
		V_3 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10024));
		String_t* L_8 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10108));
		bool L_9 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_8, _stringLiteral3BD9F4C7BD4B7F9D602A5A1357B9CB582282B3FA, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10108));
		if (L_9)
		{
			goto IL_007b;
		}
	}
	{
		String_t* L_10 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10109));
		bool L_11 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_10, _stringLiteralB8023F28D8C0D1DD469E92E4C634621A8DA4D12C, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10109));
		if (L_11)
		{
			goto IL_008c;
		}
	}
	{
		String_t* L_12 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10110));
		bool L_13 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_12, _stringLiteral1C41E6EE2D1EAA9700813A41BC2B39C22F2C187E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10110));
		if (L_13)
		{
			goto IL_012f;
		}
	}
	{
		String_t* L_14 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10111));
		bool L_15 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_14, _stringLiteralB6C935D4F3C7B220FA038613A1F9C1B56B255A86, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10111));
		if (L_15)
		{
			goto IL_01d2;
		}
	}
	{
		String_t* L_16 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10112));
		bool L_17 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_16, _stringLiteral0706025B2BBCEC1ED8D64822F4ECCD96314938D0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10112));
		if (L_17)
		{
			goto IL_0247;
		}
	}
	{
		String_t* L_18 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10113));
		bool L_19 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_18, _stringLiteralF32B67C7E26342AF42EFABC674D441DCA0A281C5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10113));
		if (L_19)
		{
			goto IL_02bc;
		}
	}
	{
		goto IL_04eb;
	}

IL_007b:
	{
		// pointingPose = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10025));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10114));
		NullCheck(L_20);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10114));
		__this->set_pointingPose_33(L_21);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10026));
		goto IL_04eb;
	}

IL_008c:
	{
		// switch (child.parent.name.ToLower())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10027));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10115));
		NullCheck(L_22);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10115));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10116));
		NullCheck(L_23);
		String_t* L_24 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10117));
		NullCheck(L_24);
		String_t* L_25 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10117));
		V_4 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10028));
		String_t* L_26 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10118));
		bool L_27 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_26, _stringLiteralE83249BD3BA79932E16FB1FB5100DAFADE9954C2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10118));
		if (L_27)
		{
			goto IL_00f4;
		}
	}
	{
		String_t* L_28 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10119));
		bool L_29 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_28, _stringLiteral252A25667DC7C65FE0E9BF62D474BBAB9BAB4068, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10119));
		if (L_29)
		{
			goto IL_00fd;
		}
	}
	{
		String_t* L_30 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10120));
		bool L_31 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_30, _stringLiteral9B3FC3A8085CB6C220B69B66839E663ACF533047, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10120));
		if (L_31)
		{
			goto IL_0106;
		}
	}
	{
		String_t* L_32 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10121));
		bool L_33 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_32, _stringLiteral81448FE273247B533B9F018E96C158CAB7901247, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10121));
		if (L_33)
		{
			goto IL_010f;
		}
	}
	{
		String_t* L_34 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10122));
		bool L_35 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_34, _stringLiteralD32328E1EAD29289F891D016A3D21DBDCA87189A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10122));
		if (L_35)
		{
			goto IL_0118;
		}
	}
	{
		String_t* L_36 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10123));
		bool L_37 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_36, _stringLiteralCF7793276C9194D0D66CC8F334D4BB014765BD85, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10123));
		if (L_37)
		{
			goto IL_0121;
		}
	}
	{
		goto IL_012a;
	}

IL_00f4:
	{
		// homePressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10029));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_38 = V_2;
		__this->set_homePressed_3(L_38);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10030));
		goto IL_012a;
	}

IL_00fd:
	{
		// menuPressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10031));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_39 = V_2;
		__this->set_menuPressed_6(L_39);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10032));
		goto IL_012a;
	}

IL_0106:
	{
		// graspPressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10033));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_40 = V_2;
		__this->set_graspPressed_9(L_40);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10034));
		goto IL_012a;
	}

IL_010f:
	{
		// selectPressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10035));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_41 = V_2;
		__this->set_selectPressed_21(L_41);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10036));
		goto IL_012a;
	}

IL_0118:
	{
		// thumbstickPressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10037));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_42 = V_2;
		__this->set_thumbstickPressed_12(L_42);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10038));
		goto IL_012a;
	}

IL_0121:
	{
		// touchpadPressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10039));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = V_2;
		__this->set_touchpadPressed_24(L_43);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10040));
		goto IL_012a;
	}

IL_012a:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10041));
		goto IL_04eb;
	}

IL_012f:
	{
		// switch (child.parent.name.ToLower())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10042));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10124));
		NullCheck(L_44);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_45 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10124));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10125));
		NullCheck(L_45);
		String_t* L_46 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10125));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10126));
		NullCheck(L_46);
		String_t* L_47 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10126));
		V_5 = L_47;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10043));
		String_t* L_48 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10127));
		bool L_49 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_48, _stringLiteralE83249BD3BA79932E16FB1FB5100DAFADE9954C2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10127));
		if (L_49)
		{
			goto IL_0197;
		}
	}
	{
		String_t* L_50 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10128));
		bool L_51 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_50, _stringLiteral252A25667DC7C65FE0E9BF62D474BBAB9BAB4068, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10128));
		if (L_51)
		{
			goto IL_01a0;
		}
	}
	{
		String_t* L_52 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10129));
		bool L_53 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_52, _stringLiteral9B3FC3A8085CB6C220B69B66839E663ACF533047, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10129));
		if (L_53)
		{
			goto IL_01a9;
		}
	}
	{
		String_t* L_54 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10130));
		bool L_55 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_54, _stringLiteral81448FE273247B533B9F018E96C158CAB7901247, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10130));
		if (L_55)
		{
			goto IL_01b2;
		}
	}
	{
		String_t* L_56 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10131));
		bool L_57 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_56, _stringLiteralD32328E1EAD29289F891D016A3D21DBDCA87189A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10131));
		if (L_57)
		{
			goto IL_01bb;
		}
	}
	{
		String_t* L_58 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10132));
		bool L_59 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_58, _stringLiteralCF7793276C9194D0D66CC8F334D4BB014765BD85, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10132));
		if (L_59)
		{
			goto IL_01c4;
		}
	}
	{
		goto IL_01cd;
	}

IL_0197:
	{
		// homeUnpressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10044));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_60 = V_2;
		__this->set_homeUnpressed_4(L_60);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10045));
		goto IL_01cd;
	}

IL_01a0:
	{
		// menuUnpressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10046));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_61 = V_2;
		__this->set_menuUnpressed_7(L_61);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10047));
		goto IL_01cd;
	}

IL_01a9:
	{
		// graspUnpressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10048));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_62 = V_2;
		__this->set_graspUnpressed_10(L_62);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10049));
		goto IL_01cd;
	}

IL_01b2:
	{
		// selectUnpressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10050));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_63 = V_2;
		__this->set_selectUnpressed_22(L_63);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10051));
		goto IL_01cd;
	}

IL_01bb:
	{
		// thumbstickUnpressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10052));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_64 = V_2;
		__this->set_thumbstickUnpressed_13(L_64);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10053));
		goto IL_01cd;
	}

IL_01c4:
	{
		// touchpadUnpressed = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10054));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_65 = V_2;
		__this->set_touchpadUnpressed_25(L_65);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10055));
		goto IL_01cd;
	}

IL_01cd:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10056));
		goto IL_04eb;
	}

IL_01d2:
	{
		// switch (child.parent.name.ToLower())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10057));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_66 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10133));
		NullCheck(L_66);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_67 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_66, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10133));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10134));
		NullCheck(L_67);
		String_t* L_68 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_67, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10134));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10135));
		NullCheck(L_68);
		String_t* L_69 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_68, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10135));
		V_6 = L_69;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10058));
		String_t* L_70 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10136));
		bool L_71 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_70, _stringLiteral596E4B98EDAC7F0AA502440D734A174042506324, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10136));
		if (L_71)
		{
			goto IL_021e;
		}
	}
	{
		String_t* L_72 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10137));
		bool L_73 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_72, _stringLiteral01CE3C1E613E251C74BFFB0475073AFA0075406B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10137));
		if (L_73)
		{
			goto IL_0227;
		}
	}
	{
		String_t* L_74 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10138));
		bool L_75 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_74, _stringLiteral7148BC7BD6F94FE57C7E8F1A47275B3BEABECDEA, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10138));
		if (L_75)
		{
			goto IL_0230;
		}
	}
	{
		String_t* L_76 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10139));
		bool L_77 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_76, _stringLiteralF6AF241332ECA3FA267BA0150AC20016AB9843F6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10139));
		if (L_77)
		{
			goto IL_0239;
		}
	}
	{
		goto IL_0242;
	}

IL_021e:
	{
		// thumbstickXMin = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10059));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_78 = V_2;
		__this->set_thumbstickXMin_15(L_78);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10060));
		goto IL_0242;
	}

IL_0227:
	{
		// thumbstickYMin = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10061));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_79 = V_2;
		__this->set_thumbstickYMin_18(L_79);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10062));
		goto IL_0242;
	}

IL_0230:
	{
		// touchpadTouchXMin = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10063));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_80 = V_2;
		__this->set_touchpadTouchXMin_27(L_80);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10064));
		goto IL_0242;
	}

IL_0239:
	{
		// touchpadTouchYMin = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10065));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_81 = V_2;
		__this->set_touchpadTouchYMin_30(L_81);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10066));
		goto IL_0242;
	}

IL_0242:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10067));
		goto IL_04eb;
	}

IL_0247:
	{
		// switch (child.parent.name.ToLower())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10068));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_82 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10140));
		NullCheck(L_82);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_83 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_82, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10140));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10141));
		NullCheck(L_83);
		String_t* L_84 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_83, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10142));
		NullCheck(L_84);
		String_t* L_85 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_84, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10142));
		V_7 = L_85;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10069));
		String_t* L_86 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10143));
		bool L_87 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_86, _stringLiteral596E4B98EDAC7F0AA502440D734A174042506324, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10143));
		if (L_87)
		{
			goto IL_0293;
		}
	}
	{
		String_t* L_88 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10144));
		bool L_89 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_88, _stringLiteral01CE3C1E613E251C74BFFB0475073AFA0075406B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10144));
		if (L_89)
		{
			goto IL_029c;
		}
	}
	{
		String_t* L_90 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10145));
		bool L_91 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_90, _stringLiteral7148BC7BD6F94FE57C7E8F1A47275B3BEABECDEA, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10145));
		if (L_91)
		{
			goto IL_02a5;
		}
	}
	{
		String_t* L_92 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10146));
		bool L_93 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_92, _stringLiteralF6AF241332ECA3FA267BA0150AC20016AB9843F6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10146));
		if (L_93)
		{
			goto IL_02ae;
		}
	}
	{
		goto IL_02b7;
	}

IL_0293:
	{
		// thumbstickXMax = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10070));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_94 = V_2;
		__this->set_thumbstickXMax_16(L_94);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10071));
		goto IL_02b7;
	}

IL_029c:
	{
		// thumbstickYMax = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10072));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_95 = V_2;
		__this->set_thumbstickYMax_19(L_95);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10073));
		goto IL_02b7;
	}

IL_02a5:
	{
		// touchpadTouchXMax = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10074));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_96 = V_2;
		__this->set_touchpadTouchXMax_28(L_96);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10075));
		goto IL_02b7;
	}

IL_02ae:
	{
		// touchpadTouchYMax = child;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10076));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_97 = V_2;
		__this->set_touchpadTouchYMax_31(L_97);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10077));
		goto IL_02b7;
	}

IL_02b7:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10078));
		goto IL_04eb;
	}

IL_02bc:
	{
		// switch (child.parent.name.ToLower())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10079));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_98 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10147));
		NullCheck(L_98);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_99 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_98, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10147));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10148));
		NullCheck(L_99);
		String_t* L_100 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_99, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10149));
		NullCheck(L_100);
		String_t* L_101 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_100, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10149));
		V_8 = L_101;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10080));
		String_t* L_102 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10150));
		uint32_t L_103 = U3CPrivateImplementationDetailsU3E_ComputeStringHash_mDE4C1B254DA56F4B01F2A2C9AC0F946365FFA75D(L_102, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10150));
		V_9 = L_103;
		uint32_t L_104 = V_9;
		if ((!(((uint32_t)L_104) <= ((uint32_t)((int32_t)1217675253)))))
		{
			goto IL_0335;
		}
	}
	{
		uint32_t L_105 = V_9;
		if ((!(((uint32_t)L_105) <= ((uint32_t)((int32_t)717411125)))))
		{
			goto IL_0308;
		}
	}
	{
		uint32_t L_106 = V_9;
		if ((((int32_t)L_106) == ((int32_t)((int32_t)297952813))))
		{
			goto IL_03c3;
		}
	}
	{
		goto IL_02f7;
	}

IL_02f7:
	{
		uint32_t L_107 = V_9;
		if ((((int32_t)L_107) == ((int32_t)((int32_t)717411125))))
		{
			goto IL_041b;
		}
	}
	{
		goto IL_04e9;
	}

IL_0308:
	{
		uint32_t L_108 = V_9;
		if ((((int32_t)L_108) == ((int32_t)((int32_t)1040827502))))
		{
			goto IL_0431;
		}
	}
	{
		goto IL_0316;
	}

IL_0316:
	{
		uint32_t L_109 = V_9;
		if ((((int32_t)L_109) == ((int32_t)((int32_t)1057605121))))
		{
			goto IL_0447;
		}
	}
	{
		goto IL_0324;
	}

IL_0324:
	{
		uint32_t L_110 = V_9;
		if ((((int32_t)L_110) == ((int32_t)((int32_t)1217675253))))
		{
			goto IL_03d9;
		}
	}
	{
		goto IL_04e9;
	}

IL_0335:
	{
		uint32_t L_111 = V_9;
		if ((!(((uint32_t)L_111) <= ((uint32_t)((int32_t)1781865309)))))
		{
			goto IL_035d;
		}
	}
	{
		uint32_t L_112 = V_9;
		if ((((int32_t)L_112) == ((int32_t)((int32_t)1765087690))))
		{
			goto IL_03ef;
		}
	}
	{
		goto IL_034c;
	}

IL_034c:
	{
		uint32_t L_113 = V_9;
		if ((((int32_t)L_113) == ((int32_t)((int32_t)1781865309))))
		{
			goto IL_0405;
		}
	}
	{
		goto IL_04e9;
	}

IL_035d:
	{
		uint32_t L_114 = V_9;
		if ((((int32_t)L_114) == ((int32_t)((int32_t)-1713054406))))
		{
			goto IL_0397;
		}
	}
	{
		goto IL_0368;
	}

IL_0368:
	{
		uint32_t L_115 = V_9;
		if ((((int32_t)L_115) == ((int32_t)((int32_t)-1351637052))))
		{
			goto IL_03ad;
		}
	}
	{
		goto IL_0373;
	}

IL_0373:
	{
		uint32_t L_116 = V_9;
		if ((((int32_t)L_116) == ((int32_t)((int32_t)-758594930))))
		{
			goto IL_0381;
		}
	}
	{
		goto IL_04e9;
	}

IL_0381:
	{
		String_t* L_117 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10151));
		bool L_118 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_117, _stringLiteralE83249BD3BA79932E16FB1FB5100DAFADE9954C2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10151));
		if (L_118)
		{
			goto IL_045d;
		}
	}
	{
		goto IL_04e9;
	}

IL_0397:
	{
		String_t* L_119 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10152));
		bool L_120 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_119, _stringLiteral252A25667DC7C65FE0E9BF62D474BBAB9BAB4068, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10152));
		if (L_120)
		{
			goto IL_046b;
		}
	}
	{
		goto IL_04e9;
	}

IL_03ad:
	{
		String_t* L_121 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10153));
		bool L_122 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_121, _stringLiteral9B3FC3A8085CB6C220B69B66839E663ACF533047, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10153));
		if (L_122)
		{
			goto IL_0479;
		}
	}
	{
		goto IL_04e9;
	}

IL_03c3:
	{
		String_t* L_123 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10154));
		bool L_124 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_123, _stringLiteral81448FE273247B533B9F018E96C158CAB7901247, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10154));
		if (L_124)
		{
			goto IL_0487;
		}
	}
	{
		goto IL_04e9;
	}

IL_03d9:
	{
		String_t* L_125 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10155));
		bool L_126 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_125, _stringLiteralD32328E1EAD29289F891D016A3D21DBDCA87189A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10155));
		if (L_126)
		{
			goto IL_0495;
		}
	}
	{
		goto IL_04e9;
	}

IL_03ef:
	{
		String_t* L_127 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10156));
		bool L_128 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_127, _stringLiteral596E4B98EDAC7F0AA502440D734A174042506324, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10156));
		if (L_128)
		{
			goto IL_04a3;
		}
	}
	{
		goto IL_04e9;
	}

IL_0405:
	{
		String_t* L_129 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10157));
		bool L_130 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_129, _stringLiteral01CE3C1E613E251C74BFFB0475073AFA0075406B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10157));
		if (L_130)
		{
			goto IL_04b1;
		}
	}
	{
		goto IL_04e9;
	}

IL_041b:
	{
		String_t* L_131 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10158));
		bool L_132 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_131, _stringLiteralCF7793276C9194D0D66CC8F334D4BB014765BD85, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10158));
		if (L_132)
		{
			goto IL_04bf;
		}
	}
	{
		goto IL_04e9;
	}

IL_0431:
	{
		String_t* L_133 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10159));
		bool L_134 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_133, _stringLiteral7148BC7BD6F94FE57C7E8F1A47275B3BEABECDEA, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10159));
		if (L_134)
		{
			goto IL_04cd;
		}
	}
	{
		goto IL_04e9;
	}

IL_0447:
	{
		String_t* L_135 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10160));
		bool L_136 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_135, _stringLiteralF6AF241332ECA3FA267BA0150AC20016AB9843F6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10160));
		if (L_136)
		{
			goto IL_04db;
		}
	}
	{
		goto IL_04e9;
	}

IL_045d:
	{
		// home = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10081));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_137 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10161));
		NullCheck(L_137);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_138 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_137, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10161));
		__this->set_home_2(L_138);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10082));
		goto IL_04e9;
	}

IL_046b:
	{
		// menu = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10083));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_139 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10162));
		NullCheck(L_139);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_140 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_139, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10162));
		__this->set_menu_5(L_140);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10084));
		goto IL_04e9;
	}

IL_0479:
	{
		// grasp = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10085));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_141 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10163));
		NullCheck(L_141);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_142 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_141, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10163));
		__this->set_grasp_8(L_142);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10086));
		goto IL_04e9;
	}

IL_0487:
	{
		// select = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10087));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_143 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10164));
		NullCheck(L_143);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_144 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_143, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10164));
		__this->set_select_20(L_144);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10088));
		goto IL_04e9;
	}

IL_0495:
	{
		// thumbstickPress = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10089));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_145 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10165));
		NullCheck(L_145);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_146 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_145, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10165));
		__this->set_thumbstickPress_11(L_146);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10090));
		goto IL_04e9;
	}

IL_04a3:
	{
		// thumbstickX = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10091));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_147 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10166));
		NullCheck(L_147);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_148 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_147, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10166));
		__this->set_thumbstickX_14(L_148);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10092));
		goto IL_04e9;
	}

IL_04b1:
	{
		// thumbstickY = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10093));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_149 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10167));
		NullCheck(L_149);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_150 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_149, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10167));
		__this->set_thumbstickY_17(L_150);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10094));
		goto IL_04e9;
	}

IL_04bf:
	{
		// touchpadPress = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10095));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_151 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10168));
		NullCheck(L_151);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_152 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_151, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10168));
		__this->set_touchpadPress_23(L_152);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10096));
		goto IL_04e9;
	}

IL_04cd:
	{
		// touchpadTouchX = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10097));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_153 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10169));
		NullCheck(L_153);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_154 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_153, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10169));
		__this->set_touchpadTouchX_26(L_154);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10098));
		goto IL_04e9;
	}

IL_04db:
	{
		// touchpadTouchY = child.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10099));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_155 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10170));
		NullCheck(L_155);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_156 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_155, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10170));
		__this->set_touchpadTouchY_29(L_156);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10100));
		goto IL_04e9;
	}

IL_04e9:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10101));
		goto IL_04eb;
	}

IL_04eb:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10102));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10103));
		int32_t L_157 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_157, (int32_t)1));
	}

IL_04f0:
	{
		// foreach (Transform child in childTransforms)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10104));
		int32_t L_158 = V_1;
		TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_159 = V_0;
		NullCheck(L_159);
		if ((((int32_t)L_158) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_159)->max_length)))))))
		{
			goto IL_000b;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10105));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::AnimateGrasp(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_AnimateGrasp_mC3D08193B9844E06360158A5B759DA4CD52F4D93 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, bool ___isGrasped0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_AnimateGrasp_mC3D08193B9844E06360158A5B759DA4CD52F4D93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isGrasped0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_AnimateGrasp_mC3D08193B9844E06360158A5B759DA4CD52F4D93_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10171));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10172));
	int32_t G_B5_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B8_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B8_1 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B7_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B7_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B9_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B9_1 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B9_2 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10173));
		// if (grasp != null && graspPressed != null && graspUnpressed != null && isGrasped != wasGrasped)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10174));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_grasp_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10181));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10181));
		if (!L_1)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_graspPressed_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10182));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10182));
		if (!L_3)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_graspUnpressed_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10183));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10183));
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		bool L_6 = ___isGrasped0;
		bool L_7 = __this->get_wasGrasped_34();
		G_B5_0 = ((((int32_t)((((int32_t)L_6) == ((int32_t)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_003a;
	}

IL_0039:
	{
		G_B5_0 = 0;
	}

IL_003a:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10175));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10176));
		// SetLocalPositionAndRotation(grasp, isGrasped ? graspPressed : graspUnpressed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10177));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_grasp_8();
		bool L_10 = ___isGrasped0;
		G_B7_0 = L_9;
		G_B7_1 = __this;
		if (L_10)
		{
			G_B8_0 = L_9;
			G_B8_1 = __this;
			goto IL_0051;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_graspUnpressed_10();
		G_B9_0 = L_11;
		G_B9_1 = G_B7_0;
		G_B9_2 = G_B7_1;
		goto IL_0057;
	}

IL_0051:
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_graspPressed_9();
		G_B9_0 = L_12;
		G_B9_1 = G_B8_0;
		G_B9_2 = G_B8_1;
	}

IL_0057:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10184));
		NullCheck(G_B9_2);
		MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF(G_B9_2, G_B9_1, G_B9_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10184));
		// wasGrasped = isGrasped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10178));
		bool L_13 = ___isGrasped0;
		__this->set_wasGrasped_34(L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10179));
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10180));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::AnimateMenu(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_AnimateMenu_m148A0E4EE64AA041CFAE3CFA058D45620578A711 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, bool ___isMenuPressed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_AnimateMenu_m148A0E4EE64AA041CFAE3CFA058D45620578A711_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isMenuPressed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_AnimateMenu_m148A0E4EE64AA041CFAE3CFA058D45620578A711_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10185));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10186));
	int32_t G_B5_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B8_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B8_1 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B7_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B7_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B9_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B9_1 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B9_2 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10187));
		// if (menu != null && menuPressed != null && menuUnpressed != null && isMenuPressed != wasMenuPressed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10188));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_menu_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10195));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10195));
		if (!L_1)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_menuPressed_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10196));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10196));
		if (!L_3)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_menuUnpressed_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10197));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10197));
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		bool L_6 = ___isMenuPressed0;
		bool L_7 = __this->get_wasMenuPressed_35();
		G_B5_0 = ((((int32_t)((((int32_t)L_6) == ((int32_t)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_003a;
	}

IL_0039:
	{
		G_B5_0 = 0;
	}

IL_003a:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10189));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10190));
		// SetLocalPositionAndRotation(menu, isMenuPressed ? menuPressed : menuUnpressed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10191));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_menu_5();
		bool L_10 = ___isMenuPressed0;
		G_B7_0 = L_9;
		G_B7_1 = __this;
		if (L_10)
		{
			G_B8_0 = L_9;
			G_B8_1 = __this;
			goto IL_0051;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_menuUnpressed_7();
		G_B9_0 = L_11;
		G_B9_1 = G_B7_0;
		G_B9_2 = G_B7_1;
		goto IL_0057;
	}

IL_0051:
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_menuPressed_6();
		G_B9_0 = L_12;
		G_B9_1 = G_B8_0;
		G_B9_2 = G_B8_1;
	}

IL_0057:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10198));
		NullCheck(G_B9_2);
		MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF(G_B9_2, G_B9_1, G_B9_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10198));
		// wasMenuPressed = isMenuPressed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10192));
		bool L_13 = ___isMenuPressed0;
		__this->set_wasMenuPressed_35(L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10193));
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10194));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::AnimateHome(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_AnimateHome_m3304DC1565F6E56A603CC151334F44A857A5DD91 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, bool ___isHomePressed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_AnimateHome_m3304DC1565F6E56A603CC151334F44A857A5DD91_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isHomePressed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_AnimateHome_m3304DC1565F6E56A603CC151334F44A857A5DD91_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10199));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10200));
	int32_t G_B5_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B8_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B8_1 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B7_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B7_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B9_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B9_1 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B9_2 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10201));
		// if (home != null && homePressed != null && homeUnpressed != null && isHomePressed != wasHomePressed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10202));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_home_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10209));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10209));
		if (!L_1)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_homePressed_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10210));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10210));
		if (!L_3)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_homeUnpressed_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10211));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10211));
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		bool L_6 = ___isHomePressed0;
		bool L_7 = __this->get_wasHomePressed_36();
		G_B5_0 = ((((int32_t)((((int32_t)L_6) == ((int32_t)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_003a;
	}

IL_0039:
	{
		G_B5_0 = 0;
	}

IL_003a:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10203));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10204));
		// SetLocalPositionAndRotation(home, isHomePressed ? homePressed : homeUnpressed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10205));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_home_2();
		bool L_10 = ___isHomePressed0;
		G_B7_0 = L_9;
		G_B7_1 = __this;
		if (L_10)
		{
			G_B8_0 = L_9;
			G_B8_1 = __this;
			goto IL_0051;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_homeUnpressed_4();
		G_B9_0 = L_11;
		G_B9_1 = G_B7_0;
		G_B9_2 = G_B7_1;
		goto IL_0057;
	}

IL_0051:
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_homePressed_3();
		G_B9_0 = L_12;
		G_B9_1 = G_B8_0;
		G_B9_2 = G_B8_1;
	}

IL_0057:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10212));
		NullCheck(G_B9_2);
		MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF(G_B9_2, G_B9_1, G_B9_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10212));
		// wasHomePressed = isHomePressed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10206));
		bool L_13 = ___isHomePressed0;
		__this->set_wasHomePressed_36(L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10207));
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10208));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::AnimateSelect(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_AnimateSelect_mA5910293F811FA8A7CA1AECDD1F94E5369637024 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, float ___newSelectPressedAmount0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_AnimateSelect_mA5910293F811FA8A7CA1AECDD1F94E5369637024_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newSelectPressedAmount0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_AnimateSelect_mA5910293F811FA8A7CA1AECDD1F94E5369637024_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10213));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10214));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10215));
		// if (select != null && selectPressed != null && selectUnpressed != null && !newSelectPressedAmount.Equals((float)lastSelectPressedAmount))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10216));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_select_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10224));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10224));
		if (!L_1)
		{
			goto IL_003e;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_selectPressed_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10225));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10225));
		if (!L_3)
		{
			goto IL_003e;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_selectUnpressed_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10226));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10226));
		if (!L_5)
		{
			goto IL_003e;
		}
	}
	{
		double L_6 = __this->get_lastSelectPressedAmount_42();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10227));
		bool L_7 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)(&___newSelectPressedAmount0), (((float)((float)L_6))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10227));
		G_B5_0 = ((((int32_t)L_7) == ((int32_t)0))? 1 : 0);
		goto IL_003f;
	}

IL_003e:
	{
		G_B5_0 = 0;
	}

IL_003f:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10217));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_00a7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10218));
		// select.transform.localPosition = Vector3.Lerp(selectUnpressed.localPosition, selectPressed.localPosition, newSelectPressedAmount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10219));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_select_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10228));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10228));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_selectUnpressed_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10229));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10229));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = __this->get_selectPressed_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10230));
		NullCheck(L_13);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10230));
		float L_15 = ___newSelectPressedAmount0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10231));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_12, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10231));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10232));
		NullCheck(L_10);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_10, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10232));
		// select.transform.localRotation = Quaternion.Lerp(selectUnpressed.localRotation, selectPressed.localRotation, newSelectPressedAmount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10220));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = __this->get_select_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10233));
		NullCheck(L_17);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10233));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = __this->get_selectUnpressed_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10234));
		NullCheck(L_19);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_20 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10234));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = __this->get_selectPressed_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10235));
		NullCheck(L_21);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_22 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10235));
		float L_23 = ___newSelectPressedAmount0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10236));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_24 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_20, L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10236));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10237));
		NullCheck(L_18);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_18, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10237));
		// lastSelectPressedAmount = newSelectPressedAmount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10221));
		float L_25 = ___newSelectPressedAmount0;
		__this->set_lastSelectPressedAmount_42((((double)((double)L_25))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10222));
	}

IL_00a7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10223));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::AnimateThumbstick(System.Boolean,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_AnimateThumbstick_mB5D9B9411534A5B06882F8C20E564269E44CC619 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, bool ___isThumbstickPressed0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newThumbstickPosition1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_AnimateThumbstick_mB5D9B9411534A5B06882F8C20E564269E44CC619_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isThumbstickPressed0), (&___newThumbstickPosition1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_AnimateThumbstick_mB5D9B9411534A5B06882F8C20E564269E44CC619_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10238));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10239));
	int32_t G_B5_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B8_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B8_1 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B7_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B7_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B9_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B9_1 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B9_2 = NULL;
	int32_t G_B18_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10240));
		// if (thumbstickPress != null && thumbstickPressed != null && thumbstickUnpressed != null && isThumbstickPressed != wasThumbstickPressed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10241));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_thumbstickPress_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10258));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10258));
		if (!L_1)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_thumbstickPressed_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10259));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10259));
		if (!L_3)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_thumbstickUnpressed_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10260));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10260));
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		bool L_6 = ___isThumbstickPressed0;
		bool L_7 = __this->get_wasThumbstickPressed_37();
		G_B5_0 = ((((int32_t)((((int32_t)L_6) == ((int32_t)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_003a;
	}

IL_0039:
	{
		G_B5_0 = 0;
	}

IL_003a:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10242));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10243));
		// SetLocalPositionAndRotation(thumbstickPress, isThumbstickPressed ? thumbstickPressed : thumbstickUnpressed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10244));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_thumbstickPress_11();
		bool L_10 = ___isThumbstickPressed0;
		G_B7_0 = L_9;
		G_B7_1 = __this;
		if (L_10)
		{
			G_B8_0 = L_9;
			G_B8_1 = __this;
			goto IL_0051;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_thumbstickUnpressed_13();
		G_B9_0 = L_11;
		G_B9_1 = G_B7_0;
		G_B9_2 = G_B7_1;
		goto IL_0057;
	}

IL_0051:
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_thumbstickPressed_12();
		G_B9_0 = L_12;
		G_B9_1 = G_B8_0;
		G_B9_2 = G_B8_1;
	}

IL_0057:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10261));
		NullCheck(G_B9_2);
		MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF(G_B9_2, G_B9_1, G_B9_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10261));
		// wasThumbstickPressed = isThumbstickPressed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10245));
		bool L_13 = ___isThumbstickPressed0;
		__this->set_wasThumbstickPressed_37(L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10246));
	}

IL_0065:
	{
		// if (thumbstickX != null && thumbstickY != null && thumbstickXMin != null && thumbstickXMax != null && thumbstickYMin != null && thumbstickYMax != null && newThumbstickPosition != lastThumbstickPosition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10247));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = __this->get_thumbstickX_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10262));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10262));
		if (!L_15)
		{
			goto IL_00c7;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = __this->get_thumbstickY_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10263));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_17 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_16, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10263));
		if (!L_17)
		{
			goto IL_00c7;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = __this->get_thumbstickXMin_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10264));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_19 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_18, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10264));
		if (!L_19)
		{
			goto IL_00c7;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = __this->get_thumbstickXMax_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10265));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_21 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_20, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10265));
		if (!L_21)
		{
			goto IL_00c7;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = __this->get_thumbstickYMin_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10266));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_23 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_22, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10266));
		if (!L_23)
		{
			goto IL_00c7;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = __this->get_thumbstickYMax_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10267));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_25 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_24, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10267));
		if (!L_25)
		{
			goto IL_00c7;
		}
	}
	{
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_26 = ___newThumbstickPosition1;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_27 = __this->get_lastThumbstickPosition_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10268));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		bool L_28 = Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E(L_26, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10268));
		G_B18_0 = ((int32_t)(L_28));
		goto IL_00c8;
	}

IL_00c7:
	{
		G_B18_0 = 0;
	}

IL_00c8:
	{
		V_1 = (bool)G_B18_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10248));
		bool L_29 = V_1;
		if (!L_29)
		{
			goto IL_01b6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10249));
		// Vector2 thumbstickNormalized = (newThumbstickPosition + Vector2.one) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10250));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_30 = ___newThumbstickPosition1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10269));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_31 = Vector2_get_one_m6E01BE09CEA40781CB12CCB6AF33BBDA0F60CEED(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10269));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10270));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_32 = Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682(L_30, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10270));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10271));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_33 = Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56(L_32, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10271));
		V_2 = L_33;
		// thumbstickX.transform.localPosition = Vector3.Lerp(thumbstickXMin.localPosition, thumbstickXMax.localPosition, thumbstickNormalized.x);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10251));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_34 = __this->get_thumbstickX_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10272));
		NullCheck(L_34);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10272));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = __this->get_thumbstickXMin_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10273));
		NullCheck(L_36);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10273));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_38 = __this->get_thumbstickXMax_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10274));
		NullCheck(L_38);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10274));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_40 = V_2;
		float L_41 = L_40.get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10275));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_37, L_39, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10275));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10276));
		NullCheck(L_35);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_35, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10276));
		// thumbstickX.transform.localRotation = Quaternion.Lerp(thumbstickXMin.localRotation, thumbstickXMax.localRotation, thumbstickNormalized.x);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10252));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_43 = __this->get_thumbstickX_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10277));
		NullCheck(L_43);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10277));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_45 = __this->get_thumbstickXMin_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10278));
		NullCheck(L_45);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_46 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10278));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = __this->get_thumbstickXMax_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10279));
		NullCheck(L_47);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_48 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10279));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_49 = V_2;
		float L_50 = L_49.get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10280));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_51 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_46, L_48, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10280));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10281));
		NullCheck(L_44);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_44, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10281));
		// thumbstickY.transform.localPosition = Vector3.Lerp(thumbstickYMax.localPosition, thumbstickYMin.localPosition, thumbstickNormalized.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10253));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_52 = __this->get_thumbstickY_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10282));
		NullCheck(L_52);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_53 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10282));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_54 = __this->get_thumbstickYMax_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10283));
		NullCheck(L_54);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10283));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_56 = __this->get_thumbstickYMin_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10284));
		NullCheck(L_56);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_56, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10284));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_58 = V_2;
		float L_59 = L_58.get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10285));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_55, L_57, L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10285));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10286));
		NullCheck(L_53);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_53, L_60, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10286));
		// thumbstickY.transform.localRotation = Quaternion.Lerp(thumbstickYMax.localRotation, thumbstickYMin.localRotation, thumbstickNormalized.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10254));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_61 = __this->get_thumbstickY_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10287));
		NullCheck(L_61);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_62 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_61, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10287));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_63 = __this->get_thumbstickYMax_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10288));
		NullCheck(L_63);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_64 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_63, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10288));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_65 = __this->get_thumbstickYMin_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10289));
		NullCheck(L_65);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_66 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_65, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10289));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_67 = V_2;
		float L_68 = L_67.get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10290));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_69 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_64, L_66, L_68, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10290));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10291));
		NullCheck(L_62);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_62, L_69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10291));
		// lastThumbstickPosition = newThumbstickPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10255));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_70 = ___newThumbstickPosition1;
		__this->set_lastThumbstickPosition_40(L_70);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10256));
	}

IL_01b6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10257));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::AnimateTouchpad(System.Boolean,System.Boolean,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_AnimateTouchpad_mC1D08EBA5F62DAEE167FAD1B6562C8A514179119 (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, bool ___isTouchpadPressed0, bool ___isTouchpadTouched1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newTouchpadPosition2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_AnimateTouchpad_mC1D08EBA5F62DAEE167FAD1B6562C8A514179119_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isTouchpadPressed0), (&___isTouchpadTouched1), (&___newTouchpadPosition2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_AnimateTouchpad_mC1D08EBA5F62DAEE167FAD1B6562C8A514179119_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10292));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10293));
	int32_t G_B5_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B8_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B8_1 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B7_0 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B7_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B9_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B9_1 = NULL;
	MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * G_B9_2 = NULL;
	int32_t G_B13_0 = 0;
	int32_t G_B23_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10294));
		// if (touchpadPress != null && touchpadPressed != null && touchpadUnpressed != null && isTouchpadPressed != wasTouchpadPressed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10295));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_touchpadPress_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10318));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10318));
		if (!L_1)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_touchpadPressed_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10319));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10319));
		if (!L_3)
		{
			goto IL_0039;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_touchpadUnpressed_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10320));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10320));
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		bool L_6 = ___isTouchpadPressed0;
		bool L_7 = __this->get_wasTouchpadPressed_38();
		G_B5_0 = ((((int32_t)((((int32_t)L_6) == ((int32_t)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_003a;
	}

IL_0039:
	{
		G_B5_0 = 0;
	}

IL_003a:
	{
		V_0 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10296));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10297));
		// SetLocalPositionAndRotation(touchpadPress, isTouchpadPressed ? touchpadPressed : touchpadUnpressed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10298));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_touchpadPress_23();
		bool L_10 = ___isTouchpadPressed0;
		G_B7_0 = L_9;
		G_B7_1 = __this;
		if (L_10)
		{
			G_B8_0 = L_9;
			G_B8_1 = __this;
			goto IL_0051;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_touchpadUnpressed_25();
		G_B9_0 = L_11;
		G_B9_1 = G_B7_0;
		G_B9_2 = G_B7_1;
		goto IL_0057;
	}

IL_0051:
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_touchpadPressed_24();
		G_B9_0 = L_12;
		G_B9_1 = G_B8_0;
		G_B9_2 = G_B8_1;
	}

IL_0057:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10321));
		NullCheck(G_B9_2);
		MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF(G_B9_2, G_B9_1, G_B9_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10321));
		// wasTouchpadPressed = isTouchpadPressed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10299));
		bool L_13 = ___isTouchpadPressed0;
		__this->set_wasTouchpadPressed_38(L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10300));
	}

IL_0065:
	{
		// if (touchpadTouchVisualizer != null && isTouchpadTouched != wasTouchpadTouched)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10301));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = __this->get_touchpadTouchVisualizer_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10322));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10322));
		if (!L_15)
		{
			goto IL_0081;
		}
	}
	{
		bool L_16 = ___isTouchpadTouched1;
		bool L_17 = __this->get_wasTouchpadTouched_39();
		G_B13_0 = ((((int32_t)((((int32_t)L_16) == ((int32_t)L_17))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0082;
	}

IL_0081:
	{
		G_B13_0 = 0;
	}

IL_0082:
	{
		V_1 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10302));
		bool L_18 = V_1;
		if (!L_18)
		{
			goto IL_009c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10303));
		// touchpadTouchVisualizer.SetActive(isTouchpadTouched);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10304));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = __this->get_touchpadTouchVisualizer_32();
		bool L_20 = ___isTouchpadTouched1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10323));
		NullCheck(L_19);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_19, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10323));
		// wasTouchpadTouched = isTouchpadTouched;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10305));
		bool L_21 = ___isTouchpadTouched1;
		__this->set_wasTouchpadTouched_39(L_21);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10306));
	}

IL_009c:
	{
		// if (touchpadTouchX != null && touchpadTouchY != null && touchpadTouchXMin != null && touchpadTouchXMax != null && touchpadTouchYMin != null && touchpadTouchYMax != null && newTouchpadPosition != lastTouchpadPosition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10307));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = __this->get_touchpadTouchX_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10324));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_23 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_22, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10324));
		if (!L_23)
		{
			goto IL_00fe;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = __this->get_touchpadTouchY_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10325));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_25 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_24, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10325));
		if (!L_25)
		{
			goto IL_00fe;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = __this->get_touchpadTouchXMin_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10326));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_27 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_26, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10326));
		if (!L_27)
		{
			goto IL_00fe;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = __this->get_touchpadTouchXMax_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10327));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_29 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_28, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10327));
		if (!L_29)
		{
			goto IL_00fe;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = __this->get_touchpadTouchYMin_30();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10328));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_31 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_30, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10328));
		if (!L_31)
		{
			goto IL_00fe;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = __this->get_touchpadTouchYMax_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10329));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_33 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_32, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10329));
		if (!L_33)
		{
			goto IL_00fe;
		}
	}
	{
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_34 = ___newTouchpadPosition2;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_35 = __this->get_lastTouchpadPosition_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10330));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		bool L_36 = Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E(L_34, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10330));
		G_B23_0 = ((int32_t)(L_36));
		goto IL_00ff;
	}

IL_00fe:
	{
		G_B23_0 = 0;
	}

IL_00ff:
	{
		V_2 = (bool)G_B23_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10308));
		bool L_37 = V_2;
		if (!L_37)
		{
			goto IL_01ed;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10309));
		// Vector2 touchpadNormalized = (newTouchpadPosition + Vector2.one) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10310));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_38 = ___newTouchpadPosition2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10331));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_39 = Vector2_get_one_m6E01BE09CEA40781CB12CCB6AF33BBDA0F60CEED(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10332));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_40 = Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682(L_38, L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10332));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10333));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_41 = Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56(L_40, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10333));
		V_3 = L_41;
		// touchpadTouchX.transform.localPosition = Vector3.Lerp(touchpadTouchXMin.localPosition, touchpadTouchXMax.localPosition, touchpadNormalized.x);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10311));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_42 = __this->get_touchpadTouchX_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10334));
		NullCheck(L_42);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10334));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = __this->get_touchpadTouchXMin_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10335));
		NullCheck(L_44);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10335));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_46 = __this->get_touchpadTouchXMax_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10336));
		NullCheck(L_46);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10336));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_48 = V_3;
		float L_49 = L_48.get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10337));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_45, L_47, L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10337));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10338));
		NullCheck(L_43);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_43, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10338));
		// touchpadTouchX.transform.localRotation = Quaternion.Lerp(touchpadTouchXMin.localRotation, touchpadTouchXMax.localRotation, touchpadNormalized.x);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10312));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_51 = __this->get_touchpadTouchX_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10339));
		NullCheck(L_51);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_52 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10339));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_53 = __this->get_touchpadTouchXMin_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10340));
		NullCheck(L_53);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_54 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10340));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_55 = __this->get_touchpadTouchXMax_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10341));
		NullCheck(L_55);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_56 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10341));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_57 = V_3;
		float L_58 = L_57.get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10342));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_59 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_54, L_56, L_58, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10342));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10343));
		NullCheck(L_52);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_52, L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10343));
		// touchpadTouchY.transform.localPosition = Vector3.Lerp(touchpadTouchYMax.localPosition, touchpadTouchYMin.localPosition, touchpadNormalized.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10313));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_60 = __this->get_touchpadTouchY_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10344));
		NullCheck(L_60);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_61 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_60, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10344));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_62 = __this->get_touchpadTouchYMax_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10345));
		NullCheck(L_62);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10345));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_64 = __this->get_touchpadTouchYMin_30();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10346));
		NullCheck(L_64);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_65 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_64, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10346));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_66 = V_3;
		float L_67 = L_66.get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10347));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_68 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_63, L_65, L_67, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10347));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10348));
		NullCheck(L_61);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_61, L_68, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10348));
		// touchpadTouchY.transform.localRotation = Quaternion.Lerp(touchpadTouchYMax.localRotation, touchpadTouchYMin.localRotation, touchpadNormalized.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10314));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_69 = __this->get_touchpadTouchY_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10349));
		NullCheck(L_69);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_70 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10349));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_71 = __this->get_touchpadTouchYMax_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10350));
		NullCheck(L_71);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_72 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_71, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10350));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_73 = __this->get_touchpadTouchYMin_30();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10351));
		NullCheck(L_73);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_74 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_73, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10351));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_75 = V_3;
		float L_76 = L_75.get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10352));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_77 = Quaternion_Lerp_m749B3988EE2EF387CC9BFB76C81B7465A7534E27(L_72, L_74, L_76, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10352));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10353));
		NullCheck(L_70);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_70, L_77, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10353));
		// lastTouchpadPosition = newTouchpadPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10315));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_78 = ___newTouchpadPosition2;
		__this->set_lastTouchpadPosition_41(L_78);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10316));
	}

IL_01ed:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10317));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::SetLocalPositionAndRotation(UnityEngine.GameObject,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___buttonGameObject0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___newTransform1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___buttonGameObject0), (&___newTransform1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_SetLocalPositionAndRotation_m7F6482228D28E4D728C0EB24F3F07CFCE4DC9CCF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10354));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10355));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10356));
		// buttonGameObject.transform.localPosition = newTransform.localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10357));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___buttonGameObject0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10360));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10360));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ___newTransform1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10361));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10361));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10362));
		NullCheck(L_1);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10362));
		// buttonGameObject.transform.localRotation = newTransform.localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10358));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = ___buttonGameObject0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10363));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10363));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = ___newTransform1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10364));
		NullCheck(L_6);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10364));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10365));
		NullCheck(L_5);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10365));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10359));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerInfo::SetRenderersVisible(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerInfo_SetRenderersVisible_m94952D555FC4528D9400D0FD8828B3FAE2F132CA (MixedRealityControllerInfo_t10FE8D3CC23FEA3E45C560654E31787A29E90AC8 * __this, bool ___visible0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerInfo_SetRenderersVisible_m94952D555FC4528D9400D0FD8828B3FAE2F132CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___visible0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerInfo_SetRenderersVisible_m94952D555FC4528D9400D0FD8828B3FAE2F132CA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10366));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10367));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10368));
		// MeshRenderer[] renderers = ControllerParent.GetComponentsInChildren<MeshRenderer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10369));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_ControllerParent_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10379));
		NullCheck(L_0);
		MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3* L_1 = GameObject_GetComponentsInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mA32C4E24AF4AF3533AE3E69E88F7CBC0AA9051FB(L_0, /*hidden argument*/GameObject_GetComponentsInChildren_TisMeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED_mA32C4E24AF4AF3533AE3E69E88F7CBC0AA9051FB_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10379));
		V_0 = L_1;
		// for (int i = 0; i < renderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10370));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10371));
		goto IL_0021;
	}

IL_0011:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10372));
		// renderers[i].enabled = visible;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10373));
		MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3* L_2 = V_0;
		int32_t L_3 = V_1;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		MeshRenderer_t9D67CA54E83315F743623BDE8EADCD5074659EED * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		bool L_6 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10380));
		NullCheck(L_5);
		Renderer_set_enabled_m0933766657F2685BAAE3340B0A984C0E63925303(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10380));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10374));
		// for (int i = 0; i < renderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10375));
		int32_t L_7 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_7, (int32_t)1));
	}

IL_0021:
	{
		// for (int i = 0; i < renderers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10376));
		int32_t L_8 = V_1;
		MeshRendererU5BU5D_t5FE99DFF4D53B490C79494B8DCAA661F1721E0D3* L_9 = V_0;
		NullCheck(L_9);
		V_2 = (bool)((((int32_t)L_8) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_9)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10377));
		bool L_10 = V_2;
		if (L_10)
		{
			goto IL_0011;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10378));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer::get_GameObjectProxy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityControllerVisualizer_get_GameObjectProxy_mFD6B5C45CA80AC566470BF036753965B4C315A2B (MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerVisualizer_get_GameObjectProxy_mFD6B5C45CA80AC566470BF036753965B4C315A2B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerVisualizer_get_GameObjectProxy_mFD6B5C45CA80AC566470BF036753965B4C315A2B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10381));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10382));
	{
		// public GameObject GameObjectProxy => gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10383));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10384));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10384));
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer::OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerVisualizer_OnInputDown_m8C6F09C515C1E3738604EE8A8D13A4FE197BCF7D (MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerVisualizer_OnInputDown_m8C6F09C515C1E3738604EE8A8D13A4FE197BCF7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerVisualizer_OnInputDown_m8C6F09C515C1E3738604EE8A8D13A4FE197BCF7D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10385));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10386));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10387));
		// base.OnInputDown(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10388));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10390));
		ControllerPoseSynchronizer_OnInputDown_m97B0DC81F1BF459E9930B9C53B3C49D9925AEF7A(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10390));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10389));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer::OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerVisualizer_OnInputUp_m74DF26505793F335BD87EFF771025D7A1CFF1C73 (MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerVisualizer_OnInputUp_m74DF26505793F335BD87EFF771025D7A1CFF1C73_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerVisualizer_OnInputUp_m74DF26505793F335BD87EFF771025D7A1CFF1C73_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10391));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10392));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10393));
		// base.OnInputUp(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10394));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10396));
		ControllerPoseSynchronizer_OnInputUp_m63A54F67BAA46CEF20CBD409A07DE90AAEF3C724(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10396));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10395));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerVisualizer_OnInputChanged_mF7F4DB04EA042746EC581C16C2651C741525E1EA (MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * __this, InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerVisualizer_OnInputChanged_mF7F4DB04EA042746EC581C16C2651C741525E1EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerVisualizer_OnInputChanged_mF7F4DB04EA042746EC581C16C2651C741525E1EA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10397));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10398));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10399));
		// base.OnInputChanged(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10400));
		InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10402));
		ControllerPoseSynchronizer_OnInputChanged_mFD462CE4BBF3902FF93C24A23D36D0775919A1ED(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10402));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10401));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerVisualizer_OnInputChanged_mF55BD41A09CAD073071E34FDBF0324980351BB8E (MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * __this, InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerVisualizer_OnInputChanged_mF55BD41A09CAD073071E34FDBF0324980351BB8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerVisualizer_OnInputChanged_mF55BD41A09CAD073071E34FDBF0324980351BB8E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10403));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10404));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10405));
		// base.OnInputChanged(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10406));
		InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10408));
		ControllerPoseSynchronizer_OnInputChanged_m5BD16169B74D4D53B665C747B54B8EF1E9E3F3BF(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10408));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10407));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityControllerVisualizer__ctor_m0D0CACC1D753168E4C5786B65138DCE7BD1D18A9 (MixedRealityControllerVisualizer_tC5482942302AEC6275F83FD585319DC74D2176FC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerVisualizer__ctor_m0D0CACC1D753168E4C5786B65138DCE7BD1D18A9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerVisualizer__ctor_m0D0CACC1D753168E4C5786B65138DCE7BD1D18A9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ControllerPoseSynchronizer__ctor_m8CCEBA6AF8A48CD3A2B0FF72C6F6FDCCC8E2F9AA(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Microsoft.MixedReality.Toolkit.Input.MousePointer::get_ControllerName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* MousePointer_get_ControllerName_mC2DAC74D907A79F1D6A503AB23C41072697DCF04 (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_get_ControllerName_mC2DAC74D907A79F1D6A503AB23C41072697DCF04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_get_ControllerName_mC2DAC74D907A79F1D6A503AB23C41072697DCF04_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14987));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14988));
	{
		// protected override string ControllerName => "Spatial Mouse Pointer";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14989));
		return _stringLiteralCDAB85ECA39BD46D66EA4F104D9CEC6C7E69B435;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_OnPreSceneQuery_m11FDF43AC9753EF4FE21D0DF863089B780CF1016 (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_OnPreSceneQuery_m11FDF43AC9753EF4FE21D0DF863089B780CF1016_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_OnPreSceneQuery_m11FDF43AC9753EF4FE21D0DF863089B780CF1016_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14990));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14991));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14992));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14993));
		IL2CPP_RUNTIME_CLASS_INIT(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_65();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15006));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15006));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14994));
			// transform.position = CameraCache.Main.transform.position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14995));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15007));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15007));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15008));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_3 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15008));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15009));
			NullCheck(L_3);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15009));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15010));
			NullCheck(L_4);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15010));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15011));
			NullCheck(L_2);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_2, L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15011));
			// Ray ray = new Ray(transform.position, transform.forward);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14996));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15012));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15012));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15013));
			NullCheck(L_6);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15013));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15014));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15014));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15015));
			NullCheck(L_8);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15015));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15016));
			Ray__ctor_m695D219349B8AA4C82F96C55A27D384C07736F6B((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_2), L_7, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15016));
			// Rays[0].CopyRay(ray, PointerExtent);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14997));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15017));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_10 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15017));
			NullCheck(L_10);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_11 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15018));
			float L_12 = BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15018));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15019));
			RayStep_CopyRay_mC78083BBF0A93F22A477DD547E3D552EB9D2FE29((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_10)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), L_11, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15019));
			// if (MixedRealityRaycaster.DebugEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14998));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
			bool L_13 = ((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->get_DebugEnabled_0();
			V_3 = L_13;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14999));
			bool L_14 = V_3;
			if (!L_14)
			{
				goto IL_0090;
			}
		}

IL_006a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15000));
			// Debug.DrawRay(ray.origin, ray.direction * PointerExtent, Color.green);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15001));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15020));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15020));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15021));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15021));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15022));
			float L_17 = BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15022));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15023));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_16, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15023));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15024));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_19 = Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15024));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15025));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3(L_15, L_18, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15025));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15002));
		}

IL_0090:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15003));
			IL2CPP_LEAVE(0xA2, FINALLY_0093);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0093;
	}

FINALLY_0093:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15004));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15026));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15026));
		IL2CPP_END_FINALLY(147)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(147)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xA2, IL_00a2)
	}

IL_00a2:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15005));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_OnInputChanged_mABA6C29C21B4674AE392D3D5D4BC3E588052BDEC (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_OnInputChanged_mABA6C29C21B4674AE392D3D5D4BC3E588052BDEC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_OnInputChanged_mABA6C29C21B4674AE392D3D5D4BC3E588052BDEC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15027));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15028));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	uint32_t G_B3_1 = 0;
	RuntimeObject* G_B2_0 = NULL;
	uint32_t G_B2_1 = 0;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  G_B4_0;
	memset((&G_B4_0), 0, sizeof(G_B4_0));
	uint32_t G_B4_1 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15029));
		// using (OnInputChangedVector2PerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15030));
		IL2CPP_RUNTIME_CLASS_INIT(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->get_OnInputChangedVector2PerfMarker_66();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15044));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15044));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15031));
			// if (eventData.SourceId == Controller?.InputSource.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15032));
			InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15045));
			NullCheck(L_2);
			uint32_t L_3 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15045));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15046));
			RuntimeObject* L_4 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15046));
			RuntimeObject* L_5 = L_4;
			G_B2_0 = L_5;
			G_B2_1 = L_3;
			if (L_5)
			{
				G_B3_0 = L_5;
				G_B3_1 = L_3;
				goto IL_002c;
			}
		}

IL_001f:
		{
			il2cpp_codegen_initobj((&V_4), sizeof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 ));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_6 = V_4;
			G_B4_0 = L_6;
			G_B4_1 = G_B2_1;
			goto IL_003b;
		}

IL_002c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15047));
			NullCheck(G_B3_0);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15047));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15048));
			NullCheck(L_7);
			uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15048));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15049));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_9;
			memset((&L_9), 0, sizeof(L_9));
			Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B((&L_9), L_8, /*hidden argument*/Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15049));
			G_B4_0 = L_9;
			G_B4_1 = G_B3_1;
		}

IL_003b:
		{
			V_3 = G_B4_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15050));
			uint32_t L_10 = Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_3), /*hidden argument*/Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15050));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15051));
			bool L_11 = Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_3), /*hidden argument*/Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15051));
			V_2 = (bool)((int32_t)((int32_t)((((int32_t)G_B4_1) == ((int32_t)L_10))? 1 : 0)&(int32_t)L_11));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15033));
			bool L_12 = V_2;
			if (!L_12)
			{
				goto IL_008c;
			}
		}

IL_0051:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15034));
			// if (PoseAction == eventData.MixedRealityInputAction && !UseSourcePoseData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15035));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15052));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_13 = ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15052));
			InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * L_14 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15053));
			NullCheck(L_14);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_15 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15053));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15054));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
			bool L_16 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_13, L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15054));
			if (!L_16)
			{
				goto IL_0070;
			}
		}

IL_0065:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15055));
			bool L_17 = ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28C_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15055));
			G_B8_0 = ((((int32_t)L_17) == ((int32_t)0))? 1 : 0);
			goto IL_0071;
		}

IL_0070:
		{
			G_B8_0 = 0;
		}

IL_0071:
		{
			V_5 = (bool)G_B8_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15036));
			bool L_18 = V_5;
			if (!L_18)
			{
				goto IL_008b;
			}
		}

IL_0077:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15037));
			// UpdateMouseRotation(eventData.InputData);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15038));
			InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * L_19 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15056));
			NullCheck(L_19);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_20 = InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_inline(L_19, /*hidden argument*/InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15056));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15057));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = Vector2_op_Implicit_mD152B6A34B4DB7FFECC2844D74718568FE867D6F(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15057));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15058));
			MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A(__this, L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15058));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15039));
		}

IL_008b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15040));
		}

IL_008c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15041));
			IL2CPP_LEAVE(0x9E, FINALLY_008f);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_008f;
	}

FINALLY_008f:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15042));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15059));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15059));
		IL2CPP_END_FINALLY(143)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(143)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x9E, IL_009e)
	}

IL_009e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15043));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_OnInputChanged_mA3ED23C1FC4441A272BFCD6B84F2085FA783370D (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_OnInputChanged_mA3ED23C1FC4441A272BFCD6B84F2085FA783370D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_OnInputChanged_mA3ED23C1FC4441A272BFCD6B84F2085FA783370D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15060));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15061));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	uint32_t G_B3_1 = 0;
	RuntimeObject* G_B2_0 = NULL;
	uint32_t G_B2_1 = 0;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  G_B4_0;
	memset((&G_B4_0), 0, sizeof(G_B4_0));
	uint32_t G_B4_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15062));
		// using (OnInputChangedPosePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15063));
		IL2CPP_RUNTIME_CLASS_INIT(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->get_OnInputChangedPosePerfMarker_67();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15077));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15077));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15064));
			// if (eventData.SourceId == Controller?.InputSource.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15065));
			InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15078));
			NullCheck(L_2);
			uint32_t L_3 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15078));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15079));
			RuntimeObject* L_4 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15079));
			RuntimeObject* L_5 = L_4;
			G_B2_0 = L_5;
			G_B2_1 = L_3;
			if (L_5)
			{
				G_B3_0 = L_5;
				G_B3_1 = L_3;
				goto IL_002c;
			}
		}

IL_001f:
		{
			il2cpp_codegen_initobj((&V_4), sizeof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 ));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_6 = V_4;
			G_B4_0 = L_6;
			G_B4_1 = G_B2_1;
			goto IL_003b;
		}

IL_002c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15080));
			NullCheck(G_B3_0);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15080));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15081));
			NullCheck(L_7);
			uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15081));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15082));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_9;
			memset((&L_9), 0, sizeof(L_9));
			Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B((&L_9), L_8, /*hidden argument*/Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15082));
			G_B4_0 = L_9;
			G_B4_1 = G_B3_1;
		}

IL_003b:
		{
			V_3 = G_B4_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15083));
			uint32_t L_10 = Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_3), /*hidden argument*/Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15083));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15084));
			bool L_11 = Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_3), /*hidden argument*/Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15084));
			V_2 = (bool)((int32_t)((int32_t)((((int32_t)G_B4_1) == ((int32_t)L_10))? 1 : 0)&(int32_t)L_11));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15066));
			bool L_12 = V_2;
			if (!L_12)
			{
				goto IL_0080;
			}
		}

IL_0051:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15067));
			// if (UseSourcePoseData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15068));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15085));
			bool L_13 = ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28C_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15085));
			V_5 = L_13;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15069));
			bool L_14 = V_5;
			if (!L_14)
			{
				goto IL_007f;
			}
		}

IL_005e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15070));
			// UpdateMouseRotation(eventData.InputData.Rotation.eulerAngles);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15071));
			InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * L_15 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15086));
			NullCheck(L_15);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_16 = InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_inline(L_15, /*hidden argument*/InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15086));
			V_6 = L_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15087));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15087));
			V_7 = L_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15088));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15088));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15089));
			MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A(__this, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15089));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15072));
		}

IL_007f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15073));
		}

IL_0080:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15074));
			IL2CPP_LEAVE(0x92, FINALLY_0083);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0083;
	}

FINALLY_0083:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15075));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15090));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15090));
		IL2CPP_END_FINALLY(131)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(131)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x92, IL_0092)
	}

IL_0092:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15076));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::UpdateMouseRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___mouseDeltaRotation0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mouseDeltaRotation0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_UpdateMouseRotation_m4DAAFC74B58910915AA4D42A9E2808D238CB150A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15091));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15092));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15093));
		// using (UpdateMouseRotationPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15094));
		IL2CPP_RUNTIME_CLASS_INIT(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->get_UpdateMouseRotationPerfMarker_68();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15113));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15113));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15095));
			// if (isDisabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15096));
			bool L_2 = ((BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 *)__this)->get_isDisabled_55();
			V_2 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15097));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_0059;
			}
		}

IL_001a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15098));
			// if (mouseDeltaRotation.magnitude >= MovementThresholdToUnHide)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15099));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15114));
			float L_4 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&___mouseDeltaRotation0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15114));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15115));
			float L_5 = BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15115));
			V_3 = (bool)((((int32_t)((!(((float)L_4) >= ((float)L_5)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15100));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_0056;
			}
		}

IL_0031:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15101));
			// SetVisibility(true);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15102));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15116));
			VirtActionInvoker1< bool >::Invoke(108 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::SetVisibility(System.Boolean) */, __this, (bool)1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15116));
			// transform.rotation = CameraCache.Main.transform.rotation;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15103));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15117));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15117));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15118));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_8 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15118));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15119));
			NullCheck(L_8);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15119));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15120));
			NullCheck(L_9);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15120));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15121));
			NullCheck(L_7);
			Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_7, L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15121));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15104));
		}

IL_0056:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15105));
			goto IL_0066;
		}

IL_0059:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15106));
			// timeoutTimer = 0.0f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15107));
			((BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 *)__this)->set_timeoutTimer_52((0.0f));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15108));
		}

IL_0066:
		{
			// transform.Rotate(mouseDeltaRotation, Space.Self);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15109));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15122));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15122));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = ___mouseDeltaRotation0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15123));
			NullCheck(L_11);
			Transform_Rotate_m3424566A0D19A1487AE3A82B08C47F2A2D2A26CB(L_11, L_12, 1, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15123));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15110));
			IL2CPP_LEAVE(0x86, FINALLY_0077);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0077;
	}

FINALLY_0077:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15111));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15124));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15124));
		IL2CPP_END_FINALLY(119)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(119)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x86, IL_0086)
	}

IL_0086:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15112));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_Start_m91CEAF0F0A393D1AD1E044D6FFA9C0BA00A08958 (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_Start_m91CEAF0F0A393D1AD1E044D6FFA9C0BA00A08958_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_Start_m91CEAF0F0A393D1AD1E044D6FFA9C0BA00A08958_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15125));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15126));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15127));
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15132));
		BaseMousePointer_Start_m4A9F473B8A683934ED0E187AF2EA5F4EC0083ED8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15132));
		// Cursor.visible = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15129));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15133));
		Cursor_set_visible_mDB51E60B3D7B14873A6F5FBE5E0A432D4A46C431((bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15133));
		// Cursor.lockState = CursorLockMode.Locked;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15130));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15134));
		Cursor_set_lockState_m019E27A0FE021A28A1C672801416ACA5E770933F(1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15134));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15131));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::SetVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer_SetVisibility_m892188D8D19589D712D4984059A9145FD2AD8A6E (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, bool ___visible0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer_SetVisibility_m892188D8D19589D712D4984059A9145FD2AD8A6E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___visible0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer_SetVisibility_m892188D8D19589D712D4984059A9145FD2AD8A6E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15136));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15137));
		// base.SetVisibility(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15138));
		bool L_0 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15141));
		BaseMousePointer_SetVisibility_m2C5A3D32733170C1A50630E16E6DB10AA552AA35(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15141));
		// BaseCursor?.SetVisibility(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15139));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15142));
		RuntimeObject* L_1 = BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15142));
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0015;
		}
	}
	{
		goto IL_001c;
	}

IL_0015:
	{
		bool L_3 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15143));
		NullCheck(G_B2_0);
		InterfaceActionInvoker1< bool >::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::SetVisibility(System.Boolean) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, G_B2_0, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15143));
	}

IL_001c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15140));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer__ctor_mB9F25F2E2947E3F462D10987357BF66C3C72CBEA (MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer__ctor_mB9F25F2E2947E3F462D10987357BF66C3C72CBEA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer__ctor_mB9F25F2E2947E3F462D10987357BF66C3C72CBEA_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_il2cpp_TypeInfo_var);
		BaseMousePointer__ctor_m9826535EE189FA825A0267AB8C1757E9B7F809EC(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MousePointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MousePointer__cctor_mED4CA715A126507DEE28A7C0F2667309912CB11A (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MousePointer__cctor_mED4CA715A126507DEE28A7C0F2667309912CB11A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MousePointer__cctor_mED4CA715A126507DEE28A7C0F2667309912CB11A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15144));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15145));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] MousePointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15150));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralEBD8CD49CA9CA08DCA3F9D662C7FB11895F97016, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15150));
		((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_65(L_0);
		// private static readonly ProfilerMarker OnInputChangedVector2PerfMarker = new ProfilerMarker("[MRTK] MousePointer.OnInputChanged(Vector2)");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15147));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15151));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteralE53DF9E07C8E7CF264C4F622B080EE9D849098D6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15151));
		((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->set_OnInputChangedVector2PerfMarker_66(L_1);
		// private static readonly ProfilerMarker OnInputChangedPosePerfMarker = new ProfilerMarker("[MRTK] MousePointer.OnInputChanged(Pose)");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15152));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral8771E437E1DB62B370E1349D6FDC20BFF700612F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15152));
		((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->set_OnInputChangedPosePerfMarker_67(L_2);
		// private static readonly ProfilerMarker UpdateMouseRotationPerfMarker = new ProfilerMarker("[MRTK] MousePointer.UpdateMouseRotation");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15149));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15153));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteral23E998B544CC876C74A89FCB9DCBE810E19AFDB8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15153));
		((MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_StaticFields*)il2cpp_codegen_static_fields_for(MousePointer_tFA6E016D12718B9C208DFB956E3D12AF04B9CAAB_il2cpp_TypeInfo_var))->set_UpdateMouseRotationPerfMarker_68(L_3);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 43));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 44));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 45));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 46));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1;
		memset((&L_1), 0, sizeof(L_1));
		AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline((&L_1), (intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 47));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_2 = V_0;
		return L_2;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int64_t PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_get_PressedTimestamp_m12F19EB7627F26429C0D306064137B4B52289F4A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14034));
	{
		// public long PressedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14035));
		int64_t L_0 = __this->get_U3CPressedTimestampU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int64_t PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_get_ReleasedTimestamp_m235890FA76E0D256A5FAB901C66B7140D0D916A6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14003));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14004));
	{
		// public long ReleasedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14005));
		int64_t L_0 = __this->get_U3CReleasedTimestampU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 56));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 57));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 58));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 59));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A((intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 60));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26775));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26776));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___name0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 25));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 26));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 27));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 28));
		String_t* L_0 = ___name0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		intptr_t L_1 = ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370(L_0, (uint16_t)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		__this->set_m_Ptr_0((intptr_t)L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 29));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, int64_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_set_ReleasedTimestamp_m4283B9AE7C0CD3E551F507AE7407456E7A51DCEB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14006));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14007));
	{
		// public long ReleasedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14008));
		int64_t L_0 = ___value0;
		__this->set_U3CReleasedTimestampU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_inline (PointerInfo_tAAD3C077313DE399AF846FE456E7622D441A6458 * __this, int64_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerInfo_set_PressedTimestamp_mE0044E420FAC169DA67272FD1A04456CB55CE025_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14036));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14037));
	{
		// public long PressedTimestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14038));
		int64_t L_0 = ___value0;
		__this->set_U3CPressedTimestampU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_inline (DictationEventData_t644CFED616E75B0273F08866BC78DB3D46A3054A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DictationEventData_get_DictationResult_mE42A149C6BE42B6AEB885F7661552E0A1347A846_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26639));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26640));
	{
		// public string DictationResult { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26641));
		String_t* L_0 = __this->get_U3CDictationResultU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_IsLookedAt_mB02162AE0E0A6E69058EFD19B4D7796D59643B72_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9109));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9110));
	{
		// public bool IsLookedAt { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9111));
		bool L_0 = ___value0;
		__this->set_U3CIsLookedAtU3Ek__BackingField_16(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_LookedAtEyeTarget_m1FE9B17B9426CAD7F6388ACF7550236D5B85450D_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9147));
	{
		// public static EyeTrackingTarget LookedAtEyeTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9148));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ___value0;
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_U3CLookedAtEyeTargetU3Ek__BackingField_24(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9106));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9107));
	{
		// public bool IsLookedAt { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9108));
		bool L_0 = __this->get_U3CIsLookedAtU3Ek__BackingField_16();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9ABMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_IsDwelledOn_m467A2C4B37455CBE709F35C1A417F8381341E9AB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9112));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9113));
	{
		// public bool IsDwelledOn { get; private set; } = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9114));
		bool L_0 = __this->get_U3CIsDwelledOnU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01BMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_IsDwelledOn_m8E38AA65644E8ED276A58E7962C9C1DFF7C3F01B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9115));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9116));
	{
		// public bool IsDwelledOn { get; private set; } = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9117));
		bool L_0 = ___value0;
		__this->set_U3CIsDwelledOnU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26615));
	{
		// public MixedRealityInputAction MixedRealityInputAction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26616));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_U3CMixedRealityInputActionU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_inline (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_set_SelectedTarget_mD6157432A41E3E61E236BB30F317C78FB2265ADB_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9152));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9153));
	{
		// public static GameObject SelectedTarget { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9154));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		IL2CPP_RUNTIME_CLASS_INIT(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var);
		((EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields*)il2cpp_codegen_static_fields_for(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_il2cpp_TypeInfo_var))->set_U3CSelectedTargetU3Ek__BackingField_25(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_InputSourceParent_mE7399C694179F4F20C9A0FEFBE1A7879FD807670_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14116));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14117));
	{
		// public IMixedRealityInputSource InputSourceParent { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14118));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CInputSourceParentU3Ek__BackingField_14(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3EMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_IsActive_mDCF221B29AD9998288F3EB7FBD290E592BF0DF3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14136));
	{
		// public bool IsActive { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14137));
		bool L_0 = __this->get_U3CIsActiveU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22022));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22023));
	{
		// public Vector3 Origin { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22024));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3COriginU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317BMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22034));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22035));
	{
		// public Vector3 Direction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22036));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CDirectionU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8EMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_Rays_m2D9C6063D5BD5F2170D73F09C0F254AB95AF3D8E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14153));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14154));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14155));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = __this->get_U3CRaysU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22041));
	{
		// public float Length { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22042));
		float L_0 = __this->get_U3CLengthU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_BaseCursor_m934C312D452978FF44EE4E981BB97B56552BDCF2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14123));
	{
		// public IMixedRealityCursor BaseCursor { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14124));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CBaseCursorU3Ek__BackingField_15(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_IsActive_m2833B1EB3446A452DDA70E1F6998C3411AEFACF9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14139));
	{
		// public bool IsActive { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14140));
		bool L_0 = ___value0;
		__this->set_U3CIsActiveU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05ABMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_set_IsFocusLocked_mBB8E7C4EF1FCBF6F80B060A7B510CBCDB74D05AB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14144));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14145));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14146));
		bool L_0 = ___value0;
		__this->set_U3CIsFocusLockedU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_inline (GGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GGVPointer_get_InputSourceParent_m255E441DDB9F72FCE79E395229F72C109182D3FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14113));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14114));
	{
		// public IMixedRealityInputSource InputSourceParent { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14115));
		RuntimeObject* L_0 = __this->get_U3CInputSourceParentU3Ek__BackingField_14();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21984));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21985));
	{
		// public GameObject Object { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21986));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CObjectU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26734));
	{
		// public Handedness Handedness { get; private set; } = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26735));
		uint8_t L_0 = __this->get_U3CHandednessU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CDMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25329));
	{
		// public DeviceInputType InputType => inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25330));
		int32_t L_0 = __this->get_inputType_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59_inline (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseCursor_get_CursorState_m5F879B8F386BE548867ED8CEDB6A325AF8789C59_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10590));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10591));
	{
		// public CursorStateEnum CursorState { get; private set; } = CursorStateEnum.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 10592));
		int32_t L_0 = __this->get_U3CCursorStateU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12591));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12592));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12593));
		bool L_0 = __this->get_U3CIsFocusLockedU3Ek__BackingField_36();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14673));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14674));
	{
		// public BaseMixedRealityLineDataProvider LineBase => lineBase;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14675));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_0 = __this->get_lineBase_57();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308EMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_BaseCursor_m1B5688F6CE0C15F7B400C3E80DA9FA3CBFA6308E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12550));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12551));
	{
		// public IMixedRealityCursor BaseCursor { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12552));
		RuntimeObject* L_0 = __this->get_U3CBaseCursorU3Ek__BackingField_33();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12653));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12654));
	{
		// public IPointerResult Result { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12655));
		RuntimeObject* L_0 = __this->get_U3CResultU3Ek__BackingField_44();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21973));
	{
		// public Vector3 Point { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21974));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21966));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21967));
	{
		// public float RayDistance { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21968));
		float L_0 = __this->get_U3CRayDistanceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14677));
	{
		// public BaseMixedRealityLineRenderer[] LineRenderers => lineRenderers;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14678));
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_0 = __this->get_lineRenderers_58();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EF_inline (BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EFMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseMixedRealityLineRenderer_get_LineStepCount_mA471E2F44E24F2E3A1BB20044E1C86FA908823EF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13380));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13381));
	{
		// get => lineStepCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13382));
		int32_t L_0 = __this->get_lineStepCount_11();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AF_inline (BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * __this, Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AFMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseMixedRealityLineRenderer_set_LineColor_m0B3F27B672928E5A032100DE314A3F8449A393AF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13339));
	{
		// set => lineColor = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13340));
		Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_0 = ___value0;
		__this->set_lineColor_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0FMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12635));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12636));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12637));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = __this->get_U3CRaysU3Ek__BackingField_41();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788AMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12638));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12639));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12640));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = ___value0;
		__this->set_U3CRaysU3Ek__BackingField_41(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76_inline (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ControllerPoseSynchronizer_get_PoseAction_mD9B7EA77C2EA1627CEB2CBC122A3AB1C881B0B76_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8713));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8714));
	{
		// get => poseAction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8715));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_poseAction_11();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28C_inline (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28CMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ControllerPoseSynchronizer_get_UseSourcePoseData_m11AB2F4A55CA7674CD26DDD8E3DDEFF68049F28C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8701));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8702));
	{
		// get => useSourcePoseData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 8703));
		bool L_0 = __this->get_useSourcePoseData_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_inline (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13123));
	{
		// public float MovementThresholdToUnHide => movementThresholdToUnHide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13124));
		float L_0 = __this->get_movementThresholdToUnHide_57();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_gshared_inline (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  L_0 = (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE )__this->get_current_3();
		return (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_key_0();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AECMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_value_1();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_gshared_inline (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_mFA6029268E5E4427856D432C42EF82C6D15AC9A8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_gshared_inline (Nullable_1_t3290384E361396B3724B88B498CBF637D7E87B78 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98DMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_m39F926D16369F52F15C0534A54C91D8DB541A98D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 )__this->get_value_0();
		return (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		uint32_t L_0 = (uint32_t)__this->get_value_0();
		return (uint32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4ACMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint8_t Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EBMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		uint8_t L_0 = (uint8_t)__this->get_value_0();
		return (uint8_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4FMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_gshared_inline (InputEventData_1_tB464B20248E9C4E62445C88AA25DCD460ED1EF64 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_1_get_InputData_m3D86E73D8E9239986EE6AC8BF491E345EA7BD846_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26755));
	{
		// public T InputData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26756));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 )__this->get_U3CInputDataU3Ek__BackingField_6();
		return (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get__current_3();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* Array_Empty_TisMeshCursorDatum_tED77BE9D9349344F28762AF28E4496102222C95B_m28B38DA17FD15048FA24D6C48F77D41BDAB7BD25_gshared_inline (const RuntimeMethod* method)
{
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, method, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(IL2CPP_RGCTX_DATA(method->rgctx_data, 0));
		MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0* L_0 = ((EmptyArray_1_t8B98F044376AB0073D495CC899CDBB634F3C7A49_StaticFields*)il2cpp_codegen_static_fields_for(IL2CPP_RGCTX_DATA(method->rgctx_data, 0)))->get_Value_0();
		return (MeshCursorDatumU5BU5D_t8578096A26FC375AC3B3D60F7DD135A40F7D3EC0*)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_gshared_inline (InputEventData_1_t41FFA3417C167B59D706C1E6700632D76F6D9A18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_1_get_InputData_m143442897B576A23D3309FAA1BB395AF9B3EC812_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26755));
	{
		// public T InputData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26756));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D )__this->get_U3CInputDataU3Ek__BackingField_6();
		return (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D )L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit_SDK3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___markerPtr0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 49));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 50));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 51));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 52));
		intptr_t L_0 = ___markerPtr0;
		__this->set_m_Ptr_0((intptr_t)L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 53));
		intptr_t L_1 = ___markerPtr0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5((intptr_t)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 54));
		return;
	}
}
