#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration
struct ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB;
// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager
struct ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD;
// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Quaternion>
struct IElasticSystem_1_tC4A5D59B462B7700E208F9FFF3205DDD0A12CFB7;
// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Vector3>
struct IElasticSystem_1_t9A39D2BA58EDC4AFE4123A812DA35B79FE6B7728;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController[]
struct IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider
struct IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource[]
struct IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E;
// Microsoft.MixedReality.Toolkit.Input.PointerHandler
struct PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C;
// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent
struct PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.UI.BoundingBox
struct BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921;
// Microsoft.MixedReality.Toolkit.UI.BoundingBox/CardinalAxisType[]
struct CardinalAxisTypeU5BU5D_t2E1F21AE9A0B659371A2EB13D3A23C828B187429;
// Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle
struct Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC;
// Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper
struct BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl
struct BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay
struct BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration
struct BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase
struct HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration
struct HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEvent
struct HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider
struct IProximityEffectObjectProvider_tC47C75F401B6D53E34290BDB0894FA7E69F8B275;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links
struct Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link
struct Link_t419BB37400AA583E48363DAB051577447DCEFBAB;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link[]
struct LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration
struct LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireFrameEvent
struct WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles
struct PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration
struct PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect
struct ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration
struct ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityObjectsChangedEvent
struct ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandles
struct RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration
struct RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles
struct ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration
struct ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandles
struct TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5;
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration
struct TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B;
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[]
struct CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161;
// Microsoft.MixedReality.Toolkit.UI.ConstraintManager
struct ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781;
// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint
struct MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F;
// System.Action`1<System.Object>
struct Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0;
// System.Action`1<UnityEngine.Transform>
struct Action_1_t944B085F4D5DEBCA83E9053D0BFC60EF26FA1C6A;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider,System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect/ObjectProximityInfo>>
struct Dictionary_2_t587B8CCC520DDFB4425E256FE0FCBE3132E548EF;
// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>
struct HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877;
// System.Collections.Generic.IEnumerable`1<System.Object>
struct IEnumerable_1_t2F75FCBEC68AFE08982DA43985F9D04056E2BE73;
// System.Collections.Generic.IEnumerable`1<UnityEngine.Transform>
struct IEnumerable_1_t42472AE9C2FE699C57A3900EDE1B2D22194D9D0D;
// System.Collections.Generic.IEnumerable`1<UnityEngine.Vector3>
struct IEnumerable_1_tD6EAC43B8F82FF1C475D47067CC43C2BDA9E9B6F;
// System.Collections.Generic.IReadOnlyList`1<UnityEngine.Transform>
struct IReadOnlyList_1_t48BC941DE987F297FFE1C480ECDAACE3428A7AA5;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct List_1_t74E48C60E247472C3845D62B1372777193ED6D09;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle>
struct List_1_t7A068ACEEFC84EF10744E3AED52316F66F75C48B;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>
struct List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.TransformConstraint>
struct List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226;
// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D;
// System.Collections.Generic.List`1<UnityEngine.Renderer>
struct List_1_tB7C5D51CDBF6C4C12F2D4B38EB89E727EED00749;
// System.Collections.Generic.List`1<UnityEngine.Transform>
struct List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91;
// System.Collections.Generic.List`1<UnityEngine.Vector3>
struct List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5;
// System.Collections.IEnumerator
struct IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.String
struct String_t;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.BoxCollider
struct BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA;
// UnityEngine.CapsuleCollider
struct CapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4;
// UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>
struct UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20;
// UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>
struct UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B;
// UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>
struct UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8;
// UnityEngine.Events.UnityAction`1<System.Int32Enum>
struct UnityAction_1_tAB3033A09E019F997EF77BB4720702C64B75C9DC;
// UnityEngine.Events.UnityAction`1<System.Object>
struct UnityAction_1_t330F97880F37E23D6D0C6618DD77F28AC9EF8FA9;
// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>
struct UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>
struct UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider>
struct UnityEvent_1_t121BC5B77CF53C74E89A1028818B86C3F187FFC8;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>
struct UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10;
// UnityEngine.Events.UnityEvent`1<System.Int32Enum>
struct UnityEvent_1_tB72EF438E2905C3F0C9BDCA3CA7B1016767E8841;
// UnityEngine.Events.UnityEvent`1<System.Object>
struct UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598;
// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C;
// UnityEngine.MeshFilter
struct MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4;
// UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734;
// UnityEngine.SphereCollider
struct SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F;
// UnityEngine.TextMesh
struct TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Transform[]
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK[];
IL2CPP_EXTERN_C RuntimeClass* BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BoundsExtensions_t65D5B81F0B4D8D20A4798B651AD4C93A9A761859_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Link_t419BB37400AA583E48363DAB051577447DCEFBAB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t74E48C60E247472C3845D62B1372777193ED6D09_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1_FieldInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3_FieldInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____64792C5DA8315C67B036FB03C56F50B02A7B97F7_4_FieldInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5_FieldInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____93A73E5548F18182D27703F6B878D761F8AC01FE_8_FieldInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____A5220740A843E2651AB2607371076B212DFF48E6_9_FieldInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral019095ABB5BB7C8054A256B91430616E3B11796F;
IL2CPP_EXTERN_C String_t* _stringLiteral121543AA0A9B4D4772D4FA290BDE35414C7ECD65;
IL2CPP_EXTERN_C String_t* _stringLiteral1BA68F83FC032ED0525687BB29DC95D13B610291;
IL2CPP_EXTERN_C String_t* _stringLiteral251633BC76AA6975980E7B497D5E7089693427BC;
IL2CPP_EXTERN_C String_t* _stringLiteral2A79071C91137FE5D11A469748BBFF6C5CFDFB05;
IL2CPP_EXTERN_C String_t* _stringLiteral521D1A6377657D68B7A8FCB4A3799BEE83800D2B;
IL2CPP_EXTERN_C String_t* _stringLiteral53402B7F02136D01287CECF2F0264D7B1BA359CD;
IL2CPP_EXTERN_C String_t* _stringLiteral53A0ACFAD59379B3E050338BF9F23CFC172EE787;
IL2CPP_EXTERN_C String_t* _stringLiteral5B165476B3A3CF4F6E7D18410F8FED86E519574A;
IL2CPP_EXTERN_C String_t* _stringLiteral799E12B3BBB688C3098C5046A3419B79C3EC504E;
IL2CPP_EXTERN_C String_t* _stringLiteral7F244EA782B969F5A351664BBBE0F12AAE1DE043;
IL2CPP_EXTERN_C String_t* _stringLiteral9C120160FA608C811E67C06027257CAA6E332E9C;
IL2CPP_EXTERN_C String_t* _stringLiteralA2DD7EC666AACD57FC6D0571DB038B51DEB9FB6E;
IL2CPP_EXTERN_C String_t* _stringLiteralB6BA4393CE33DD7E78C074B462B34687236A1BE0;
IL2CPP_EXTERN_C String_t* _stringLiteralBC1876D393BC222D47221F31E8011825389E03E7;
IL2CPP_EXTERN_C String_t* _stringLiteralD74E03B133803949AEF715A6F3947650E235C6DA;
IL2CPP_EXTERN_C String_t* _stringLiteralDA7F7509BC62962B546728EE5E4CCFFF5CAB8FE6;
IL2CPP_EXTERN_C String_t* _stringLiteralDD3564FE95675C3192AEAF4E78D1BF58491AF06A;
IL2CPP_EXTERN_C String_t* _stringLiteralEAE5401432A4F496F230DBD5AC09183BF436B5A7;
IL2CPP_EXTERN_C String_t* _stringLiteralEFFCB816CD41234C058C479A353FFE257645BE7A;
IL2CPP_EXTERN_C const RuntimeMethod* Action_1_Invoke_m4535D9BC632DA737CDA40F7F9FC945DBF8931BD3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetFaceBottomCentroid_m0CF5D08C3BC9193BCB6F5BF77DB594E5386EF43D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetIndexOfForwardFace_m41D8B49A1C7CC3AD14E72183CE6F9C569C0F84B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetRawBBCorners_mAD4EAB660AF6A6EF50080FB867C905594EA3507C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_UpdateNonAABoundingBoxCornerPositions_m14E072C13FA25DB6BF47FCDCEB1545A925A441CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBoxHelper__ctor_m0151C0BB10D8168C531C8CA83E5A81E89DFDC5FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_Awake_m9E45F7B8E80C7327E6E9A07276EA3ABDEFB89DFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_EnsureScriptable_TisBoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797_m0B8A924E9998C263C621C385E34ECD92621C8667_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_EnsureScriptable_TisLinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5_mE3A96313F4080A652C6F67196F41AD06AA4E6089_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_EnsureScriptable_TisProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808_m5FCEDC475B845471AC54055C8ED90589F40FE43E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_EnsureScriptable_TisRotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A_m05B654AB347DBC8C1EAE37EEDD58627DB7596362_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_EnsureScriptable_TisScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339_m423F9B182EFDDD359AE07A23B17F6224CD65422B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_EnsureScriptable_TisTranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B_m10B4A775D8EB38223A752BA18E785D033B600DFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_HighlightWires_m26A4840760D1309E55D14CCC2B9D012339D600D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnBeforeFocusChange_m38D9DB744FB5206EFD211B5BD9CA0103CE6DE34B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnFocusChanged_mF67785DDAA039795A358E462B1019AE9C4C43C8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_mFDED5A4E496854A33CC7BC543BF6D370FC448C4F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mFB767DA468A30043030D6BA2A0A22CF2C67CC714_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnDisable_m2694A9A5B1E978588EAB05942AE90FB1888135CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnEnable_mF176F98F8FDD9E3E84AB4F4B763A06F59B6FB1D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnPointerDown_mE4B572E04B99E05E04C22658D098975D715609EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnPointerDragged_m696CBB60F4E5E6EF736712EB530495924E435817_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnPointerUp_mB652CDDDFEB7B91AF81827328753993134FEA2EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnSourceDetected_m6EA60CDD59831C15109496F1FAD171BBC0A2A4C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_OnSourceLost_m982F35F5F7541394E0459F632F9EF01FBFFB43EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_UnhighlightWires_m226370DFEF8CA3774EABB14DECBA4AB9A6FAEE2E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_Update_m60059DF72B5B7A1C26B01E2F00C638186B892321_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl__cctor_m20405EADA1552B36A8A26B2E0678896355D448FC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl__ctor_mCF9B439F446FD6896CEDB73D9A225A16B44444BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_Active_mF1EFEA5AD8EDE3F375F3F02186AA2B4FE025DB99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_BoundsControlActivation_m382FDF56E834DB79959F374DEEEF1B2D25B5A7CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_BoundsCorners_m6EEFF37CB3CCE96CC13388CECFF0BDC7960817CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_BoundsOverride_mCCA125C684C4619F9887AC56C5705E5C774363BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_BoxDisplayConfig_m99405C8E2E8E2578F73070C7EA609E07CE371C55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_BoxPadding_m8F54172704F3C32C140BF6BD1BF4916DB502649A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_CalculationMethod_m0C25992785C18D02E541E2B30AABB2D56BCC1851_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ConstraintsManager_m5ADDA4878AA81A6DE671D64BA55B91C2B22C8F18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_DebugText_mBF381892A84722509AD6840C37CC58DF98FC7C8B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ElasticsManager_m6C35636B9CF49B9279D441A8CD63AF23B9F4984D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_HandleProximityEffectConfig_mC4FCBA442F1666720BD3248E0952E7D49AD6F941_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_HideElementsInInspector_m263F1B3F82854537E62C71C020727972D5895790_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_LinksConfig_m8CF00AAD550D641DDD881D57AF2B7DE491064A2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_RotateLerpTime_mB6FB7AB3E28DA348CFC0ED610BEE54E4F09D11BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_RotationHandlesConfig_m2DFE4BA2151D3FBF577C3B0C40568F9F6EB0979E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ScaleLerpTime_m078E9848C9A1AFA483489F73464EFF41ADCCA836_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_SmoothingActive_m3592C74F9F78738842F5A0C901F9731BB33413AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_TranslateLerpTime_m9F442872B4D9DDBC02754E01FD4A06707FB1AF4A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_TranslationHandlesConfig_m1C163AA7C0E47D2848CF7A8C29BFC3EA2D7B3DA0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_get_WireframeOnly_mECFE6A83DDE44F38B1D5A26C5A80E51DEAEB4A72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_BoundsControlActivation_mAFD61603C45C5BFA9E6CE1D528D43502F717742E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_BoundsCorners_m3FC0081AB51CEFCE563930DF4B4D9D9EEFB62356_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_BoundsOverride_m488D1FDAE58DBAFCB4D5C0B2E83CCDCF977CA3DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_BoxDisplayConfig_m086A93B1A3538BAFA8526481EF5CF6ED873FFBAA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_BoxPadding_mA644395E4F1F032472AB532061F35EEB81425B8F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_CalculationMethod_m76B77F98B10F6A81A3862DF05974666DFE2336FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_ConstraintsManager_mDFF3A01D76B75BB4ADAC2E7CE7BC4D549956AC79_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_DebugText_m24E0841B59E05AA0EBAC8FF7897FC46761F5C371_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_ElasticsManager_m1FE1A82B2ADCDBF828E43A85E8388AE1412157CF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_EnableConstraints_m57E3B9579EE731A9AAF185BDFCD35417AA48B43A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_FlattenAxis_m6502A146E4DA5F62598D8805D3FC398FC27C057C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_HandleProximityEffectConfig_m0251E0982E1B751EA4AD2C89DB76740634D88AD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_HideElementsInInspector_mCFCBB6E028AD50BEA352C069784E5F387CA7A751_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_LinksConfig_m70C982E0F0A30A70BDA148C0D4D1B8820A2E5C8E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_RotateLerpTime_mC588F84B79D3E32ABDD1C4F7F9ED13CE91EFC6E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_RotateStarted_m65FCF05990EDFE9ADCCC4B4761AEE8DE2F0DDDB4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_RotateStopped_mFA4C62275118CAA2DE41AB9796F6C1D22AECAF5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_RotationHandlesConfig_m52250A26B4ADB0D8828D9E7BC73184EC723EBE9A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_ScaleHandlesConfig_mBF6BC0EA3E49B60AACAC3C2009DB7FFC1DAFE51B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_ScaleLerpTime_m64A9BD9664E632FA23E12312300B1733171F3E6A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_ScaleStarted_m1934BA74B13DBAFF9C829D5905CEAD0E857E69AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_ScaleStopped_mA5509127D12B690E5F88D330488378BE9566110C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_SmoothingActive_mB71CB8AD272296E41A4DD742D4A89EF8914D52EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_Target_m4009FB6A881C8E0C506143E88CCAED91AB818F6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_TranslateLerpTime_m691D700B4B71579C44D7A38041740E9DE61F3A28_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_TranslateStarted_mFCD5C4CF7040FA9A3A11422B1E9165F05FBF2647_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_TranslateStopped_mF71778EB36F093ABD75850151088EA10416EAD03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_TranslationHandlesConfig_m654F938AB9F831051606A2B8C83B8531F3ECA255_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoundsControl_set_UniformScaleOnFlattenedAxis_mC1088BCBAE011AB9BA6BC423560DC17ACC761297_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration__ctor_mF04B7ADA8EB25F5E76B0E7E10F25FD06B557261E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration_set_BoxGrabbedMaterial_mBEAF7A4FF3ACC4B91E0EAFA922C0DBFD874D9186_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration_set_BoxMaterial_mBE4D38C9DBEE04F56765B45C53C0C906A4C2B360_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplayConfiguration_set_FlattenAxisDisplayScale_m4986D548327F2791215C5EC33DA60D1D3715585C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_Finalize_m0D26ED6FBC068C40E8D10F466B8DE5FE71E3F67D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ComponentExtensions_EnsureComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mFDBA95177D298C1F56E7358E231E0BD6E41FE103_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ComponentExtensions_EnsureComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_mBDD3C97C8134419B566EE49FB51F8F7032C58092_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mF3F89565A9CEFF85AA1FB27C6EC64BE590DC386B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_mF7FF996C9C093859C2E567CB3991F9DCC003F82F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m94D5E6D9493DE6A574C28A9517C792D607653FE2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisPointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C_m80E189103DE5864614034FD787210273CB188482_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m95241D4825AC44999273D4B749190F26B0DBDDC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisCapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1_m6CF92CB68F3A182E48CD844D126E0CE4C97EC718_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mD65E2552CCFED4D0EC506EE90DE51215D90AEF85_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m4DEC2B4735AA4EA2D41E2D02AF512A49659AD039_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Handle__ctor_mDA1BA835F71CE25BDDC46D8B018D3E80A581D092_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_Awake_mBA7EA6669CB7BC58E84EEB02364C30E66D8A2E35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration__ctor_mFD47044AD031736BC6A57C1A4818AD34A8CD3B6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_ColliderPadding_m4AACE1DBDDD3AE3C65E0CCCB830E6CEE04AC53CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_DrawTetherWhenManipulating_m5DCE89DF3F7394D545845C1168B2F8BCBB7D30BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_HandleGrabbedMaterial_mFAE932021639B0A3773967D91218369433F8F598_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_HandleMaterial_mD9C19602BD432DDF4A4072A611633FAEA4DA8EF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_HandlePrefab_m0EF97AE02589E8CA042A94CA02C110CEE0D84826_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_HandleSize_m5E799B866A78631FCFD2858A35DB409241772A80_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBaseConfiguration_set_HandlesIgnoreCollider_mB9FFE47533900758C50B50376FC10D68F1711CE9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_ForEachProximityObject_mD6BCF7B9B27B4F5DEE95438FC5B36ACD0CFC030B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_GetBaseMaterial_m88B97B30E5AD73ACD6DBCC53020F2981DA6176BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_GetHandleType_m8177C27E6AB9774155877C60DC43412864470F44_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_GetHighlightedMaterial_m8BF838A18D0898D24EA9D4B82CB00B732EF2984B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_GetObjectSize_m421D0908595A7038DE63168CE5A1EA63E9B24483_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_Microsoft_MixedReality_Toolkit_UI_BoundsControl_IProximityEffectObjectProvider_get_ProximityObjectsChanged_m15D1CF7E65D9B50F9768987D3482C13007FE9010_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_get_Handles_m8B4C389F265A8F9C059A1CAAA78E1110D562A961_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesBase_set_IsActive_mA754D0FC3C080A45FF1E08A29E5F3A1DF6A095C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2__ctor_m45D320DDFB94FE9A072F8B4EFE2F9962EAC9281C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2__ctor_mE18CB17C10459280BD5AA5CCBDEDE8B27D20DAA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Key_m64A02B47F623AB0CFA1D4B1CEF2106D000EABD99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Key_mD87156A4F3BA077A63D6B230982BA9821E6E4424_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m0B81DA118CFB41C0D76A10355C4B70315E89D30E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mCC96A2A44A552DDD14AD6C1DA48AC6BD4A96DB2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_Awake_mABDBFE06B90E63B5BD83F0F7A1CA3DFE15012756_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration__ctor_m80967E0FF5F8CBE4F2982541178E0666D79310A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_set_ShowWireFrame_mE2BC5EF0BA778936BFB440DBC9A0941D4F8B4691_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_set_WireframeEdgeRadius_mA57D9B3252A1D63447323BADB31A6861C4D6325C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_set_WireframeMaterial_m1232D070DFCED645CA7CA42F99D6FB8078CA30AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinksConfiguration_set_WireframeShape_m08DF43BA9F5710E6FBE642D0D2E70DC6F9DCF8F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_Finalize_mF09DE0319FBDDF84DC565115F253F5734DF839E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_AddRange_m78456E30423179376F5CD241BF311E83D15DC4D9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m14F5461E32CAE2A5FE0B0E3A9CFFA9D0F2AC3C24_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m58D7C85FC3459259B4B9B182A98C838005A62F3C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mC11D4E37A3B1949DA8BC75B491EB049ED3364B20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mD9F028AEE5C43737BEB50A8DAA8CA939CE314002_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m01914A35E2EDDC103B043CE5204596961BAB9177_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m46592EB68B43BB4C540DEE0D6D05FB29C7DCB10F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Contains_m265DE61D2C5C084052BFD071DAF6B09C193C46E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Remove_mE39D4E9AA5A57AFC5582C742CF0CEA0E79DF304C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m12ABE366DAE5DA1A167EE7F75868147D825B232F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m132A5F71CCDF330F9374885DE091B10AF72D5C84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m2D0FE9D764F15C766E94763597447A5E58A73770_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m6B026913491C4363422E2EA14144C43CA5C11517_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_Finalize_mC2A8A3C3C646BD005C5F9D96859E09F7FF86599A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_GetVisual_mC47AE66595F28612675BBE780D6A42CCC80FC754_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_IsVisible_m6677B58F1E1336A9D3AA56AC6CC7CD4AED400EF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_RecreateVisuals_mA352CE750372B392B144CFB91CB40DFAF931E019_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_UpdateColliderBounds_mDC89FEBD908D628660F87D3202B751CFCA67B128_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_UpdateHandles_m1DFEC16EB8A69A3D693FCB76F4F4AE0AA103A0F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles__ctor_m882A82918E49FABA363BC18E32F39735651BBC78_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_get_BaseConfig_m1CD972447829502A13D5BE142B9F7CBCDFEF2C93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_get_HandlePositionDescription_m52DE2A47DE2EEEA56DBE1046D1530A9B01760960_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_get_IsActive_mE586BAE00D980C689E115879CB24D187AFFACAA6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityAction_1__ctor_m6E1DB7AC7DAA970C8A220D6EB0D002792C7B9B42_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityAction_1__ctor_mE40F217F9A81ED21656F88767AAC6395523ED339_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_AddListener_m3FD24B0D3AD04907870C986E5B49CBE766E89F6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_AddListener_m45B5BEC97C05BB578B1B23FF7156175AB9826D3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_mCB79CAADA85E82A1F2DE6F295514F0E0218CB5FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_RemoveListener_m41F33A1B6E6A9CA12A9123FE8B49695715EB6F0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_RemoveListener_m5732395C2CB531AC2697095A3274423D20441414_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1__ctor_mDF05FAB26872D5FDD63B2D45550515FEC4250F9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1__ctor_mF84792954A024CA251E856E343F8B1239BCD366B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoundsCalculationMethod_tF818ECC4929F4A1A520C4E3405658AD8A131220E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoundsControlActivationType_t531DDCC7556F9127D9836E7166B95397F1E42E1D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* CardinalAxisType_t1C9F1722777B7B38DF4CA251922F466F3D9FE80E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FlattenModeType_tA27BA3CDEB318A91414C61168D76A495EB7EA923_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HandleType_t3824AF1CD7013865F200A5DA592E305BFDA81D55_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HandlesChangedEventType_tD5EAD11071FF022FEE6A41E539A7885FEC078E6A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HideFlags_t30B57DC00548E963A569318C8F4A4123E7447E37_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IReadOnlyList_1_t48BC941DE987F297FFE1C480ECDAACE3428A7AA5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Link_t419BB37400AA583E48363DAB051577447DCEFBAB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Renderer_t0556D67DD582620D1F495627EDE30D03284151F4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TransformFlags_t1BFF9FDB164FC56111295BAD00B86A5DFFD62CFC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* WireframeChangedEventType_t05B98D5C6DC752C9A23BF1E4B00D3EBBF4709DA5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* WireframeType_tF5DE56210FE1A33D93AF3D4E77D659272B63DDFD_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetFaceBottomCentroid_m0CF5D08C3BC9193BCB6F5BF77DB594E5386EF43D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetIndexOfForwardFace_m41D8B49A1C7CC3AD14E72183CE6F9C569C0F84B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetRawBBCorners_mAD4EAB660AF6A6EF50080FB867C905594EA3507C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_UpdateNonAABoundingBoxCornerPositions_m14E072C13FA25DB6BF47FCDCEB1545A925A441CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBoxHelper__ctor_m0151C0BB10D8168C531C8CA83E5A81E89DFDC5FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_Awake_m9E45F7B8E80C7327E6E9A07276EA3ABDEFB89DFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_HighlightWires_m26A4840760D1309E55D14CCC2B9D012339D600D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnBeforeFocusChange_m38D9DB744FB5206EFD211B5BD9CA0103CE6DE34B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnFocusChanged_mF67785DDAA039795A358E462B1019AE9C4C43C8A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_mFDED5A4E496854A33CC7BC543BF6D370FC448C4F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mFB767DA468A30043030D6BA2A0A22CF2C67CC714_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnDisable_m2694A9A5B1E978588EAB05942AE90FB1888135CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnEnable_mF176F98F8FDD9E3E84AB4F4B763A06F59B6FB1D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnPointerDown_mE4B572E04B99E05E04C22658D098975D715609EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnPointerDragged_m696CBB60F4E5E6EF736712EB530495924E435817_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnPointerUp_mB652CDDDFEB7B91AF81827328753993134FEA2EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnSourceDetected_m6EA60CDD59831C15109496F1FAD171BBC0A2A4C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_OnSourceLost_m982F35F5F7541394E0459F632F9EF01FBFFB43EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_UnhighlightWires_m226370DFEF8CA3774EABB14DECBA4AB9A6FAEE2E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_Update_m60059DF72B5B7A1C26B01E2F00C638186B892321_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl__cctor_m20405EADA1552B36A8A26B2E0678896355D448FC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl__ctor_mCF9B439F446FD6896CEDB73D9A225A16B44444BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_Active_mF1EFEA5AD8EDE3F375F3F02186AA2B4FE025DB99_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_BoundsControlActivation_m382FDF56E834DB79959F374DEEEF1B2D25B5A7CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_BoundsCorners_m6EEFF37CB3CCE96CC13388CECFF0BDC7960817CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_BoundsOverride_mCCA125C684C4619F9887AC56C5705E5C774363BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_BoxDisplayConfig_m99405C8E2E8E2578F73070C7EA609E07CE371C55_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_BoxPadding_m8F54172704F3C32C140BF6BD1BF4916DB502649A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_CalculationMethod_m0C25992785C18D02E541E2B30AABB2D56BCC1851_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ConstraintsManager_m5ADDA4878AA81A6DE671D64BA55B91C2B22C8F18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_DebugText_mBF381892A84722509AD6840C37CC58DF98FC7C8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ElasticsManager_m6C35636B9CF49B9279D441A8CD63AF23B9F4984D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_HandleProximityEffectConfig_mC4FCBA442F1666720BD3248E0952E7D49AD6F941_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_HideElementsInInspector_m263F1B3F82854537E62C71C020727972D5895790_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_LinksConfig_m8CF00AAD550D641DDD881D57AF2B7DE491064A2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_RotateLerpTime_mB6FB7AB3E28DA348CFC0ED610BEE54E4F09D11BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_RotationHandlesConfig_m2DFE4BA2151D3FBF577C3B0C40568F9F6EB0979E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577FMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleLerpTime_m078E9848C9A1AFA483489F73464EFF41ADCCA836_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1DMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9CMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_SmoothingActive_m3592C74F9F78738842F5A0C901F9731BB33413AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10FMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TranslateLerpTime_m9F442872B4D9DDBC02754E01FD4A06707FB1AF4A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_TranslationHandlesConfig_m1C163AA7C0E47D2848CF7A8C29BFC3EA2D7B3DA0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_get_WireframeOnly_mECFE6A83DDE44F38B1D5A26C5A80E51DEAEB4A72_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_BoundsControlActivation_mAFD61603C45C5BFA9E6CE1D528D43502F717742E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_BoundsCorners_m3FC0081AB51CEFCE563930DF4B4D9D9EEFB62356_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_BoundsOverride_m488D1FDAE58DBAFCB4D5C0B2E83CCDCF977CA3DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_BoxDisplayConfig_m086A93B1A3538BAFA8526481EF5CF6ED873FFBAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_BoxPadding_mA644395E4F1F032472AB532061F35EEB81425B8F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_CalculationMethod_m76B77F98B10F6A81A3862DF05974666DFE2336FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_ConstraintsManager_mDFF3A01D76B75BB4ADAC2E7CE7BC4D549956AC79_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_DebugText_m24E0841B59E05AA0EBAC8FF7897FC46761F5C371_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_ElasticsManager_m1FE1A82B2ADCDBF828E43A85E8388AE1412157CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_EnableConstraints_m57E3B9579EE731A9AAF185BDFCD35417AA48B43A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_FlattenAxis_m6502A146E4DA5F62598D8805D3FC398FC27C057C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_HandleProximityEffectConfig_m0251E0982E1B751EA4AD2C89DB76740634D88AD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_HideElementsInInspector_mCFCBB6E028AD50BEA352C069784E5F387CA7A751_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_LinksConfig_m70C982E0F0A30A70BDA148C0D4D1B8820A2E5C8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_RotateLerpTime_mC588F84B79D3E32ABDD1C4F7F9ED13CE91EFC6E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_RotateStarted_m65FCF05990EDFE9ADCCC4B4761AEE8DE2F0DDDB4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_RotateStopped_mFA4C62275118CAA2DE41AB9796F6C1D22AECAF5B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_RotationHandlesConfig_m52250A26B4ADB0D8828D9E7BC73184EC723EBE9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_ScaleHandlesConfig_mBF6BC0EA3E49B60AACAC3C2009DB7FFC1DAFE51B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_ScaleLerpTime_m64A9BD9664E632FA23E12312300B1733171F3E6A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_ScaleStarted_m1934BA74B13DBAFF9C829D5905CEAD0E857E69AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_ScaleStopped_mA5509127D12B690E5F88D330488378BE9566110C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_SmoothingActive_mB71CB8AD272296E41A4DD742D4A89EF8914D52EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_Target_m4009FB6A881C8E0C506143E88CCAED91AB818F6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_TranslateLerpTime_m691D700B4B71579C44D7A38041740E9DE61F3A28_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_TranslateStarted_mFCD5C4CF7040FA9A3A11422B1E9165F05FBF2647_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_TranslateStopped_mF71778EB36F093ABD75850151088EA10416EAD03_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_TranslationHandlesConfig_m654F938AB9F831051606A2B8C83B8531F3ECA255_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoundsControl_set_UniformScaleOnFlattenedAxis_mC1088BCBAE011AB9BA6BC423560DC17ACC761297_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration__ctor_mF04B7ADA8EB25F5E76B0E7E10F25FD06B557261E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration_set_BoxGrabbedMaterial_mBEAF7A4FF3ACC4B91E0EAFA922C0DBFD874D9186_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration_set_BoxMaterial_mBE4D38C9DBEE04F56765B45C53C0C906A4C2B360_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplayConfiguration_set_FlattenAxisDisplayScale_m4986D548327F2791215C5EC33DA60D1D3715585C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_Finalize_m0D26ED6FBC068C40E8D10F466B8DE5FE71E3F67D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55CMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Handle__ctor_mDA1BA835F71CE25BDDC46D8B018D3E80A581D092_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_Awake_mBA7EA6669CB7BC58E84EEB02364C30E66D8A2E35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration__ctor_mFD47044AD031736BC6A57C1A4818AD34A8CD3B6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_ColliderPadding_m4AACE1DBDDD3AE3C65E0CCCB830E6CEE04AC53CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_DrawTetherWhenManipulating_m5DCE89DF3F7394D545845C1168B2F8BCBB7D30BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_HandleGrabbedMaterial_mFAE932021639B0A3773967D91218369433F8F598_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_HandleMaterial_mD9C19602BD432DDF4A4072A611633FAEA4DA8EF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_HandlePrefab_m0EF97AE02589E8CA042A94CA02C110CEE0D84826_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_HandleSize_m5E799B866A78631FCFD2858A35DB409241772A80_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBaseConfiguration_set_HandlesIgnoreCollider_mB9FFE47533900758C50B50376FC10D68F1711CE9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_ForEachProximityObject_mD6BCF7B9B27B4F5DEE95438FC5B36ACD0CFC030B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_GetBaseMaterial_m88B97B30E5AD73ACD6DBCC53020F2981DA6176BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_GetHandleType_m8177C27E6AB9774155877C60DC43412864470F44_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_GetHighlightedMaterial_m8BF838A18D0898D24EA9D4B82CB00B732EF2984B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_GetObjectSize_m421D0908595A7038DE63168CE5A1EA63E9B24483_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_Microsoft_MixedReality_Toolkit_UI_BoundsControl_IProximityEffectObjectProvider_get_ProximityObjectsChanged_m15D1CF7E65D9B50F9768987D3482C13007FE9010_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_get_Handles_m8B4C389F265A8F9C059A1CAAA78E1110D562A961_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8DMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesBase_set_IsActive_mA754D0FC3C080A45FF1E08A29E5F3A1DF6A095C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AECMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_Awake_mABDBFE06B90E63B5BD83F0F7A1CA3DFE15012756_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration__ctor_m80967E0FF5F8CBE4F2982541178E0666D79310A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_set_ShowWireFrame_mE2BC5EF0BA778936BFB440DBC9A0941D4F8B4691_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_set_WireframeEdgeRadius_mA57D9B3252A1D63447323BADB31A6861C4D6325C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_set_WireframeMaterial_m1232D070DFCED645CA7CA42F99D6FB8078CA30AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinksConfiguration_set_WireframeShape_m08DF43BA9F5710E6FBE642D0D2E70DC6F9DCF8F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_Finalize_mF09DE0319FBDDF84DC565115F253F5734DF839E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6FMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0DMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_Finalize_mC2A8A3C3C646BD005C5F9D96859E09F7FF86599A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_GetVisual_mC47AE66595F28612675BBE780D6A42CCC80FC754_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_IsVisible_m6677B58F1E1336A9D3AA56AC6CC7CD4AED400EF1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_RecreateVisuals_mA352CE750372B392B144CFB91CB40DFAF931E019_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_UpdateColliderBounds_mDC89FEBD908D628660F87D3202B751CFCA67B128_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_UpdateHandles_m1DFEC16EB8A69A3D693FCB76F4F4AE0AA103A0F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles__ctor_m882A82918E49FABA363BC18E32F39735651BBC78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_get_BaseConfig_m1CD972447829502A13D5BE142B9F7CBCDFEF2C93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_get_HandlePositionDescription_m52DE2A47DE2EEEA56DBE1046D1530A9B01760960_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_get_IsActive_mE586BAE00D980C689E115879CB24D187AFFACAA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ;

struct CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object


// Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper
struct BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3  : public RuntimeObject
{
public:
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face0
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___face0_0;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face1
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___face1_1;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face2
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___face2_2;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face3
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___face3_3;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face4
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___face4_4;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face5
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___face5_5;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::noFaceIndices
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___noFaceIndices_6;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::noFaceVertices
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___noFaceVertices_7;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::face
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___face_8;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::midpoints
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___midpoints_9;
	// System.Collections.Generic.List`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::rawBoundingCorners
	List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___rawBoundingCorners_10;
	// System.Collections.Generic.List`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::worldBoundingCorners
	List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___worldBoundingCorners_11;
	// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::targetBounds
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___targetBounds_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::rawBoundingCornersObtained
	bool ___rawBoundingCornersObtained_13;

public:
	inline static int32_t get_offset_of_face0_0() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face0_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_face0_0() const { return ___face0_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_face0_0() { return &___face0_0; }
	inline void set_face0_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___face0_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face0_0), (void*)value);
	}

	inline static int32_t get_offset_of_face1_1() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face1_1)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_face1_1() const { return ___face1_1; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_face1_1() { return &___face1_1; }
	inline void set_face1_1(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___face1_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face1_1), (void*)value);
	}

	inline static int32_t get_offset_of_face2_2() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face2_2)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_face2_2() const { return ___face2_2; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_face2_2() { return &___face2_2; }
	inline void set_face2_2(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___face2_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face2_2), (void*)value);
	}

	inline static int32_t get_offset_of_face3_3() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face3_3)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_face3_3() const { return ___face3_3; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_face3_3() { return &___face3_3; }
	inline void set_face3_3(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___face3_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face3_3), (void*)value);
	}

	inline static int32_t get_offset_of_face4_4() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face4_4)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_face4_4() const { return ___face4_4; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_face4_4() { return &___face4_4; }
	inline void set_face4_4(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___face4_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face4_4), (void*)value);
	}

	inline static int32_t get_offset_of_face5_5() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face5_5)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_face5_5() const { return ___face5_5; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_face5_5() { return &___face5_5; }
	inline void set_face5_5(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___face5_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face5_5), (void*)value);
	}

	inline static int32_t get_offset_of_noFaceIndices_6() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___noFaceIndices_6)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_noFaceIndices_6() const { return ___noFaceIndices_6; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_noFaceIndices_6() { return &___noFaceIndices_6; }
	inline void set_noFaceIndices_6(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___noFaceIndices_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___noFaceIndices_6), (void*)value);
	}

	inline static int32_t get_offset_of_noFaceVertices_7() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___noFaceVertices_7)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_noFaceVertices_7() const { return ___noFaceVertices_7; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_noFaceVertices_7() { return &___noFaceVertices_7; }
	inline void set_noFaceVertices_7(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___noFaceVertices_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___noFaceVertices_7), (void*)value);
	}

	inline static int32_t get_offset_of_face_8() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___face_8)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_face_8() const { return ___face_8; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_face_8() { return &___face_8; }
	inline void set_face_8(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___face_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___face_8), (void*)value);
	}

	inline static int32_t get_offset_of_midpoints_9() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___midpoints_9)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_midpoints_9() const { return ___midpoints_9; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_midpoints_9() { return &___midpoints_9; }
	inline void set_midpoints_9(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___midpoints_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___midpoints_9), (void*)value);
	}

	inline static int32_t get_offset_of_rawBoundingCorners_10() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___rawBoundingCorners_10)); }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * get_rawBoundingCorners_10() const { return ___rawBoundingCorners_10; }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 ** get_address_of_rawBoundingCorners_10() { return &___rawBoundingCorners_10; }
	inline void set_rawBoundingCorners_10(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * value)
	{
		___rawBoundingCorners_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawBoundingCorners_10), (void*)value);
	}

	inline static int32_t get_offset_of_worldBoundingCorners_11() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___worldBoundingCorners_11)); }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * get_worldBoundingCorners_11() const { return ___worldBoundingCorners_11; }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 ** get_address_of_worldBoundingCorners_11() { return &___worldBoundingCorners_11; }
	inline void set_worldBoundingCorners_11(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * value)
	{
		___worldBoundingCorners_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___worldBoundingCorners_11), (void*)value);
	}

	inline static int32_t get_offset_of_targetBounds_12() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___targetBounds_12)); }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * get_targetBounds_12() const { return ___targetBounds_12; }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA ** get_address_of_targetBounds_12() { return &___targetBounds_12; }
	inline void set_targetBounds_12(BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * value)
	{
		___targetBounds_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___targetBounds_12), (void*)value);
	}

	inline static int32_t get_offset_of_rawBoundingCornersObtained_13() { return static_cast<int32_t>(offsetof(BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3, ___rawBoundingCornersObtained_13)); }
	inline bool get_rawBoundingCornersObtained_13() const { return ___rawBoundingCornersObtained_13; }
	inline bool* get_address_of_rawBoundingCornersObtained_13() { return &___rawBoundingCornersObtained_13; }
	inline void set_rawBoundingCornersObtained_13(bool value)
	{
		___rawBoundingCornersObtained_13 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase
struct HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395  : public RuntimeObject
{
public:
	// System.Collections.Generic.List`1<UnityEngine.Transform> Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::handles
	List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___handles_1;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::highlightedHandle
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___highlightedHandle_2;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityObjectsChangedEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::objectsChangedEvent
	ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * ___objectsChangedEvent_3;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::isActive
	bool ___isActive_4;

public:
	inline static int32_t get_offset_of_handles_1() { return static_cast<int32_t>(offsetof(HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395, ___handles_1)); }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * get_handles_1() const { return ___handles_1; }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 ** get_address_of_handles_1() { return &___handles_1; }
	inline void set_handles_1(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * value)
	{
		___handles_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handles_1), (void*)value);
	}

	inline static int32_t get_offset_of_highlightedHandle_2() { return static_cast<int32_t>(offsetof(HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395, ___highlightedHandle_2)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_highlightedHandle_2() const { return ___highlightedHandle_2; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_highlightedHandle_2() { return &___highlightedHandle_2; }
	inline void set_highlightedHandle_2(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___highlightedHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___highlightedHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_objectsChangedEvent_3() { return static_cast<int32_t>(offsetof(HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395, ___objectsChangedEvent_3)); }
	inline ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * get_objectsChangedEvent_3() const { return ___objectsChangedEvent_3; }
	inline ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 ** get_address_of_objectsChangedEvent_3() { return &___objectsChangedEvent_3; }
	inline void set_objectsChangedEvent_3(ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * value)
	{
		___objectsChangedEvent_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___objectsChangedEvent_3), (void*)value);
	}

	inline static int32_t get_offset_of_isActive_4() { return static_cast<int32_t>(offsetof(HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395, ___isActive_4)); }
	inline bool get_isActive_4() const { return ___isActive_4; }
	inline bool* get_address_of_isActive_4() { return &___isActive_4; }
	inline void set_isActive_4(bool value)
	{
		___isActive_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect
struct ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::config
	ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * ___config_0;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider,System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect/ObjectProximityInfo>> Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::registeredObjects
	Dictionary_2_t587B8CCC520DDFB4425E256FE0FCBE3132E548EF * ___registeredObjects_1;
	// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::proximityPointers
	HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 * ___proximityPointers_2;
	// System.Collections.Generic.List`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::proximityPoints
	List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___proximityPoints_3;

public:
	inline static int32_t get_offset_of_config_0() { return static_cast<int32_t>(offsetof(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34, ___config_0)); }
	inline ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * get_config_0() const { return ___config_0; }
	inline ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 ** get_address_of_config_0() { return &___config_0; }
	inline void set_config_0(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * value)
	{
		___config_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___config_0), (void*)value);
	}

	inline static int32_t get_offset_of_registeredObjects_1() { return static_cast<int32_t>(offsetof(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34, ___registeredObjects_1)); }
	inline Dictionary_2_t587B8CCC520DDFB4425E256FE0FCBE3132E548EF * get_registeredObjects_1() const { return ___registeredObjects_1; }
	inline Dictionary_2_t587B8CCC520DDFB4425E256FE0FCBE3132E548EF ** get_address_of_registeredObjects_1() { return &___registeredObjects_1; }
	inline void set_registeredObjects_1(Dictionary_2_t587B8CCC520DDFB4425E256FE0FCBE3132E548EF * value)
	{
		___registeredObjects_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___registeredObjects_1), (void*)value);
	}

	inline static int32_t get_offset_of_proximityPointers_2() { return static_cast<int32_t>(offsetof(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34, ___proximityPointers_2)); }
	inline HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 * get_proximityPointers_2() const { return ___proximityPointers_2; }
	inline HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 ** get_address_of_proximityPointers_2() { return &___proximityPointers_2; }
	inline void set_proximityPointers_2(HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 * value)
	{
		___proximityPointers_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___proximityPointers_2), (void*)value);
	}

	inline static int32_t get_offset_of_proximityPoints_3() { return static_cast<int32_t>(offsetof(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34, ___proximityPoints_3)); }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * get_proximityPoints_3() const { return ___proximityPoints_3; }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 ** get_address_of_proximityPoints_3() { return &___proximityPoints_3; }
	inline void set_proximityPoints_3(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * value)
	{
		___proximityPoints_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___proximityPoints_3), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils
struct VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18  : public RuntimeObject
{
public:

public:
};

struct VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::EdgeAxisType
	CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* ___EdgeAxisType_0;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::FaceAxisType
	CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* ___FaceAxisType_1;

public:
	inline static int32_t get_offset_of_EdgeAxisType_0() { return static_cast<int32_t>(offsetof(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields, ___EdgeAxisType_0)); }
	inline CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* get_EdgeAxisType_0() const { return ___EdgeAxisType_0; }
	inline CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161** get_address_of_EdgeAxisType_0() { return &___EdgeAxisType_0; }
	inline void set_EdgeAxisType_0(CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* value)
	{
		___EdgeAxisType_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EdgeAxisType_0), (void*)value);
	}

	inline static int32_t get_offset_of_FaceAxisType_1() { return static_cast<int32_t>(offsetof(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields, ___FaceAxisType_1)); }
	inline CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* get_FaceAxisType_1() const { return ___FaceAxisType_1; }
	inline CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161** get_address_of_FaceAxisType_1() { return &___FaceAxisType_1; }
	inline void set_FaceAxisType_1(CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* value)
	{
		___FaceAxisType_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FaceAxisType_1), (void*)value);
	}
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100, ____items_1)); }
	inline IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* get__items_1() const { return ____items_1; }
	inline IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100_StaticFields, ____emptyArray_5)); }
	inline IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* get__emptyArray_5() const { return ____emptyArray_5; }
	inline IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct List_1_t74E48C60E247472C3845D62B1372777193ED6D09  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____items_1)); }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* get__items_1() const { return ____items_1; }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t74E48C60E247472C3845D62B1372777193ED6D09_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09_StaticFields, ____emptyArray_5)); }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* get__emptyArray_5() const { return ____emptyArray_5; }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>
struct List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1, ____items_1)); }
	inline LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45* get__items_1() const { return ____items_1; }
	inline LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1_StaticFields, ____emptyArray_5)); }
	inline LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45* get__emptyArray_5() const { return ____emptyArray_5; }
	inline LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(LinkU5BU5D_t4AD47DE0153964B07BE6A145277B91F532108D45* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226, ____items_1)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__items_1() const { return ____items_1; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226_StaticFields, ____emptyArray_5)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__emptyArray_5() const { return ____emptyArray_5; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____items_1)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__items_1() const { return ____items_1; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields, ____emptyArray_5)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<UnityEngine.Transform>
struct List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91, ____items_1)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get__items_1() const { return ____items_1; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91_StaticFields, ____emptyArray_5)); }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* get__emptyArray_5() const { return ____emptyArray_5; }
	inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<UnityEngine.Vector3>
struct List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5, ____items_1)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get__items_1() const { return ____items_1; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5_StaticFields, ____emptyArray_5)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get__emptyArray_5() const { return ____emptyArray_5; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// UnityEngine.Events.UnityEventBase
struct UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16
struct __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC 
{
public:
	union
	{
		struct
		{
			union
			{
			};
		};
		uint8_t __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC__padding[16];
	};

public:
};


// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=24
struct __StaticArrayInitTypeSizeU3D24_t14E17D587DCFCF54B711E73538E107215E074406 
{
public:
	union
	{
		struct
		{
			union
			{
			};
		};
		uint8_t __StaticArrayInitTypeSizeU3D24_t14E17D587DCFCF54B711E73538E107215E074406__padding[24];
	};

public:
};


// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=48
struct __StaticArrayInitTypeSizeU3D48_tA080233C99B95D221ECB9F8510AA5AA8A2D82AD5 
{
public:
	union
	{
		struct
		{
			union
			{
			};
		};
		uint8_t __StaticArrayInitTypeSizeU3D48_tA080233C99B95D221ECB9F8510AA5AA8A2D82AD5__padding[48];
	};

public:
};


// Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent
struct QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA 
{
public:
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent::SnapPoints
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___SnapPoints_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent::RepeatSnapPoints
	bool ___RepeatSnapPoints_1;
	// System.Single Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent::SnapRadius
	float ___SnapRadius_2;

public:
	inline static int32_t get_offset_of_SnapPoints_0() { return static_cast<int32_t>(offsetof(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA, ___SnapPoints_0)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_SnapPoints_0() const { return ___SnapPoints_0; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_SnapPoints_0() { return &___SnapPoints_0; }
	inline void set_SnapPoints_0(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___SnapPoints_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SnapPoints_0), (void*)value);
	}

	inline static int32_t get_offset_of_RepeatSnapPoints_1() { return static_cast<int32_t>(offsetof(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA, ___RepeatSnapPoints_1)); }
	inline bool get_RepeatSnapPoints_1() const { return ___RepeatSnapPoints_1; }
	inline bool* get_address_of_RepeatSnapPoints_1() { return &___RepeatSnapPoints_1; }
	inline void set_RepeatSnapPoints_1(bool value)
	{
		___RepeatSnapPoints_1 = value;
	}

	inline static int32_t get_offset_of_SnapRadius_2() { return static_cast<int32_t>(offsetof(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA, ___SnapRadius_2)); }
	inline float get_SnapRadius_2() const { return ___SnapRadius_2; }
	inline float* get_address_of_SnapRadius_2() { return &___SnapRadius_2; }
	inline void set_SnapRadius_2(float value)
	{
		___SnapRadius_2 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent
struct QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_0;
	int32_t ___RepeatSnapPoints_1;
	float ___SnapRadius_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent
struct QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_0;
	int32_t ___RepeatSnapPoints_1;
	float ___SnapRadius_2;
};

// Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles
struct PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6  : public HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395
{
public:
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::config
	PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * ___config_5;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::<HandlePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CHandlePositionsU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_config_5() { return static_cast<int32_t>(offsetof(PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6, ___config_5)); }
	inline PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * get_config_5() const { return ___config_5; }
	inline PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA ** get_address_of_config_5() { return &___config_5; }
	inline void set_config_5(PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * value)
	{
		___config_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___config_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CHandlePositionsU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6, ___U3CHandlePositionsU3Ek__BackingField_6)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CHandlePositionsU3Ek__BackingField_6() const { return ___U3CHandlePositionsU3Ek__BackingField_6; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CHandlePositionsU3Ek__BackingField_6() { return &___U3CHandlePositionsU3Ek__BackingField_6; }
	inline void set_U3CHandlePositionsU3Ek__BackingField_6(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CHandlePositionsU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CHandlePositionsU3Ek__BackingField_6), (void*)value);
	}
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>
struct KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE, ___key_0)); }
	inline RuntimeObject * get_key_0() const { return ___key_0; }
	inline RuntimeObject ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE, ___value_1)); }
	inline RuntimeObject * get_value_1() const { return ___value_1; }
	inline RuntimeObject ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Collider>
struct KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F, ___key_0)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_key_0() const { return ___key_0; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F, ___value_1)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_value_1() const { return ___value_1; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>
struct Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 
{
public:
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::list
	List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * ___list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::version
	int32_t ___version_2;
	// T System.Collections.Generic.List`1/Enumerator::current
	Link_t419BB37400AA583E48363DAB051577447DCEFBAB * ___current_3;

public:
	inline static int32_t get_offset_of_list_0() { return static_cast<int32_t>(offsetof(Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979, ___list_0)); }
	inline List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * get_list_0() const { return ___list_0; }
	inline List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 ** get_address_of_list_0() { return &___list_0; }
	inline void set_list_0(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * value)
	{
		___list_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___list_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979, ___current_3)); }
	inline Link_t419BB37400AA583E48363DAB051577447DCEFBAB * get_current_3() const { return ___current_3; }
	inline Link_t419BB37400AA583E48363DAB051577447DCEFBAB ** get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(Link_t419BB37400AA583E48363DAB051577447DCEFBAB * value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___current_3), (void*)value);
	}
};


// System.Collections.Generic.List`1/Enumerator<System.Object>
struct Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD 
{
public:
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::list
	List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * ___list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::version
	int32_t ___version_2;
	// T System.Collections.Generic.List`1/Enumerator::current
	RuntimeObject * ___current_3;

public:
	inline static int32_t get_offset_of_list_0() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___list_0)); }
	inline List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * get_list_0() const { return ___list_0; }
	inline List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D ** get_address_of_list_0() { return &___list_0; }
	inline void set_list_0(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * value)
	{
		___list_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___list_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___current_3)); }
	inline RuntimeObject * get_current_3() const { return ___current_3; }
	inline RuntimeObject ** get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(RuntimeObject * value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___current_3), (void*)value);
	}
};


// System.Collections.Generic.List`1/Enumerator<UnityEngine.Transform>
struct Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 
{
public:
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::list
	List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::version
	int32_t ___version_2;
	// T System.Collections.Generic.List`1/Enumerator::current
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___current_3;

public:
	inline static int32_t get_offset_of_list_0() { return static_cast<int32_t>(offsetof(Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85, ___list_0)); }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * get_list_0() const { return ___list_0; }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 ** get_address_of_list_0() { return &___list_0; }
	inline void set_list_0(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * value)
	{
		___list_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___list_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85, ___current_3)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_current_3() const { return ___current_3; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___current_3), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>
struct UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>
struct UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider>
struct UnityEvent_1_t121BC5B77CF53C74E89A1028818B86C3F187FFC8  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t121BC5B77CF53C74E89A1028818B86C3F187FFC8, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>
struct UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.LayerMask
struct LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 
{
public:
	// System.Int32 UnityEngine.LayerMask::m_Mask
	int32_t ___m_Mask_0;

public:
	inline static int32_t get_offset_of_m_Mask_0() { return static_cast<int32_t>(offsetof(LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0, ___m_Mask_0)); }
	inline int32_t get_m_Mask_0() const { return ___m_Mask_0; }
	inline int32_t* get_address_of_m_Mask_0() { return &___m_Mask_0; }
	inline void set_m_Mask_0(int32_t value)
	{
		___m_Mask_0 = value;
	}
};


// UnityEngine.Matrix4x4
struct Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA 
{
public:
	// System.Single UnityEngine.Matrix4x4::m00
	float ___m00_0;
	// System.Single UnityEngine.Matrix4x4::m10
	float ___m10_1;
	// System.Single UnityEngine.Matrix4x4::m20
	float ___m20_2;
	// System.Single UnityEngine.Matrix4x4::m30
	float ___m30_3;
	// System.Single UnityEngine.Matrix4x4::m01
	float ___m01_4;
	// System.Single UnityEngine.Matrix4x4::m11
	float ___m11_5;
	// System.Single UnityEngine.Matrix4x4::m21
	float ___m21_6;
	// System.Single UnityEngine.Matrix4x4::m31
	float ___m31_7;
	// System.Single UnityEngine.Matrix4x4::m02
	float ___m02_8;
	// System.Single UnityEngine.Matrix4x4::m12
	float ___m12_9;
	// System.Single UnityEngine.Matrix4x4::m22
	float ___m22_10;
	// System.Single UnityEngine.Matrix4x4::m32
	float ___m32_11;
	// System.Single UnityEngine.Matrix4x4::m03
	float ___m03_12;
	// System.Single UnityEngine.Matrix4x4::m13
	float ___m13_13;
	// System.Single UnityEngine.Matrix4x4::m23
	float ___m23_14;
	// System.Single UnityEngine.Matrix4x4::m33
	float ___m33_15;

public:
	inline static int32_t get_offset_of_m00_0() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m00_0)); }
	inline float get_m00_0() const { return ___m00_0; }
	inline float* get_address_of_m00_0() { return &___m00_0; }
	inline void set_m00_0(float value)
	{
		___m00_0 = value;
	}

	inline static int32_t get_offset_of_m10_1() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m10_1)); }
	inline float get_m10_1() const { return ___m10_1; }
	inline float* get_address_of_m10_1() { return &___m10_1; }
	inline void set_m10_1(float value)
	{
		___m10_1 = value;
	}

	inline static int32_t get_offset_of_m20_2() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m20_2)); }
	inline float get_m20_2() const { return ___m20_2; }
	inline float* get_address_of_m20_2() { return &___m20_2; }
	inline void set_m20_2(float value)
	{
		___m20_2 = value;
	}

	inline static int32_t get_offset_of_m30_3() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m30_3)); }
	inline float get_m30_3() const { return ___m30_3; }
	inline float* get_address_of_m30_3() { return &___m30_3; }
	inline void set_m30_3(float value)
	{
		___m30_3 = value;
	}

	inline static int32_t get_offset_of_m01_4() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m01_4)); }
	inline float get_m01_4() const { return ___m01_4; }
	inline float* get_address_of_m01_4() { return &___m01_4; }
	inline void set_m01_4(float value)
	{
		___m01_4 = value;
	}

	inline static int32_t get_offset_of_m11_5() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m11_5)); }
	inline float get_m11_5() const { return ___m11_5; }
	inline float* get_address_of_m11_5() { return &___m11_5; }
	inline void set_m11_5(float value)
	{
		___m11_5 = value;
	}

	inline static int32_t get_offset_of_m21_6() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m21_6)); }
	inline float get_m21_6() const { return ___m21_6; }
	inline float* get_address_of_m21_6() { return &___m21_6; }
	inline void set_m21_6(float value)
	{
		___m21_6 = value;
	}

	inline static int32_t get_offset_of_m31_7() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m31_7)); }
	inline float get_m31_7() const { return ___m31_7; }
	inline float* get_address_of_m31_7() { return &___m31_7; }
	inline void set_m31_7(float value)
	{
		___m31_7 = value;
	}

	inline static int32_t get_offset_of_m02_8() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m02_8)); }
	inline float get_m02_8() const { return ___m02_8; }
	inline float* get_address_of_m02_8() { return &___m02_8; }
	inline void set_m02_8(float value)
	{
		___m02_8 = value;
	}

	inline static int32_t get_offset_of_m12_9() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m12_9)); }
	inline float get_m12_9() const { return ___m12_9; }
	inline float* get_address_of_m12_9() { return &___m12_9; }
	inline void set_m12_9(float value)
	{
		___m12_9 = value;
	}

	inline static int32_t get_offset_of_m22_10() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m22_10)); }
	inline float get_m22_10() const { return ___m22_10; }
	inline float* get_address_of_m22_10() { return &___m22_10; }
	inline void set_m22_10(float value)
	{
		___m22_10 = value;
	}

	inline static int32_t get_offset_of_m32_11() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m32_11)); }
	inline float get_m32_11() const { return ___m32_11; }
	inline float* get_address_of_m32_11() { return &___m32_11; }
	inline void set_m32_11(float value)
	{
		___m32_11 = value;
	}

	inline static int32_t get_offset_of_m03_12() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m03_12)); }
	inline float get_m03_12() const { return ___m03_12; }
	inline float* get_address_of_m03_12() { return &___m03_12; }
	inline void set_m03_12(float value)
	{
		___m03_12 = value;
	}

	inline static int32_t get_offset_of_m13_13() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m13_13)); }
	inline float get_m13_13() const { return ___m13_13; }
	inline float* get_address_of_m13_13() { return &___m13_13; }
	inline void set_m13_13(float value)
	{
		___m13_13 = value;
	}

	inline static int32_t get_offset_of_m23_14() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m23_14)); }
	inline float get_m23_14() const { return ___m23_14; }
	inline float* get_address_of_m23_14() { return &___m23_14; }
	inline void set_m23_14(float value)
	{
		___m23_14 = value;
	}

	inline static int32_t get_offset_of_m33_15() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m33_15)); }
	inline float get_m33_15() const { return ___m33_15; }
	inline float* get_address_of_m33_15() { return &___m33_15; }
	inline void set_m33_15(float value)
	{
		___m33_15 = value;
	}
};

struct Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields
{
public:
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::zeroMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___zeroMatrix_16;
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::identityMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___identityMatrix_17;

public:
	inline static int32_t get_offset_of_zeroMatrix_16() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields, ___zeroMatrix_16)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_zeroMatrix_16() const { return ___zeroMatrix_16; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_zeroMatrix_16() { return &___zeroMatrix_16; }
	inline void set_zeroMatrix_16(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___zeroMatrix_16 = value;
	}

	inline static int32_t get_offset_of_identityMatrix_17() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields, ___identityMatrix_17)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_identityMatrix_17() const { return ___identityMatrix_17; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_identityMatrix_17() { return &___identityMatrix_17; }
	inline void set_identityMatrix_17(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___identityMatrix_17 = value;
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// <PrivateImplementationDetails>
struct U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765  : public RuntimeObject
{
public:

public:
};

struct U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields
{
public:
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::2DB493A5A27752CD4B12969E50B0EB94CB3C8EE7
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___2DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::3AF033CF3264B808760C3A2CDCFBD390AF81C8BE
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::42CFCBAA436AAD284E2C9997397BD83197DEDFA1
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___42CFCBAA436AAD284E2C9997397BD83197DEDFA1_2;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::64792C5DA8315C67B036FB03C56F50B02A7B97F7
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___64792C5DA8315C67B036FB03C56F50B02A7B97F7_4;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::7E9171A585973EF4D4AC8A72EFB56AD9F0906A3D
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___7E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=48 <PrivateImplementationDetails>::8F9745321FB6DB37E637DB2B3AC0C65EDD88FC50
	__StaticArrayInitTypeSizeU3D48_tA080233C99B95D221ECB9F8510AA5AA8A2D82AD5  ___8F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::93A73E5548F18182D27703F6B878D761F8AC01FE
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___93A73E5548F18182D27703F6B878D761F8AC01FE_8;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::A5220740A843E2651AB2607371076B212DFF48E6
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___A5220740A843E2651AB2607371076B212DFF48E6_9;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::CD46CDCC7BDB27F008C934B0C63D21111452F976
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___CD46CDCC7BDB27F008C934B0C63D21111452F976_11;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=16 <PrivateImplementationDetails>::CF55838B41489BA73EB8B45F930C50281E3A487A
	__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  ___CF55838B41489BA73EB8B45F930C50281E3A487A_12;
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=24 <PrivateImplementationDetails>::D72172177518732AAED3F0F3CE771A3EB096E902
	__StaticArrayInitTypeSizeU3D24_t14E17D587DCFCF54B711E73538E107215E074406  ___D72172177518732AAED3F0F3CE771A3EB096E902_13;

public:
	inline static int32_t get_offset_of_U32DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___2DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U32DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0() const { return ___2DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U32DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0() { return &___2DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0; }
	inline void set_U32DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___2DB493A5A27752CD4B12969E50B0EB94CB3C8EE7_0 = value;
	}

	inline static int32_t get_offset_of_U33AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U33AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1() const { return ___3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U33AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1() { return &___3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1; }
	inline void set_U33AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1 = value;
	}

	inline static int32_t get_offset_of_U342CFCBAA436AAD284E2C9997397BD83197DEDFA1_2() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___42CFCBAA436AAD284E2C9997397BD83197DEDFA1_2)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U342CFCBAA436AAD284E2C9997397BD83197DEDFA1_2() const { return ___42CFCBAA436AAD284E2C9997397BD83197DEDFA1_2; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U342CFCBAA436AAD284E2C9997397BD83197DEDFA1_2() { return &___42CFCBAA436AAD284E2C9997397BD83197DEDFA1_2; }
	inline void set_U342CFCBAA436AAD284E2C9997397BD83197DEDFA1_2(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___42CFCBAA436AAD284E2C9997397BD83197DEDFA1_2 = value;
	}

	inline static int32_t get_offset_of_U35C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U35C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3() const { return ___5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U35C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3() { return &___5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3; }
	inline void set_U35C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3 = value;
	}

	inline static int32_t get_offset_of_U364792C5DA8315C67B036FB03C56F50B02A7B97F7_4() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___64792C5DA8315C67B036FB03C56F50B02A7B97F7_4)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U364792C5DA8315C67B036FB03C56F50B02A7B97F7_4() const { return ___64792C5DA8315C67B036FB03C56F50B02A7B97F7_4; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U364792C5DA8315C67B036FB03C56F50B02A7B97F7_4() { return &___64792C5DA8315C67B036FB03C56F50B02A7B97F7_4; }
	inline void set_U364792C5DA8315C67B036FB03C56F50B02A7B97F7_4(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___64792C5DA8315C67B036FB03C56F50B02A7B97F7_4 = value;
	}

	inline static int32_t get_offset_of_U378560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U378560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5() const { return ___78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U378560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5() { return &___78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5; }
	inline void set_U378560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5 = value;
	}

	inline static int32_t get_offset_of_U37E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___7E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U37E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6() const { return ___7E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U37E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6() { return &___7E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6; }
	inline void set_U37E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___7E9171A585973EF4D4AC8A72EFB56AD9F0906A3D_6 = value;
	}

	inline static int32_t get_offset_of_U38F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___8F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7)); }
	inline __StaticArrayInitTypeSizeU3D48_tA080233C99B95D221ECB9F8510AA5AA8A2D82AD5  get_U38F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7() const { return ___8F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7; }
	inline __StaticArrayInitTypeSizeU3D48_tA080233C99B95D221ECB9F8510AA5AA8A2D82AD5 * get_address_of_U38F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7() { return &___8F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7; }
	inline void set_U38F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7(__StaticArrayInitTypeSizeU3D48_tA080233C99B95D221ECB9F8510AA5AA8A2D82AD5  value)
	{
		___8F9745321FB6DB37E637DB2B3AC0C65EDD88FC50_7 = value;
	}

	inline static int32_t get_offset_of_U393A73E5548F18182D27703F6B878D761F8AC01FE_8() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___93A73E5548F18182D27703F6B878D761F8AC01FE_8)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_U393A73E5548F18182D27703F6B878D761F8AC01FE_8() const { return ___93A73E5548F18182D27703F6B878D761F8AC01FE_8; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_U393A73E5548F18182D27703F6B878D761F8AC01FE_8() { return &___93A73E5548F18182D27703F6B878D761F8AC01FE_8; }
	inline void set_U393A73E5548F18182D27703F6B878D761F8AC01FE_8(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___93A73E5548F18182D27703F6B878D761F8AC01FE_8 = value;
	}

	inline static int32_t get_offset_of_A5220740A843E2651AB2607371076B212DFF48E6_9() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___A5220740A843E2651AB2607371076B212DFF48E6_9)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_A5220740A843E2651AB2607371076B212DFF48E6_9() const { return ___A5220740A843E2651AB2607371076B212DFF48E6_9; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_A5220740A843E2651AB2607371076B212DFF48E6_9() { return &___A5220740A843E2651AB2607371076B212DFF48E6_9; }
	inline void set_A5220740A843E2651AB2607371076B212DFF48E6_9(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___A5220740A843E2651AB2607371076B212DFF48E6_9 = value;
	}

	inline static int32_t get_offset_of_C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10() const { return ___C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10() { return &___C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10; }
	inline void set_C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___C9E3D331C8CC7E17B017EC19E05F5868E4A2D00B_10 = value;
	}

	inline static int32_t get_offset_of_CD46CDCC7BDB27F008C934B0C63D21111452F976_11() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___CD46CDCC7BDB27F008C934B0C63D21111452F976_11)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_CD46CDCC7BDB27F008C934B0C63D21111452F976_11() const { return ___CD46CDCC7BDB27F008C934B0C63D21111452F976_11; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_CD46CDCC7BDB27F008C934B0C63D21111452F976_11() { return &___CD46CDCC7BDB27F008C934B0C63D21111452F976_11; }
	inline void set_CD46CDCC7BDB27F008C934B0C63D21111452F976_11(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___CD46CDCC7BDB27F008C934B0C63D21111452F976_11 = value;
	}

	inline static int32_t get_offset_of_CF55838B41489BA73EB8B45F930C50281E3A487A_12() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___CF55838B41489BA73EB8B45F930C50281E3A487A_12)); }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  get_CF55838B41489BA73EB8B45F930C50281E3A487A_12() const { return ___CF55838B41489BA73EB8B45F930C50281E3A487A_12; }
	inline __StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC * get_address_of_CF55838B41489BA73EB8B45F930C50281E3A487A_12() { return &___CF55838B41489BA73EB8B45F930C50281E3A487A_12; }
	inline void set_CF55838B41489BA73EB8B45F930C50281E3A487A_12(__StaticArrayInitTypeSizeU3D16_tB97E7CED14B76D662D8444D99DFC7AA4251D25AC  value)
	{
		___CF55838B41489BA73EB8B45F930C50281E3A487A_12 = value;
	}

	inline static int32_t get_offset_of_D72172177518732AAED3F0F3CE771A3EB096E902_13() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765_StaticFields, ___D72172177518732AAED3F0F3CE771A3EB096E902_13)); }
	inline __StaticArrayInitTypeSizeU3D24_t14E17D587DCFCF54B711E73538E107215E074406  get_D72172177518732AAED3F0F3CE771A3EB096E902_13() const { return ___D72172177518732AAED3F0F3CE771A3EB096E902_13; }
	inline __StaticArrayInitTypeSizeU3D24_t14E17D587DCFCF54B711E73538E107215E074406 * get_address_of_D72172177518732AAED3F0F3CE771A3EB096E902_13() { return &___D72172177518732AAED3F0F3CE771A3EB096E902_13; }
	inline void set_D72172177518732AAED3F0F3CE771A3EB096E902_13(__StaticArrayInitTypeSizeU3D24_t14E17D587DCFCF54B711E73538E107215E074406  value)
	{
		___D72172177518732AAED3F0F3CE771A3EB096E902_13 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.CursorContextInfo/CursorAction
struct CursorAction_tBD2E3C0CF21665E05AA0D8380F5ED0E0986ADA0B 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.CursorContextInfo/CursorAction::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CursorAction_tBD2E3C0CF21665E05AA0D8380F5ED0E0986ADA0B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<OldFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3COldFocusedObjectU3Ek__BackingField_3;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<NewFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CNewFocusedObjectU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CPointerU3Ek__BackingField_2)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_2() const { return ___U3CPointerU3Ek__BackingField_2; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_2() { return &___U3CPointerU3Ek__BackingField_2; }
	inline void set_U3CPointerU3Ek__BackingField_2(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3COldFocusedObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3COldFocusedObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3COldFocusedObjectU3Ek__BackingField_3() const { return ___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3COldFocusedObjectU3Ek__BackingField_3() { return &___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline void set_U3COldFocusedObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3COldFocusedObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3COldFocusedObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CNewFocusedObjectU3Ek__BackingField_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CNewFocusedObjectU3Ek__BackingField_4() const { return ___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return &___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline void set_U3CNewFocusedObjectU3Ek__BackingField_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CNewFocusedObjectU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNewFocusedObjectU3Ek__BackingField_4), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::barycentricCoordinate
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::distance
	float ___distance_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::triangleIndex
	int32_t ___triangleIndex_4;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord2
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::lightmapCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::raycastValid
	bool ___raycastValid_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::collider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;

public:
	inline static int32_t get_offset_of_point_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_point_0() const { return ___point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_point_0() { return &___point_0; }
	inline void set_point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___point_0 = value;
	}

	inline static int32_t get_offset_of_normal_1() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_normal_1() const { return ___normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_normal_1() { return &___normal_1; }
	inline void set_normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___normal_1 = value;
	}

	inline static int32_t get_offset_of_barycentricCoordinate_2() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___barycentricCoordinate_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_barycentricCoordinate_2() const { return ___barycentricCoordinate_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_barycentricCoordinate_2() { return &___barycentricCoordinate_2; }
	inline void set_barycentricCoordinate_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___barycentricCoordinate_2 = value;
	}

	inline static int32_t get_offset_of_distance_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___distance_3)); }
	inline float get_distance_3() const { return ___distance_3; }
	inline float* get_address_of_distance_3() { return &___distance_3; }
	inline void set_distance_3(float value)
	{
		___distance_3 = value;
	}

	inline static int32_t get_offset_of_triangleIndex_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___triangleIndex_4)); }
	inline int32_t get_triangleIndex_4() const { return ___triangleIndex_4; }
	inline int32_t* get_address_of_triangleIndex_4() { return &___triangleIndex_4; }
	inline void set_triangleIndex_4(int32_t value)
	{
		___triangleIndex_4 = value;
	}

	inline static int32_t get_offset_of_textureCoord_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord_5() const { return ___textureCoord_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord_5() { return &___textureCoord_5; }
	inline void set_textureCoord_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord_5 = value;
	}

	inline static int32_t get_offset_of_textureCoord2_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord2_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord2_6() const { return ___textureCoord2_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord2_6() { return &___textureCoord2_6; }
	inline void set_textureCoord2_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord2_6 = value;
	}

	inline static int32_t get_offset_of_transform_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___transform_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_7() const { return ___transform_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_7() { return &___transform_7; }
	inline void set_transform_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_7), (void*)value);
	}

	inline static int32_t get_offset_of_lightmapCoord_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___lightmapCoord_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lightmapCoord_8() const { return ___lightmapCoord_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lightmapCoord_8() { return &___lightmapCoord_8; }
	inline void set_lightmapCoord_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lightmapCoord_8 = value;
	}

	inline static int32_t get_offset_of_raycastValid_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___raycastValid_9)); }
	inline bool get_raycastValid_9() const { return ___raycastValid_9; }
	inline bool* get_address_of_raycastValid_9() { return &___raycastValid_9; }
	inline void set_raycastValid_9(bool value)
	{
		___raycastValid_9 = value;
	}

	inline static int32_t get_offset_of_collider_10() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___collider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_collider_10() const { return ___collider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_collider_10() { return &___collider_10; }
	inline void set_collider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___collider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___collider_10), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};

// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent
struct PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7  : public UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/BoundingBoxActivationType
struct BoundingBoxActivationType_tFFB15738CA408A08C9F4BAB0D23A5C37DED39EDA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/BoundingBoxActivationType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BoundingBoxActivationType_tFFB15738CA408A08C9F4BAB0D23A5C37DED39EDA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/BoundsCalculationMethod
struct BoundsCalculationMethod_t6066CF8DB884932745E4579B66D9ED6D92FA7EDA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/BoundsCalculationMethod::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BoundsCalculationMethod_t6066CF8DB884932745E4579B66D9ED6D92FA7EDA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/CardinalAxisType
struct CardinalAxisType_t7EE0819E0B910415D8F25A29F7E64A0C9DA6A437 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/CardinalAxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CardinalAxisType_t7EE0819E0B910415D8F25A29F7E64A0C9DA6A437, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/FlattenModeType
struct FlattenModeType_tB72CD5C85FB74D18D70C19E2D20F7B8D22900229 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/FlattenModeType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(FlattenModeType_tB72CD5C85FB74D18D70C19E2D20F7B8D22900229, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleProximityState
struct HandleProximityState_tBBB0669076720CF366F951D720A4079CEE4D3E6D 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleProximityState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandleProximityState_tBBB0669076720CF366F951D720A4079CEE4D3E6D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleType
struct HandleType_tEF16CBFD4953AB56ABF4652565864BD3A897375B 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandleType_tEF16CBFD4953AB56ABF4652565864BD3A897375B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/RotationHandlePrefabCollider
struct RotationHandlePrefabCollider_tE6AAD2FB2DF7C8049F3E1D3995C11CF6317E01AF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/RotationHandlePrefabCollider::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RotationHandlePrefabCollider_tE6AAD2FB2DF7C8049F3E1D3995C11CF6317E01AF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox/WireframeType
struct WireframeType_t853DDC7C6B3D405BEF75D0FC0A53B86DF4AB009B 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBox/WireframeType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(WireframeType_t853DDC7C6B3D405BEF75D0FC0A53B86DF4AB009B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEvent
struct HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1  : public UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType
struct HandlesChangedEventType_tD5EAD11071FF022FEE6A41E539A7885FEC078E6A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandlesChangedEventType_tD5EAD11071FF022FEE6A41E539A7885FEC078E6A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireFrameEvent
struct WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5  : public UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType
struct WireframeChangedEventType_t05B98D5C6DC752C9A23BF1E4B00D3EBBF4709DA5 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(WireframeChangedEventType_t05B98D5C6DC752C9A23BF1E4B00D3EBBF4709DA5, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityObjectsChangedEvent
struct ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9  : public UnityEvent_1_t121BC5B77CF53C74E89A1028818B86C3F187FFC8
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandles
struct RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA  : public PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandles
struct TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5  : public PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod
struct BoundsCalculationMethod_tF818ECC4929F4A1A520C4E3405658AD8A131220E 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BoundsCalculationMethod_tF818ECC4929F4A1A520C4E3405658AD8A131220E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsControlActivationType
struct BoundsControlActivationType_t531DDCC7556F9127D9836E7166B95397F1E42E1D 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsControlActivationType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BoundsControlActivationType_t531DDCC7556F9127D9836E7166B95397F1E42E1D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType
struct CardinalAxisType_t1C9F1722777B7B38DF4CA251922F466F3D9FE80E 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CardinalAxisType_t1C9F1722777B7B38DF4CA251922F466F3D9FE80E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType
struct FlattenModeType_tA27BA3CDEB318A91414C61168D76A495EB7EA923 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(FlattenModeType_tA27BA3CDEB318A91414C61168D76A495EB7EA923, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandlePrefabCollider
struct HandlePrefabCollider_t6113313A662D6FEBEEF7B27EF7A434B135AB0F12 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandlePrefabCollider::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandlePrefabCollider_t6113313A662D6FEBEEF7B27EF7A434B135AB0F12, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleScaleMode
struct HandleScaleMode_tF3B5544E46E1B5057B8A5239C98F6599EF23624F 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleScaleMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandleScaleMode_tF3B5544E46E1B5057B8A5239C98F6599EF23624F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType
struct HandleType_t3824AF1CD7013865F200A5DA592E305BFDA81D55 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandleType_t3824AF1CD7013865F200A5DA592E305BFDA81D55, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.WireframeType
struct WireframeType_tF5DE56210FE1A33D93AF3D4E77D659272B63DDFD 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.WireframeType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(WireframeType_tF5DE56210FE1A33D93AF3D4E77D659272B63DDFD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags
struct TransformFlags_t1BFF9FDB164FC56111295BAD00B86A5DFFD62CFC 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.TransformFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TransformFlags_t1BFF9FDB164FC56111295BAD00B86A5DFFD62CFC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Int32Enum
struct Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Nullable`1<UnityEngine.Vector3>
struct Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 
{
public:
	// T System.Nullable`1::value
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203, ___value_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_value_0() const { return ___value_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.RuntimeFieldHandle
struct RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF 
{
public:
	// System.IntPtr System.RuntimeFieldHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// UnityEngine.Bounds
struct Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 
{
public:
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Center
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Center_0;
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Extents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Extents_1;

public:
	inline static int32_t get_offset_of_m_Center_0() { return static_cast<int32_t>(offsetof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890, ___m_Center_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Center_0() const { return ___m_Center_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Center_0() { return &___m_Center_0; }
	inline void set_m_Center_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Center_0 = value;
	}

	inline static int32_t get_offset_of_m_Extents_1() { return static_cast<int32_t>(offsetof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890, ___m_Extents_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Extents_1() const { return ___m_Extents_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Extents_1() { return &___m_Extents_1; }
	inline void set_m_Extents_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Extents_1 = value;
	}
};


// UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 
{
public:
	// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::m_GameObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.RaycastResult::module
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	// System.Single UnityEngine.EventSystems.RaycastResult::distance
	float ___distance_2;
	// System.Single UnityEngine.EventSystems.RaycastResult::index
	float ___index_3;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::depth
	int32_t ___depth_4;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingLayer
	int32_t ___sortingLayer_5;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingOrder
	int32_t ___sortingOrder_6;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	// UnityEngine.Vector2 UnityEngine.EventSystems.RaycastResult::screenPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::displayIndex
	int32_t ___displayIndex_10;

public:
	inline static int32_t get_offset_of_m_GameObject_0() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___m_GameObject_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_GameObject_0() const { return ___m_GameObject_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_GameObject_0() { return &___m_GameObject_0; }
	inline void set_m_GameObject_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_GameObject_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_GameObject_0), (void*)value);
	}

	inline static int32_t get_offset_of_module_1() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___module_1)); }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * get_module_1() const { return ___module_1; }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 ** get_address_of_module_1() { return &___module_1; }
	inline void set_module_1(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * value)
	{
		___module_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___module_1), (void*)value);
	}

	inline static int32_t get_offset_of_distance_2() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___distance_2)); }
	inline float get_distance_2() const { return ___distance_2; }
	inline float* get_address_of_distance_2() { return &___distance_2; }
	inline void set_distance_2(float value)
	{
		___distance_2 = value;
	}

	inline static int32_t get_offset_of_index_3() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___index_3)); }
	inline float get_index_3() const { return ___index_3; }
	inline float* get_address_of_index_3() { return &___index_3; }
	inline void set_index_3(float value)
	{
		___index_3 = value;
	}

	inline static int32_t get_offset_of_depth_4() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___depth_4)); }
	inline int32_t get_depth_4() const { return ___depth_4; }
	inline int32_t* get_address_of_depth_4() { return &___depth_4; }
	inline void set_depth_4(int32_t value)
	{
		___depth_4 = value;
	}

	inline static int32_t get_offset_of_sortingLayer_5() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingLayer_5)); }
	inline int32_t get_sortingLayer_5() const { return ___sortingLayer_5; }
	inline int32_t* get_address_of_sortingLayer_5() { return &___sortingLayer_5; }
	inline void set_sortingLayer_5(int32_t value)
	{
		___sortingLayer_5 = value;
	}

	inline static int32_t get_offset_of_sortingOrder_6() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingOrder_6)); }
	inline int32_t get_sortingOrder_6() const { return ___sortingOrder_6; }
	inline int32_t* get_address_of_sortingOrder_6() { return &___sortingOrder_6; }
	inline void set_sortingOrder_6(int32_t value)
	{
		___sortingOrder_6 = value;
	}

	inline static int32_t get_offset_of_worldPosition_7() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldPosition_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldPosition_7() const { return ___worldPosition_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldPosition_7() { return &___worldPosition_7; }
	inline void set_worldPosition_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldPosition_7 = value;
	}

	inline static int32_t get_offset_of_worldNormal_8() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldNormal_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldNormal_8() const { return ___worldNormal_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldNormal_8() { return &___worldNormal_8; }
	inline void set_worldNormal_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldNormal_8 = value;
	}

	inline static int32_t get_offset_of_screenPosition_9() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___screenPosition_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_screenPosition_9() const { return ___screenPosition_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_screenPosition_9() { return &___screenPosition_9; }
	inline void set_screenPosition_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___screenPosition_9 = value;
	}

	inline static int32_t get_offset_of_displayIndex_10() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___displayIndex_10)); }
	inline int32_t get_displayIndex_10() const { return ___displayIndex_10; }
	inline int32_t* get_address_of_displayIndex_10() { return &___displayIndex_10; }
	inline void set_displayIndex_10(int32_t value)
	{
		___displayIndex_10 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};
// Native definition for COM marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};

// UnityEngine.HideFlags
struct HideFlags_t30B57DC00548E963A569318C8F4A4123E7447E37 
{
public:
	// System.Int32 UnityEngine.HideFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HideFlags_t30B57DC00548E963A569318C8F4A4123E7447E37, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.PrimitiveType
struct PrimitiveType_t37F0056BA9C61594039522E27426D4D52D0943DE 
{
public:
	// System.Int32 UnityEngine.PrimitiveType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PrimitiveType_t37F0056BA9C61594039522E27426D4D52D0943DE, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent
struct VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F 
{
public:
	// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::StretchBounds
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___StretchBounds_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::UseBounds
	bool ___UseBounds_1;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::SnapPoints
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___SnapPoints_2;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::RepeatSnapPoints
	bool ___RepeatSnapPoints_3;
	// System.Single Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::SnapRadius
	float ___SnapRadius_4;

public:
	inline static int32_t get_offset_of_StretchBounds_0() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___StretchBounds_0)); }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  get_StretchBounds_0() const { return ___StretchBounds_0; }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * get_address_of_StretchBounds_0() { return &___StretchBounds_0; }
	inline void set_StretchBounds_0(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  value)
	{
		___StretchBounds_0 = value;
	}

	inline static int32_t get_offset_of_UseBounds_1() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___UseBounds_1)); }
	inline bool get_UseBounds_1() const { return ___UseBounds_1; }
	inline bool* get_address_of_UseBounds_1() { return &___UseBounds_1; }
	inline void set_UseBounds_1(bool value)
	{
		___UseBounds_1 = value;
	}

	inline static int32_t get_offset_of_SnapPoints_2() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___SnapPoints_2)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_SnapPoints_2() const { return ___SnapPoints_2; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_SnapPoints_2() { return &___SnapPoints_2; }
	inline void set_SnapPoints_2(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___SnapPoints_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SnapPoints_2), (void*)value);
	}

	inline static int32_t get_offset_of_RepeatSnapPoints_3() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___RepeatSnapPoints_3)); }
	inline bool get_RepeatSnapPoints_3() const { return ___RepeatSnapPoints_3; }
	inline bool* get_address_of_RepeatSnapPoints_3() { return &___RepeatSnapPoints_3; }
	inline void set_RepeatSnapPoints_3(bool value)
	{
		___RepeatSnapPoints_3 = value;
	}

	inline static int32_t get_offset_of_SnapRadius_4() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___SnapRadius_4)); }
	inline float get_SnapRadius_4() const { return ___SnapRadius_4; }
	inline float* get_address_of_SnapRadius_4() { return &___SnapRadius_4; }
	inline void set_SnapRadius_4(float value)
	{
		___SnapRadius_4 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent
struct VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F_marshaled_pinvoke
{
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___StretchBounds_0;
	int32_t ___UseBounds_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_2;
	int32_t ___RepeatSnapPoints_3;
	float ___SnapRadius_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent
struct VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F_marshaled_com
{
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___StretchBounds_0;
	int32_t ___UseBounds_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_2;
	int32_t ___RepeatSnapPoints_3;
	float ___SnapRadius_4;
};

// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<RayDistance>k__BackingField
	float ___U3CRayDistanceU3Ek__BackingField_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Point>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Normal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Object>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastRaycastHit>k__BackingField
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___U3CLastRaycastHitU3Ek__BackingField_4;
	// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastGraphicsRaycastResult>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<PointLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<NormalLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CRayDistanceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CRayDistanceU3Ek__BackingField_0)); }
	inline float get_U3CRayDistanceU3Ek__BackingField_0() const { return ___U3CRayDistanceU3Ek__BackingField_0; }
	inline float* get_address_of_U3CRayDistanceU3Ek__BackingField_0() { return &___U3CRayDistanceU3Ek__BackingField_0; }
	inline void set_U3CRayDistanceU3Ek__BackingField_0(float value)
	{
		___U3CRayDistanceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CPointU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointU3Ek__BackingField_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointU3Ek__BackingField_1() const { return ___U3CPointU3Ek__BackingField_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointU3Ek__BackingField_1() { return &___U3CPointU3Ek__BackingField_1; }
	inline void set_U3CPointU3Ek__BackingField_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CNormalU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalU3Ek__BackingField_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalU3Ek__BackingField_2() const { return ___U3CNormalU3Ek__BackingField_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalU3Ek__BackingField_2() { return &___U3CNormalU3Ek__BackingField_2; }
	inline void set_U3CNormalU3Ek__BackingField_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CObjectU3Ek__BackingField_3() const { return ___U3CObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CObjectU3Ek__BackingField_3() { return &___U3CObjectU3Ek__BackingField_3; }
	inline void set_U3CObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CLastRaycastHitU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastRaycastHitU3Ek__BackingField_4)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_U3CLastRaycastHitU3Ek__BackingField_4() const { return ___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_U3CLastRaycastHitU3Ek__BackingField_4() { return &___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline void set_U3CLastRaycastHitU3Ek__BackingField_4(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___U3CLastRaycastHitU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() const { return ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return &___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline void set_U3CLastGraphicsRaycastResultU3Ek__BackingField_5(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CLastGraphicsRaycastResultU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointLocalSpaceU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointLocalSpaceU3Ek__BackingField_6() const { return ___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return &___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline void set_U3CPointLocalSpaceU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointLocalSpaceU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalLocalSpaceU3Ek__BackingField_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalLocalSpaceU3Ek__BackingField_7() const { return ___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return &___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline void set_U3CNormalLocalSpaceU3Ek__BackingField_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalLocalSpaceU3Ek__BackingField_7 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_pinvoke
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_com
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};

// Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle
struct Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC  : public RuntimeObject
{
public:
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle::HandleVisual
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___HandleVisual_0;
	// UnityEngine.Renderer Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle::HandleVisualRenderer
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___HandleVisualRenderer_1;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleType Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle::Type
	int32_t ___Type_2;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleProximityState Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle::ProximityState
	int32_t ___ProximityState_3;

public:
	inline static int32_t get_offset_of_HandleVisual_0() { return static_cast<int32_t>(offsetof(Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC, ___HandleVisual_0)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_HandleVisual_0() const { return ___HandleVisual_0; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_HandleVisual_0() { return &___HandleVisual_0; }
	inline void set_HandleVisual_0(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___HandleVisual_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___HandleVisual_0), (void*)value);
	}

	inline static int32_t get_offset_of_HandleVisualRenderer_1() { return static_cast<int32_t>(offsetof(Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC, ___HandleVisualRenderer_1)); }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * get_HandleVisualRenderer_1() const { return ___HandleVisualRenderer_1; }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** get_address_of_HandleVisualRenderer_1() { return &___HandleVisualRenderer_1; }
	inline void set_HandleVisualRenderer_1(Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * value)
	{
		___HandleVisualRenderer_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___HandleVisualRenderer_1), (void*)value);
	}

	inline static int32_t get_offset_of_Type_2() { return static_cast<int32_t>(offsetof(Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC, ___Type_2)); }
	inline int32_t get_Type_2() const { return ___Type_2; }
	inline int32_t* get_address_of_Type_2() { return &___Type_2; }
	inline void set_Type_2(int32_t value)
	{
		___Type_2 = value;
	}

	inline static int32_t get_offset_of_ProximityState_3() { return static_cast<int32_t>(offsetof(Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC, ___ProximityState_3)); }
	inline int32_t get_ProximityState_3() const { return ___ProximityState_3; }
	inline int32_t* get_address_of_ProximityState_3() { return &___ProximityState_3; }
	inline void set_ProximityState_3(int32_t value)
	{
		___ProximityState_3 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay
struct BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537  : public RuntimeObject
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::boxDisplay
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___boxDisplay_0;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::config
	BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * ___config_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::cachedExtents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___cachedExtents_2;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::cachedFlattenMode
	int32_t ___cachedFlattenMode_3;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::isVisible
	bool ___isVisible_4;

public:
	inline static int32_t get_offset_of_boxDisplay_0() { return static_cast<int32_t>(offsetof(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537, ___boxDisplay_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_boxDisplay_0() const { return ___boxDisplay_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_boxDisplay_0() { return &___boxDisplay_0; }
	inline void set_boxDisplay_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___boxDisplay_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxDisplay_0), (void*)value);
	}

	inline static int32_t get_offset_of_config_1() { return static_cast<int32_t>(offsetof(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537, ___config_1)); }
	inline BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * get_config_1() const { return ___config_1; }
	inline BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 ** get_address_of_config_1() { return &___config_1; }
	inline void set_config_1(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * value)
	{
		___config_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___config_1), (void*)value);
	}

	inline static int32_t get_offset_of_cachedExtents_2() { return static_cast<int32_t>(offsetof(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537, ___cachedExtents_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_cachedExtents_2() const { return ___cachedExtents_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_cachedExtents_2() { return &___cachedExtents_2; }
	inline void set_cachedExtents_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___cachedExtents_2 = value;
	}

	inline static int32_t get_offset_of_cachedFlattenMode_3() { return static_cast<int32_t>(offsetof(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537, ___cachedFlattenMode_3)); }
	inline int32_t get_cachedFlattenMode_3() const { return ___cachedFlattenMode_3; }
	inline int32_t* get_address_of_cachedFlattenMode_3() { return &___cachedFlattenMode_3; }
	inline void set_cachedFlattenMode_3(int32_t value)
	{
		___cachedFlattenMode_3 = value;
	}

	inline static int32_t get_offset_of_isVisible_4() { return static_cast<int32_t>(offsetof(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537, ___isVisible_4)); }
	inline bool get_isVisible_4() const { return ___isVisible_4; }
	inline bool* get_address_of_isVisible_4() { return &___isVisible_4; }
	inline void set_isVisible_4(bool value)
	{
		___isVisible_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links
struct Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361  : public RuntimeObject
{
public:
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link> Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::links
	List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * ___links_0;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::config
	LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * ___config_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::cachedExtents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___cachedExtents_2;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::cachedFlattenAxis
	int32_t ___cachedFlattenAxis_3;

public:
	inline static int32_t get_offset_of_links_0() { return static_cast<int32_t>(offsetof(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361, ___links_0)); }
	inline List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * get_links_0() const { return ___links_0; }
	inline List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 ** get_address_of_links_0() { return &___links_0; }
	inline void set_links_0(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * value)
	{
		___links_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___links_0), (void*)value);
	}

	inline static int32_t get_offset_of_config_1() { return static_cast<int32_t>(offsetof(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361, ___config_1)); }
	inline LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * get_config_1() const { return ___config_1; }
	inline LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 ** get_address_of_config_1() { return &___config_1; }
	inline void set_config_1(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * value)
	{
		___config_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___config_1), (void*)value);
	}

	inline static int32_t get_offset_of_cachedExtents_2() { return static_cast<int32_t>(offsetof(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361, ___cachedExtents_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_cachedExtents_2() const { return ___cachedExtents_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_cachedExtents_2() { return &___cachedExtents_2; }
	inline void set_cachedExtents_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___cachedExtents_2 = value;
	}

	inline static int32_t get_offset_of_cachedFlattenAxis_3() { return static_cast<int32_t>(offsetof(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361, ___cachedFlattenAxis_3)); }
	inline int32_t get_cachedFlattenAxis_3() const { return ___cachedFlattenAxis_3; }
	inline int32_t* get_address_of_cachedFlattenAxis_3() { return &___cachedFlattenAxis_3; }
	inline void set_cachedFlattenAxis_3(int32_t value)
	{
		___cachedFlattenAxis_3 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link
struct Link_t419BB37400AA583E48363DAB051577447DCEFBAB  : public RuntimeObject
{
public:
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_0;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link::axisType
	int32_t ___axisType_1;

public:
	inline static int32_t get_offset_of_transform_0() { return static_cast<int32_t>(offsetof(Link_t419BB37400AA583E48363DAB051577447DCEFBAB, ___transform_0)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_0() const { return ___transform_0; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_0() { return &___transform_0; }
	inline void set_transform_0(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_0), (void*)value);
	}

	inline static int32_t get_offset_of_axisType_1() { return static_cast<int32_t>(offsetof(Link_t419BB37400AA583E48363DAB051577447DCEFBAB, ___axisType_1)); }
	inline int32_t get_axisType_1() const { return ___axisType_1; }
	inline int32_t* get_address_of_axisType_1() { return &___axisType_1; }
	inline void set_axisType_1(int32_t value)
	{
		___axisType_1 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles
struct ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3  : public HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395
{
public:
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::config
	ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * ___config_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::areHandlesFlattened
	bool ___areHandlesFlattened_6;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::currentFlattenAxis
	int32_t ___currentFlattenAxis_7;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::<HandlePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CHandlePositionsU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_config_5() { return static_cast<int32_t>(offsetof(ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3, ___config_5)); }
	inline ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * get_config_5() const { return ___config_5; }
	inline ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 ** get_address_of_config_5() { return &___config_5; }
	inline void set_config_5(ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * value)
	{
		___config_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___config_5), (void*)value);
	}

	inline static int32_t get_offset_of_areHandlesFlattened_6() { return static_cast<int32_t>(offsetof(ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3, ___areHandlesFlattened_6)); }
	inline bool get_areHandlesFlattened_6() const { return ___areHandlesFlattened_6; }
	inline bool* get_address_of_areHandlesFlattened_6() { return &___areHandlesFlattened_6; }
	inline void set_areHandlesFlattened_6(bool value)
	{
		___areHandlesFlattened_6 = value;
	}

	inline static int32_t get_offset_of_currentFlattenAxis_7() { return static_cast<int32_t>(offsetof(ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3, ___currentFlattenAxis_7)); }
	inline int32_t get_currentFlattenAxis_7() const { return ___currentFlattenAxis_7; }
	inline int32_t* get_address_of_currentFlattenAxis_7() { return &___currentFlattenAxis_7; }
	inline void set_currentFlattenAxis_7(int32_t value)
	{
		___currentFlattenAxis_7 = value;
	}

	inline static int32_t get_offset_of_U3CHandlePositionsU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3, ___U3CHandlePositionsU3Ek__BackingField_8)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CHandlePositionsU3Ek__BackingField_8() const { return ___U3CHandlePositionsU3Ek__BackingField_8; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CHandlePositionsU3Ek__BackingField_8() { return &___U3CHandlePositionsU3Ek__BackingField_8; }
	inline void set_U3CHandlePositionsU3Ek__BackingField_8(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CHandlePositionsU3Ek__BackingField_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CHandlePositionsU3Ek__BackingField_8), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform
struct MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::pose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___pose_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::scale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale_2;

public:
	inline static int32_t get_offset_of_pose_1() { return static_cast<int32_t>(offsetof(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14, ___pose_1)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_pose_1() const { return ___pose_1; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_pose_1() { return &___pose_1; }
	inline void set_pose_1(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___pose_1 = value;
	}

	inline static int32_t get_offset_of_scale_2() { return static_cast<int32_t>(offsetof(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14, ___scale_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_scale_2() const { return ___scale_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_scale_2() { return &___scale_2; }
	inline void set_scale_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___scale_2 = value;
	}
};

struct MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::<Identity>k__BackingField
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___U3CIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_StaticFields, ___U3CIdentityU3Ek__BackingField_0)); }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  get_U3CIdentityU3Ek__BackingField_0() const { return ___U3CIdentityU3Ek__BackingField_0; }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * get_address_of_U3CIdentityU3Ek__BackingField_0() { return &___U3CIdentityU3Ek__BackingField_0; }
	inline void set_U3CIdentityU3Ek__BackingField_0(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  value)
	{
		___U3CIdentityU3Ek__BackingField_0 = value;
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Object,UnityEngine.Bounds>
struct KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A, ___key_0)); }
	inline RuntimeObject * get_key_0() const { return ___key_0; }
	inline RuntimeObject ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A, ___value_1)); }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  get_value_1() const { return ___value_1; }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  value)
	{
		___value_1 = value;
	}
};


// System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Bounds>
struct KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192, ___key_0)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_key_0() const { return ___key_0; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192, ___value_1)); }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  get_value_1() const { return ___value_1; }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  value)
	{
		___value_1 = value;
	}
};


// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_pinvoke : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_com : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
};

// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration
struct BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::boxMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___boxMaterial_4;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::boxGrabbedMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___boxGrabbedMaterial_5;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::flattenAxisDisplayScale
	float ___flattenAxisDisplayScale_6;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::materialChanged
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___materialChanged_7;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::flattenAxisScaleChanged
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___flattenAxisScaleChanged_8;

public:
	inline static int32_t get_offset_of_boxMaterial_4() { return static_cast<int32_t>(offsetof(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797, ___boxMaterial_4)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_boxMaterial_4() const { return ___boxMaterial_4; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_boxMaterial_4() { return &___boxMaterial_4; }
	inline void set_boxMaterial_4(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___boxMaterial_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxMaterial_4), (void*)value);
	}

	inline static int32_t get_offset_of_boxGrabbedMaterial_5() { return static_cast<int32_t>(offsetof(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797, ___boxGrabbedMaterial_5)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_boxGrabbedMaterial_5() const { return ___boxGrabbedMaterial_5; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_boxGrabbedMaterial_5() { return &___boxGrabbedMaterial_5; }
	inline void set_boxGrabbedMaterial_5(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___boxGrabbedMaterial_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxGrabbedMaterial_5), (void*)value);
	}

	inline static int32_t get_offset_of_flattenAxisDisplayScale_6() { return static_cast<int32_t>(offsetof(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797, ___flattenAxisDisplayScale_6)); }
	inline float get_flattenAxisDisplayScale_6() const { return ___flattenAxisDisplayScale_6; }
	inline float* get_address_of_flattenAxisDisplayScale_6() { return &___flattenAxisDisplayScale_6; }
	inline void set_flattenAxisDisplayScale_6(float value)
	{
		___flattenAxisDisplayScale_6 = value;
	}

	inline static int32_t get_offset_of_materialChanged_7() { return static_cast<int32_t>(offsetof(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797, ___materialChanged_7)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_materialChanged_7() const { return ___materialChanged_7; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_materialChanged_7() { return &___materialChanged_7; }
	inline void set_materialChanged_7(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___materialChanged_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___materialChanged_7), (void*)value);
	}

	inline static int32_t get_offset_of_flattenAxisScaleChanged_8() { return static_cast<int32_t>(offsetof(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797, ___flattenAxisScaleChanged_8)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_flattenAxisScaleChanged_8() const { return ___flattenAxisScaleChanged_8; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_flattenAxisScaleChanged_8() { return &___flattenAxisScaleChanged_8; }
	inline void set_flattenAxisScaleChanged_8(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___flattenAxisScaleChanged_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___flattenAxisScaleChanged_8), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration
struct HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::handleMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___handleMaterial_4;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::handleGrabbedMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___handleGrabbedMaterial_5;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::handlePrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___handlePrefab_6;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::handleSize
	float ___handleSize_7;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::colliderPadding
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___colliderPadding_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::drawTetherWhenManipulating
	bool ___drawTetherWhenManipulating_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::handlesIgnoreCollider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___handlesIgnoreCollider_10;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::handlesChanged
	HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * ___handlesChanged_11;

public:
	inline static int32_t get_offset_of_handleMaterial_4() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___handleMaterial_4)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_handleMaterial_4() const { return ___handleMaterial_4; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_handleMaterial_4() { return &___handleMaterial_4; }
	inline void set_handleMaterial_4(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___handleMaterial_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handleMaterial_4), (void*)value);
	}

	inline static int32_t get_offset_of_handleGrabbedMaterial_5() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___handleGrabbedMaterial_5)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_handleGrabbedMaterial_5() const { return ___handleGrabbedMaterial_5; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_handleGrabbedMaterial_5() { return &___handleGrabbedMaterial_5; }
	inline void set_handleGrabbedMaterial_5(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___handleGrabbedMaterial_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handleGrabbedMaterial_5), (void*)value);
	}

	inline static int32_t get_offset_of_handlePrefab_6() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___handlePrefab_6)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_handlePrefab_6() const { return ___handlePrefab_6; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_handlePrefab_6() { return &___handlePrefab_6; }
	inline void set_handlePrefab_6(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___handlePrefab_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handlePrefab_6), (void*)value);
	}

	inline static int32_t get_offset_of_handleSize_7() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___handleSize_7)); }
	inline float get_handleSize_7() const { return ___handleSize_7; }
	inline float* get_address_of_handleSize_7() { return &___handleSize_7; }
	inline void set_handleSize_7(float value)
	{
		___handleSize_7 = value;
	}

	inline static int32_t get_offset_of_colliderPadding_8() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___colliderPadding_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_colliderPadding_8() const { return ___colliderPadding_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_colliderPadding_8() { return &___colliderPadding_8; }
	inline void set_colliderPadding_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___colliderPadding_8 = value;
	}

	inline static int32_t get_offset_of_drawTetherWhenManipulating_9() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___drawTetherWhenManipulating_9)); }
	inline bool get_drawTetherWhenManipulating_9() const { return ___drawTetherWhenManipulating_9; }
	inline bool* get_address_of_drawTetherWhenManipulating_9() { return &___drawTetherWhenManipulating_9; }
	inline void set_drawTetherWhenManipulating_9(bool value)
	{
		___drawTetherWhenManipulating_9 = value;
	}

	inline static int32_t get_offset_of_handlesIgnoreCollider_10() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___handlesIgnoreCollider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_handlesIgnoreCollider_10() const { return ___handlesIgnoreCollider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_handlesIgnoreCollider_10() { return &___handlesIgnoreCollider_10; }
	inline void set_handlesIgnoreCollider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___handlesIgnoreCollider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handlesIgnoreCollider_10), (void*)value);
	}

	inline static int32_t get_offset_of_handlesChanged_11() { return static_cast<int32_t>(offsetof(HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C, ___handlesChanged_11)); }
	inline HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * get_handlesChanged_11() const { return ___handlesChanged_11; }
	inline HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 ** get_address_of_handlesChanged_11() { return &___handlesChanged_11; }
	inline void set_handlesChanged_11(HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * value)
	{
		___handlesChanged_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handlesChanged_11), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration
struct LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::wireframeMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___wireframeMaterial_4;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::wireframeEdgeRadius
	float ___wireframeEdgeRadius_5;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.WireframeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::wireframeShape
	int32_t ___wireframeShape_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::showWireframe
	bool ___showWireframe_7;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireFrameEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::wireFrameChanged
	WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * ___wireFrameChanged_8;

public:
	inline static int32_t get_offset_of_wireframeMaterial_4() { return static_cast<int32_t>(offsetof(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5, ___wireframeMaterial_4)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_wireframeMaterial_4() const { return ___wireframeMaterial_4; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_wireframeMaterial_4() { return &___wireframeMaterial_4; }
	inline void set_wireframeMaterial_4(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___wireframeMaterial_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___wireframeMaterial_4), (void*)value);
	}

	inline static int32_t get_offset_of_wireframeEdgeRadius_5() { return static_cast<int32_t>(offsetof(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5, ___wireframeEdgeRadius_5)); }
	inline float get_wireframeEdgeRadius_5() const { return ___wireframeEdgeRadius_5; }
	inline float* get_address_of_wireframeEdgeRadius_5() { return &___wireframeEdgeRadius_5; }
	inline void set_wireframeEdgeRadius_5(float value)
	{
		___wireframeEdgeRadius_5 = value;
	}

	inline static int32_t get_offset_of_wireframeShape_6() { return static_cast<int32_t>(offsetof(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5, ___wireframeShape_6)); }
	inline int32_t get_wireframeShape_6() const { return ___wireframeShape_6; }
	inline int32_t* get_address_of_wireframeShape_6() { return &___wireframeShape_6; }
	inline void set_wireframeShape_6(int32_t value)
	{
		___wireframeShape_6 = value;
	}

	inline static int32_t get_offset_of_showWireframe_7() { return static_cast<int32_t>(offsetof(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5, ___showWireframe_7)); }
	inline bool get_showWireframe_7() const { return ___showWireframe_7; }
	inline bool* get_address_of_showWireframe_7() { return &___showWireframe_7; }
	inline void set_showWireframe_7(bool value)
	{
		___showWireframe_7 = value;
	}

	inline static int32_t get_offset_of_wireFrameChanged_8() { return static_cast<int32_t>(offsetof(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5, ___wireFrameChanged_8)); }
	inline WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * get_wireFrameChanged_8() const { return ___wireFrameChanged_8; }
	inline WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 ** get_address_of_wireFrameChanged_8() { return &___wireFrameChanged_8; }
	inline void set_wireFrameChanged_8(WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * value)
	{
		___wireFrameChanged_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___wireFrameChanged_8), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration
struct ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::proximityEffectActive
	bool ___proximityEffectActive_4;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::objectMediumProximity
	float ___objectMediumProximity_5;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::objectCloseProximity
	float ___objectCloseProximity_6;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::farScale
	float ___farScale_7;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::mediumScale
	float ___mediumScale_8;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::closeScale
	float ___closeScale_9;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::farGrowRate
	float ___farGrowRate_10;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::mediumGrowRate
	float ___mediumGrowRate_11;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration::closeGrowRate
	float ___closeGrowRate_12;

public:
	inline static int32_t get_offset_of_proximityEffectActive_4() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___proximityEffectActive_4)); }
	inline bool get_proximityEffectActive_4() const { return ___proximityEffectActive_4; }
	inline bool* get_address_of_proximityEffectActive_4() { return &___proximityEffectActive_4; }
	inline void set_proximityEffectActive_4(bool value)
	{
		___proximityEffectActive_4 = value;
	}

	inline static int32_t get_offset_of_objectMediumProximity_5() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___objectMediumProximity_5)); }
	inline float get_objectMediumProximity_5() const { return ___objectMediumProximity_5; }
	inline float* get_address_of_objectMediumProximity_5() { return &___objectMediumProximity_5; }
	inline void set_objectMediumProximity_5(float value)
	{
		___objectMediumProximity_5 = value;
	}

	inline static int32_t get_offset_of_objectCloseProximity_6() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___objectCloseProximity_6)); }
	inline float get_objectCloseProximity_6() const { return ___objectCloseProximity_6; }
	inline float* get_address_of_objectCloseProximity_6() { return &___objectCloseProximity_6; }
	inline void set_objectCloseProximity_6(float value)
	{
		___objectCloseProximity_6 = value;
	}

	inline static int32_t get_offset_of_farScale_7() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___farScale_7)); }
	inline float get_farScale_7() const { return ___farScale_7; }
	inline float* get_address_of_farScale_7() { return &___farScale_7; }
	inline void set_farScale_7(float value)
	{
		___farScale_7 = value;
	}

	inline static int32_t get_offset_of_mediumScale_8() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___mediumScale_8)); }
	inline float get_mediumScale_8() const { return ___mediumScale_8; }
	inline float* get_address_of_mediumScale_8() { return &___mediumScale_8; }
	inline void set_mediumScale_8(float value)
	{
		___mediumScale_8 = value;
	}

	inline static int32_t get_offset_of_closeScale_9() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___closeScale_9)); }
	inline float get_closeScale_9() const { return ___closeScale_9; }
	inline float* get_address_of_closeScale_9() { return &___closeScale_9; }
	inline void set_closeScale_9(float value)
	{
		___closeScale_9 = value;
	}

	inline static int32_t get_offset_of_farGrowRate_10() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___farGrowRate_10)); }
	inline float get_farGrowRate_10() const { return ___farGrowRate_10; }
	inline float* get_address_of_farGrowRate_10() { return &___farGrowRate_10; }
	inline void set_farGrowRate_10(float value)
	{
		___farGrowRate_10 = value;
	}

	inline static int32_t get_offset_of_mediumGrowRate_11() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___mediumGrowRate_11)); }
	inline float get_mediumGrowRate_11() const { return ___mediumGrowRate_11; }
	inline float* get_address_of_mediumGrowRate_11() { return &___mediumGrowRate_11; }
	inline void set_mediumGrowRate_11(float value)
	{
		___mediumGrowRate_11 = value;
	}

	inline static int32_t get_offset_of_closeGrowRate_12() { return static_cast<int32_t>(offsetof(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808, ___closeGrowRate_12)); }
	inline float get_closeGrowRate_12() const { return ___closeGrowRate_12; }
	inline float* get_address_of_closeGrowRate_12() { return &___closeGrowRate_12; }
	inline void set_closeGrowRate_12(float value)
	{
		___closeGrowRate_12 = value;
	}
};


// System.Action`1<UnityEngine.Transform>
struct Action_1_t944B085F4D5DEBCA83E9053D0BFC60EF26FA1C6A  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>
struct UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>
struct UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>
struct UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.MeshFilter
struct MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.TextMesh
struct TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration
struct PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA  : public HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C
{
public:
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandlePrefabCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::handlePrefabColliderType
	int32_t ___handlePrefabColliderType_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::showHandleForX
	bool ___showHandleForX_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::showHandleForY
	bool ___showHandleForY_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::showHandleForZ
	bool ___showHandleForZ_15;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::colliderTypeChanged
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___colliderTypeChanged_16;

public:
	inline static int32_t get_offset_of_handlePrefabColliderType_12() { return static_cast<int32_t>(offsetof(PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA, ___handlePrefabColliderType_12)); }
	inline int32_t get_handlePrefabColliderType_12() const { return ___handlePrefabColliderType_12; }
	inline int32_t* get_address_of_handlePrefabColliderType_12() { return &___handlePrefabColliderType_12; }
	inline void set_handlePrefabColliderType_12(int32_t value)
	{
		___handlePrefabColliderType_12 = value;
	}

	inline static int32_t get_offset_of_showHandleForX_13() { return static_cast<int32_t>(offsetof(PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA, ___showHandleForX_13)); }
	inline bool get_showHandleForX_13() const { return ___showHandleForX_13; }
	inline bool* get_address_of_showHandleForX_13() { return &___showHandleForX_13; }
	inline void set_showHandleForX_13(bool value)
	{
		___showHandleForX_13 = value;
	}

	inline static int32_t get_offset_of_showHandleForY_14() { return static_cast<int32_t>(offsetof(PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA, ___showHandleForY_14)); }
	inline bool get_showHandleForY_14() const { return ___showHandleForY_14; }
	inline bool* get_address_of_showHandleForY_14() { return &___showHandleForY_14; }
	inline void set_showHandleForY_14(bool value)
	{
		___showHandleForY_14 = value;
	}

	inline static int32_t get_offset_of_showHandleForZ_15() { return static_cast<int32_t>(offsetof(PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA, ___showHandleForZ_15)); }
	inline bool get_showHandleForZ_15() const { return ___showHandleForZ_15; }
	inline bool* get_address_of_showHandleForZ_15() { return &___showHandleForZ_15; }
	inline void set_showHandleForZ_15(bool value)
	{
		___showHandleForZ_15 = value;
	}

	inline static int32_t get_offset_of_colliderTypeChanged_16() { return static_cast<int32_t>(offsetof(PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA, ___colliderTypeChanged_16)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_colliderTypeChanged_16() const { return ___colliderTypeChanged_16; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_colliderTypeChanged_16() { return &___colliderTypeChanged_16; }
	inline void set_colliderTypeChanged_16(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___colliderTypeChanged_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___colliderTypeChanged_16), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration
struct ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339  : public HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration::handleSlatePrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___handleSlatePrefab_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration::showScaleHandles
	bool ___showScaleHandles_13;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleScaleMode Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration::scaleBehavior
	int32_t ___scaleBehavior_14;

public:
	inline static int32_t get_offset_of_handleSlatePrefab_12() { return static_cast<int32_t>(offsetof(ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339, ___handleSlatePrefab_12)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_handleSlatePrefab_12() const { return ___handleSlatePrefab_12; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_handleSlatePrefab_12() { return &___handleSlatePrefab_12; }
	inline void set_handleSlatePrefab_12(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___handleSlatePrefab_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handleSlatePrefab_12), (void*)value);
	}

	inline static int32_t get_offset_of_showScaleHandles_13() { return static_cast<int32_t>(offsetof(ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339, ___showScaleHandles_13)); }
	inline bool get_showScaleHandles_13() const { return ___showScaleHandles_13; }
	inline bool* get_address_of_showScaleHandles_13() { return &___showScaleHandles_13; }
	inline void set_showScaleHandles_13(bool value)
	{
		___showScaleHandles_13 = value;
	}

	inline static int32_t get_offset_of_scaleBehavior_14() { return static_cast<int32_t>(offsetof(ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339, ___scaleBehavior_14)); }
	inline int32_t get_scaleBehavior_14() const { return ___scaleBehavior_14; }
	inline int32_t* get_address_of_scaleBehavior_14() { return &___scaleBehavior_14; }
	inline void set_scaleBehavior_14(int32_t value)
	{
		___scaleBehavior_14 = value;
	}
};


// UnityEngine.BoxCollider
struct BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA  : public Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF
{
public:

public:
};


// UnityEngine.CapsuleCollider
struct CapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1  : public Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF
{
public:

public:
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// UnityEngine.SphereCollider
struct SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F  : public Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager
struct ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::translationElasticConfigurationObject
	ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * ___translationElasticConfigurationObject_4;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::rotationElasticConfigurationObject
	ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * ___rotationElasticConfigurationObject_5;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::scaleElasticConfigurationObject
	ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * ___scaleElasticConfigurationObject_6;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::translationElasticExtent
	VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  ___translationElasticExtent_7;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::rotationElasticExtent
	QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA  ___rotationElasticExtent_8;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::scaleElasticExtent
	VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  ___scaleElasticExtent_9;
	// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::elasticTypes
	int32_t ___elasticTypes_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::<EnableElasticsUpdate>k__BackingField
	bool ___U3CEnableElasticsUpdateU3Ek__BackingField_11;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::translationElastic
	RuntimeObject* ___translationElastic_13;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Quaternion> Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::rotationElastic
	RuntimeObject* ___rotationElastic_14;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::scaleElastic
	RuntimeObject* ___scaleElastic_15;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::hostTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___hostTransform_16;
	// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::elasticTypesSimulating
	int32_t ___elasticTypesSimulating_17;

public:
	inline static int32_t get_offset_of_translationElasticConfigurationObject_4() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___translationElasticConfigurationObject_4)); }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * get_translationElasticConfigurationObject_4() const { return ___translationElasticConfigurationObject_4; }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB ** get_address_of_translationElasticConfigurationObject_4() { return &___translationElasticConfigurationObject_4; }
	inline void set_translationElasticConfigurationObject_4(ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * value)
	{
		___translationElasticConfigurationObject_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translationElasticConfigurationObject_4), (void*)value);
	}

	inline static int32_t get_offset_of_rotationElasticConfigurationObject_5() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___rotationElasticConfigurationObject_5)); }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * get_rotationElasticConfigurationObject_5() const { return ___rotationElasticConfigurationObject_5; }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB ** get_address_of_rotationElasticConfigurationObject_5() { return &___rotationElasticConfigurationObject_5; }
	inline void set_rotationElasticConfigurationObject_5(ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * value)
	{
		___rotationElasticConfigurationObject_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationElasticConfigurationObject_5), (void*)value);
	}

	inline static int32_t get_offset_of_scaleElasticConfigurationObject_6() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___scaleElasticConfigurationObject_6)); }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * get_scaleElasticConfigurationObject_6() const { return ___scaleElasticConfigurationObject_6; }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB ** get_address_of_scaleElasticConfigurationObject_6() { return &___scaleElasticConfigurationObject_6; }
	inline void set_scaleElasticConfigurationObject_6(ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * value)
	{
		___scaleElasticConfigurationObject_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleElasticConfigurationObject_6), (void*)value);
	}

	inline static int32_t get_offset_of_translationElasticExtent_7() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___translationElasticExtent_7)); }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  get_translationElasticExtent_7() const { return ___translationElasticExtent_7; }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F * get_address_of_translationElasticExtent_7() { return &___translationElasticExtent_7; }
	inline void set_translationElasticExtent_7(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  value)
	{
		___translationElasticExtent_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___translationElasticExtent_7))->___SnapPoints_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_rotationElasticExtent_8() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___rotationElasticExtent_8)); }
	inline QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA  get_rotationElasticExtent_8() const { return ___rotationElasticExtent_8; }
	inline QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA * get_address_of_rotationElasticExtent_8() { return &___rotationElasticExtent_8; }
	inline void set_rotationElasticExtent_8(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA  value)
	{
		___rotationElasticExtent_8 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___rotationElasticExtent_8))->___SnapPoints_0), (void*)NULL);
	}

	inline static int32_t get_offset_of_scaleElasticExtent_9() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___scaleElasticExtent_9)); }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  get_scaleElasticExtent_9() const { return ___scaleElasticExtent_9; }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F * get_address_of_scaleElasticExtent_9() { return &___scaleElasticExtent_9; }
	inline void set_scaleElasticExtent_9(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  value)
	{
		___scaleElasticExtent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___scaleElasticExtent_9))->___SnapPoints_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_elasticTypes_10() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___elasticTypes_10)); }
	inline int32_t get_elasticTypes_10() const { return ___elasticTypes_10; }
	inline int32_t* get_address_of_elasticTypes_10() { return &___elasticTypes_10; }
	inline void set_elasticTypes_10(int32_t value)
	{
		___elasticTypes_10 = value;
	}

	inline static int32_t get_offset_of_U3CEnableElasticsUpdateU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___U3CEnableElasticsUpdateU3Ek__BackingField_11)); }
	inline bool get_U3CEnableElasticsUpdateU3Ek__BackingField_11() const { return ___U3CEnableElasticsUpdateU3Ek__BackingField_11; }
	inline bool* get_address_of_U3CEnableElasticsUpdateU3Ek__BackingField_11() { return &___U3CEnableElasticsUpdateU3Ek__BackingField_11; }
	inline void set_U3CEnableElasticsUpdateU3Ek__BackingField_11(bool value)
	{
		___U3CEnableElasticsUpdateU3Ek__BackingField_11 = value;
	}

	inline static int32_t get_offset_of_translationElastic_13() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___translationElastic_13)); }
	inline RuntimeObject* get_translationElastic_13() const { return ___translationElastic_13; }
	inline RuntimeObject** get_address_of_translationElastic_13() { return &___translationElastic_13; }
	inline void set_translationElastic_13(RuntimeObject* value)
	{
		___translationElastic_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translationElastic_13), (void*)value);
	}

	inline static int32_t get_offset_of_rotationElastic_14() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___rotationElastic_14)); }
	inline RuntimeObject* get_rotationElastic_14() const { return ___rotationElastic_14; }
	inline RuntimeObject** get_address_of_rotationElastic_14() { return &___rotationElastic_14; }
	inline void set_rotationElastic_14(RuntimeObject* value)
	{
		___rotationElastic_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationElastic_14), (void*)value);
	}

	inline static int32_t get_offset_of_scaleElastic_15() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___scaleElastic_15)); }
	inline RuntimeObject* get_scaleElastic_15() const { return ___scaleElastic_15; }
	inline RuntimeObject** get_address_of_scaleElastic_15() { return &___scaleElastic_15; }
	inline void set_scaleElastic_15(RuntimeObject* value)
	{
		___scaleElastic_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleElastic_15), (void*)value);
	}

	inline static int32_t get_offset_of_hostTransform_16() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___hostTransform_16)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_hostTransform_16() const { return ___hostTransform_16; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_hostTransform_16() { return &___hostTransform_16; }
	inline void set_hostTransform_16(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___hostTransform_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hostTransform_16), (void*)value);
	}

	inline static int32_t get_offset_of_elasticTypesSimulating_17() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___elasticTypesSimulating_17)); }
	inline int32_t get_elasticTypesSimulating_17() const { return ___elasticTypesSimulating_17; }
	inline int32_t* get_address_of_elasticTypesSimulating_17() { return &___elasticTypesSimulating_17; }
	inline void set_elasticTypesSimulating_17(int32_t value)
	{
		___elasticTypesSimulating_17 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::lateInitialize
	bool ___lateInitialize_4;

public:
	inline static int32_t get_offset_of_lateInitialize_4() { return static_cast<int32_t>(offsetof(InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5, ___lateInitialize_4)); }
	inline bool get_lateInitialize_4() const { return ___lateInitialize_4; }
	inline bool* get_address_of_lateInitialize_4() { return &___lateInitialize_4; }
	inline void set_lateInitialize_4(bool value)
	{
		___lateInitialize_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CPointerU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_6() const { return ___U3CPointerU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_6() { return &___U3CPointerU3Ek__BackingField_6; }
	inline void set_U3CPointerU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCountU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CCountU3Ek__BackingField_7)); }
	inline int32_t get_U3CCountU3Ek__BackingField_7() const { return ___U3CCountU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3CCountU3Ek__BackingField_7() { return &___U3CCountU3Ek__BackingField_7; }
	inline void set_U3CCountU3Ek__BackingField_7(int32_t value)
	{
		___U3CCountU3Ek__BackingField_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::ShowTetherWhenManipulating
	bool ___ShowTetherWhenManipulating_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::IsBoundsHandles
	bool ___IsBoundsHandles_5;

public:
	inline static int32_t get_offset_of_ShowTetherWhenManipulating_4() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___ShowTetherWhenManipulating_4)); }
	inline bool get_ShowTetherWhenManipulating_4() const { return ___ShowTetherWhenManipulating_4; }
	inline bool* get_address_of_ShowTetherWhenManipulating_4() { return &___ShowTetherWhenManipulating_4; }
	inline void set_ShowTetherWhenManipulating_4(bool value)
	{
		___ShowTetherWhenManipulating_4 = value;
	}

	inline static int32_t get_offset_of_IsBoundsHandles_5() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___IsBoundsHandles_5)); }
	inline bool get_IsBoundsHandles_5() const { return ___IsBoundsHandles_5; }
	inline bool* get_address_of_IsBoundsHandles_5() { return &___IsBoundsHandles_5; }
	inline void set_IsBoundsHandles_5(bool value)
	{
		___IsBoundsHandles_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundingBox
struct BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundingBox::targetObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___targetObject_4;
	// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundingBox::boundsOverride
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___boundsOverride_5;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/BoundsCalculationMethod Microsoft.MixedReality.Toolkit.UI.BoundingBox::boundsCalculationMethod
	int32_t ___boundsCalculationMethod_6;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/BoundingBoxActivationType Microsoft.MixedReality.Toolkit.UI.BoundingBox::activation
	int32_t ___activation_7;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleMinimum
	float ___scaleMinimum_8;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleMaximum
	float ___scaleMaximum_9;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundingBox::flattenAxis
	int32_t ___flattenAxis_10;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::flattenAxisDisplayScale
	float ___flattenAxisDisplayScale_11;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::boxPadding
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boxPadding_12;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundingBox::boxMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___boxMaterial_13;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundingBox::boxGrabbedMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___boxGrabbedMaterial_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::showWireframe
	bool ___showWireframe_15;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/WireframeType Microsoft.MixedReality.Toolkit.UI.BoundingBox::wireframeShape
	int32_t ___wireframeShape_16;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundingBox::wireframeMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___wireframeMaterial_17;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::wireframeEdgeRadius
	float ___wireframeEdgeRadius_18;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundingBox::handleMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___handleMaterial_19;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundingBox::handleGrabbedMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___handleGrabbedMaterial_20;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleHandlePrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___scaleHandlePrefab_21;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleHandleSlatePrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___scaleHandleSlatePrefab_22;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleHandleSize
	float ___scaleHandleSize_23;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleHandleColliderPadding
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scaleHandleColliderPadding_24;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundingBox::rotationHandlePrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___rotationHandlePrefab_25;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::rotationHandleSize
	float ___rotationHandleSize_26;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::rotateHandleColliderPadding
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rotateHandleColliderPadding_27;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/RotationHandlePrefabCollider Microsoft.MixedReality.Toolkit.UI.BoundingBox::rotationHandlePrefabColliderType
	int32_t ___rotationHandlePrefabColliderType_28;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::showScaleHandles
	bool ___showScaleHandles_29;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::showRotationHandleForX
	bool ___showRotationHandleForX_30;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::showRotationHandleForY
	bool ___showRotationHandleForY_31;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::showRotationHandleForZ
	bool ___showRotationHandleForZ_32;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::drawTetherWhenManipulating
	bool ___drawTetherWhenManipulating_33;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::proximityEffectActive
	bool ___proximityEffectActive_34;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::handleMediumProximity
	float ___handleMediumProximity_35;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::handleCloseProximity
	float ___handleCloseProximity_36;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::farScale
	float ___farScale_37;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::mediumScale
	float ___mediumScale_38;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::closeScale
	float ___closeScale_39;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::farGrowRate
	float ___farGrowRate_40;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::mediumGrowRate
	float ___mediumGrowRate_41;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundingBox::closeGrowRate
	float ___closeGrowRate_42;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.BoundingBox::handlesIgnoreCollider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___handlesIgnoreCollider_43;
	// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.UI.BoundingBox::debugText
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___debugText_44;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::hideElementsInInspector
	bool ___hideElementsInInspector_45;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundingBox::RotateStarted
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___RotateStarted_46;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundingBox::RotateStopped
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___RotateStopped_47;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundingBox::ScaleStarted
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___ScaleStarted_48;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundingBox::ScaleStopped
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___ScaleStopped_49;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::wireframeOnly
	bool ___wireframeOnly_50;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.BoundingBox::currentPointer
	RuntimeObject* ___currentPointer_51;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundingBox::rigRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___rigRoot_52;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundingBox::boxDisplay
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___boxDisplay_53;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBox::boundsCorners
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___boundsCorners_54;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::currentBoundsExtents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents_55;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.UI.BoundingBox::eyeTrackingProvider
	RuntimeObject* ___eyeTrackingProvider_56;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.UI.BoundingBox::touchingSources
	List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * ___touchingSources_57;
	// System.Collections.Generic.List`1<UnityEngine.Transform> Microsoft.MixedReality.Toolkit.UI.BoundingBox::links
	List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___links_58;
	// System.Collections.Generic.List`1<UnityEngine.Renderer> Microsoft.MixedReality.Toolkit.UI.BoundingBox::linkRenderers
	List_1_tB7C5D51CDBF6C4C12F2D4B38EB89E727EED00749 * ___linkRenderers_59;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController> Microsoft.MixedReality.Toolkit.UI.BoundingBox::sourcesDetected
	List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * ___sourcesDetected_60;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBox::edgeCenters
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___edgeCenters_61;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::currentRotationAxis
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentRotationAxis_62;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::initialScaleOnGrabStart
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialScaleOnGrabStart_63;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::initialPositionOnGrabStart
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialPositionOnGrabStart_64;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::initialGrabPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPoint_65;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::currentGrabPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentGrabPoint_66;
	// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint Microsoft.MixedReality.Toolkit.UI.BoundingBox::scaleConstraint
	MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * ___scaleConstraint_67;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::grabPointInPointer
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___grabPointInPointer_68;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundingBox::edgeAxes
	CardinalAxisTypeU5BU5D_t2E1F21AE9A0B659371A2EB13D3A23C828B187429* ___edgeAxes_69;
	// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBox::flattenedHandles
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___flattenedHandles_70;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::oppositeCorner
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oppositeCorner_71;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBox::diagonalDir
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___diagonalDir_72;
	// Microsoft.MixedReality.Toolkit.UI.BoundingBox/HandleType Microsoft.MixedReality.Toolkit.UI.BoundingBox::currentHandleType
	int32_t ___currentHandleType_73;
	// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundingBox::prevBoundsOverride
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___prevBoundsOverride_74;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundingBox::initialBoundsOverrideSize
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___initialBoundsOverrideSize_75;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::isChildOfTarget
	bool ___isChildOfTarget_76;
	// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.UI.BoundingBox::proximityPointers
	HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 * ___proximityPointers_79;
	// System.Collections.Generic.List`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundingBox::proximityPoints
	List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___proximityPoints_80;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundingBox::active
	bool ___active_81;
	// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundingBox::<TargetBounds>k__BackingField
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___U3CTargetBoundsU3Ek__BackingField_82;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle> Microsoft.MixedReality.Toolkit.UI.BoundingBox::handles
	List_1_t7A068ACEEFC84EF10744E3AED52316F66F75C48B * ___handles_83;
	// System.Collections.Generic.List`1<UnityEngine.Transform> Microsoft.MixedReality.Toolkit.UI.BoundingBox::corners
	List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___corners_84;
	// System.Collections.Generic.List`1<UnityEngine.Transform> Microsoft.MixedReality.Toolkit.UI.BoundingBox::balls
	List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___balls_85;

public:
	inline static int32_t get_offset_of_targetObject_4() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___targetObject_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_targetObject_4() const { return ___targetObject_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_targetObject_4() { return &___targetObject_4; }
	inline void set_targetObject_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___targetObject_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___targetObject_4), (void*)value);
	}

	inline static int32_t get_offset_of_boundsOverride_5() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boundsOverride_5)); }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * get_boundsOverride_5() const { return ___boundsOverride_5; }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA ** get_address_of_boundsOverride_5() { return &___boundsOverride_5; }
	inline void set_boundsOverride_5(BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * value)
	{
		___boundsOverride_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boundsOverride_5), (void*)value);
	}

	inline static int32_t get_offset_of_boundsCalculationMethod_6() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boundsCalculationMethod_6)); }
	inline int32_t get_boundsCalculationMethod_6() const { return ___boundsCalculationMethod_6; }
	inline int32_t* get_address_of_boundsCalculationMethod_6() { return &___boundsCalculationMethod_6; }
	inline void set_boundsCalculationMethod_6(int32_t value)
	{
		___boundsCalculationMethod_6 = value;
	}

	inline static int32_t get_offset_of_activation_7() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___activation_7)); }
	inline int32_t get_activation_7() const { return ___activation_7; }
	inline int32_t* get_address_of_activation_7() { return &___activation_7; }
	inline void set_activation_7(int32_t value)
	{
		___activation_7 = value;
	}

	inline static int32_t get_offset_of_scaleMinimum_8() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleMinimum_8)); }
	inline float get_scaleMinimum_8() const { return ___scaleMinimum_8; }
	inline float* get_address_of_scaleMinimum_8() { return &___scaleMinimum_8; }
	inline void set_scaleMinimum_8(float value)
	{
		___scaleMinimum_8 = value;
	}

	inline static int32_t get_offset_of_scaleMaximum_9() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleMaximum_9)); }
	inline float get_scaleMaximum_9() const { return ___scaleMaximum_9; }
	inline float* get_address_of_scaleMaximum_9() { return &___scaleMaximum_9; }
	inline void set_scaleMaximum_9(float value)
	{
		___scaleMaximum_9 = value;
	}

	inline static int32_t get_offset_of_flattenAxis_10() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___flattenAxis_10)); }
	inline int32_t get_flattenAxis_10() const { return ___flattenAxis_10; }
	inline int32_t* get_address_of_flattenAxis_10() { return &___flattenAxis_10; }
	inline void set_flattenAxis_10(int32_t value)
	{
		___flattenAxis_10 = value;
	}

	inline static int32_t get_offset_of_flattenAxisDisplayScale_11() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___flattenAxisDisplayScale_11)); }
	inline float get_flattenAxisDisplayScale_11() const { return ___flattenAxisDisplayScale_11; }
	inline float* get_address_of_flattenAxisDisplayScale_11() { return &___flattenAxisDisplayScale_11; }
	inline void set_flattenAxisDisplayScale_11(float value)
	{
		___flattenAxisDisplayScale_11 = value;
	}

	inline static int32_t get_offset_of_boxPadding_12() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boxPadding_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_boxPadding_12() const { return ___boxPadding_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_boxPadding_12() { return &___boxPadding_12; }
	inline void set_boxPadding_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___boxPadding_12 = value;
	}

	inline static int32_t get_offset_of_boxMaterial_13() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boxMaterial_13)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_boxMaterial_13() const { return ___boxMaterial_13; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_boxMaterial_13() { return &___boxMaterial_13; }
	inline void set_boxMaterial_13(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___boxMaterial_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxMaterial_13), (void*)value);
	}

	inline static int32_t get_offset_of_boxGrabbedMaterial_14() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boxGrabbedMaterial_14)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_boxGrabbedMaterial_14() const { return ___boxGrabbedMaterial_14; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_boxGrabbedMaterial_14() { return &___boxGrabbedMaterial_14; }
	inline void set_boxGrabbedMaterial_14(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___boxGrabbedMaterial_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxGrabbedMaterial_14), (void*)value);
	}

	inline static int32_t get_offset_of_showWireframe_15() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___showWireframe_15)); }
	inline bool get_showWireframe_15() const { return ___showWireframe_15; }
	inline bool* get_address_of_showWireframe_15() { return &___showWireframe_15; }
	inline void set_showWireframe_15(bool value)
	{
		___showWireframe_15 = value;
	}

	inline static int32_t get_offset_of_wireframeShape_16() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___wireframeShape_16)); }
	inline int32_t get_wireframeShape_16() const { return ___wireframeShape_16; }
	inline int32_t* get_address_of_wireframeShape_16() { return &___wireframeShape_16; }
	inline void set_wireframeShape_16(int32_t value)
	{
		___wireframeShape_16 = value;
	}

	inline static int32_t get_offset_of_wireframeMaterial_17() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___wireframeMaterial_17)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_wireframeMaterial_17() const { return ___wireframeMaterial_17; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_wireframeMaterial_17() { return &___wireframeMaterial_17; }
	inline void set_wireframeMaterial_17(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___wireframeMaterial_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___wireframeMaterial_17), (void*)value);
	}

	inline static int32_t get_offset_of_wireframeEdgeRadius_18() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___wireframeEdgeRadius_18)); }
	inline float get_wireframeEdgeRadius_18() const { return ___wireframeEdgeRadius_18; }
	inline float* get_address_of_wireframeEdgeRadius_18() { return &___wireframeEdgeRadius_18; }
	inline void set_wireframeEdgeRadius_18(float value)
	{
		___wireframeEdgeRadius_18 = value;
	}

	inline static int32_t get_offset_of_handleMaterial_19() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___handleMaterial_19)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_handleMaterial_19() const { return ___handleMaterial_19; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_handleMaterial_19() { return &___handleMaterial_19; }
	inline void set_handleMaterial_19(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___handleMaterial_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handleMaterial_19), (void*)value);
	}

	inline static int32_t get_offset_of_handleGrabbedMaterial_20() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___handleGrabbedMaterial_20)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_handleGrabbedMaterial_20() const { return ___handleGrabbedMaterial_20; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_handleGrabbedMaterial_20() { return &___handleGrabbedMaterial_20; }
	inline void set_handleGrabbedMaterial_20(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___handleGrabbedMaterial_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handleGrabbedMaterial_20), (void*)value);
	}

	inline static int32_t get_offset_of_scaleHandlePrefab_21() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleHandlePrefab_21)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_scaleHandlePrefab_21() const { return ___scaleHandlePrefab_21; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_scaleHandlePrefab_21() { return &___scaleHandlePrefab_21; }
	inline void set_scaleHandlePrefab_21(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___scaleHandlePrefab_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleHandlePrefab_21), (void*)value);
	}

	inline static int32_t get_offset_of_scaleHandleSlatePrefab_22() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleHandleSlatePrefab_22)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_scaleHandleSlatePrefab_22() const { return ___scaleHandleSlatePrefab_22; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_scaleHandleSlatePrefab_22() { return &___scaleHandleSlatePrefab_22; }
	inline void set_scaleHandleSlatePrefab_22(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___scaleHandleSlatePrefab_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleHandleSlatePrefab_22), (void*)value);
	}

	inline static int32_t get_offset_of_scaleHandleSize_23() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleHandleSize_23)); }
	inline float get_scaleHandleSize_23() const { return ___scaleHandleSize_23; }
	inline float* get_address_of_scaleHandleSize_23() { return &___scaleHandleSize_23; }
	inline void set_scaleHandleSize_23(float value)
	{
		___scaleHandleSize_23 = value;
	}

	inline static int32_t get_offset_of_scaleHandleColliderPadding_24() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleHandleColliderPadding_24)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_scaleHandleColliderPadding_24() const { return ___scaleHandleColliderPadding_24; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_scaleHandleColliderPadding_24() { return &___scaleHandleColliderPadding_24; }
	inline void set_scaleHandleColliderPadding_24(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___scaleHandleColliderPadding_24 = value;
	}

	inline static int32_t get_offset_of_rotationHandlePrefab_25() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___rotationHandlePrefab_25)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_rotationHandlePrefab_25() const { return ___rotationHandlePrefab_25; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_rotationHandlePrefab_25() { return &___rotationHandlePrefab_25; }
	inline void set_rotationHandlePrefab_25(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___rotationHandlePrefab_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationHandlePrefab_25), (void*)value);
	}

	inline static int32_t get_offset_of_rotationHandleSize_26() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___rotationHandleSize_26)); }
	inline float get_rotationHandleSize_26() const { return ___rotationHandleSize_26; }
	inline float* get_address_of_rotationHandleSize_26() { return &___rotationHandleSize_26; }
	inline void set_rotationHandleSize_26(float value)
	{
		___rotationHandleSize_26 = value;
	}

	inline static int32_t get_offset_of_rotateHandleColliderPadding_27() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___rotateHandleColliderPadding_27)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rotateHandleColliderPadding_27() const { return ___rotateHandleColliderPadding_27; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rotateHandleColliderPadding_27() { return &___rotateHandleColliderPadding_27; }
	inline void set_rotateHandleColliderPadding_27(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rotateHandleColliderPadding_27 = value;
	}

	inline static int32_t get_offset_of_rotationHandlePrefabColliderType_28() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___rotationHandlePrefabColliderType_28)); }
	inline int32_t get_rotationHandlePrefabColliderType_28() const { return ___rotationHandlePrefabColliderType_28; }
	inline int32_t* get_address_of_rotationHandlePrefabColliderType_28() { return &___rotationHandlePrefabColliderType_28; }
	inline void set_rotationHandlePrefabColliderType_28(int32_t value)
	{
		___rotationHandlePrefabColliderType_28 = value;
	}

	inline static int32_t get_offset_of_showScaleHandles_29() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___showScaleHandles_29)); }
	inline bool get_showScaleHandles_29() const { return ___showScaleHandles_29; }
	inline bool* get_address_of_showScaleHandles_29() { return &___showScaleHandles_29; }
	inline void set_showScaleHandles_29(bool value)
	{
		___showScaleHandles_29 = value;
	}

	inline static int32_t get_offset_of_showRotationHandleForX_30() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___showRotationHandleForX_30)); }
	inline bool get_showRotationHandleForX_30() const { return ___showRotationHandleForX_30; }
	inline bool* get_address_of_showRotationHandleForX_30() { return &___showRotationHandleForX_30; }
	inline void set_showRotationHandleForX_30(bool value)
	{
		___showRotationHandleForX_30 = value;
	}

	inline static int32_t get_offset_of_showRotationHandleForY_31() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___showRotationHandleForY_31)); }
	inline bool get_showRotationHandleForY_31() const { return ___showRotationHandleForY_31; }
	inline bool* get_address_of_showRotationHandleForY_31() { return &___showRotationHandleForY_31; }
	inline void set_showRotationHandleForY_31(bool value)
	{
		___showRotationHandleForY_31 = value;
	}

	inline static int32_t get_offset_of_showRotationHandleForZ_32() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___showRotationHandleForZ_32)); }
	inline bool get_showRotationHandleForZ_32() const { return ___showRotationHandleForZ_32; }
	inline bool* get_address_of_showRotationHandleForZ_32() { return &___showRotationHandleForZ_32; }
	inline void set_showRotationHandleForZ_32(bool value)
	{
		___showRotationHandleForZ_32 = value;
	}

	inline static int32_t get_offset_of_drawTetherWhenManipulating_33() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___drawTetherWhenManipulating_33)); }
	inline bool get_drawTetherWhenManipulating_33() const { return ___drawTetherWhenManipulating_33; }
	inline bool* get_address_of_drawTetherWhenManipulating_33() { return &___drawTetherWhenManipulating_33; }
	inline void set_drawTetherWhenManipulating_33(bool value)
	{
		___drawTetherWhenManipulating_33 = value;
	}

	inline static int32_t get_offset_of_proximityEffectActive_34() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___proximityEffectActive_34)); }
	inline bool get_proximityEffectActive_34() const { return ___proximityEffectActive_34; }
	inline bool* get_address_of_proximityEffectActive_34() { return &___proximityEffectActive_34; }
	inline void set_proximityEffectActive_34(bool value)
	{
		___proximityEffectActive_34 = value;
	}

	inline static int32_t get_offset_of_handleMediumProximity_35() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___handleMediumProximity_35)); }
	inline float get_handleMediumProximity_35() const { return ___handleMediumProximity_35; }
	inline float* get_address_of_handleMediumProximity_35() { return &___handleMediumProximity_35; }
	inline void set_handleMediumProximity_35(float value)
	{
		___handleMediumProximity_35 = value;
	}

	inline static int32_t get_offset_of_handleCloseProximity_36() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___handleCloseProximity_36)); }
	inline float get_handleCloseProximity_36() const { return ___handleCloseProximity_36; }
	inline float* get_address_of_handleCloseProximity_36() { return &___handleCloseProximity_36; }
	inline void set_handleCloseProximity_36(float value)
	{
		___handleCloseProximity_36 = value;
	}

	inline static int32_t get_offset_of_farScale_37() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___farScale_37)); }
	inline float get_farScale_37() const { return ___farScale_37; }
	inline float* get_address_of_farScale_37() { return &___farScale_37; }
	inline void set_farScale_37(float value)
	{
		___farScale_37 = value;
	}

	inline static int32_t get_offset_of_mediumScale_38() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___mediumScale_38)); }
	inline float get_mediumScale_38() const { return ___mediumScale_38; }
	inline float* get_address_of_mediumScale_38() { return &___mediumScale_38; }
	inline void set_mediumScale_38(float value)
	{
		___mediumScale_38 = value;
	}

	inline static int32_t get_offset_of_closeScale_39() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___closeScale_39)); }
	inline float get_closeScale_39() const { return ___closeScale_39; }
	inline float* get_address_of_closeScale_39() { return &___closeScale_39; }
	inline void set_closeScale_39(float value)
	{
		___closeScale_39 = value;
	}

	inline static int32_t get_offset_of_farGrowRate_40() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___farGrowRate_40)); }
	inline float get_farGrowRate_40() const { return ___farGrowRate_40; }
	inline float* get_address_of_farGrowRate_40() { return &___farGrowRate_40; }
	inline void set_farGrowRate_40(float value)
	{
		___farGrowRate_40 = value;
	}

	inline static int32_t get_offset_of_mediumGrowRate_41() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___mediumGrowRate_41)); }
	inline float get_mediumGrowRate_41() const { return ___mediumGrowRate_41; }
	inline float* get_address_of_mediumGrowRate_41() { return &___mediumGrowRate_41; }
	inline void set_mediumGrowRate_41(float value)
	{
		___mediumGrowRate_41 = value;
	}

	inline static int32_t get_offset_of_closeGrowRate_42() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___closeGrowRate_42)); }
	inline float get_closeGrowRate_42() const { return ___closeGrowRate_42; }
	inline float* get_address_of_closeGrowRate_42() { return &___closeGrowRate_42; }
	inline void set_closeGrowRate_42(float value)
	{
		___closeGrowRate_42 = value;
	}

	inline static int32_t get_offset_of_handlesIgnoreCollider_43() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___handlesIgnoreCollider_43)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_handlesIgnoreCollider_43() const { return ___handlesIgnoreCollider_43; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_handlesIgnoreCollider_43() { return &___handlesIgnoreCollider_43; }
	inline void set_handlesIgnoreCollider_43(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___handlesIgnoreCollider_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handlesIgnoreCollider_43), (void*)value);
	}

	inline static int32_t get_offset_of_debugText_44() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___debugText_44)); }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * get_debugText_44() const { return ___debugText_44; }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A ** get_address_of_debugText_44() { return &___debugText_44; }
	inline void set_debugText_44(TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * value)
	{
		___debugText_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___debugText_44), (void*)value);
	}

	inline static int32_t get_offset_of_hideElementsInInspector_45() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___hideElementsInInspector_45)); }
	inline bool get_hideElementsInInspector_45() const { return ___hideElementsInInspector_45; }
	inline bool* get_address_of_hideElementsInInspector_45() { return &___hideElementsInInspector_45; }
	inline void set_hideElementsInInspector_45(bool value)
	{
		___hideElementsInInspector_45 = value;
	}

	inline static int32_t get_offset_of_RotateStarted_46() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___RotateStarted_46)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_RotateStarted_46() const { return ___RotateStarted_46; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_RotateStarted_46() { return &___RotateStarted_46; }
	inline void set_RotateStarted_46(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___RotateStarted_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RotateStarted_46), (void*)value);
	}

	inline static int32_t get_offset_of_RotateStopped_47() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___RotateStopped_47)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_RotateStopped_47() const { return ___RotateStopped_47; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_RotateStopped_47() { return &___RotateStopped_47; }
	inline void set_RotateStopped_47(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___RotateStopped_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RotateStopped_47), (void*)value);
	}

	inline static int32_t get_offset_of_ScaleStarted_48() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___ScaleStarted_48)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_ScaleStarted_48() const { return ___ScaleStarted_48; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_ScaleStarted_48() { return &___ScaleStarted_48; }
	inline void set_ScaleStarted_48(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___ScaleStarted_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ScaleStarted_48), (void*)value);
	}

	inline static int32_t get_offset_of_ScaleStopped_49() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___ScaleStopped_49)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_ScaleStopped_49() const { return ___ScaleStopped_49; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_ScaleStopped_49() { return &___ScaleStopped_49; }
	inline void set_ScaleStopped_49(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___ScaleStopped_49 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ScaleStopped_49), (void*)value);
	}

	inline static int32_t get_offset_of_wireframeOnly_50() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___wireframeOnly_50)); }
	inline bool get_wireframeOnly_50() const { return ___wireframeOnly_50; }
	inline bool* get_address_of_wireframeOnly_50() { return &___wireframeOnly_50; }
	inline void set_wireframeOnly_50(bool value)
	{
		___wireframeOnly_50 = value;
	}

	inline static int32_t get_offset_of_currentPointer_51() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___currentPointer_51)); }
	inline RuntimeObject* get_currentPointer_51() const { return ___currentPointer_51; }
	inline RuntimeObject** get_address_of_currentPointer_51() { return &___currentPointer_51; }
	inline void set_currentPointer_51(RuntimeObject* value)
	{
		___currentPointer_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentPointer_51), (void*)value);
	}

	inline static int32_t get_offset_of_rigRoot_52() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___rigRoot_52)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_rigRoot_52() const { return ___rigRoot_52; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_rigRoot_52() { return &___rigRoot_52; }
	inline void set_rigRoot_52(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___rigRoot_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rigRoot_52), (void*)value);
	}

	inline static int32_t get_offset_of_boxDisplay_53() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boxDisplay_53)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_boxDisplay_53() const { return ___boxDisplay_53; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_boxDisplay_53() { return &___boxDisplay_53; }
	inline void set_boxDisplay_53(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___boxDisplay_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxDisplay_53), (void*)value);
	}

	inline static int32_t get_offset_of_boundsCorners_54() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___boundsCorners_54)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_boundsCorners_54() const { return ___boundsCorners_54; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_boundsCorners_54() { return &___boundsCorners_54; }
	inline void set_boundsCorners_54(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___boundsCorners_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boundsCorners_54), (void*)value);
	}

	inline static int32_t get_offset_of_currentBoundsExtents_55() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___currentBoundsExtents_55)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentBoundsExtents_55() const { return ___currentBoundsExtents_55; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentBoundsExtents_55() { return &___currentBoundsExtents_55; }
	inline void set_currentBoundsExtents_55(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentBoundsExtents_55 = value;
	}

	inline static int32_t get_offset_of_eyeTrackingProvider_56() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___eyeTrackingProvider_56)); }
	inline RuntimeObject* get_eyeTrackingProvider_56() const { return ___eyeTrackingProvider_56; }
	inline RuntimeObject** get_address_of_eyeTrackingProvider_56() { return &___eyeTrackingProvider_56; }
	inline void set_eyeTrackingProvider_56(RuntimeObject* value)
	{
		___eyeTrackingProvider_56 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___eyeTrackingProvider_56), (void*)value);
	}

	inline static int32_t get_offset_of_touchingSources_57() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___touchingSources_57)); }
	inline List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * get_touchingSources_57() const { return ___touchingSources_57; }
	inline List_1_t74E48C60E247472C3845D62B1372777193ED6D09 ** get_address_of_touchingSources_57() { return &___touchingSources_57; }
	inline void set_touchingSources_57(List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * value)
	{
		___touchingSources_57 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchingSources_57), (void*)value);
	}

	inline static int32_t get_offset_of_links_58() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___links_58)); }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * get_links_58() const { return ___links_58; }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 ** get_address_of_links_58() { return &___links_58; }
	inline void set_links_58(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * value)
	{
		___links_58 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___links_58), (void*)value);
	}

	inline static int32_t get_offset_of_linkRenderers_59() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___linkRenderers_59)); }
	inline List_1_tB7C5D51CDBF6C4C12F2D4B38EB89E727EED00749 * get_linkRenderers_59() const { return ___linkRenderers_59; }
	inline List_1_tB7C5D51CDBF6C4C12F2D4B38EB89E727EED00749 ** get_address_of_linkRenderers_59() { return &___linkRenderers_59; }
	inline void set_linkRenderers_59(List_1_tB7C5D51CDBF6C4C12F2D4B38EB89E727EED00749 * value)
	{
		___linkRenderers_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___linkRenderers_59), (void*)value);
	}

	inline static int32_t get_offset_of_sourcesDetected_60() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___sourcesDetected_60)); }
	inline List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * get_sourcesDetected_60() const { return ___sourcesDetected_60; }
	inline List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 ** get_address_of_sourcesDetected_60() { return &___sourcesDetected_60; }
	inline void set_sourcesDetected_60(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * value)
	{
		___sourcesDetected_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourcesDetected_60), (void*)value);
	}

	inline static int32_t get_offset_of_edgeCenters_61() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___edgeCenters_61)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_edgeCenters_61() const { return ___edgeCenters_61; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_edgeCenters_61() { return &___edgeCenters_61; }
	inline void set_edgeCenters_61(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___edgeCenters_61 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___edgeCenters_61), (void*)value);
	}

	inline static int32_t get_offset_of_currentRotationAxis_62() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___currentRotationAxis_62)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentRotationAxis_62() const { return ___currentRotationAxis_62; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentRotationAxis_62() { return &___currentRotationAxis_62; }
	inline void set_currentRotationAxis_62(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentRotationAxis_62 = value;
	}

	inline static int32_t get_offset_of_initialScaleOnGrabStart_63() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___initialScaleOnGrabStart_63)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialScaleOnGrabStart_63() const { return ___initialScaleOnGrabStart_63; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialScaleOnGrabStart_63() { return &___initialScaleOnGrabStart_63; }
	inline void set_initialScaleOnGrabStart_63(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialScaleOnGrabStart_63 = value;
	}

	inline static int32_t get_offset_of_initialPositionOnGrabStart_64() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___initialPositionOnGrabStart_64)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialPositionOnGrabStart_64() const { return ___initialPositionOnGrabStart_64; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialPositionOnGrabStart_64() { return &___initialPositionOnGrabStart_64; }
	inline void set_initialPositionOnGrabStart_64(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialPositionOnGrabStart_64 = value;
	}

	inline static int32_t get_offset_of_initialGrabPoint_65() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___initialGrabPoint_65)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialGrabPoint_65() const { return ___initialGrabPoint_65; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialGrabPoint_65() { return &___initialGrabPoint_65; }
	inline void set_initialGrabPoint_65(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialGrabPoint_65 = value;
	}

	inline static int32_t get_offset_of_currentGrabPoint_66() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___currentGrabPoint_66)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentGrabPoint_66() const { return ___currentGrabPoint_66; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentGrabPoint_66() { return &___currentGrabPoint_66; }
	inline void set_currentGrabPoint_66(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentGrabPoint_66 = value;
	}

	inline static int32_t get_offset_of_scaleConstraint_67() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___scaleConstraint_67)); }
	inline MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * get_scaleConstraint_67() const { return ___scaleConstraint_67; }
	inline MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F ** get_address_of_scaleConstraint_67() { return &___scaleConstraint_67; }
	inline void set_scaleConstraint_67(MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * value)
	{
		___scaleConstraint_67 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleConstraint_67), (void*)value);
	}

	inline static int32_t get_offset_of_grabPointInPointer_68() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___grabPointInPointer_68)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_grabPointInPointer_68() const { return ___grabPointInPointer_68; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_grabPointInPointer_68() { return &___grabPointInPointer_68; }
	inline void set_grabPointInPointer_68(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___grabPointInPointer_68 = value;
	}

	inline static int32_t get_offset_of_edgeAxes_69() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___edgeAxes_69)); }
	inline CardinalAxisTypeU5BU5D_t2E1F21AE9A0B659371A2EB13D3A23C828B187429* get_edgeAxes_69() const { return ___edgeAxes_69; }
	inline CardinalAxisTypeU5BU5D_t2E1F21AE9A0B659371A2EB13D3A23C828B187429** get_address_of_edgeAxes_69() { return &___edgeAxes_69; }
	inline void set_edgeAxes_69(CardinalAxisTypeU5BU5D_t2E1F21AE9A0B659371A2EB13D3A23C828B187429* value)
	{
		___edgeAxes_69 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___edgeAxes_69), (void*)value);
	}

	inline static int32_t get_offset_of_flattenedHandles_70() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___flattenedHandles_70)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_flattenedHandles_70() const { return ___flattenedHandles_70; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_flattenedHandles_70() { return &___flattenedHandles_70; }
	inline void set_flattenedHandles_70(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___flattenedHandles_70 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___flattenedHandles_70), (void*)value);
	}

	inline static int32_t get_offset_of_oppositeCorner_71() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___oppositeCorner_71)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oppositeCorner_71() const { return ___oppositeCorner_71; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oppositeCorner_71() { return &___oppositeCorner_71; }
	inline void set_oppositeCorner_71(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oppositeCorner_71 = value;
	}

	inline static int32_t get_offset_of_diagonalDir_72() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___diagonalDir_72)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_diagonalDir_72() const { return ___diagonalDir_72; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_diagonalDir_72() { return &___diagonalDir_72; }
	inline void set_diagonalDir_72(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___diagonalDir_72 = value;
	}

	inline static int32_t get_offset_of_currentHandleType_73() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___currentHandleType_73)); }
	inline int32_t get_currentHandleType_73() const { return ___currentHandleType_73; }
	inline int32_t* get_address_of_currentHandleType_73() { return &___currentHandleType_73; }
	inline void set_currentHandleType_73(int32_t value)
	{
		___currentHandleType_73 = value;
	}

	inline static int32_t get_offset_of_prevBoundsOverride_74() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___prevBoundsOverride_74)); }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  get_prevBoundsOverride_74() const { return ___prevBoundsOverride_74; }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * get_address_of_prevBoundsOverride_74() { return &___prevBoundsOverride_74; }
	inline void set_prevBoundsOverride_74(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  value)
	{
		___prevBoundsOverride_74 = value;
	}

	inline static int32_t get_offset_of_initialBoundsOverrideSize_75() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___initialBoundsOverrideSize_75)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_initialBoundsOverrideSize_75() const { return ___initialBoundsOverrideSize_75; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_initialBoundsOverrideSize_75() { return &___initialBoundsOverrideSize_75; }
	inline void set_initialBoundsOverrideSize_75(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___initialBoundsOverrideSize_75 = value;
	}

	inline static int32_t get_offset_of_isChildOfTarget_76() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___isChildOfTarget_76)); }
	inline bool get_isChildOfTarget_76() const { return ___isChildOfTarget_76; }
	inline bool* get_address_of_isChildOfTarget_76() { return &___isChildOfTarget_76; }
	inline void set_isChildOfTarget_76(bool value)
	{
		___isChildOfTarget_76 = value;
	}

	inline static int32_t get_offset_of_proximityPointers_79() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___proximityPointers_79)); }
	inline HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 * get_proximityPointers_79() const { return ___proximityPointers_79; }
	inline HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 ** get_address_of_proximityPointers_79() { return &___proximityPointers_79; }
	inline void set_proximityPointers_79(HashSet_1_t3615F5ED9280ECD004F47FC31AC429B5A4EEB877 * value)
	{
		___proximityPointers_79 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___proximityPointers_79), (void*)value);
	}

	inline static int32_t get_offset_of_proximityPoints_80() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___proximityPoints_80)); }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * get_proximityPoints_80() const { return ___proximityPoints_80; }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 ** get_address_of_proximityPoints_80() { return &___proximityPoints_80; }
	inline void set_proximityPoints_80(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * value)
	{
		___proximityPoints_80 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___proximityPoints_80), (void*)value);
	}

	inline static int32_t get_offset_of_active_81() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___active_81)); }
	inline bool get_active_81() const { return ___active_81; }
	inline bool* get_address_of_active_81() { return &___active_81; }
	inline void set_active_81(bool value)
	{
		___active_81 = value;
	}

	inline static int32_t get_offset_of_U3CTargetBoundsU3Ek__BackingField_82() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___U3CTargetBoundsU3Ek__BackingField_82)); }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * get_U3CTargetBoundsU3Ek__BackingField_82() const { return ___U3CTargetBoundsU3Ek__BackingField_82; }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA ** get_address_of_U3CTargetBoundsU3Ek__BackingField_82() { return &___U3CTargetBoundsU3Ek__BackingField_82; }
	inline void set_U3CTargetBoundsU3Ek__BackingField_82(BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * value)
	{
		___U3CTargetBoundsU3Ek__BackingField_82 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CTargetBoundsU3Ek__BackingField_82), (void*)value);
	}

	inline static int32_t get_offset_of_handles_83() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___handles_83)); }
	inline List_1_t7A068ACEEFC84EF10744E3AED52316F66F75C48B * get_handles_83() const { return ___handles_83; }
	inline List_1_t7A068ACEEFC84EF10744E3AED52316F66F75C48B ** get_address_of_handles_83() { return &___handles_83; }
	inline void set_handles_83(List_1_t7A068ACEEFC84EF10744E3AED52316F66F75C48B * value)
	{
		___handles_83 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handles_83), (void*)value);
	}

	inline static int32_t get_offset_of_corners_84() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___corners_84)); }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * get_corners_84() const { return ___corners_84; }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 ** get_address_of_corners_84() { return &___corners_84; }
	inline void set_corners_84(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * value)
	{
		___corners_84 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___corners_84), (void*)value);
	}

	inline static int32_t get_offset_of_balls_85() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921, ___balls_85)); }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * get_balls_85() const { return ___balls_85; }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 ** get_address_of_balls_85() { return &___balls_85; }
	inline void set_balls_85(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * value)
	{
		___balls_85 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___balls_85), (void*)value);
	}
};

struct BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921_StaticFields
{
public:
	// System.Collections.Generic.List`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundingBox::TotalBoundsCorners
	List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___TotalBoundsCorners_78;

public:
	inline static int32_t get_offset_of_TotalBoundsCorners_78() { return static_cast<int32_t>(offsetof(BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921_StaticFields, ___TotalBoundsCorners_78)); }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * get_TotalBoundsCorners_78() const { return ___TotalBoundsCorners_78; }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 ** get_address_of_TotalBoundsCorners_78() { return &___TotalBoundsCorners_78; }
	inline void set_TotalBoundsCorners_78(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * value)
	{
		___TotalBoundsCorners_78 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TotalBoundsCorners_78), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl
struct BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::targetObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___targetObject_4;
	// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::boundsOverride
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___boundsOverride_5;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::boundsCalculationMethod
	int32_t ___boundsCalculationMethod_6;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsControlActivationType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::activation
	int32_t ___activation_7;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::flattenAxis
	int32_t ___flattenAxis_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::uniformScaleOnFlattenedAxis
	bool ___uniformScaleOnFlattenedAxis_9;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::boxPadding
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boxPadding_10;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::boxDisplayConfiguration
	BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * ___boxDisplayConfiguration_11;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::linksConfiguration
	LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * ___linksConfiguration_12;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::scaleHandlesConfiguration
	ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * ___scaleHandlesConfiguration_13;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::rotationHandlesConfiguration
	RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * ___rotationHandlesConfiguration_14;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::translationHandlesConfiguration
	TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * ___translationHandlesConfiguration_15;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::handleProximityEffectConfiguration
	ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * ___handleProximityEffectConfiguration_16;
	// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::debugText
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___debugText_17;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::hideElementsInInspector
	bool ___hideElementsInInspector_18;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::smoothingActive
	bool ___smoothingActive_19;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::rotateLerpTime
	float ___rotateLerpTime_20;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::scaleLerpTime
	float ___scaleLerpTime_21;
	// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::translateLerpTime
	float ___translateLerpTime_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::enableConstraints
	bool ___enableConstraints_23;
	// Microsoft.MixedReality.Toolkit.UI.ConstraintManager Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::constraintsManager
	ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ___constraintsManager_24;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::rotateStarted
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___rotateStarted_25;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::rotateStopped
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___rotateStopped_26;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::scaleStarted
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___scaleStarted_27;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::scaleStopped
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___scaleStopped_28;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::translateStarted
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___translateStarted_29;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::translateStopped
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___translateStopped_30;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::elasticsManager
	ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * ___elasticsManager_31;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::links
	Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * ___links_32;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::scaleHandles
	ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * ___scaleHandles_33;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::rotationHandles
	RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * ___rotationHandles_34;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::translationHandles
	TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * ___translationHandles_35;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::boxDisplay
	BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * ___boxDisplay_36;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::proximityEffect
	ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * ___proximityEffect_37;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::wireframeOnly
	bool ___wireframeOnly_38;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::currentPointer
	RuntimeObject* ___currentPointer_39;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::rigRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___rigRoot_40;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::currentBoundsExtents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents_41;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::touchingSources
	List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * ___touchingSources_42;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController> Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::sourcesDetected
	List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * ___sourcesDetected_43;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::currentRotationAxis
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentRotationAxis_44;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::currentTranslationAxis
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentTranslationAxis_45;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::initialScaleOnGrabStart
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialScaleOnGrabStart_46;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::initialRotationOnGrabStart
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___initialRotationOnGrabStart_47;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::initialPositionOnGrabStart
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialPositionOnGrabStart_48;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::initialGrabPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPoint_49;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::currentGrabPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentGrabPoint_50;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::grabPointInPointer
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___grabPointInPointer_51;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::oppositeCorner
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oppositeCorner_52;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::diagonalDir
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___diagonalDir_53;
	// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::currentHandleType
	int32_t ___currentHandleType_54;
	// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::prevBoundsOverride
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___prevBoundsOverride_55;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::initialBoundsOverrideSize
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___initialBoundsOverrideSize_56;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::isChildOfTarget
	bool ___isChildOfTarget_57;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::boundsCorners
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___boundsCorners_60;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::<BoundsCorners>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CBoundsCornersU3Ek__BackingField_61;
	// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::<TargetBounds>k__BackingField
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___U3CTargetBoundsU3Ek__BackingField_62;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::active
	bool ___active_63;
	// System.Collections.Generic.List`1<UnityEngine.Transform> Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::childTransforms
	List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___childTransforms_64;

public:
	inline static int32_t get_offset_of_targetObject_4() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___targetObject_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_targetObject_4() const { return ___targetObject_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_targetObject_4() { return &___targetObject_4; }
	inline void set_targetObject_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___targetObject_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___targetObject_4), (void*)value);
	}

	inline static int32_t get_offset_of_boundsOverride_5() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___boundsOverride_5)); }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * get_boundsOverride_5() const { return ___boundsOverride_5; }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA ** get_address_of_boundsOverride_5() { return &___boundsOverride_5; }
	inline void set_boundsOverride_5(BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * value)
	{
		___boundsOverride_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boundsOverride_5), (void*)value);
	}

	inline static int32_t get_offset_of_boundsCalculationMethod_6() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___boundsCalculationMethod_6)); }
	inline int32_t get_boundsCalculationMethod_6() const { return ___boundsCalculationMethod_6; }
	inline int32_t* get_address_of_boundsCalculationMethod_6() { return &___boundsCalculationMethod_6; }
	inline void set_boundsCalculationMethod_6(int32_t value)
	{
		___boundsCalculationMethod_6 = value;
	}

	inline static int32_t get_offset_of_activation_7() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___activation_7)); }
	inline int32_t get_activation_7() const { return ___activation_7; }
	inline int32_t* get_address_of_activation_7() { return &___activation_7; }
	inline void set_activation_7(int32_t value)
	{
		___activation_7 = value;
	}

	inline static int32_t get_offset_of_flattenAxis_8() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___flattenAxis_8)); }
	inline int32_t get_flattenAxis_8() const { return ___flattenAxis_8; }
	inline int32_t* get_address_of_flattenAxis_8() { return &___flattenAxis_8; }
	inline void set_flattenAxis_8(int32_t value)
	{
		___flattenAxis_8 = value;
	}

	inline static int32_t get_offset_of_uniformScaleOnFlattenedAxis_9() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___uniformScaleOnFlattenedAxis_9)); }
	inline bool get_uniformScaleOnFlattenedAxis_9() const { return ___uniformScaleOnFlattenedAxis_9; }
	inline bool* get_address_of_uniformScaleOnFlattenedAxis_9() { return &___uniformScaleOnFlattenedAxis_9; }
	inline void set_uniformScaleOnFlattenedAxis_9(bool value)
	{
		___uniformScaleOnFlattenedAxis_9 = value;
	}

	inline static int32_t get_offset_of_boxPadding_10() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___boxPadding_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_boxPadding_10() const { return ___boxPadding_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_boxPadding_10() { return &___boxPadding_10; }
	inline void set_boxPadding_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___boxPadding_10 = value;
	}

	inline static int32_t get_offset_of_boxDisplayConfiguration_11() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___boxDisplayConfiguration_11)); }
	inline BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * get_boxDisplayConfiguration_11() const { return ___boxDisplayConfiguration_11; }
	inline BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 ** get_address_of_boxDisplayConfiguration_11() { return &___boxDisplayConfiguration_11; }
	inline void set_boxDisplayConfiguration_11(BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * value)
	{
		___boxDisplayConfiguration_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxDisplayConfiguration_11), (void*)value);
	}

	inline static int32_t get_offset_of_linksConfiguration_12() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___linksConfiguration_12)); }
	inline LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * get_linksConfiguration_12() const { return ___linksConfiguration_12; }
	inline LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 ** get_address_of_linksConfiguration_12() { return &___linksConfiguration_12; }
	inline void set_linksConfiguration_12(LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * value)
	{
		___linksConfiguration_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___linksConfiguration_12), (void*)value);
	}

	inline static int32_t get_offset_of_scaleHandlesConfiguration_13() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___scaleHandlesConfiguration_13)); }
	inline ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * get_scaleHandlesConfiguration_13() const { return ___scaleHandlesConfiguration_13; }
	inline ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 ** get_address_of_scaleHandlesConfiguration_13() { return &___scaleHandlesConfiguration_13; }
	inline void set_scaleHandlesConfiguration_13(ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * value)
	{
		___scaleHandlesConfiguration_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleHandlesConfiguration_13), (void*)value);
	}

	inline static int32_t get_offset_of_rotationHandlesConfiguration_14() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___rotationHandlesConfiguration_14)); }
	inline RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * get_rotationHandlesConfiguration_14() const { return ___rotationHandlesConfiguration_14; }
	inline RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A ** get_address_of_rotationHandlesConfiguration_14() { return &___rotationHandlesConfiguration_14; }
	inline void set_rotationHandlesConfiguration_14(RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * value)
	{
		___rotationHandlesConfiguration_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationHandlesConfiguration_14), (void*)value);
	}

	inline static int32_t get_offset_of_translationHandlesConfiguration_15() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___translationHandlesConfiguration_15)); }
	inline TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * get_translationHandlesConfiguration_15() const { return ___translationHandlesConfiguration_15; }
	inline TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B ** get_address_of_translationHandlesConfiguration_15() { return &___translationHandlesConfiguration_15; }
	inline void set_translationHandlesConfiguration_15(TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * value)
	{
		___translationHandlesConfiguration_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translationHandlesConfiguration_15), (void*)value);
	}

	inline static int32_t get_offset_of_handleProximityEffectConfiguration_16() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___handleProximityEffectConfiguration_16)); }
	inline ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * get_handleProximityEffectConfiguration_16() const { return ___handleProximityEffectConfiguration_16; }
	inline ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 ** get_address_of_handleProximityEffectConfiguration_16() { return &___handleProximityEffectConfiguration_16; }
	inline void set_handleProximityEffectConfiguration_16(ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * value)
	{
		___handleProximityEffectConfiguration_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handleProximityEffectConfiguration_16), (void*)value);
	}

	inline static int32_t get_offset_of_debugText_17() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___debugText_17)); }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * get_debugText_17() const { return ___debugText_17; }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A ** get_address_of_debugText_17() { return &___debugText_17; }
	inline void set_debugText_17(TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * value)
	{
		___debugText_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___debugText_17), (void*)value);
	}

	inline static int32_t get_offset_of_hideElementsInInspector_18() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___hideElementsInInspector_18)); }
	inline bool get_hideElementsInInspector_18() const { return ___hideElementsInInspector_18; }
	inline bool* get_address_of_hideElementsInInspector_18() { return &___hideElementsInInspector_18; }
	inline void set_hideElementsInInspector_18(bool value)
	{
		___hideElementsInInspector_18 = value;
	}

	inline static int32_t get_offset_of_smoothingActive_19() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___smoothingActive_19)); }
	inline bool get_smoothingActive_19() const { return ___smoothingActive_19; }
	inline bool* get_address_of_smoothingActive_19() { return &___smoothingActive_19; }
	inline void set_smoothingActive_19(bool value)
	{
		___smoothingActive_19 = value;
	}

	inline static int32_t get_offset_of_rotateLerpTime_20() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___rotateLerpTime_20)); }
	inline float get_rotateLerpTime_20() const { return ___rotateLerpTime_20; }
	inline float* get_address_of_rotateLerpTime_20() { return &___rotateLerpTime_20; }
	inline void set_rotateLerpTime_20(float value)
	{
		___rotateLerpTime_20 = value;
	}

	inline static int32_t get_offset_of_scaleLerpTime_21() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___scaleLerpTime_21)); }
	inline float get_scaleLerpTime_21() const { return ___scaleLerpTime_21; }
	inline float* get_address_of_scaleLerpTime_21() { return &___scaleLerpTime_21; }
	inline void set_scaleLerpTime_21(float value)
	{
		___scaleLerpTime_21 = value;
	}

	inline static int32_t get_offset_of_translateLerpTime_22() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___translateLerpTime_22)); }
	inline float get_translateLerpTime_22() const { return ___translateLerpTime_22; }
	inline float* get_address_of_translateLerpTime_22() { return &___translateLerpTime_22; }
	inline void set_translateLerpTime_22(float value)
	{
		___translateLerpTime_22 = value;
	}

	inline static int32_t get_offset_of_enableConstraints_23() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___enableConstraints_23)); }
	inline bool get_enableConstraints_23() const { return ___enableConstraints_23; }
	inline bool* get_address_of_enableConstraints_23() { return &___enableConstraints_23; }
	inline void set_enableConstraints_23(bool value)
	{
		___enableConstraints_23 = value;
	}

	inline static int32_t get_offset_of_constraintsManager_24() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___constraintsManager_24)); }
	inline ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * get_constraintsManager_24() const { return ___constraintsManager_24; }
	inline ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 ** get_address_of_constraintsManager_24() { return &___constraintsManager_24; }
	inline void set_constraintsManager_24(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * value)
	{
		___constraintsManager_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___constraintsManager_24), (void*)value);
	}

	inline static int32_t get_offset_of_rotateStarted_25() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___rotateStarted_25)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_rotateStarted_25() const { return ___rotateStarted_25; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_rotateStarted_25() { return &___rotateStarted_25; }
	inline void set_rotateStarted_25(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___rotateStarted_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotateStarted_25), (void*)value);
	}

	inline static int32_t get_offset_of_rotateStopped_26() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___rotateStopped_26)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_rotateStopped_26() const { return ___rotateStopped_26; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_rotateStopped_26() { return &___rotateStopped_26; }
	inline void set_rotateStopped_26(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___rotateStopped_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotateStopped_26), (void*)value);
	}

	inline static int32_t get_offset_of_scaleStarted_27() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___scaleStarted_27)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_scaleStarted_27() const { return ___scaleStarted_27; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_scaleStarted_27() { return &___scaleStarted_27; }
	inline void set_scaleStarted_27(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___scaleStarted_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleStarted_27), (void*)value);
	}

	inline static int32_t get_offset_of_scaleStopped_28() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___scaleStopped_28)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_scaleStopped_28() const { return ___scaleStopped_28; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_scaleStopped_28() { return &___scaleStopped_28; }
	inline void set_scaleStopped_28(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___scaleStopped_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleStopped_28), (void*)value);
	}

	inline static int32_t get_offset_of_translateStarted_29() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___translateStarted_29)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_translateStarted_29() const { return ___translateStarted_29; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_translateStarted_29() { return &___translateStarted_29; }
	inline void set_translateStarted_29(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___translateStarted_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translateStarted_29), (void*)value);
	}

	inline static int32_t get_offset_of_translateStopped_30() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___translateStopped_30)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_translateStopped_30() const { return ___translateStopped_30; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_translateStopped_30() { return &___translateStopped_30; }
	inline void set_translateStopped_30(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___translateStopped_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translateStopped_30), (void*)value);
	}

	inline static int32_t get_offset_of_elasticsManager_31() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___elasticsManager_31)); }
	inline ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * get_elasticsManager_31() const { return ___elasticsManager_31; }
	inline ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD ** get_address_of_elasticsManager_31() { return &___elasticsManager_31; }
	inline void set_elasticsManager_31(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * value)
	{
		___elasticsManager_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___elasticsManager_31), (void*)value);
	}

	inline static int32_t get_offset_of_links_32() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___links_32)); }
	inline Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * get_links_32() const { return ___links_32; }
	inline Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 ** get_address_of_links_32() { return &___links_32; }
	inline void set_links_32(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * value)
	{
		___links_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___links_32), (void*)value);
	}

	inline static int32_t get_offset_of_scaleHandles_33() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___scaleHandles_33)); }
	inline ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * get_scaleHandles_33() const { return ___scaleHandles_33; }
	inline ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 ** get_address_of_scaleHandles_33() { return &___scaleHandles_33; }
	inline void set_scaleHandles_33(ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * value)
	{
		___scaleHandles_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleHandles_33), (void*)value);
	}

	inline static int32_t get_offset_of_rotationHandles_34() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___rotationHandles_34)); }
	inline RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * get_rotationHandles_34() const { return ___rotationHandles_34; }
	inline RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA ** get_address_of_rotationHandles_34() { return &___rotationHandles_34; }
	inline void set_rotationHandles_34(RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * value)
	{
		___rotationHandles_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationHandles_34), (void*)value);
	}

	inline static int32_t get_offset_of_translationHandles_35() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___translationHandles_35)); }
	inline TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * get_translationHandles_35() const { return ___translationHandles_35; }
	inline TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 ** get_address_of_translationHandles_35() { return &___translationHandles_35; }
	inline void set_translationHandles_35(TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * value)
	{
		___translationHandles_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translationHandles_35), (void*)value);
	}

	inline static int32_t get_offset_of_boxDisplay_36() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___boxDisplay_36)); }
	inline BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * get_boxDisplay_36() const { return ___boxDisplay_36; }
	inline BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 ** get_address_of_boxDisplay_36() { return &___boxDisplay_36; }
	inline void set_boxDisplay_36(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * value)
	{
		___boxDisplay_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boxDisplay_36), (void*)value);
	}

	inline static int32_t get_offset_of_proximityEffect_37() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___proximityEffect_37)); }
	inline ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * get_proximityEffect_37() const { return ___proximityEffect_37; }
	inline ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 ** get_address_of_proximityEffect_37() { return &___proximityEffect_37; }
	inline void set_proximityEffect_37(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * value)
	{
		___proximityEffect_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___proximityEffect_37), (void*)value);
	}

	inline static int32_t get_offset_of_wireframeOnly_38() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___wireframeOnly_38)); }
	inline bool get_wireframeOnly_38() const { return ___wireframeOnly_38; }
	inline bool* get_address_of_wireframeOnly_38() { return &___wireframeOnly_38; }
	inline void set_wireframeOnly_38(bool value)
	{
		___wireframeOnly_38 = value;
	}

	inline static int32_t get_offset_of_currentPointer_39() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___currentPointer_39)); }
	inline RuntimeObject* get_currentPointer_39() const { return ___currentPointer_39; }
	inline RuntimeObject** get_address_of_currentPointer_39() { return &___currentPointer_39; }
	inline void set_currentPointer_39(RuntimeObject* value)
	{
		___currentPointer_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentPointer_39), (void*)value);
	}

	inline static int32_t get_offset_of_rigRoot_40() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___rigRoot_40)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_rigRoot_40() const { return ___rigRoot_40; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_rigRoot_40() { return &___rigRoot_40; }
	inline void set_rigRoot_40(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___rigRoot_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rigRoot_40), (void*)value);
	}

	inline static int32_t get_offset_of_currentBoundsExtents_41() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___currentBoundsExtents_41)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentBoundsExtents_41() const { return ___currentBoundsExtents_41; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentBoundsExtents_41() { return &___currentBoundsExtents_41; }
	inline void set_currentBoundsExtents_41(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentBoundsExtents_41 = value;
	}

	inline static int32_t get_offset_of_touchingSources_42() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___touchingSources_42)); }
	inline List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * get_touchingSources_42() const { return ___touchingSources_42; }
	inline List_1_t74E48C60E247472C3845D62B1372777193ED6D09 ** get_address_of_touchingSources_42() { return &___touchingSources_42; }
	inline void set_touchingSources_42(List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * value)
	{
		___touchingSources_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchingSources_42), (void*)value);
	}

	inline static int32_t get_offset_of_sourcesDetected_43() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___sourcesDetected_43)); }
	inline List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * get_sourcesDetected_43() const { return ___sourcesDetected_43; }
	inline List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 ** get_address_of_sourcesDetected_43() { return &___sourcesDetected_43; }
	inline void set_sourcesDetected_43(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * value)
	{
		___sourcesDetected_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourcesDetected_43), (void*)value);
	}

	inline static int32_t get_offset_of_currentRotationAxis_44() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___currentRotationAxis_44)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentRotationAxis_44() const { return ___currentRotationAxis_44; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentRotationAxis_44() { return &___currentRotationAxis_44; }
	inline void set_currentRotationAxis_44(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentRotationAxis_44 = value;
	}

	inline static int32_t get_offset_of_currentTranslationAxis_45() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___currentTranslationAxis_45)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentTranslationAxis_45() const { return ___currentTranslationAxis_45; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentTranslationAxis_45() { return &___currentTranslationAxis_45; }
	inline void set_currentTranslationAxis_45(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentTranslationAxis_45 = value;
	}

	inline static int32_t get_offset_of_initialScaleOnGrabStart_46() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___initialScaleOnGrabStart_46)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialScaleOnGrabStart_46() const { return ___initialScaleOnGrabStart_46; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialScaleOnGrabStart_46() { return &___initialScaleOnGrabStart_46; }
	inline void set_initialScaleOnGrabStart_46(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialScaleOnGrabStart_46 = value;
	}

	inline static int32_t get_offset_of_initialRotationOnGrabStart_47() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___initialRotationOnGrabStart_47)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_initialRotationOnGrabStart_47() const { return ___initialRotationOnGrabStart_47; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_initialRotationOnGrabStart_47() { return &___initialRotationOnGrabStart_47; }
	inline void set_initialRotationOnGrabStart_47(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___initialRotationOnGrabStart_47 = value;
	}

	inline static int32_t get_offset_of_initialPositionOnGrabStart_48() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___initialPositionOnGrabStart_48)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialPositionOnGrabStart_48() const { return ___initialPositionOnGrabStart_48; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialPositionOnGrabStart_48() { return &___initialPositionOnGrabStart_48; }
	inline void set_initialPositionOnGrabStart_48(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialPositionOnGrabStart_48 = value;
	}

	inline static int32_t get_offset_of_initialGrabPoint_49() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___initialGrabPoint_49)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialGrabPoint_49() const { return ___initialGrabPoint_49; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialGrabPoint_49() { return &___initialGrabPoint_49; }
	inline void set_initialGrabPoint_49(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialGrabPoint_49 = value;
	}

	inline static int32_t get_offset_of_currentGrabPoint_50() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___currentGrabPoint_50)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentGrabPoint_50() const { return ___currentGrabPoint_50; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentGrabPoint_50() { return &___currentGrabPoint_50; }
	inline void set_currentGrabPoint_50(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentGrabPoint_50 = value;
	}

	inline static int32_t get_offset_of_grabPointInPointer_51() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___grabPointInPointer_51)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_grabPointInPointer_51() const { return ___grabPointInPointer_51; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_grabPointInPointer_51() { return &___grabPointInPointer_51; }
	inline void set_grabPointInPointer_51(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___grabPointInPointer_51 = value;
	}

	inline static int32_t get_offset_of_oppositeCorner_52() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___oppositeCorner_52)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oppositeCorner_52() const { return ___oppositeCorner_52; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oppositeCorner_52() { return &___oppositeCorner_52; }
	inline void set_oppositeCorner_52(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oppositeCorner_52 = value;
	}

	inline static int32_t get_offset_of_diagonalDir_53() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___diagonalDir_53)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_diagonalDir_53() const { return ___diagonalDir_53; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_diagonalDir_53() { return &___diagonalDir_53; }
	inline void set_diagonalDir_53(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___diagonalDir_53 = value;
	}

	inline static int32_t get_offset_of_currentHandleType_54() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___currentHandleType_54)); }
	inline int32_t get_currentHandleType_54() const { return ___currentHandleType_54; }
	inline int32_t* get_address_of_currentHandleType_54() { return &___currentHandleType_54; }
	inline void set_currentHandleType_54(int32_t value)
	{
		___currentHandleType_54 = value;
	}

	inline static int32_t get_offset_of_prevBoundsOverride_55() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___prevBoundsOverride_55)); }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  get_prevBoundsOverride_55() const { return ___prevBoundsOverride_55; }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * get_address_of_prevBoundsOverride_55() { return &___prevBoundsOverride_55; }
	inline void set_prevBoundsOverride_55(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  value)
	{
		___prevBoundsOverride_55 = value;
	}

	inline static int32_t get_offset_of_initialBoundsOverrideSize_56() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___initialBoundsOverrideSize_56)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_initialBoundsOverrideSize_56() const { return ___initialBoundsOverrideSize_56; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_initialBoundsOverrideSize_56() { return &___initialBoundsOverrideSize_56; }
	inline void set_initialBoundsOverrideSize_56(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___initialBoundsOverrideSize_56 = value;
	}

	inline static int32_t get_offset_of_isChildOfTarget_57() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___isChildOfTarget_57)); }
	inline bool get_isChildOfTarget_57() const { return ___isChildOfTarget_57; }
	inline bool* get_address_of_isChildOfTarget_57() { return &___isChildOfTarget_57; }
	inline void set_isChildOfTarget_57(bool value)
	{
		___isChildOfTarget_57 = value;
	}

	inline static int32_t get_offset_of_boundsCorners_60() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___boundsCorners_60)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_boundsCorners_60() const { return ___boundsCorners_60; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_boundsCorners_60() { return &___boundsCorners_60; }
	inline void set_boundsCorners_60(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___boundsCorners_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___boundsCorners_60), (void*)value);
	}

	inline static int32_t get_offset_of_U3CBoundsCornersU3Ek__BackingField_61() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___U3CBoundsCornersU3Ek__BackingField_61)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CBoundsCornersU3Ek__BackingField_61() const { return ___U3CBoundsCornersU3Ek__BackingField_61; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CBoundsCornersU3Ek__BackingField_61() { return &___U3CBoundsCornersU3Ek__BackingField_61; }
	inline void set_U3CBoundsCornersU3Ek__BackingField_61(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CBoundsCornersU3Ek__BackingField_61 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CBoundsCornersU3Ek__BackingField_61), (void*)value);
	}

	inline static int32_t get_offset_of_U3CTargetBoundsU3Ek__BackingField_62() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___U3CTargetBoundsU3Ek__BackingField_62)); }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * get_U3CTargetBoundsU3Ek__BackingField_62() const { return ___U3CTargetBoundsU3Ek__BackingField_62; }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA ** get_address_of_U3CTargetBoundsU3Ek__BackingField_62() { return &___U3CTargetBoundsU3Ek__BackingField_62; }
	inline void set_U3CTargetBoundsU3Ek__BackingField_62(BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * value)
	{
		___U3CTargetBoundsU3Ek__BackingField_62 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CTargetBoundsU3Ek__BackingField_62), (void*)value);
	}

	inline static int32_t get_offset_of_active_63() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___active_63)); }
	inline bool get_active_63() const { return ___active_63; }
	inline bool* get_address_of_active_63() { return &___active_63; }
	inline void set_active_63(bool value)
	{
		___active_63 = value;
	}

	inline static int32_t get_offset_of_childTransforms_64() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9, ___childTransforms_64)); }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * get_childTransforms_64() const { return ___childTransforms_64; }
	inline List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 ** get_address_of_childTransforms_64() { return &___childTransforms_64; }
	inline void set_childTransforms_64(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * value)
	{
		___childTransforms_64 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___childTransforms_64), (void*)value);
	}
};

struct BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields
{
public:
	// System.Collections.Generic.List`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::TotalBoundsCorners
	List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___TotalBoundsCorners_59;

public:
	inline static int32_t get_offset_of_TotalBoundsCorners_59() { return static_cast<int32_t>(offsetof(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields, ___TotalBoundsCorners_59)); }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * get_TotalBoundsCorners_59() const { return ___TotalBoundsCorners_59; }
	inline List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 ** get_address_of_TotalBoundsCorners_59() { return &___TotalBoundsCorners_59; }
	inline void set_TotalBoundsCorners_59(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * value)
	{
		___TotalBoundsCorners_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TotalBoundsCorners_59), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration
struct RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A  : public PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration
struct TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B  : public PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.ConstraintManager
struct ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ConstraintManager::autoConstraintSelection
	bool ___autoConstraintSelection_4;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.TransformConstraint> Microsoft.MixedReality.Toolkit.UI.ConstraintManager::selectedConstraints
	List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * ___selectedConstraints_5;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.TransformConstraint> Microsoft.MixedReality.Toolkit.UI.ConstraintManager::constraints
	List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * ___constraints_6;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.UI.ConstraintManager::initialWorldPose
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___initialWorldPose_7;

public:
	inline static int32_t get_offset_of_autoConstraintSelection_4() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___autoConstraintSelection_4)); }
	inline bool get_autoConstraintSelection_4() const { return ___autoConstraintSelection_4; }
	inline bool* get_address_of_autoConstraintSelection_4() { return &___autoConstraintSelection_4; }
	inline void set_autoConstraintSelection_4(bool value)
	{
		___autoConstraintSelection_4 = value;
	}

	inline static int32_t get_offset_of_selectedConstraints_5() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___selectedConstraints_5)); }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * get_selectedConstraints_5() const { return ___selectedConstraints_5; }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 ** get_address_of_selectedConstraints_5() { return &___selectedConstraints_5; }
	inline void set_selectedConstraints_5(List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * value)
	{
		___selectedConstraints_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___selectedConstraints_5), (void*)value);
	}

	inline static int32_t get_offset_of_constraints_6() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___constraints_6)); }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * get_constraints_6() const { return ___constraints_6; }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 ** get_address_of_constraints_6() { return &___constraints_6; }
	inline void set_constraints_6(List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * value)
	{
		___constraints_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___constraints_6), (void*)value);
	}

	inline static int32_t get_offset_of_initialWorldPose_7() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___initialWorldPose_7)); }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  get_initialWorldPose_7() const { return ___initialWorldPose_7; }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * get_address_of_initialWorldPose_7() { return &___initialWorldPose_7; }
	inline void set_initialWorldPose_7(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  value)
	{
		___initialWorldPose_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputHandler
struct BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::isFocusRequired
	bool ___isFocusRequired_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::isFocusRequiredRuntime
	bool ___isFocusRequiredRuntime_6;

public:
	inline static int32_t get_offset_of_isFocusRequired_5() { return static_cast<int32_t>(offsetof(BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35, ___isFocusRequired_5)); }
	inline bool get_isFocusRequired_5() const { return ___isFocusRequired_5; }
	inline bool* get_address_of_isFocusRequired_5() { return &___isFocusRequired_5; }
	inline void set_isFocusRequired_5(bool value)
	{
		___isFocusRequired_5 = value;
	}

	inline static int32_t get_offset_of_isFocusRequiredRuntime_6() { return static_cast<int32_t>(offsetof(BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35, ___isFocusRequiredRuntime_6)); }
	inline bool get_isFocusRequiredRuntime_6() const { return ___isFocusRequiredRuntime_6; }
	inline bool* get_address_of_isFocusRequiredRuntime_6() { return &___isFocusRequiredRuntime_6; }
	inline void set_isFocusRequiredRuntime_6(bool value)
	{
		___isFocusRequiredRuntime_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.PointerHandler
struct PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C  : public BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerHandler::MarkEventsAsUsed
	bool ___MarkEventsAsUsed_7;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerDown
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerDown_8;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerUp
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerUp_9;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerClicked
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerClicked_10;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerDragged
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerDragged_11;

public:
	inline static int32_t get_offset_of_MarkEventsAsUsed_7() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___MarkEventsAsUsed_7)); }
	inline bool get_MarkEventsAsUsed_7() const { return ___MarkEventsAsUsed_7; }
	inline bool* get_address_of_MarkEventsAsUsed_7() { return &___MarkEventsAsUsed_7; }
	inline void set_MarkEventsAsUsed_7(bool value)
	{
		___MarkEventsAsUsed_7 = value;
	}

	inline static int32_t get_offset_of_OnPointerDown_8() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerDown_8)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerDown_8() const { return ___OnPointerDown_8; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerDown_8() { return &___OnPointerDown_8; }
	inline void set_OnPointerDown_8(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerDown_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerDown_8), (void*)value);
	}

	inline static int32_t get_offset_of_OnPointerUp_9() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerUp_9)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerUp_9() const { return ___OnPointerUp_9; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerUp_9() { return &___OnPointerUp_9; }
	inline void set_OnPointerUp_9(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerUp_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerUp_9), (void*)value);
	}

	inline static int32_t get_offset_of_OnPointerClicked_10() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerClicked_10)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerClicked_10() const { return ___OnPointerClicked_10; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerClicked_10() { return &___OnPointerClicked_10; }
	inline void set_OnPointerClicked_10(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerClicked_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerClicked_10), (void*)value);
	}

	inline static int32_t get_offset_of_OnPointerDragged_11() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerDragged_11)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerDragged_11() const { return ___OnPointerDragged_11; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerDragged_11() { return &___OnPointerDragged_11; }
	inline void set_OnPointerDragged_11(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerDragged_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerDragged_11), (void*)value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Transform[]
struct TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * m_Items[1];

public:
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[]
struct CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject * m_Items[1];

public:
	inline RuntimeObject * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_gshared (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_gshared_inline (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_mD9F028AEE5C43737BEB50A8DAA8CA939CE314002_gshared (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___item0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_gshared_inline (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::AddRange(System.Collections.Generic.IEnumerable`1<!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F_gshared (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, RuntimeObject* ___collection0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171_gshared (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Vector3>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_gshared (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<System.Object>(T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared (RuntimeObject * ___instance0, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<System.Object>(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// !!0[] UnityEngine.Component::GetComponentsInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::AddRange(System.Collections.Generic.IEnumerable`1<!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_AddRange_m629B40CD4286736C328FA496AAFC388F697CF984_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject* ___collection0, const RuntimeMethod* method);
// System.Collections.Generic.List`1/Enumerator<!0> System.Collections.Generic.List`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD  List_1_GetEnumerator_m52CC760E475D226A2B75048D70C4E22692F9F68D_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1/Enumerator<System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m38B1099DDAD7EEDE2F4CDAB11C095AC784AC2E34_gshared (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m94D0DAE031619503CDA6E53C5C3CC78AF3139472_gshared (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>::.ctor(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void KeyValuePair_2__ctor_m783A0935E40FCB80D5940E8CCF0EFEFE41D7C7D3_gshared (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, RuntimeObject * ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.KeyValuePair`2<System.Object,UnityEngine.Bounds>::.ctor(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void KeyValuePair_2__ctor_m295E6822B2740F38CF1C0261DC3169CD6315C22C_gshared (KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A * __this, RuntimeObject * ___key0, Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___value1, const RuntimeMethod* method);
// !0 System.Collections.Generic.KeyValuePair`2<System.Object,UnityEngine.Bounds>::get_Key()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72_gshared_inline (KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Object,UnityEngine.Bounds>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6_gshared_inline (KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>::get_Key()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Vector3>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<UnityEngine.Vector3>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_gshared (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_1__ctor_mF6AE3BA9395C61DE1466BE7BB863A77F3584EEC3_gshared (UnityAction_1_t330F97880F37E23D6D0C6618DD77F28AC9EF8FA9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::AddListener(UnityEngine.Events.UnityAction`1<!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_AddListener_m9E1606EB0E08E6B0ECACA780B7AD424D113C8334_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, UnityAction_1_t330F97880F37E23D6D0C6618DD77F28AC9EF8FA9 * ___call0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<System.Object>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1<System.Object>::Contains(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool List_1_Contains_mE08D561E86879A26245096C572A8593279383FDB_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1<System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool List_1_Remove_m908B647BB9F807676DACE34E3E73475C3C3751D4_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Object>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Void System.Action`1<System.Object>::Invoke(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action_1_Invoke_mB86FC1B303E77C41ED0E94FC3592A9CF8DA571D5_gshared (Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * __this, RuntimeObject * ___obj0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Int32Enum>::Invoke(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_Invoke_m427811D1D402EE64CE02717DDC72D98FCF5D1B92_gshared (UnityEvent_1_tB72EF438E2905C3F0C9BDCA3CA7B1016767E8841 * __this, int32_t ___arg00, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1__ctor_m9EEAAD8CC96132F8F656844953FD64FF5390B92A_gshared (UnityEvent_1_tB72EF438E2905C3F0C9BDCA3CA7B1016767E8841 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<System.Int32Enum>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_1__ctor_m3AB54F58218963016E10BBD4D8C929FA95668980_gshared (UnityAction_1_tAB3033A09E019F997EF77BB4720702C64B75C9DC * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Int32Enum>::AddListener(UnityEngine.Events.UnityAction`1<!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_AddListener_mBAE6F84E083F50F8B56F7A9D2150C0E97426159A_gshared (UnityEvent_1_tB72EF438E2905C3F0C9BDCA3CA7B1016767E8841 * __this, UnityAction_1_tAB3033A09E019F997EF77BB4720702C64B75C9DC * ___call0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Int32Enum>::RemoveListener(UnityEngine.Events.UnityAction`1<!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_RemoveListener_m27D769FCEE3BBF30B0626D604A7728665EFA6179_gshared (UnityEvent_1_tB72EF438E2905C3F0C9BDCA3CA7B1016767E8841 * __this, UnityAction_1_tAB3033A09E019F997EF77BB4720702C64B75C9DC * ___call0, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Int32>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_gshared_inline (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<System.Int32>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_gshared_inline (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::Invoke(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, RuntimeObject * ___arg00, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<System.Object>(!!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared (RuntimeObject * ___original0, const RuntimeMethod* method);

// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundingBox::get_TargetBounds()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12_inline (BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::UpdateNonAABoundsCornerPositions(UnityEngine.BoxCollider,System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___colliderBounds0, List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___boundsPoints1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetRawBoundsCorners(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___colliderBounds0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Clear()
inline void List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8 (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *, const RuntimeMethod*))List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Matrix4x4 UnityEngine.Transform::get_localToWorldMatrix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  Transform_get_localToWorldMatrix_mBC86B8C7BA6F53DAB8E0120D77729166399A0EED (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Item(System.Int32)
inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  (*) (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *, int32_t, const RuntimeMethod*))List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_gshared_inline)(__this, ___index0, method);
}
// UnityEngine.Vector3 UnityEngine.Matrix4x4::MultiplyPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Matrix4x4_MultiplyPoint_mD5D082585C5B3564A5EFC90A3C5CAFFE47E45B65 (Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Add(!0)
inline void List_1_Add_mD9F028AEE5C43737BEB50A8DAA8CA939CE314002 (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*))List_1_Add_mD9F028AEE5C43737BEB50A8DAA8CA939CE314002_gshared)(__this, ___item0, method);
}
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Count()
inline int32_t List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_inline (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *, const RuntimeMethod*))List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::AddRange(System.Collections.Generic.IEnumerable`1<!0>)
inline void List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, RuntimeObject* ___collection0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *, RuntimeObject*, const RuntimeMethod*))List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F_gshared)(__this, ___collection0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetUntransformedCornersFromObject(UnityEngine.BoxCollider,System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___targetBounds0, List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___boundsPoints1, const RuntimeMethod* method);
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceCorners(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceIndices(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Cross(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceEdgeMidpoints(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceCentroid(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceNormal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Dot(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.BoxCollider::get_center()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoxCollider_get_center_mA9164B9949F419A35CC949685F1DC14588BC6402 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.BoxCollider::get_size()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Bounds::.ctor(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Bounds__ctor_m294E77A20EC1A3E96985FE1A925CB271D1B5266D (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___center0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___size1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BoundsExtensions::GetCornerPositions(UnityEngine.Bounds,UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsExtensions_GetCornerPositions_m43588790E063DD385CE36674F3CD5DB6E2968BA2 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___bounds0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___positions1, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A (RuntimeArray * ___array0, RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  ___fldHandle1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::.ctor()
inline void List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171 (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *, const RuntimeMethod*))List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171_gshared)(__this, method);
}
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Transform::IsChildOf(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_parent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::SetActivationFlags()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::ResetVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateExtents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::.ctor(Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * ___configuration0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CreateRig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::.ctor(Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * ___configuration0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::.ctor(Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityEffect__ctor_m118B4F8FD0802B3EB7609504EFD8988142D24319 (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * __this, ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * ___configuration0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateRigVisibilityInInspector()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_FlattenAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TargetBounds()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.Bounds UnityEngine.Collider::get_bounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Bounds::get_extents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Bounds_get_extents_mBA4B2196036DD5A858BDAD53BC71A778B41841C9 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::DetermineAxisToFlatten(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t VisualUtils_DetermineAxisToFlatten_mBD82021945FAF0ECFD14031E95B98F8D24C30118 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boundsExtents0, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::ResetProximityScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityEffect_ResetProximityScale_mA0006227A4EF84138BF451F740EE9BC0B7A40366 (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::SetHighlighted(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___activeHandle0, RuntimeObject* ___pointer1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_IsInitialized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Vector3>::.ctor(!0)
inline void Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165 (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*))Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_gshared)(__this, ___value0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DestroyRig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::InitializeRigRoot()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::InitializeDataStructures()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DetermineTargetBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CreateVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration>(T)
inline ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * BoundsControl_EnsureScriptable_TisScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339_m423F9B182EFDDD359AE07A23B17F6224CD65422B (ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * ___instance0, const RuntimeMethod* method)
{
	return ((  ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * (*) (ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 *, const RuntimeMethod*))BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared)(___instance0, method);
}
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration>(T)
inline RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * BoundsControl_EnsureScriptable_TisRotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A_m05B654AB347DBC8C1EAE37EEDD58627DB7596362 (RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * ___instance0, const RuntimeMethod* method)
{
	return ((  RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * (*) (RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A *, const RuntimeMethod*))BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared)(___instance0, method);
}
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration>(T)
inline TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * BoundsControl_EnsureScriptable_TisTranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B_m10B4A775D8EB38223A752BA18E785D033B600DFA (TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * ___instance0, const RuntimeMethod* method)
{
	return ((  TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * (*) (TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B *, const RuntimeMethod*))BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared)(___instance0, method);
}
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration>(T)
inline BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * BoundsControl_EnsureScriptable_TisBoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797_m0B8A924E9998C263C621C385E34ECD92621C8667 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * ___instance0, const RuntimeMethod* method)
{
	return ((  BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * (*) (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 *, const RuntimeMethod*))BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared)(___instance0, method);
}
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration>(T)
inline LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * BoundsControl_EnsureScriptable_TisLinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5_mE3A96313F4080A652C6F67196F41AD06AA4E6089 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * ___instance0, const RuntimeMethod* method)
{
	return ((  LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * (*) (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 *, const RuntimeMethod*))BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared)(___instance0, method);
}
// T Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::EnsureScriptable<Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration>(T)
inline ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * BoundsControl_EnsureScriptable_TisProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808_m5FCEDC475B845471AC54055C8ED90589F40FE43E (ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * ___instance0, const RuntimeMethod* method)
{
	return ((  ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * (*) (ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 *, const RuntimeMethod*))BoundsControl_EnsureScriptable_TisRuntimeObject_m96D26EC0749DA0593EF9070C791DF1554A986861_gshared)(___instance0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_EnableConstraints()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<Microsoft.MixedReality.Toolkit.UI.ConstraintManager>(UnityEngine.GameObject)
inline ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method)
{
	return ((  ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared)(___gameObject0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CaptureInitialState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_Active(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DoesActivationMatchPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DropController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::TransformTarget(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, int32_t ___transformType0, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_Target()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Transform::get_hasChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Transform_get_hasChanged_m57B246DA5FB4AC01F1F109DCFE1D7A12048767D2 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::HasBoundsOverrideChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_hasChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_hasChanged_mA2BDCABEEF63468A4CF354CB7ACFDCC8E910A3D9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, bool ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::UpdateScaling(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityEffect_UpdateScaling_m65020F19499DE86ECA1B5023517DE79364BDD909 (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boundsCenter0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boundsExtents1, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC (bool ___condition0, String_t* ___message1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Bounds::op_Inequality(UnityEngine.Bounds,UnityEngine.Bounds)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Bounds_op_Inequality_mA6EBEDD980A41D5E206CBE009731EB1CA0B25502 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___lhs0, Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___rhs1, const RuntimeMethod* method);
// System.Void UnityEngine.Physics::SyncTransforms()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Physics_SyncTransforms_mCC0AB451C1384416298E5FAEF4E818503929AE58 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_TargetBounds(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___value0, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<UnityEngine.BoxCollider>(UnityEngine.GameObject)
inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ComponentExtensions_EnsureComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mFDBA95177D298C1F56E7358E231E0BD6E41FE103 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method)
{
	return ((  BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared)(___gameObject0, method);
}
// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetTargetBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Bounds::get_center()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Bounds_get_center_m4FB6E99F0533EE2D432988B08474D6DC9B8B744B (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.BoxCollider::set_center(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxCollider_set_center_m8A871056CA383C9932A7694FE396A1EFA247FC69 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Bounds::get_size()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.BoxCollider::set_size(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Equality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_lossyScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::set_Item(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3_set_Item_m89FF112CEC0D9ED43F1C4FE01522C75394B30AE6 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, int32_t ___index0, float ___value1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Scale(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Scale_m77004B226483C7644B3F4A46B950589EE8F88775 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.Transform>::Clear()
inline void List_1_Clear_m46592EB68B43BB4C540DEE0D6D05FB29C7DCB10F (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, const RuntimeMethod*))List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.Transform>::Add(!0)
inline void List_1_Add_m58D7C85FC3459259B4B9B182A98C838005A62F3C (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Collections.IEnumerator UnityEngine.Transform::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Transform_GetEnumerator_mE98B6C5F644AE362EC1D58C10506327D6A5878FC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, const RuntimeMethod* method);
// System.Boolean System.String::Equals(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_Equals_m9C4D78DFA0979504FE31429B64A4C26DF48020D1 (String_t* __this, String_t* ___value0, const RuntimeMethod* method);
// !!0[] UnityEngine.Component::GetComponentsInChildren<UnityEngine.Transform>()
inline TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.Transform>::AddRange(System.Collections.Generic.IEnumerable`1<!0>)
inline void List_1_AddRange_m78456E30423179376F5CD241BF311E83D15DC4D9 (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, RuntimeObject* ___collection0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, RuntimeObject*, const RuntimeMethod*))List_1_AddRange_m629B40CD4286736C328FA496AAFC388F697CF984_gshared)(__this, ___collection0, method);
}
// System.Collections.Generic.List`1/Enumerator<!0> System.Collections.Generic.List`1<UnityEngine.Transform>::GetEnumerator()
inline Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1 (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, const RuntimeMethod*))List_1_GetEnumerator_m52CC760E475D226A2B75048D70C4E22692F9F68D_gshared)(__this, method);
}
// !0 System.Collections.Generic.List`1/Enumerator<UnityEngine.Transform>::get_Current()
inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_inline (Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 * __this, const RuntimeMethod* method)
{
	return ((  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * (*) (Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *, const RuntimeMethod*))Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline)(__this, method);
}
// System.Void UnityEngine.Debug::Assert(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E (bool ___condition0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::ExtractBoundsCorners(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___childTransform0, int32_t ___boundsCalculationMethod1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1/Enumerator<UnityEngine.Transform>::MoveNext()
inline bool Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD (Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *, const RuntimeMethod*))Enumerator_MoveNext_m38B1099DDAD7EEDE2F4CDAB11C095AC784AC2E34_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1/Enumerator<UnityEngine.Transform>::Dispose()
inline void Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93 (Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *, const RuntimeMethod*))Enumerator_Dispose_m94D0DAE031619503CDA6E53C5C3CC78AF3139472_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void UnityEngine.Bounds::Encapsulate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Bounds_Encapsulate_mD1F1DAC416D7147E07BF54D87CA7FF84C1088D8D (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point0, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.Collider>()
inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Void System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Collider>::.ctor(!0,!1)
inline void KeyValuePair_2__ctor_mE18CB17C10459280BD5AA5CCBDEDE8B27D20DAA7 (KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___key0, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___value1, const RuntimeMethod* method)
{
	((  void (*) (KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF *, const RuntimeMethod*))KeyValuePair_2__ctor_m783A0935E40FCB80D5940E8CCF0EFEFE41D7C7D3_gshared)(__this, ___key0, ___value1, method);
}
// !!0 UnityEngine.Component::GetComponent<UnityEngine.MeshFilter>()
inline MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * Component_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mF3F89565A9CEFF85AA1FB27C6EC64BE590DC386B (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// UnityEngine.Mesh UnityEngine.MeshFilter::get_sharedMesh()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * MeshFilter_get_sharedMesh_mC076FD5461BFBBAD3BE49D25263CF140700D9902 (MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * __this, const RuntimeMethod* method);
// UnityEngine.Bounds UnityEngine.Mesh::get_bounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  Mesh_get_bounds_m15A146B9397AA62A81986030D289320EDE4B3037 (Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Bounds>::.ctor(!0,!1)
inline void KeyValuePair_2__ctor_m45D320DDFB94FE9A072F8B4EFE2F9962EAC9281C (KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___key0, Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___value1, const RuntimeMethod* method)
{
	((  void (*) (KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 , const RuntimeMethod*))KeyValuePair_2__ctor_m295E6822B2740F38CF1C0261DC3169CD6315C22C_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::AddColliderBoundsCornersToTarget(System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Collider>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F  ___colliderByTransform0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::AddRendererBoundsCornersToTarget(System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Bounds>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192  ___rendererBoundsByTarget0, const RuntimeMethod* method);
// !0 System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Bounds>::get_Key()
inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * KeyValuePair_2_get_Key_m64A02B47F623AB0CFA1D4B1CEF2106D000EABD99_inline (KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 * __this, const RuntimeMethod* method)
{
	return ((  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * (*) (KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *, const RuntimeMethod*))KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Bounds>::get_Value()
inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  KeyValuePair_2_get_Value_mCC96A2A44A552DDD14AD6C1DA48AC6BD4A96DB2A_inline (KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 * __this, const RuntimeMethod* method)
{
	return ((  Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  (*) (KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *, const RuntimeMethod*))KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.BoundsExtensions::GetCornerPositions(UnityEngine.Bounds,UnityEngine.Transform,UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsExtensions_GetCornerPositions_mF018336198FE4467DE42DE733FB7DAB53E57B309 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___bounds0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform1, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___positions2, const RuntimeMethod* method);
// !0 System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Collider>::get_Key()
inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * KeyValuePair_2_get_Key_mD87156A4F3BA077A63D6B230982BA9821E6E4424_inline (KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F * __this, const RuntimeMethod* method)
{
	return ((  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * (*) (KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *, const RuntimeMethod*))KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Collider>::get_Value()
inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * KeyValuePair_2_get_Value_m0B81DA118CFB41C0D76A10355C4B70315E89D30E_inline (KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F * __this, const RuntimeMethod* method)
{
	return ((  Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * (*) (KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *, const RuntimeMethod*))KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline)(__this, method);
}
// UnityEngine.LayerMask UnityEngine.LayerMask::op_Implicit(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300 (int32_t ___intVal0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BoundsExtensions::GetColliderBoundsPoints(UnityEngine.Collider,System.Collections.Generic.List`1<UnityEngine.Vector3>,UnityEngine.LayerMask,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsExtensions_GetColliderBoundsPoints_mEBA9367B6D4131EDCCEF3B5B1FE4F3C0025538F3 (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider0, List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___boundsPoints1, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___ignoreLayers2, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___relativeTo3, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::IsHandleType(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::FlattenBounds(UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  VisualUtils_FlattenBounds_m5E8273365CDEFEE89DD0B02C8D60E364ED15E542 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___extents0, int32_t ___flattenAxis1, float ___flattenValue2, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CalculateBoundsExtents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::GetCornerPositionsFromBounds(UnityEngine.Bounds,UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VisualUtils_GetCornerPositionsFromBounds_m910A32EB37249B59C506F2E886FB96B1372AC0D0 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___bounds0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___positions1, const RuntimeMethod* method);
// System.Void UnityEngine.TextMesh::set_text(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220 (TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * __this, String_t* ___value0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleStopped()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_RotateStopped()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TranslateStopped()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::set_EnableElasticsUpdate(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Vector3>::get_HasValue()
inline bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, const RuntimeMethod*))Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline)(__this, method);
}
// !0 System.Nullable`1<UnityEngine.Vector3>::get_Value()
inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9 (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	return ((  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, const RuntimeMethod*))Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DestroyVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___obj0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::UpdateVisibilityInInspector(UnityEngine.HideFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScaleHandles_UpdateVisibilityInInspector_m10E0ACBB4D93690FF07212950317DD18FB6352AD (ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * __this, int32_t ___flags0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateVisibilityInInspector(UnityEngine.HideFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, int32_t ___flags0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateVisibilityInInspector(UnityEngine.HideFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, int32_t ___desiredFlags0, const RuntimeMethod* method);
// System.Void UnityEngine.Object::set_hideFlags(UnityEngine.HideFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_set_hideFlags_mB0B45A19A5871EF407D7B09E0EB76003496BA4F0 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, int32_t ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetAxisType(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_right()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_right_mC32CE648E98D3D4F62F897A2751EE567C7C0CFB0 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_up_m3E443F6EB278D547946E80D77065A871BEEEE282 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___name0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<Microsoft.MixedReality.Toolkit.Input.PointerHandler>()
inline PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * GameObject_AddComponent_TisPointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C_m80E189103DE5864614034FD787210273CB188482 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452 (UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 *, RuntimeObject *, intptr_t, const RuntimeMethod*))UnityAction_1__ctor_mF6AE3BA9395C61DE1466BE7BB863A77F3584EEC3_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>::AddListener(UnityEngine.Events.UnityAction`1<!0>)
inline void UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738 (UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C * __this, UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 * ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C *, UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 *, const RuntimeMethod*))UnityEvent_1_AddListener_m9E1606EB0E08E6B0ECACA780B7AD424D113C8334_gshared)(__this, ___call0, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::.ctor()
inline void List_1__ctor_m132A5F71CCDF330F9374885DE091B10AF72D5C84 (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::ProjectOnPlane(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_ProjectOnPlane_mAF89645654808BBD9754610879F94A2B3323D206 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___planeNormal1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::FromToRotation(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_FromToRotation_m9FEC4227991508EC27E2C3664AC7DDD4E69BA9BB (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___fromDirection0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___toDirection1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::NewRotate(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  MixedRealityTransform_NewRotate_m5EE08724A0ABE012735E16225F916D09FFA59EAF (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::ApplyRotationConstraints(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_ApplyRotationConstraints_mF00DF9ADCBCA35FFEC4317E59D3346BD1C7646BE (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, bool ___isOneHanded1, bool ___isNear2, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::ApplyTargetTransform(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform,Microsoft.MixedReality.Toolkit.Utilities.TransformFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ElasticsManager_ApplyTargetTransform_m5A261D4771CE5BFF70831B3BF5595EA47F7B886C (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___targetTransform0, int32_t ___transformsToApply1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.TransformFlagsExtensions::IsMaskSet(Microsoft.MixedReality.Toolkit.Utilities.TransformFlags,Microsoft.MixedReality.Toolkit.Utilities.TransformFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E (const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.Smoothing::SmoothTo(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Smoothing_SmoothTo_m932CB726232605A1956F4768E94994E03325F17E (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___source0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___goal1, float ___slerpTime2, float ___deltaTime3, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleHandlesConfig()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleScaleMode Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration::get_ScaleBehavior()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ScaleHandlesConfiguration_get_ScaleBehavior_mCBC93C6D7164BCB1D4EE78E5A512CD503A0E18E2 (ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformVector(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformVector_mC363B03FB4A80E242264469E68489E401285E525 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_one()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB (const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.VectorExtensions::Div(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  VectorExtensions_Div_m901DCF70B6AFE3AC446865B1D6EB15ABEF05F9B7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_UniformScaleOnFlattenedAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ActualFlattenAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.VectorExtensions::Mul(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  VectorExtensions_Mul_mA9E9CF9E094D4F73384941B8B1EF54789BDE3D20 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::NewScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  MixedRealityTransform_NewScale_m4E4EA5EDF4189B524D5A21E6372B6DDA978AFE04 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::ApplyScaleConstraints(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_ApplyScaleConstraints_m55C4DE269179C5500CC4C8AC95E06066749BFD6F (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, bool ___isOneHanded1, bool ___isNear2, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::get_Scale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.Smoothing::SmoothTo(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Smoothing_SmoothTo_m1B0C9EEC16A7DE788A2993DBF9AE390F260FE2A0 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___source0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___goal1, float ___lerpTime2, float ___deltaTime3, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformDirection_m6F0513F2EC19C204F2077E3C68DD1D45317CB5F2 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformDirection_m85FC1D7E1322E94F65DA59AEF3B1166850B183EF (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Project(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Project_m3A2D462C2548AA76EB0BCD3305B1E8588347DB9D (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___onNormal1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::NewTranslate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  MixedRealityTransform_NewTranslate_mAF995F7D8723715C01529DF15648AFE481CBF93B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::ApplyTranslationConstraints(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_ApplyTranslationConstraints_mE33C3FEFE7E6C67D1F451EB9208E118328F8EB69 (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, bool ___isOneHanded1, bool ___isNear2, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::get_NewFocusedObject()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::get_Pointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::get_Pointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetHandleType(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Point()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Inverse(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_UnaryNegation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleStarted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetRotationAxis(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_RotateStarted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetTranslationAxis(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TranslateStarted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::InitializeElastics(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ElasticsManager_InitializeElastics_m1F2102BE2AF0AEEDD08ED0FAD49468C26D04E8A8 (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___elasticsTransform0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::.ctor(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityTransform__ctor_m9C17849F9137B911288BF804F27B607389C406F6 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::Initialize(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_Initialize_mE5A32824EE2B7EB7BA63CCA8AC2EA028D83DA93F (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___worldPose0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::get_Count()
inline int32_t List_1_get_Count_m6B026913491C4363422E2EA14144C43CA5C11517_inline (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::Contains(!0)
inline bool List_1_Contains_m265DE61D2C5C084052BFD071DAF6B09C193C46E7 (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 *, RuntimeObject*, const RuntimeMethod*))List_1_Contains_mE08D561E86879A26245096C572A8593279383FDB_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::Add(!0)
inline void List_1_Add_m14F5461E32CAE2A5FE0B0E3A9CFFA9D0F2AC3C24 (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 *, RuntimeObject*, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Boolean System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>::Remove(!0)
inline bool List_1_Remove_mE39D4E9AA5A57AFC5582C742CF0CEA0E79DF304C (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 *, RuntimeObject*, const RuntimeMethod*))List_1_Remove_m908B647BB9F807676DACE34E3E73475C3C3751D4_gshared)(__this, ___item0, method);
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_SourceId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::SetHighlighted(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handleToHighlight0, RuntimeObject* ___associatedPointer1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::SetHighlighted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::Reset(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, bool ___visible0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateFlattenAxis(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, int32_t ___flattenAxis0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::Reset(System.Boolean,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, bool ___areHandlesActive0, int32_t ___flattenAxis1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::Reset(System.Boolean,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, bool ___isVisible0, int32_t ___flattenAxis1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::Reset(System.Boolean,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScaleHandles_Reset_mFE5E3E9B5FBBF25E229A58A49FAA0FC53DB751F9 (ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * __this, bool ___areHandlesActive0, int32_t ___flattenAxis1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::Create(UnityEngine.Vector3[]&,UnityEngine.Transform,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScaleHandles_Create_mCA0B3FFB58F92D04FD8CB179E8BBF77F6353202A (ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent1, bool ___isFlattened2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::RegisterObjectProvider(Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityEffect_RegisterObjectProvider_m68786966151D6C0E83AE3F5DF21A34F863A81AFC (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * __this, RuntimeObject* ___provider0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::Create(UnityEngine.Vector3[]&,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::CreateLinks(UnityEngine.Vector3[]&,UnityEngine.Transform,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::AddBoxDisplay(UnityEngine.Transform,UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents1, int32_t ___flattenAxis2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffect::ClearObjects()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityEffect_ClearObjects_m7AEDBEB3BB2232ED7CFDAA88A180B94A10AD0230 (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::DestroyHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateLinkPositions(UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateLinkScales(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles::CalculateHandlePositions(UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScaleHandles_CalculateHandlePositions_m644C40BBC9964C4AA5C18D66FA87381AE3487374 (ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateDisplay(UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boundsExtents0, int32_t ___flattenAxis1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::.ctor()
inline void List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46 (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.Transform>::.ctor()
inline void List_1__ctor_m12ABE366DAE5DA1A167EE7F75868147D825B232F (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::AddListener(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_AddListener_m31973FDDC5BB0B2828AB6EF519EC4FD6563499C9 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___call0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::RemoveListener(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_RemoveListener_m26034605306E868B2E332675FCCBDA37CECBBA19 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___call0, const RuntimeMethod* method);
// System.Void System.Object::Finalize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Finalize_m4015B7D3A44DE125C5FE34D7276CD4697C06F380 (RuntimeObject * __this, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.GameObject::CreatePrimitive(UnityEngine.PrimitiveType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A (int32_t ___type0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.Collider>()
inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Void UnityEngine.Object::set_name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, String_t* ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::GetBoxDisplayScale(UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents0, int32_t ___flattenAxis1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::get_FlattenAxisDisplayScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839 (float ___d0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a1, const RuntimeMethod* method);
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::get_BoxGrabbedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::ApplyMaterialToAllRenderers(UnityEngine.GameObject,UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___root0, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___material1, const RuntimeMethod* method);
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::get_BoxMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.ScriptableObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScriptableObject__ctor_m6E2B3821A4A361556FC12E9B1C71E1D5DC002C5B (ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityObjectsChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityObjectsChangedEvent__ctor_mCC462938E71BAF5CE9B863C24A7B86D481EE53D5 (ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateBaseMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateGrabbedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateColliderBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateDrawTether()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::HandlesIgnoreConfigCollider(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, bool ___ignore0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::ResetHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandlesIgnoreCollider()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_inline (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::HandleIgnoreCollider(UnityEngine.Collider,System.Collections.Generic.List`1<UnityEngine.Transform>,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VisualUtils_HandleIgnoreCollider_m2648FB60E53140B183CD97FEE4C44E86E103BFF9 (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___handlesIgnoreCollider0, List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * ___handles1, bool ___ignore2, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable>(UnityEngine.GameObject)
inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * ComponentExtensions_EnsureComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_mBDD3C97C8134419B566EE49FB51F8F7032C58092 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method)
{
	return ((  NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared)(___gameObject0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_DrawTetherWhenManipulating()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_inline (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::GetMaxBounds(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  VisualUtils_GetMaxBounds_mDB7C526F8CDD40196B0F8450B16A24A095DD7FA6 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___g0, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<UnityEngine.Transform>::get_Item(System.Int32)
inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandleMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Transform>::get_Count()
inline int32_t List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandleGrabbedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Implicit(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___exists0, const RuntimeMethod* method);
// System.Void System.Action`1<UnityEngine.Transform>::Invoke(!0)
inline void Action_1_Invoke_m4535D9BC632DA737CDA40F7F9FC945DBF8931BD3 (Action_1_t944B085F4D5DEBCA83E9053D0BFC60EF26FA1C6A * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___obj0, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t944B085F4D5DEBCA83E9053D0BFC60EF26FA1C6A *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))Action_1_Invoke_mB86FC1B303E77C41ED0E94FC3592A9CF8DA571D5_gshared)(__this, ___obj0, method);
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandleSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::TrySetDefaultMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>::Invoke(!0)
inline void UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133 (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE * __this, int32_t ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE *, int32_t, const RuntimeMethod*))UnityEvent_1_Invoke_m427811D1D402EE64CE02717DDC72D98FCF5D1B92_gshared)(__this, ___arg00, method);
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::CreateDefaultMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * VisualUtils_CreateDefaultMaterial_m3E507A8BCEA5476E96DC7C9CCE1A3F9918CD5D92 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06 (HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>::.ctor()
inline void UnityEvent_1__ctor_mDF05FAB26872D5FDD63B2D45550515FEC4250F9C (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE *, const RuntimeMethod*))UnityEvent_1__ctor_m9EEAAD8CC96132F8F656844953FD64FF5390B92A_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::.ctor()
inline void List_1__ctor_m2D0FE9D764F15C766E94763597447A5E58A73770 (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_1__ctor_m6E1DB7AC7DAA970C8A220D6EB0D002792C7B9B42 (UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 *, RuntimeObject *, intptr_t, const RuntimeMethod*))UnityAction_1__ctor_m3AB54F58218963016E10BBD4D8C929FA95668980_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>::AddListener(UnityEngine.Events.UnityAction`1<!0>)
inline void UnityEvent_1_AddListener_m45B5BEC97C05BB578B1B23FF7156175AB9826D3A (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 * __this, UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 * ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 *, UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 *, const RuntimeMethod*))UnityEvent_1_AddListener_mBAE6F84E083F50F8B56F7A9D2150C0E97426159A_gshared)(__this, ___call0, method);
}
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>::RemoveListener(UnityEngine.Events.UnityAction`1<!0>)
inline void UnityEvent_1_RemoveListener_m5732395C2CB531AC2697095A3274423D20441414 (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 * __this, UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 * ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 *, UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 *, const RuntimeMethod*))UnityEvent_1_RemoveListener_m27D769FCEE3BBF30B0626D604A7728665EFA6179_gshared)(__this, ___call0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_ShowWireFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateLinkPrimitive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method);
// System.Collections.Generic.List`1/Enumerator<!0> System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::GetEnumerator()
inline Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420 (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  (*) (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *, const RuntimeMethod*))List_1_GetEnumerator_m52CC760E475D226A2B75048D70C4E22692F9F68D_gshared)(__this, method);
}
// !0 System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::get_Current()
inline Link_t419BB37400AA583E48363DAB051577447DCEFBAB * Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_inline (Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 * __this, const RuntimeMethod* method)
{
	return ((  Link_t419BB37400AA583E48363DAB051577447DCEFBAB * (*) (Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *, const RuntimeMethod*))Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::MoveNext()
inline bool Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD (Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *, const RuntimeMethod*))Enumerator_MoveNext_m38B1099DDAD7EEDE2F4CDAB11C095AC784AC2E34_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::Dispose()
inline void Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225 (Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *, const RuntimeMethod*))Enumerator_Dispose_m94D0DAE031619503CDA6E53C5C3CC78AF3139472_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::Clear()
inline void List_1_Clear_m01914A35E2EDDC103B043CE5204596961BAB9177 (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *, const RuntimeMethod*))List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared)(__this, method);
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_WireframeMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::get_Item(System.Int32)
inline Link_t419BB37400AA583E48363DAB051577447DCEFBAB * List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  Link_t419BB37400AA583E48363DAB051577447DCEFBAB * (*) (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.Renderer>()
inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * GameObject_GetComponent_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mD65E2552CCFED4D0EC506EE90DE51215D90AEF85 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Void UnityEngine.Renderer::set_material(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_set_material_mB4988AD6A93C7FDACC4C07A99D1DAC23D10C0344 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::get_Count()
inline int32_t List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_inline (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// System.Collections.Generic.List`1<System.Int32> Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::GetFlattenedIndices(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * VisualUtils_GetFlattenedIndices_m81EE91C2D3FD439A12215D9E929E162197789A97 (int32_t ___flattenAxis0, CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* ___axisArray1, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Int32>::get_Item(System.Int32)
inline int32_t List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_inline (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 *, int32_t, const RuntimeMethod*))List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_gshared_inline)(__this, ___index0, method);
}
// System.Int32 System.Collections.Generic.List`1<System.Int32>::get_Count()
inline int32_t List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_inline (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 *, const RuntimeMethod*))List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_gshared_inline)(__this, method);
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_WireframeEdgeRadius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.WireframeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_WireframeShape()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::GetLinkPosition(System.Int32,UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  VisualUtils_GetLinkPosition_m1629C08A4FEE15B5392FEBDCDF9C3EAD0F88AA5F (int32_t ___linkIndex0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___cornerPoints1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::GetLinkDimensions(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.MeshFilter>()
inline MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Void UnityEngine.MeshFilter::set_sharedMesh(UnityEngine.Mesh)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MeshFilter_set_sharedMesh_mFE8D12C35148063EB287951C7BFFB0328AAA7C5D (MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * __this, Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___value0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.BoxCollider>()
inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.CapsuleCollider>()
inline CapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1 * GameObject_GetComponent_TisCapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1_m6CF92CB68F3A182E48CD844D126E0CE4C97EC718 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  CapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.String System.Int32::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Int32_ToString_m1863896DE712BF97C031D55B12E1583F1982DC02 (int32_t* __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::Rotate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_Rotate_m610B6793DCC2F987290D328942E649B5B7DE0F9A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___eulers0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link::.ctor(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF (Link_t419BB37400AA583E48363DAB051577447DCEFBAB * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___linkTransform0, int32_t ___linkAxis1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link>::Add(!0)
inline void List_1_Add_mC11D4E37A3B1949DA8BC75B491EB049ED3364B20 (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * __this, Link_t419BB37400AA583E48363DAB051577447DCEFBAB * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *, Link_t419BB37400AA583E48363DAB051577447DCEFBAB *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::TrySetDefaultMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>::Invoke(!0)
inline void UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 * __this, int32_t ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 *, int32_t, const RuntimeMethod*))UnityEvent_1_Invoke_m427811D1D402EE64CE02717DDC72D98FCF5D1B92_gshared)(__this, ___arg00, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireFrameEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5 (WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType>::.ctor()
inline void UnityEvent_1__ctor_mF84792954A024CA251E856E343F8B1239BCD366B (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t961D139E8FB6E862382B9D0C05180719C6D62F10 *, const RuntimeMethod*))UnityEvent_1__ctor_m9EEAAD8CC96132F8F656844953FD64FF5390B92A_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_NumHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::set_HandlePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_inline (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_1__ctor_mE40F217F9A81ED21656F88767AAC6395523ED339 (UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B *, RuntimeObject *, intptr_t, const RuntimeMethod*))UnityAction_1__ctor_m3AB54F58218963016E10BBD4D8C929FA95668980_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>::AddListener(UnityEngine.Events.UnityAction`1<!0>)
inline void UnityEvent_1_AddListener_m3FD24B0D3AD04907870C986E5B49CBE766E89F6C (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE * __this, UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B * ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE *, UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B *, const RuntimeMethod*))UnityEvent_1_AddListener_mBAE6F84E083F50F8B56F7A9D2150C0E97426159A_gshared)(__this, ___call0, method);
}
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType>::RemoveListener(UnityEngine.Events.UnityAction`1<!0>)
inline void UnityEvent_1_RemoveListener_m41F33A1B6E6A9CA12A9123FE8B49695715EB6F0D (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE * __this, UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B * ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9BF152338DE7B6EB670710613A83E488C9A7A8CE *, UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B *, const RuntimeMethod*))UnityEvent_1_RemoveListener_m27D769FCEE3BBF30B0626D604A7728665EFA6179_gshared)(__this, ___call0, method);
}
// !!0 UnityEngine.Component::GetComponent<UnityEngine.BoxCollider>()
inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandlePrefabCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::get_HandlePrefabColliderType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandlesConfiguration_get_HandlePrefabColliderType_m420415B40C9BEF30ACC8571E95B8297ECB129A3D (PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.SphereCollider>()
inline SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * Component_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_mF7FF996C9C093859C2E567CB3991F9DCC003F82F (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::GetMaxComponent(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vec0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<UnityEngine.BoxCollider>()
inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * GameObject_AddComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m94D5E6D9493DE6A574C28A9517C792D607653FE2 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_ColliderPadding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<UnityEngine.SphereCollider>()
inline SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * GameObject_AddComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m95241D4825AC44999273D4B749190F26B0DBDDC7 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// System.Void UnityEngine.SphereCollider::set_center(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SphereCollider_set_center_m325070F5252B4A2EA567B653CAE3285F101FA3EE (SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.SphereCollider::set_radius(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SphereCollider_set_radius_m3161573A2D89F495F4B79E16C52B905C0F9AD699 (SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * __this, float ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.SphereCollider::get_radius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SphereCollider_get_radius_m255804173C17314FD9538AE45C4A46D4882BC094 (SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * __this, const RuntimeMethod* method);
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_HandlePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_inline (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetHandleIndex(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetAxisType(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetHandlePosition(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CreateHandles(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mA4DFA8F4471418C248E95B55070665EF344B4B2D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CreateVisual(System.Int32,UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, int32_t ___handleIndex0, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___parent1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.VisualUtils::AddComponentsToAffordance(UnityEngine.GameObject,UnityEngine.Bounds,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandlePrefabCollider,Microsoft.MixedReality.Toolkit.Input.CursorContextInfo/CursorAction,UnityEngine.Vector3,UnityEngine.Transform,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VisualUtils_AddComponentsToAffordance_m7C70AF054EA3FC321C976E96C5138CCCD808E717 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___afford0, Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___bounds1, int32_t ___colliderType2, int32_t ___cursorType3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___colliderPadding4, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent5, bool ___drawTetherWhenManipulating6, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider>::Invoke(!0)
inline void UnityEvent_1_Invoke_mCB79CAADA85E82A1F2DE6F295514F0E0218CB5FB (UnityEvent_1_t121BC5B77CF53C74E89A1028818B86C3F187FFC8 * __this, RuntimeObject* ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t121BC5B77CF53C74E89A1028818B86C3F187FFC8 *, RuntimeObject*, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// UnityEngine.Transform UnityEngine.Transform::Find(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_Find_m673797B6329C2669A543904532ABA1680DA4EAD1 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, String_t* ___n0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.SphereCollider>()
inline SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * GameObject_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m4DEC2B4735AA4EA2D41E2D02AF512A49659AD039 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandlePrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<UnityEngine.GameObject>(!!0)
inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___original0, const RuntimeMethod* method)
{
	return ((  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared)(___original0, method);
}
// System.Void UnityEngine.Collider::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::get_ShowHandleForX()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PerAxisHandlesConfiguration_get_ShowHandleForX_m35126E9B653827DAFB16D98204BAD55F9F231745 (PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::get_ShowHandleForY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PerAxisHandlesConfiguration_get_ShowHandleForY_m878DB1D479ED2CAEF609C69B9E287FC20FBF29B5 (PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration::get_ShowHandleForZ()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PerAxisHandlesConfiguration_get_ShowHandleForZ_mF11D7B3ECD7B8D89A395A8A36A4B3B56B88892D4 (PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::GetChild(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_GetChild_mC86B9B61E4EC086A571B09EA7A33FFBF50DF52D3 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_IsActive()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_inline (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method);
// System.Void System.ThrowHelper::ThrowArgumentOutOfRangeException()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550 (const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBox/Handle::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Handle__ctor_mDA1BA835F71CE25BDDC46D8B018D3E80A581D092 (Handle_t4A2E910A26D837E4C5FF9DDE85A54A3AF302C7CC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Handle__ctor_mDA1BA835F71CE25BDDC46D8B018D3E80A581D092_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Handle__ctor_mDA1BA835F71CE25BDDC46D8B018D3E80A581D092_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28355));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28356));
	{
		// public HandleType Type = HandleType.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28357));
		__this->set_Type_2(0);
		// public HandleProximityState ProximityState = HandleProximityState.FullsizeNoProximity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28358));
		__this->set_ProximityState_3(0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28359));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28359));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::UpdateNonAABoundingBoxCornerPositions(Microsoft.MixedReality.Toolkit.UI.BoundingBox,System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_UpdateNonAABoundingBoxCornerPositions_m14E072C13FA25DB6BF47FCDCEB1545A925A441CD (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921 * ___boundingBox0, List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___boundsPoints1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_UpdateNonAABoundingBoxCornerPositions_m14E072C13FA25DB6BF47FCDCEB1545A925A441CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boundingBox0), (&___boundsPoints1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_UpdateNonAABoundingBoxCornerPositions_m14E072C13FA25DB6BF47FCDCEB1545A925A441CD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28360));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28361));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28362));
		// UpdateNonAABoundsCornerPositions(boundingBox.TargetBounds, boundsPoints);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28363));
		BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921 * L_0 = ___boundingBox0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28365));
		NullCheck(L_0);
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_1 = BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28365));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_2 = ___boundsPoints1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28366));
		BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C(__this, L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28366));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28364));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::UpdateNonAABoundsCornerPositions(UnityEngine.BoxCollider,System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___colliderBounds0, List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___boundsPoints1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___colliderBounds0), (&___boundsPoints1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_UpdateNonAABoundsCornerPositions_m60CB88DA137093B3E1DE7CF90E59340C8D06DE1C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28367));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28368));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28369));
		// if (colliderBounds != targetBounds || rawBoundingCornersObtained == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28370));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = ___colliderBounds0;
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_1 = __this->get_targetBounds_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28391));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28391));
		if (L_2)
		{
			goto IL_001a;
		}
	}
	{
		bool L_3 = __this->get_rawBoundingCornersObtained_13();
		G_B3_0 = ((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 1;
	}

IL_001b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28371));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28372));
		// GetRawBoundsCorners(colliderBounds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28373));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_5 = ___colliderBounds0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28392));
		BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28392));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28374));
	}

IL_0029:
	{
		// if (colliderBounds == targetBounds && rawBoundingCornersObtained)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28375));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_6 = ___colliderBounds0;
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_7 = __this->get_targetBounds_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28393));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_8 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28393));
		if (!L_8)
		{
			goto IL_003f;
		}
	}
	{
		bool L_9 = __this->get_rawBoundingCornersObtained_13();
		G_B8_0 = ((int32_t)(L_9));
		goto IL_0040;
	}

IL_003f:
	{
		G_B8_0 = 0;
	}

IL_0040:
	{
		V_1 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28376));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_00aa;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28377));
		// boundsPoints.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28378));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_11 = ___boundsPoints1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28394));
		NullCheck(L_11);
		List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8(L_11, /*hidden argument*/List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28394));
		// for (int i = 0; i < rawBoundingCorners.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28379));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28380));
		goto IL_007c;
	}

IL_0050:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28381));
		// boundsPoints.Add(colliderBounds.transform.localToWorldMatrix.MultiplyPoint(rawBoundingCorners[i]));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28382));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_12 = ___boundsPoints1;
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_13 = ___colliderBounds0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28395));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28395));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28396));
		NullCheck(L_14);
		Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  L_15 = Transform_get_localToWorldMatrix_mBC86B8C7BA6F53DAB8E0120D77729166399A0EED(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28396));
		V_3 = L_15;
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_16 = __this->get_rawBoundingCorners_10();
		int32_t L_17 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28397));
		NullCheck(L_16);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_16, L_17, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28397));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28398));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Matrix4x4_MultiplyPoint_mD5D082585C5B3564A5EFC90A3C5CAFFE47E45B65((Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA *)(&V_3), L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28398));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28399));
		NullCheck(L_12);
		List_1_Add_mD9F028AEE5C43737BEB50A8DAA8CA939CE314002(L_12, L_19, /*hidden argument*/List_1_Add_mD9F028AEE5C43737BEB50A8DAA8CA939CE314002_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28399));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28383));
		// for (int i = 0; i < rawBoundingCorners.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28384));
		int32_t L_20 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_20, (int32_t)1));
	}

IL_007c:
	{
		// for (int i = 0; i < rawBoundingCorners.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28385));
		int32_t L_21 = V_2;
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_22 = __this->get_rawBoundingCorners_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28400));
		NullCheck(L_22);
		int32_t L_23 = List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_inline(L_22, /*hidden argument*/List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28400));
		V_4 = (bool)((((int32_t)L_21) < ((int32_t)L_23))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28386));
		bool L_24 = V_4;
		if (L_24)
		{
			goto IL_0050;
		}
	}
	{
		// worldBoundingCorners.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28387));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_25 = __this->get_worldBoundingCorners_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28401));
		NullCheck(L_25);
		List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8(L_25, /*hidden argument*/List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28401));
		// worldBoundingCorners.AddRange(boundsPoints);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28388));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_26 = __this->get_worldBoundingCorners_11();
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_27 = ___boundsPoints1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28402));
		NullCheck(L_26);
		List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F(L_26, L_27, /*hidden argument*/List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28402));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28389));
	}

IL_00aa:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28390));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetRawBBCorners(Microsoft.MixedReality.Toolkit.UI.BoundingBox)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_GetRawBBCorners_mAD4EAB660AF6A6EF50080FB867C905594EA3507C (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921 * ___boundingBox0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetRawBBCorners_mAD4EAB660AF6A6EF50080FB867C905594EA3507C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boundingBox0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetRawBBCorners_mAD4EAB660AF6A6EF50080FB867C905594EA3507C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28403));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28404));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28405));
		// GetRawBoundsCorners(boundingBox.TargetBounds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28406));
		BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921 * L_0 = ___boundingBox0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28408));
		NullCheck(L_0);
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_1 = BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28408));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28409));
		BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28409));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28407));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetRawBoundsCorners(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___colliderBounds0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___colliderBounds0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetRawBoundsCorners_m4AF4D008715A6515ADEB8BF224107F7EB2B309A6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28410));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28411));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28412));
		// targetBounds = colliderBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28413));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = ___colliderBounds0;
		__this->set_targetBounds_12(L_0);
		// rawBoundingCorners.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28414));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_1 = __this->get_rawBoundingCorners_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28423));
		NullCheck(L_1);
		List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8(L_1, /*hidden argument*/List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28423));
		// rawBoundingCornersObtained = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28415));
		__this->set_rawBoundingCornersObtained_13((bool)0);
		// GetUntransformedCornersFromObject(colliderBounds, rawBoundingCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28416));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_2 = ___colliderBounds0;
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_3 = __this->get_rawBoundingCorners_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28424));
		BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28424));
		// if (rawBoundingCorners != null && rawBoundingCorners.Count >= 4)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28417));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_4 = __this->get_rawBoundingCorners_10();
		if (!L_4)
		{
			goto IL_0043;
		}
	}
	{
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_5 = __this->get_rawBoundingCorners_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28425));
		NullCheck(L_5);
		int32_t L_6 = List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_inline(L_5, /*hidden argument*/List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28425));
		G_B3_0 = ((((int32_t)((((int32_t)L_6) < ((int32_t)4))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0044;
	}

IL_0043:
	{
		G_B3_0 = 0;
	}

IL_0044:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28418));
		bool L_7 = V_0;
		if (!L_7)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28419));
		// rawBoundingCornersObtained = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28420));
		__this->set_rawBoundingCornersObtained_13((bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28421));
	}

IL_0051:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28422));
		return;
	}
}
// System.Int32[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceIndices(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28426));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28427));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28428));
		// switch (index)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28429));
		int32_t L_0 = ___index0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28430));
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_0023;
			}
			case 1:
			{
				goto IL_002c;
			}
			case 2:
			{
				goto IL_0035;
			}
			case 3:
			{
				goto IL_003e;
			}
			case 4:
			{
				goto IL_0047;
			}
			case 5:
			{
				goto IL_0050;
			}
		}
	}
	{
		goto IL_0059;
	}

IL_0023:
	{
		// return face0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28431));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = __this->get_face0_0();
		V_1 = L_2;
		goto IL_0062;
	}

IL_002c:
	{
		// return face1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28432));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_3 = __this->get_face1_1();
		V_1 = L_3;
		goto IL_0062;
	}

IL_0035:
	{
		// return face2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28433));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_4 = __this->get_face2_2();
		V_1 = L_4;
		goto IL_0062;
	}

IL_003e:
	{
		// return face3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28434));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_5 = __this->get_face3_3();
		V_1 = L_5;
		goto IL_0062;
	}

IL_0047:
	{
		// return face4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28435));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_6 = __this->get_face4_4();
		V_1 = L_6;
		goto IL_0062;
	}

IL_0050:
	{
		// return face5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28436));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_7 = __this->get_face5_5();
		V_1 = L_7;
		goto IL_0062;
	}

IL_0059:
	{
		// return noFaceIndices;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28437));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_8 = __this->get_noFaceIndices_6();
		V_1 = L_8;
		goto IL_0062;
	}

IL_0062:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28438));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_9 = V_1;
		return L_9;
	}
}
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceEdgeMidpoints(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28439));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28440));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28441));
		// Vector3[] corners = GetFaceCorners(index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28442));
		int32_t L_0 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28449));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_1 = BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28449));
		V_0 = L_1;
		// midpoints[0] = (corners[0] + corners[1]) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28443));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = __this->get_midpoints_9();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = V_0;
		NullCheck(L_3);
		int32_t L_4 = 0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = V_0;
		NullCheck(L_6);
		int32_t L_7 = 1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_7));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28450));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_5, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28451));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_9, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28451));
		NullCheck(L_2);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(0), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_10);
		// midpoints[1] = (corners[1] + corners[2]) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28444));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_11 = __this->get_midpoints_9();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_12 = V_0;
		NullCheck(L_12);
		int32_t L_13 = 1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = (L_12)->GetAt(static_cast<il2cpp_array_size_t>(L_13));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_15 = V_0;
		NullCheck(L_15);
		int32_t L_16 = 2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = (L_15)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28452));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_14, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28452));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28453));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_18, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28453));
		NullCheck(L_11);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(1), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_19);
		// midpoints[2] = (corners[2] + corners[3]) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28445));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_20 = __this->get_midpoints_9();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_21 = V_0;
		NullCheck(L_21);
		int32_t L_22 = 2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = (L_21)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_24 = V_0;
		NullCheck(L_24);
		int32_t L_25 = 3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = (L_24)->GetAt(static_cast<il2cpp_array_size_t>(L_25));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28454));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_23, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28454));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28455));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_27, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28455));
		NullCheck(L_20);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(2), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_28);
		// midpoints[3] = (corners[3] + corners[0]) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28446));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_29 = __this->get_midpoints_9();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_30 = V_0;
		NullCheck(L_30);
		int32_t L_31 = 3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = (L_30)->GetAt(static_cast<il2cpp_array_size_t>(L_31));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_33 = V_0;
		NullCheck(L_33);
		int32_t L_34 = 0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = (L_33)->GetAt(static_cast<il2cpp_array_size_t>(L_34));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28456));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_32, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28456));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28457));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_36, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28457));
		NullCheck(L_29);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(3), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_37);
		// return midpoints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28447));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_38 = __this->get_midpoints_9();
		V_1 = L_38;
		goto IL_00b6;
	}

IL_00b6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28448));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_39 = V_1;
		return L_39;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceNormal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28458));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28459));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28460));
		// int[] face = GetFaceIndices(index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28461));
		int32_t L_0 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28470));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28470));
		V_0 = L_1;
		// if (face.Length == 4)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28462));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = V_0;
		NullCheck(L_2);
		V_1 = (bool)((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length))))) == ((int32_t)4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28463));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_007e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28464));
		// Vector3 ab = (worldBoundingCorners[face[1]] - worldBoundingCorners[face[0]]).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28465));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_4 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_5 = V_0;
		NullCheck(L_5);
		int32_t L_6 = 1;
		int32_t L_7 = (L_5)->GetAt(static_cast<il2cpp_array_size_t>(L_6));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28471));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_4, L_7, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28471));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_9 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_10 = V_0;
		NullCheck(L_10);
		int32_t L_11 = 0;
		int32_t L_12 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28472));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_9, L_12, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28473));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_8, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28473));
		V_4 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28474));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28474));
		V_2 = L_15;
		// Vector3 ac = (worldBoundingCorners[face[2]] - worldBoundingCorners[face[0]]).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28466));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_16 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_17 = V_0;
		NullCheck(L_17);
		int32_t L_18 = 2;
		int32_t L_19 = (L_17)->GetAt(static_cast<il2cpp_array_size_t>(L_18));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28475));
		NullCheck(L_16);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_16, L_19, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28475));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_21 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_22 = V_0;
		NullCheck(L_22);
		int32_t L_23 = 0;
		int32_t L_24 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_23));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28476));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_21, L_24, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28476));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28477));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_20, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28477));
		V_4 = L_26;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28478));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28478));
		V_3 = L_27;
		// return Vector3.Cross(ab, ac).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28467));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = V_2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28479));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28479));
		V_4 = L_30;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28480));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28480));
		V_5 = L_31;
		goto IL_0087;
	}

IL_007e:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28468));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28481));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28481));
		V_5 = L_32;
		goto IL_0087;
	}

IL_0087:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28469));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = V_5;
		return L_33;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceCentroid(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28482));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28483));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28484));
		// int[] faceIndices = GetFaceIndices(index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28485));
		int32_t L_0 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28492));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28492));
		V_0 = L_1;
		// if (faceIndices.Length == 4)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28486));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = V_0;
		NullCheck(L_2);
		V_1 = (bool)((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length))))) == ((int32_t)4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28487));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0068;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28488));
		// return (worldBoundingCorners[faceIndices[0]] +
		//         worldBoundingCorners[faceIndices[1]] +
		//         worldBoundingCorners[faceIndices[2]] +
		//         worldBoundingCorners[faceIndices[3]]) * 0.25f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28489));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_4 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_5 = V_0;
		NullCheck(L_5);
		int32_t L_6 = 0;
		int32_t L_7 = (L_5)->GetAt(static_cast<il2cpp_array_size_t>(L_6));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28493));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_4, L_7, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28493));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_9 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_10 = V_0;
		NullCheck(L_10);
		int32_t L_11 = 1;
		int32_t L_12 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28494));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_9, L_12, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28494));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28495));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_8, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28495));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_15 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_16 = V_0;
		NullCheck(L_16);
		int32_t L_17 = 2;
		int32_t L_18 = (L_16)->GetAt(static_cast<il2cpp_array_size_t>(L_17));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28496));
		NullCheck(L_15);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_15, L_18, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28496));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28497));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_14, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28497));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_21 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_22 = V_0;
		NullCheck(L_22);
		int32_t L_23 = 3;
		int32_t L_24 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_23));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28498));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_21, L_24, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28498));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28499));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_20, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28499));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28500));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_26, (0.25f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28500));
		V_2 = L_27;
		goto IL_0070;
	}

IL_0068:
	{
		// return Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28490));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28501));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28501));
		V_2 = L_28;
		goto IL_0070;
	}

IL_0070:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28491));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_2;
		return L_29;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceBottomCentroid(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundingBoxHelper_GetFaceBottomCentroid_m0CF5D08C3BC9193BCB6F5BF77DB594E5386EF43D (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetFaceBottomCentroid_m0CF5D08C3BC9193BCB6F5BF77DB594E5386EF43D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetFaceBottomCentroid_m0CF5D08C3BC9193BCB6F5BF77DB594E5386EF43D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28503));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B4_0;
	memset((&G_B4_0), 0, sizeof(G_B4_0));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28504));
		// Vector3[] edgeCentroids = GetFaceEdgeMidpoints(index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28505));
		int32_t L_0 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28517));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_1 = BoundingBoxHelper_GetFaceEdgeMidpoints_mD2926C3D507FB1B1052977B3C5CBA09B70F7953E(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28517));
		V_0 = L_1;
		// Vector3 leastYPoint = edgeCentroids[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28506));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = V_0;
		NullCheck(L_2);
		int32_t L_3 = 0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_1 = L_4;
		// for (int i = 1; i < 4; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28507));
		V_2 = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28508));
		goto IL_003a;
	}

IL_0015:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28509));
		// leastYPoint = edgeCentroids[i].y < leastYPoint.y ? edgeCentroids[i] : leastYPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28510));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_5 = V_0;
		int32_t L_6 = V_2;
		NullCheck(L_5);
		float L_7 = ((L_5)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_6)))->get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = V_1;
		float L_9 = L_8.get_y_3();
		if ((((float)L_7) < ((float)L_9)))
		{
			goto IL_002d;
		}
	}
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_1;
		G_B4_0 = L_10;
		goto IL_0034;
	}

IL_002d:
	{
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_11 = V_0;
		int32_t L_12 = V_2;
		NullCheck(L_11);
		int32_t L_13 = L_12;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = (L_11)->GetAt(static_cast<il2cpp_array_size_t>(L_13));
		G_B4_0 = L_14;
	}

IL_0034:
	{
		V_1 = G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28511));
		// for (int i = 1; i < 4; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28512));
		int32_t L_15 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_15, (int32_t)1));
	}

IL_003a:
	{
		// for (int i = 1; i < 4; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28513));
		int32_t L_16 = V_2;
		V_3 = (bool)((((int32_t)L_16) < ((int32_t)4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28514));
		bool L_17 = V_3;
		if (L_17)
		{
			goto IL_0015;
		}
	}
	{
		// return leastYPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28515));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = V_1;
		V_4 = L_18;
		goto IL_0047;
	}

IL_0047:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28516));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = V_4;
		return L_19;
	}
}
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetFaceCorners(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	bool V_1 = false;
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetFaceCorners_m586C8591AECC47F3D0C712CB6F9795800AAE6293_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28518));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28519));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28520));
		// int[] faceIndices = GetFaceIndices(index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28521));
		int32_t L_0 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28532));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = BoundingBoxHelper_GetFaceIndices_mEF4F47AC3E0057DF2A15FE4EA37CF35D19BD0DC5(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28532));
		V_0 = L_1;
		// if (faceIndices.Length == 4)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28522));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = V_0;
		NullCheck(L_2);
		V_1 = (bool)((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length))))) == ((int32_t)4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28523));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0085;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28524));
		// face[0] = worldBoundingCorners[faceIndices[0]];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28525));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = __this->get_face_8();
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_5 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_6 = V_0;
		NullCheck(L_6);
		int32_t L_7 = 0;
		int32_t L_8 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_7));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28533));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_5, L_8, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28533));
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(0), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_9);
		// face[1] = worldBoundingCorners[faceIndices[1]];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28526));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_10 = __this->get_face_8();
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_11 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_12 = V_0;
		NullCheck(L_12);
		int32_t L_13 = 1;
		int32_t L_14 = (L_12)->GetAt(static_cast<il2cpp_array_size_t>(L_13));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28534));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_11, L_14, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28534));
		NullCheck(L_10);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(1), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_15);
		// face[2] = worldBoundingCorners[faceIndices[2]];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28527));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_16 = __this->get_face_8();
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_17 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_18 = V_0;
		NullCheck(L_18);
		int32_t L_19 = 2;
		int32_t L_20 = (L_18)->GetAt(static_cast<il2cpp_array_size_t>(L_19));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28535));
		NullCheck(L_17);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_17, L_20, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28535));
		NullCheck(L_16);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_21);
		// face[3] = worldBoundingCorners[faceIndices[3]];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28528));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_22 = __this->get_face_8();
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_23 = __this->get_worldBoundingCorners_11();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_24 = V_0;
		NullCheck(L_24);
		int32_t L_25 = 3;
		int32_t L_26 = (L_24)->GetAt(static_cast<il2cpp_array_size_t>(L_25));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28536));
		NullCheck(L_23);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_23, L_26, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28536));
		NullCheck(L_22);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(3), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_27);
		// return face;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28529));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_28 = __this->get_face_8();
		V_2 = L_28;
		goto IL_008e;
	}

IL_0085:
	{
		// return noFaceVertices;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28530));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_29 = __this->get_noFaceVertices_7();
		V_2 = L_29;
		goto IL_008e;
	}

IL_008e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28531));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_30 = V_2;
		return L_30;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetIndexOfForwardFace(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundingBoxHelper_GetIndexOfForwardFace_m41D8B49A1C7CC3AD14E72183CE6F9C569C0F84B4 (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lookAtPoint0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetIndexOfForwardFace_m41D8B49A1C7CC3AD14E72183CE6F9C569C0F84B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	float V_1 = 0.0f;
	int32_t V_2 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	float V_5 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	bool V_8 = false;
	int32_t V_9 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___lookAtPoint0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetIndexOfForwardFace_m41D8B49A1C7CC3AD14E72183CE6F9C569C0F84B4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28537));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28538));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28539));
		// int highestDotIndex = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28540));
		V_0 = (-1);
		// float hightestDotValue = float.MinValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28541));
		V_1 = (-(std::numeric_limits<float>::max)());
		// for (int i = 0; i < 6; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28542));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28543));
		goto IL_004f;
	}

IL_000d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28544));
		// Vector3 a = (lookAtPoint - GetFaceCentroid(i)).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28545));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___lookAtPoint0;
		int32_t L_1 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28560));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = BoundingBoxHelper_GetFaceCentroid_m1BFEA89F294AB296E4C242D3DB12098E2D0ED65E(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28561));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_0, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28561));
		V_6 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28562));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28562));
		V_3 = L_4;
		// Vector3 b = GetFaceNormal(i);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28546));
		int32_t L_5 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28563));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = BoundingBoxHelper_GetFaceNormal_mB55E536F613F623A9A419E4600A29B0D541E0B17(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28563));
		V_4 = L_6;
		// float dot = Vector3.Dot(a, b);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28547));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28564));
		float L_9 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28564));
		V_5 = L_9;
		// if (hightestDotValue < dot)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28548));
		float L_10 = V_1;
		float L_11 = V_5;
		V_7 = (bool)((((float)L_10) < ((float)L_11))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28549));
		bool L_12 = V_7;
		if (!L_12)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28550));
		// hightestDotValue = dot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28551));
		float L_13 = V_5;
		V_1 = L_13;
		// highestDotIndex = i;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28552));
		int32_t L_14 = V_2;
		V_0 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28553));
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28554));
		// for (int i = 0; i < 6; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28555));
		int32_t L_15 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_15, (int32_t)1));
	}

IL_004f:
	{
		// for (int i = 0; i < 6; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28556));
		int32_t L_16 = V_2;
		V_8 = (bool)((((int32_t)L_16) < ((int32_t)6))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28557));
		bool L_17 = V_8;
		if (L_17)
		{
			goto IL_000d;
		}
	}
	{
		// return highestDotIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28558));
		int32_t L_18 = V_0;
		V_9 = L_18;
		goto IL_005e;
	}

IL_005e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28559));
		int32_t L_19 = V_9;
		return L_19;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::GetUntransformedCornersFromObject(UnityEngine.BoxCollider,System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___targetBounds0, List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * ___boundsPoints1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_1 = NULL;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___targetBounds0), (&___boundsPoints1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper_GetUntransformedCornersFromObject_mC47F9ABF6E0098A30B7B39E6C9118E1DD3FFCA02_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28565));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28566));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28567));
		// Bounds cloneBounds = new Bounds(targetBounds.center, targetBounds.size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28568));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = ___targetBounds0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28573));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = BoxCollider_get_center_mA9164B9949F419A35CC949685F1DC14588BC6402(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28573));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_2 = ___targetBounds0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28574));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28574));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28575));
		Bounds__ctor_m294E77A20EC1A3E96985FE1A925CB271D1B5266D((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_0), L_1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28575));
		// Vector3[] corners = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28569));
		V_1 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)NULL;
		// cloneBounds.GetCornerPositions(ref corners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28570));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28576));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsExtensions_t65D5B81F0B4D8D20A4798B651AD4C93A9A761859_il2cpp_TypeInfo_var);
		BoundsExtensions_GetCornerPositions_m43588790E063DD385CE36674F3CD5DB6E2968BA2(L_4, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28576));
		// boundsPoints.AddRange(corners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28571));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_5 = ___boundsPoints1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28577));
		NullCheck(L_5);
		List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F(L_5, (RuntimeObject*)(RuntimeObject*)L_6, /*hidden argument*/List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28577));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28572));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundingBoxHelper::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundingBoxHelper__ctor_m0151C0BB10D8168C531C8CA83E5A81E89DFDC5FB (BoundingBoxHelper_tE6556EDD63A999EB1D8C499D919FF7D6A3BF90C3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBoxHelper__ctor_m0151C0BB10D8168C531C8CA83E5A81E89DFDC5FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBoxHelper__ctor_m0151C0BB10D8168C531C8CA83E5A81E89DFDC5FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28578));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28579));
	{
		// readonly int[] face0 = { 0, 1, 3, 2 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28580));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_0 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)4);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = L_0;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_2 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____3AF033CF3264B808760C3A2CDCFBD390AF81C8BE_1_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28593));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28593));
		__this->set_face0_0(L_1);
		// readonly int[] face1 = { 1, 5, 7, 3 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28581));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_3 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)4);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_4 = L_3;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_5 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____A5220740A843E2651AB2607371076B212DFF48E6_9_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28594));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28594));
		__this->set_face1_1(L_4);
		// readonly int[] face2 = { 5, 4, 6, 7 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28582));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_6 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)4);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_7 = L_6;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_8 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____64792C5DA8315C67B036FB03C56F50B02A7B97F7_4_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28595));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28595));
		__this->set_face2_2(L_7);
		// readonly int[] face3 = { 4, 0, 2, 6 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28583));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_9 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)4);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_10 = L_9;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_11 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____78560B46D1DB1C5A4E5A2E032DEEB13ADA6E1F58_5_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28596));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28596));
		__this->set_face3_3(L_10);
		// readonly int[] face4 = { 6, 2, 3, 7 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28584));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_12 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)4);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_13 = L_12;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_14 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____5C7D2BD1EC2DE9F5DBFE7F28BD05742BDE5E53E7_3_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28597));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28597));
		__this->set_face4_4(L_13);
		// readonly int[] face5 = { 1, 0, 4, 5 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28585));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_15 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)4);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_16 = L_15;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_17 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t270952CDBCB3D37A83B43179171EFCB3BF0C3765____93A73E5548F18182D27703F6B878D761F8AC01FE_8_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28598));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28598));
		__this->set_face5_5(L_16);
		// readonly int[] noFaceIndices = { };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28586));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_18 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)0);
		__this->set_noFaceIndices_6(L_18);
		// readonly Vector3[] noFaceVertices = { };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28587));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_19 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)0);
		__this->set_noFaceVertices_7(L_19);
		// private Vector3[] face = new Vector3[4];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28588));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_20 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)4);
		__this->set_face_8(L_20);
		// private Vector3[] midpoints = new Vector3[4];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28589));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_21 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)4);
		__this->set_midpoints_9(L_21);
		// private List<Vector3> rawBoundingCorners = new List<Vector3>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28590));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28599));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_22 = (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *)il2cpp_codegen_object_new(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5_il2cpp_TypeInfo_var);
		List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171(L_22, /*hidden argument*/List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28599));
		__this->set_rawBoundingCorners_10(L_22);
		// private List<Vector3> worldBoundingCorners = new List<Vector3>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28591));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28600));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_23 = (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *)il2cpp_codegen_object_new(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5_il2cpp_TypeInfo_var);
		List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171(L_23, /*hidden argument*/List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28600));
		__this->set_worldBoundingCorners_11(L_23);
		// private bool rawBoundingCornersObtained = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28592));
		__this->set_rawBoundingCornersObtained_13((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28601));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 28601));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_Target()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43401));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43402));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43403));
		// if (targetObject == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43404));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_targetObject_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43411));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43411));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43405));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43406));
		// targetObject = gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43407));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43412));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43412));
		__this->set_targetObject_4(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43408));
	}

IL_001f:
	{
		// return targetObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43409));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = __this->get_targetObject_4();
		V_1 = L_4;
		goto IL_0028;
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43410));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_Target(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_Target_m4009FB6A881C8E0C506143E88CCAED91AB818F6C (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_Target_m4009FB6A881C8E0C506143E88CCAED91AB818F6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_Target_m4009FB6A881C8E0C506143E88CCAED91AB818F6C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43413));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43414));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43415));
		// if (targetObject != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43416));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_targetObject_4();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43429));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43429));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43417));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43418));
		// targetObject = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43419));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = ___value0;
		__this->set_targetObject_4(L_4);
		// isChildOfTarget = transform.IsChildOf(targetObject.transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43420));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43430));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43430));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = __this->get_targetObject_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43431));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43431));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43432));
		NullCheck(L_5);
		bool L_8 = Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80(L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43432));
		__this->set_isChildOfTarget_57(L_8);
		// if (rigRoot != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43421));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43433));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_10 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_9, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43433));
		V_1 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43422));
		bool L_11 = V_1;
		if (!L_11)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43423));
		// rigRoot.parent = targetObject.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43424));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_rigRoot_40();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = __this->get_targetObject_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43434));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43434));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43435));
		NullCheck(L_12);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_12, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43435));
		// UpdateBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43436));
		BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43436));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43426));
	}

IL_0065:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43427));
	}

IL_0066:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43428));
		return;
	}
}
// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_BoundsOverride()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * BoundsControl_get_BoundsOverride_mCCA125C684C4619F9887AC56C5705E5C774363BC (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_BoundsOverride_mCCA125C684C4619F9887AC56C5705E5C774363BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_BoundsOverride_mCCA125C684C4619F9887AC56C5705E5C774363BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43437));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43438));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43439));
		// get { return boundsOverride; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43440));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_boundsOverride_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return boundsOverride; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43441));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_BoundsOverride(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_BoundsOverride_m488D1FDAE58DBAFCB4D5C0B2E83CCDCF977CA3DA (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_BoundsOverride_m488D1FDAE58DBAFCB4D5C0B2E83CCDCF977CA3DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_BoundsOverride_m488D1FDAE58DBAFCB4D5C0B2E83CCDCF977CA3DA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43442));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43443));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43444));
		// if (boundsOverride != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43445));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_boundsOverride_5();
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43457));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43457));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43446));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43447));
		// boundsOverride = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43448));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_4 = ___value0;
		__this->set_boundsOverride_5(L_4);
		// if (boundsOverride == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43449));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_5 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43458));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43458));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43450));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43451));
		// prevBoundsOverride = new Bounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43452));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * L_8 = __this->get_address_of_prevBoundsOverride_55();
		il2cpp_codegen_initobj(L_8, sizeof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 ));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43453));
	}

IL_0037:
	{
		// UpdateBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43454));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43459));
		BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43459));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43455));
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43456));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_CalculationMethod()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_get_CalculationMethod_m0C25992785C18D02E541E2B30AABB2D56BCC1851 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_CalculationMethod_m0C25992785C18D02E541E2B30AABB2D56BCC1851_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_CalculationMethod_m0C25992785C18D02E541E2B30AABB2D56BCC1851_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43460));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43461));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43462));
		// get { return boundsCalculationMethod; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43463));
		int32_t L_0 = __this->get_boundsCalculationMethod_6();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return boundsCalculationMethod; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43464));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_CalculationMethod(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_CalculationMethod_m76B77F98B10F6A81A3862DF05974666DFE2336FB (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_CalculationMethod_m76B77F98B10F6A81A3862DF05974666DFE2336FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_CalculationMethod_m76B77F98B10F6A81A3862DF05974666DFE2336FB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43465));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43466));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43467));
		// if (boundsCalculationMethod != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43468));
		int32_t L_0 = __this->get_boundsCalculationMethod_6();
		int32_t L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43469));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43470));
		// boundsCalculationMethod = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43471));
		int32_t L_3 = ___value0;
		__this->set_boundsCalculationMethod_6(L_3);
		// UpdateBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43475));
		BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43475));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43473));
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43474));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsControlActivationType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_BoundsControlActivation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_get_BoundsControlActivation_m382FDF56E834DB79959F374DEEEF1B2D25B5A7CD (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_BoundsControlActivation_m382FDF56E834DB79959F374DEEEF1B2D25B5A7CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_BoundsControlActivation_m382FDF56E834DB79959F374DEEEF1B2D25B5A7CD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43476));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43477));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43478));
		// get { return activation; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43479));
		int32_t L_0 = __this->get_activation_7();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return activation; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43480));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_BoundsControlActivation(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsControlActivationType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_BoundsControlActivation_mAFD61603C45C5BFA9E6CE1D528D43502F717742E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_BoundsControlActivation_mAFD61603C45C5BFA9E6CE1D528D43502F717742E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_BoundsControlActivation_mAFD61603C45C5BFA9E6CE1D528D43502F717742E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43481));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43482));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43483));
		// if (activation != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43484));
		int32_t L_0 = __this->get_activation_7();
		int32_t L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43485));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0028;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43486));
		// activation = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43487));
		int32_t L_3 = ___value0;
		__this->set_activation_7(L_3);
		// SetActivationFlags();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43488));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43492));
		BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43492));
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43489));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43493));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43493));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43490));
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43491));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_FlattenAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43494));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43495));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43496));
		// get { return flattenAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43497));
		int32_t L_0 = __this->get_flattenAxis_8();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return flattenAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43498));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_FlattenAxis(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_FlattenAxis_m6502A146E4DA5F62598D8805D3FC398FC27C057C (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_FlattenAxis_m6502A146E4DA5F62598D8805D3FC398FC27C057C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_FlattenAxis_m6502A146E4DA5F62598D8805D3FC398FC27C057C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43499));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43500));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43501));
		// if (flattenAxis != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43502));
		int32_t L_0 = __this->get_flattenAxis_8();
		int32_t L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43503));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43504));
		// flattenAxis = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43505));
		int32_t L_3 = ___value0;
		__this->set_flattenAxis_8(L_3);
		// UpdateExtents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43506));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43511));
		BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43511));
		// UpdateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43507));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43512));
		BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43512));
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43508));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43513));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43513));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43509));
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43510));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_UniformScaleOnFlattenedAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43514));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43515));
	{
		// get => uniformScaleOnFlattenedAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43516));
		bool L_0 = __this->get_uniformScaleOnFlattenedAxis_9();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_UniformScaleOnFlattenedAxis(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_UniformScaleOnFlattenedAxis_mC1088BCBAE011AB9BA6BC423560DC17ACC761297 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_UniformScaleOnFlattenedAxis_mC1088BCBAE011AB9BA6BC423560DC17ACC761297_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_UniformScaleOnFlattenedAxis_mC1088BCBAE011AB9BA6BC423560DC17ACC761297_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43517));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43518));
	{
		// set => uniformScaleOnFlattenedAxis = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43519));
		bool L_0 = ___value0;
		__this->set_uniformScaleOnFlattenedAxis_9(L_0);
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_BoxPadding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_get_BoxPadding_m8F54172704F3C32C140BF6BD1BF4916DB502649A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_BoxPadding_m8F54172704F3C32C140BF6BD1BF4916DB502649A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_BoxPadding_m8F54172704F3C32C140BF6BD1BF4916DB502649A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43520));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43521));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43522));
		// get { return boxPadding; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43523));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_boxPadding_10();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return boxPadding; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43524));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_BoxPadding(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_BoxPadding_mA644395E4F1F032472AB532061F35EEB81425B8F (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_BoxPadding_mA644395E4F1F032472AB532061F35EEB81425B8F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_BoxPadding_mA644395E4F1F032472AB532061F35EEB81425B8F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43525));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43526));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43527));
		// if (Vector3.Distance(boxPadding, value) > float.Epsilon)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43528));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_boxPadding_10();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43535));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_2 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43535));
		V_0 = (bool)((((float)L_2) > ((float)(1.401298E-45f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43529));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0028;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43530));
		// boxPadding = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43531));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = ___value0;
		__this->set_boxPadding_10(L_4);
		// UpdateBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43532));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43536));
		BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43536));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43533));
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43534));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_BoxDisplayConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * BoundsControl_get_BoxDisplayConfig_m99405C8E2E8E2578F73070C7EA609E07CE371C55 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_BoxDisplayConfig_m99405C8E2E8E2578F73070C7EA609E07CE371C55_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_BoxDisplayConfig_m99405C8E2E8E2578F73070C7EA609E07CE371C55_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43537));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43538));
	{
		// get => boxDisplayConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43539));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_0 = __this->get_boxDisplayConfiguration_11();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_BoxDisplayConfig(Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_BoxDisplayConfig_m086A93B1A3538BAFA8526481EF5CF6ED873FFBAA (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_BoxDisplayConfig_m086A93B1A3538BAFA8526481EF5CF6ED873FFBAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_BoxDisplayConfig_m086A93B1A3538BAFA8526481EF5CF6ED873FFBAA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43540));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43541));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43542));
		// boxDisplayConfiguration = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43543));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_0 = ___value0;
		__this->set_boxDisplayConfiguration_11(L_0);
		// boxDisplay = new BoxDisplay(boxDisplayConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43544));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_1 = __this->get_boxDisplayConfiguration_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43547));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_2 = (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 *)il2cpp_codegen_object_new(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537_il2cpp_TypeInfo_var);
		BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972(L_2, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43547));
		__this->set_boxDisplay_36(L_2);
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43545));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43548));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43548));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43546));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_LinksConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * BoundsControl_get_LinksConfig_m8CF00AAD550D641DDD881D57AF2B7DE491064A2A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_LinksConfig_m8CF00AAD550D641DDD881D57AF2B7DE491064A2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_LinksConfig_m8CF00AAD550D641DDD881D57AF2B7DE491064A2A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43549));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43550));
	{
		// get => linksConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43551));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_0 = __this->get_linksConfiguration_12();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_LinksConfig(Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_LinksConfig_m70C982E0F0A30A70BDA148C0D4D1B8820A2E5C8E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_LinksConfig_m70C982E0F0A30A70BDA148C0D4D1B8820A2E5C8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_LinksConfig_m70C982E0F0A30A70BDA148C0D4D1B8820A2E5C8E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43552));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43553));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43554));
		// linksConfiguration = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43555));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_0 = ___value0;
		__this->set_linksConfiguration_12(L_0);
		// links = new Links(linksConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43556));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_1 = __this->get_linksConfiguration_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43559));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_2 = (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 *)il2cpp_codegen_object_new(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361_il2cpp_TypeInfo_var);
		Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171(L_2, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43559));
		__this->set_links_32(L_2);
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43557));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43560));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43560));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43558));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleHandlesConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43561));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43562));
	{
		// get => scaleHandlesConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43563));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_0 = __this->get_scaleHandlesConfiguration_13();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_ScaleHandlesConfig(Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_ScaleHandlesConfig_mBF6BC0EA3E49B60AACAC3C2009DB7FFC1DAFE51B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_ScaleHandlesConfig_mBF6BC0EA3E49B60AACAC3C2009DB7FFC1DAFE51B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_ScaleHandlesConfig_mBF6BC0EA3E49B60AACAC3C2009DB7FFC1DAFE51B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43564));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43565));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43566));
		// scaleHandlesConfiguration = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43567));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_0 = ___value0;
		__this->set_scaleHandlesConfiguration_13(L_0);
		// scaleHandles = scaleHandlesConfiguration.ConstructInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43568));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_1 = __this->get_scaleHandlesConfiguration_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43571));
		NullCheck(L_1);
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_2 = VirtFuncInvoker0< ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * >::Invoke(4 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration::ConstructInstance() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43571));
		__this->set_scaleHandles_33(L_2);
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43569));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43572));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43572));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43570));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_RotationHandlesConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * BoundsControl_get_RotationHandlesConfig_m2DFE4BA2151D3FBF577C3B0C40568F9F6EB0979E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_RotationHandlesConfig_m2DFE4BA2151D3FBF577C3B0C40568F9F6EB0979E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_RotationHandlesConfig_m2DFE4BA2151D3FBF577C3B0C40568F9F6EB0979E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43573));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43574));
	{
		// get => rotationHandlesConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43575));
		RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * L_0 = __this->get_rotationHandlesConfiguration_14();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_RotationHandlesConfig(Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_RotationHandlesConfig_m52250A26B4ADB0D8828D9E7BC73184EC723EBE9A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_RotationHandlesConfig_m52250A26B4ADB0D8828D9E7BC73184EC723EBE9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_RotationHandlesConfig_m52250A26B4ADB0D8828D9E7BC73184EC723EBE9A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43576));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43577));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43578));
		// rotationHandlesConfiguration = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43579));
		RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * L_0 = ___value0;
		__this->set_rotationHandlesConfiguration_14(L_0);
		// rotationHandles = rotationHandlesConfiguration.ConstructInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43580));
		RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * L_1 = __this->get_rotationHandlesConfiguration_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43583));
		NullCheck(L_1);
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_2 = VirtFuncInvoker0< RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * >::Invoke(4 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration::ConstructInstance() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43583));
		__this->set_rotationHandles_34(L_2);
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43581));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43584));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43584));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43582));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TranslationHandlesConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * BoundsControl_get_TranslationHandlesConfig_m1C163AA7C0E47D2848CF7A8C29BFC3EA2D7B3DA0 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TranslationHandlesConfig_m1C163AA7C0E47D2848CF7A8C29BFC3EA2D7B3DA0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TranslationHandlesConfig_m1C163AA7C0E47D2848CF7A8C29BFC3EA2D7B3DA0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43585));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43586));
	{
		// get => translationHandlesConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43587));
		TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * L_0 = __this->get_translationHandlesConfiguration_15();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_TranslationHandlesConfig(Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_TranslationHandlesConfig_m654F938AB9F831051606A2B8C83B8531F3ECA255 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_TranslationHandlesConfig_m654F938AB9F831051606A2B8C83B8531F3ECA255_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_TranslationHandlesConfig_m654F938AB9F831051606A2B8C83B8531F3ECA255_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43588));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43589));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43590));
		// translationHandlesConfiguration = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43591));
		TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * L_0 = ___value0;
		__this->set_translationHandlesConfiguration_15(L_0);
		// translationHandles = translationHandlesConfiguration.ConstructInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43592));
		TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * L_1 = __this->get_translationHandlesConfiguration_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43595));
		NullCheck(L_1);
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_2 = VirtFuncInvoker0< TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * >::Invoke(4 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration::ConstructInstance() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43595));
		__this->set_translationHandles_35(L_2);
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43593));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43596));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43596));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43594));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_HandleProximityEffectConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * BoundsControl_get_HandleProximityEffectConfig_mC4FCBA442F1666720BD3248E0952E7D49AD6F941 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_HandleProximityEffectConfig_mC4FCBA442F1666720BD3248E0952E7D49AD6F941_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_HandleProximityEffectConfig_mC4FCBA442F1666720BD3248E0952E7D49AD6F941_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43597));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43598));
	{
		// get => handleProximityEffectConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43599));
		ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * L_0 = __this->get_handleProximityEffectConfiguration_16();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_HandleProximityEffectConfig(Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityEffectConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_HandleProximityEffectConfig_m0251E0982E1B751EA4AD2C89DB76740634D88AD9 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_HandleProximityEffectConfig_m0251E0982E1B751EA4AD2C89DB76740634D88AD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_HandleProximityEffectConfig_m0251E0982E1B751EA4AD2C89DB76740634D88AD9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43600));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43601));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43602));
		// handleProximityEffectConfiguration = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43603));
		ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * L_0 = ___value0;
		__this->set_handleProximityEffectConfiguration_16(L_0);
		// proximityEffect = new ProximityEffect(handleProximityEffectConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43604));
		ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * L_1 = __this->get_handleProximityEffectConfiguration_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43607));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_2 = (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 *)il2cpp_codegen_object_new(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34_il2cpp_TypeInfo_var);
		ProximityEffect__ctor_m118B4F8FD0802B3EB7609504EFD8988142D24319(L_2, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43607));
		__this->set_proximityEffect_37(L_2);
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43605));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43608));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43608));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43606));
		return;
	}
}
// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_DebugText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * BoundsControl_get_DebugText_mBF381892A84722509AD6840C37CC58DF98FC7C8B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_DebugText_mBF381892A84722509AD6840C37CC58DF98FC7C8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_DebugText_mBF381892A84722509AD6840C37CC58DF98FC7C8B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43609));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43610));
	{
		// get => debugText;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43611));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = __this->get_debugText_17();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_DebugText(UnityEngine.TextMesh)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_DebugText_m24E0841B59E05AA0EBAC8FF7897FC46761F5C371 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_DebugText_m24E0841B59E05AA0EBAC8FF7897FC46761F5C371_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_DebugText_m24E0841B59E05AA0EBAC8FF7897FC46761F5C371_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43612));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43613));
	{
		// set => debugText = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43614));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = ___value0;
		__this->set_debugText_17(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_HideElementsInInspector()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_HideElementsInInspector_m263F1B3F82854537E62C71C020727972D5895790 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_HideElementsInInspector_m263F1B3F82854537E62C71C020727972D5895790_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_HideElementsInInspector_m263F1B3F82854537E62C71C020727972D5895790_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43615));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43616));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43617));
		// get { return hideElementsInInspector; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43618));
		bool L_0 = __this->get_hideElementsInInspector_18();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return hideElementsInInspector; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43619));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_HideElementsInInspector(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_HideElementsInInspector_mCFCBB6E028AD50BEA352C069784E5F387CA7A751 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_HideElementsInInspector_mCFCBB6E028AD50BEA352C069784E5F387CA7A751_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_HideElementsInInspector_mCFCBB6E028AD50BEA352C069784E5F387CA7A751_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43620));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43621));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43622));
		// if (hideElementsInInspector != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43623));
		bool L_0 = __this->get_hideElementsInInspector_18();
		bool L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43624));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43625));
		// hideElementsInInspector = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43626));
		bool L_3 = ___value0;
		__this->set_hideElementsInInspector_18(L_3);
		// UpdateRigVisibilityInInspector();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43627));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43630));
		BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43630));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43628));
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43629));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_SmoothingActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_SmoothingActive_m3592C74F9F78738842F5A0C901F9731BB33413AC (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_SmoothingActive_m3592C74F9F78738842F5A0C901F9731BB33413AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_SmoothingActive_m3592C74F9F78738842F5A0C901F9731BB33413AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43631));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43632));
	{
		// get => smoothingActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43633));
		bool L_0 = __this->get_smoothingActive_19();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_SmoothingActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_SmoothingActive_mB71CB8AD272296E41A4DD742D4A89EF8914D52EE (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_SmoothingActive_mB71CB8AD272296E41A4DD742D4A89EF8914D52EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_SmoothingActive_mB71CB8AD272296E41A4DD742D4A89EF8914D52EE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43634));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43635));
	{
		// set => smoothingActive = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43636));
		bool L_0 = ___value0;
		__this->set_smoothingActive_19(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_RotateLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BoundsControl_get_RotateLerpTime_mB6FB7AB3E28DA348CFC0ED610BEE54E4F09D11BA (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_RotateLerpTime_mB6FB7AB3E28DA348CFC0ED610BEE54E4F09D11BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_RotateLerpTime_mB6FB7AB3E28DA348CFC0ED610BEE54E4F09D11BA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43637));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43638));
	{
		// get => rotateLerpTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43639));
		float L_0 = __this->get_rotateLerpTime_20();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_RotateLerpTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_RotateLerpTime_mC588F84B79D3E32ABDD1C4F7F9ED13CE91EFC6E1 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_RotateLerpTime_mC588F84B79D3E32ABDD1C4F7F9ED13CE91EFC6E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_RotateLerpTime_mC588F84B79D3E32ABDD1C4F7F9ED13CE91EFC6E1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43640));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43641));
	{
		// set => rotateLerpTime = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43642));
		float L_0 = ___value0;
		__this->set_rotateLerpTime_20(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BoundsControl_get_ScaleLerpTime_m078E9848C9A1AFA483489F73464EFF41ADCCA836 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleLerpTime_m078E9848C9A1AFA483489F73464EFF41ADCCA836_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleLerpTime_m078E9848C9A1AFA483489F73464EFF41ADCCA836_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43643));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43644));
	{
		// get => scaleLerpTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43645));
		float L_0 = __this->get_scaleLerpTime_21();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_ScaleLerpTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_ScaleLerpTime_m64A9BD9664E632FA23E12312300B1733171F3E6A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_ScaleLerpTime_m64A9BD9664E632FA23E12312300B1733171F3E6A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_ScaleLerpTime_m64A9BD9664E632FA23E12312300B1733171F3E6A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43646));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43647));
	{
		// set => scaleLerpTime = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43648));
		float L_0 = ___value0;
		__this->set_scaleLerpTime_21(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TranslateLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BoundsControl_get_TranslateLerpTime_m9F442872B4D9DDBC02754E01FD4A06707FB1AF4A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TranslateLerpTime_m9F442872B4D9DDBC02754E01FD4A06707FB1AF4A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TranslateLerpTime_m9F442872B4D9DDBC02754E01FD4A06707FB1AF4A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43649));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43650));
	{
		// get => translateLerpTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43651));
		float L_0 = __this->get_translateLerpTime_22();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_TranslateLerpTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_TranslateLerpTime_m691D700B4B71579C44D7A38041740E9DE61F3A28 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_TranslateLerpTime_m691D700B4B71579C44D7A38041740E9DE61F3A28_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_TranslateLerpTime_m691D700B4B71579C44D7A38041740E9DE61F3A28_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43652));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43653));
	{
		// set => translateLerpTime = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43654));
		float L_0 = ___value0;
		__this->set_translateLerpTime_22(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_EnableConstraints()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43655));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43656));
	{
		// get => enableConstraints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43657));
		bool L_0 = __this->get_enableConstraints_23();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_EnableConstraints(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_EnableConstraints_m57E3B9579EE731A9AAF185BDFCD35417AA48B43A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_EnableConstraints_m57E3B9579EE731A9AAF185BDFCD35417AA48B43A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_EnableConstraints_m57E3B9579EE731A9AAF185BDFCD35417AA48B43A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43658));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43659));
	{
		// set => enableConstraints = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43660));
		bool L_0 = ___value0;
		__this->set_enableConstraints_23(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ConstraintManager Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ConstraintsManager()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * BoundsControl_get_ConstraintsManager_m5ADDA4878AA81A6DE671D64BA55B91C2B22C8F18 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ConstraintsManager_m5ADDA4878AA81A6DE671D64BA55B91C2B22C8F18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ConstraintsManager_m5ADDA4878AA81A6DE671D64BA55B91C2B22C8F18_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43661));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43662));
	{
		// get => constraintsManager;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43663));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_0 = __this->get_constraintsManager_24();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_ConstraintsManager(Microsoft.MixedReality.Toolkit.UI.ConstraintManager)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_ConstraintsManager_mDFF3A01D76B75BB4ADAC2E7CE7BC4D549956AC79 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_ConstraintsManager_mDFF3A01D76B75BB4ADAC2E7CE7BC4D549956AC79_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_ConstraintsManager_mDFF3A01D76B75BB4ADAC2E7CE7BC4D549956AC79_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43664));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43665));
	{
		// set => constraintsManager = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43666));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_0 = ___value0;
		__this->set_constraintsManager_24(L_0);
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_RotateStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43667));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43668));
	{
		// get => rotateStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43669));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_rotateStarted_25();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_RotateStarted(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_RotateStarted_m65FCF05990EDFE9ADCCC4B4761AEE8DE2F0DDDB4 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_RotateStarted_m65FCF05990EDFE9ADCCC4B4761AEE8DE2F0DDDB4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_RotateStarted_m65FCF05990EDFE9ADCCC4B4761AEE8DE2F0DDDB4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43670));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43671));
	{
		// set => rotateStarted = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43672));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_rotateStarted_25(L_0);
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_RotateStopped()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43673));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43674));
	{
		// get => rotateStopped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43675));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_rotateStopped_26();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_RotateStopped(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_RotateStopped_mFA4C62275118CAA2DE41AB9796F6C1D22AECAF5B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_RotateStopped_mFA4C62275118CAA2DE41AB9796F6C1D22AECAF5B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_RotateStopped_mFA4C62275118CAA2DE41AB9796F6C1D22AECAF5B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43677));
	{
		// set => rotateStopped = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43678));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_rotateStopped_26(L_0);
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43680));
	{
		// get => scaleStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43681));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_scaleStarted_27();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_ScaleStarted(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_ScaleStarted_m1934BA74B13DBAFF9C829D5905CEAD0E857E69AE (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_ScaleStarted_m1934BA74B13DBAFF9C829D5905CEAD0E857E69AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_ScaleStarted_m1934BA74B13DBAFF9C829D5905CEAD0E857E69AE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43682));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43683));
	{
		// set => scaleStarted = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43684));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_scaleStarted_27(L_0);
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ScaleStopped()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43685));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43686));
	{
		// get => scaleStopped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43687));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_scaleStopped_28();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_ScaleStopped(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_ScaleStopped_mA5509127D12B690E5F88D330488378BE9566110C (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_ScaleStopped_mA5509127D12B690E5F88D330488378BE9566110C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_ScaleStopped_mA5509127D12B690E5F88D330488378BE9566110C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43688));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43689));
	{
		// set => scaleStopped = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43690));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_scaleStopped_28(L_0);
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TranslateStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43691));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43692));
	{
		// get => translateStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43693));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_translateStarted_29();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_TranslateStarted(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_TranslateStarted_mFCD5C4CF7040FA9A3A11422B1E9165F05FBF2647 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_TranslateStarted_mFCD5C4CF7040FA9A3A11422B1E9165F05FBF2647_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_TranslateStarted_mFCD5C4CF7040FA9A3A11422B1E9165F05FBF2647_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43694));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43695));
	{
		// set => translateStarted = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43696));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_translateStarted_29(L_0);
		return;
	}
}
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TranslateStopped()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43698));
	{
		// get => translateStopped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43699));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_translateStopped_30();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_TranslateStopped(UnityEngine.Events.UnityEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_TranslateStopped_mF71778EB36F093ABD75850151088EA10416EAD03 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_TranslateStopped_mF71778EB36F093ABD75850151088EA10416EAD03_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_TranslateStopped_mF71778EB36F093ABD75850151088EA10416EAD03_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43700));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43701));
	{
		// set => translateStopped = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43702));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = ___value0;
		__this->set_translateStopped_30(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ElasticsManager()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * BoundsControl_get_ElasticsManager_m6C35636B9CF49B9279D441A8CD63AF23B9F4984D (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ElasticsManager_m6C35636B9CF49B9279D441A8CD63AF23B9F4984D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ElasticsManager_m6C35636B9CF49B9279D441A8CD63AF23B9F4984D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43703));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43704));
	{
		// get => elasticsManager;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43705));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_0 = __this->get_elasticsManager_31();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_ElasticsManager(Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_ElasticsManager_m1FE1A82B2ADCDBF828E43A85E8388AE1412157CF (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_ElasticsManager_m1FE1A82B2ADCDBF828E43A85E8388AE1412157CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_ElasticsManager_m1FE1A82B2ADCDBF828E43A85E8388AE1412157CF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43706));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43707));
	{
		// set => elasticsManager = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43708));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_0 = ___value0;
		__this->set_elasticsManager_31(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_WireframeOnly()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_WireframeOnly_mECFE6A83DDE44F38B1D5A26C5A80E51DEAEB4A72 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_WireframeOnly_mECFE6A83DDE44F38B1D5A26C5A80E51DEAEB4A72_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_WireframeOnly_mECFE6A83DDE44F38B1D5A26C5A80E51DEAEB4A72_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43709));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43710));
	{
		// public bool WireframeOnly { get => wireframeOnly; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43711));
		bool L_0 = __this->get_wireframeOnly_38();
		return L_0;
	}
}
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_BoundsCorners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* BoundsControl_get_BoundsCorners_m6EEFF37CB3CCE96CC13388CECFF0BDC7960817CC (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_BoundsCorners_m6EEFF37CB3CCE96CC13388CECFF0BDC7960817CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_BoundsCorners_m6EEFF37CB3CCE96CC13388CECFF0BDC7960817CC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43712));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43713));
	{
		// public Vector3[] BoundsCorners { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43714));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CBoundsCornersU3Ek__BackingField_61();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_BoundsCorners(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_BoundsCorners_m3FC0081AB51CEFCE563930DF4B4D9D9EEFB62356 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_BoundsCorners_m3FC0081AB51CEFCE563930DF4B4D9D9EEFB62356_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_BoundsCorners_m3FC0081AB51CEFCE563930DF4B4D9D9EEFB62356_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43715));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43716));
	{
		// public Vector3[] BoundsCorners { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43717));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CBoundsCornersU3Ek__BackingField_61(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_ActualFlattenAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43718));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43719));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43720));
		// if(FlattenAxis == FlattenModeType.FlattenAuto)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43721));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43728));
		int32_t L_0 = BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43728));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43722));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43723));
		// return VisualUtils.DetermineAxisToFlatten(TargetBounds.bounds.extents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43724));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43729));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_2 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43730));
		NullCheck(L_2);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_3 = Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43730));
		V_1 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43731));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Bounds_get_extents_mBA4B2196036DD5A858BDAD53BC71A778B41841C9((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43731));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43732));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		int32_t L_5 = VisualUtils_DetermineAxisToFlatten_mBD82021945FAF0ECFD14031E95B98F8D24C30118(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43732));
		V_2 = L_5;
		goto IL_0034;
	}

IL_002a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43725));
		// return FlattenAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43726));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43733));
		int32_t L_6 = BoundsControl_get_FlattenAxis_m58315847E522B51CA8BFCB382BD6745CC44DD217(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43733));
		V_2 = L_6;
		goto IL_0034;
	}

IL_0034:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43727));
		int32_t L_7 = V_2;
		return L_7;
	}
}
// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_TargetBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43734));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43735));
	{
		// public BoxCollider TargetBounds { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43736));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_U3CTargetBoundsU3Ek__BackingField_62();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_TargetBounds(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43737));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43738));
	{
		// public BoxCollider TargetBounds { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43739));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = ___value0;
		__this->set_U3CTargetBoundsU3Ek__BackingField_62(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_Active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_Active_mF1EFEA5AD8EDE3F375F3F02186AA2B4FE025DB99 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_Active_mF1EFEA5AD8EDE3F375F3F02186AA2B4FE025DB99_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_Active_mF1EFEA5AD8EDE3F375F3F02186AA2B4FE025DB99_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43740));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43741));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43742));
		// return active;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43743));
		bool L_0 = __this->get_active_63();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43744));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::set_Active(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43746));
	ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * G_B6_0 = NULL;
	ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * G_B5_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43747));
		// if (active != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43748));
		bool L_0 = __this->get_active_63();
		bool L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43749));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0063;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43750));
		// active = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43751));
		bool L_3 = ___value0;
		__this->set_active_63(L_3);
		// if (rigRoot != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43752));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43765));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43765));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43753));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43754));
		// rigRoot.gameObject.SetActive(value);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43755));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43766));
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43766));
		bool L_9 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43767));
		NullCheck(L_8);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43767));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43756));
	}

IL_003d:
	{
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43757));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43768));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43768));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43758));
		bool L_10 = __this->get_active_63();
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43759));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43760));
		// proximityEffect?.ResetProximityScale();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43761));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_12 = __this->get_proximityEffect_37();
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_13 = L_12;
		G_B5_0 = L_13;
		if (L_13)
		{
			G_B6_0 = L_13;
			goto IL_005b;
		}
	}
	{
		goto IL_0061;
	}

IL_005b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43769));
		NullCheck(G_B6_0);
		ProximityEffect_ResetProximityScale_mA0006227A4EF84138BF451F740EE9BC0B7A40366(G_B6_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43769));
	}

IL_0061:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43762));
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43763));
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43764));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::get_IsInitialized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43770));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43771));
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43772));
		// return rotationHandles != null &&
		//     scaleHandles != null &&
		//     translationHandles != null &&
		//     boxDisplay != null &&
		//     links != null &&
		//     proximityEffect != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43773));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_0 = __this->get_rotationHandles_34();
		if (!L_0)
		{
			goto IL_0034;
		}
	}
	{
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_1 = __this->get_scaleHandles_33();
		if (!L_1)
		{
			goto IL_0034;
		}
	}
	{
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_2 = __this->get_translationHandles_35();
		if (!L_2)
		{
			goto IL_0034;
		}
	}
	{
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_3 = __this->get_boxDisplay_36();
		if (!L_3)
		{
			goto IL_0034;
		}
	}
	{
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_4 = __this->get_links_32();
		if (!L_4)
		{
			goto IL_0034;
		}
	}
	{
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_5 = __this->get_proximityEffect_37();
		G_B7_0 = ((!(((RuntimeObject*)(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 *)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0035;
	}

IL_0034:
	{
		G_B7_0 = 0;
	}

IL_0035:
	{
		V_0 = (bool)G_B7_0;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43774));
		bool L_6 = V_0;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::HighlightWires()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_HighlightWires_m26A4840760D1309E55D14CCC2B9D012339D600D5 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_HighlightWires_m26A4840760D1309E55D14CCC2B9D012339D600D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_HighlightWires_m26A4840760D1309E55D14CCC2B9D012339D600D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43775));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43776));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43777));
		// SetHighlighted(null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43778));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43780));
		BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3(__this, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL, (RuntimeObject*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43780));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43779));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UnhighlightWires()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UnhighlightWires_m226370DFEF8CA3774EABB14DECBA4AB9A6FAEE2E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_UnhighlightWires_m226370DFEF8CA3774EABB14DECBA4AB9A6FAEE2E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_UnhighlightWires_m226370DFEF8CA3774EABB14DECBA4AB9A6FAEE2E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43781));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43782));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43783));
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43784));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43786));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43786));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43785));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CreateRig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43787));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43788));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43789));
		// if (!IsInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43790));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43809));
		bool L_0 = BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43809));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43791));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43792));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43793));
		goto IL_0088;
	}

IL_0011:
	{
		// if (boundsOverride != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43794));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_2 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43810));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43810));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43795));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43796));
		// initialBoundsOverrideSize = boundsOverride.size;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43797));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_5 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43811));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43811));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43812));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_7;
		memset((&L_7), 0, sizeof(L_7));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_7), L_6, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43812));
		__this->set_initialBoundsOverrideSize_56(L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43798));
	}

IL_0039:
	{
		// DestroyRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43799));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43813));
		BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43813));
		// InitializeRigRoot();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43814));
		BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43814));
		// InitializeDataStructures();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43801));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43815));
		BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43815));
		// DetermineTargetBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43802));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43816));
		BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43816));
		// UpdateExtents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43803));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43817));
		BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43817));
		// CreateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43804));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43818));
		BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43818));
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43805));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43819));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43819));
		// rigRoot.gameObject.SetActive(active);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43806));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43820));
		NullCheck(L_8);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43820));
		bool L_10 = __this->get_active_63();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43821));
		NullCheck(L_9);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43821));
		// UpdateRigVisibilityInInspector();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43807));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43822));
		BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43822));
	}

IL_0088:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43808));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_UpdateBounds_m593AA336470B0A6375AF749043A8DE7DC5F7BC98_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43823));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43824));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43825));
		// DetermineTargetBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43826));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43830));
		BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43830));
		// UpdateExtents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43827));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43831));
		BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43831));
		// UpdateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43828));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43832));
		BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43832));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43829));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_Awake_m9E45F7B8E80C7327E6E9A07276EA3ABDEFB89DFD (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_Awake_m9E45F7B8E80C7327E6E9A07276EA3ABDEFB89DFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_Awake_m9E45F7B8E80C7327E6E9A07276EA3ABDEFB89DFD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43833));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43834));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43835));
		// if (targetObject == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43836));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_targetObject_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43857));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43857));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43837));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001d;
		}
	}
	{
		// targetObject = gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43838));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43858));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43858));
		__this->set_targetObject_4(L_3);
	}

IL_001d:
	{
		// scaleHandlesConfiguration = EnsureScriptable(scaleHandlesConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43839));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_4 = __this->get_scaleHandlesConfiguration_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43859));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_5 = BoundsControl_EnsureScriptable_TisScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339_m423F9B182EFDDD359AE07A23B17F6224CD65422B(L_4, /*hidden argument*/BoundsControl_EnsureScriptable_TisScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339_m423F9B182EFDDD359AE07A23B17F6224CD65422B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43859));
		__this->set_scaleHandlesConfiguration_13(L_5);
		// rotationHandlesConfiguration = EnsureScriptable(rotationHandlesConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43840));
		RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * L_6 = __this->get_rotationHandlesConfiguration_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43860));
		RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * L_7 = BoundsControl_EnsureScriptable_TisRotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A_m05B654AB347DBC8C1EAE37EEDD58627DB7596362(L_6, /*hidden argument*/BoundsControl_EnsureScriptable_TisRotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A_m05B654AB347DBC8C1EAE37EEDD58627DB7596362_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43860));
		__this->set_rotationHandlesConfiguration_14(L_7);
		// translationHandlesConfiguration = EnsureScriptable(translationHandlesConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43841));
		TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * L_8 = __this->get_translationHandlesConfiguration_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43861));
		TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * L_9 = BoundsControl_EnsureScriptable_TisTranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B_m10B4A775D8EB38223A752BA18E785D033B600DFA(L_8, /*hidden argument*/BoundsControl_EnsureScriptable_TisTranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B_m10B4A775D8EB38223A752BA18E785D033B600DFA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43861));
		__this->set_translationHandlesConfiguration_15(L_9);
		// boxDisplayConfiguration = EnsureScriptable(boxDisplayConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43842));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_10 = __this->get_boxDisplayConfiguration_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43862));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_11 = BoundsControl_EnsureScriptable_TisBoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797_m0B8A924E9998C263C621C385E34ECD92621C8667(L_10, /*hidden argument*/BoundsControl_EnsureScriptable_TisBoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797_m0B8A924E9998C263C621C385E34ECD92621C8667_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43862));
		__this->set_boxDisplayConfiguration_11(L_11);
		// linksConfiguration = EnsureScriptable(linksConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43843));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_12 = __this->get_linksConfiguration_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43863));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_13 = BoundsControl_EnsureScriptable_TisLinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5_mE3A96313F4080A652C6F67196F41AD06AA4E6089(L_12, /*hidden argument*/BoundsControl_EnsureScriptable_TisLinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5_mE3A96313F4080A652C6F67196F41AD06AA4E6089_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43863));
		__this->set_linksConfiguration_12(L_13);
		// handleProximityEffectConfiguration = EnsureScriptable(handleProximityEffectConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43844));
		ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * L_14 = __this->get_handleProximityEffectConfiguration_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43864));
		ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * L_15 = BoundsControl_EnsureScriptable_TisProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808_m5FCEDC475B845471AC54055C8ED90589F40FE43E(L_14, /*hidden argument*/BoundsControl_EnsureScriptable_TisProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808_m5FCEDC475B845471AC54055C8ED90589F40FE43E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43864));
		__this->set_handleProximityEffectConfiguration_16(L_15);
		// scaleHandles = scaleHandlesConfiguration.ConstructInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43845));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_16 = __this->get_scaleHandlesConfiguration_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43865));
		NullCheck(L_16);
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_17 = VirtFuncInvoker0< ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * >::Invoke(4 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.ScaleHandlesConfiguration::ConstructInstance() */, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43865));
		__this->set_scaleHandles_33(L_17);
		// rotationHandles = rotationHandlesConfiguration.ConstructInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43846));
		RotationHandlesConfiguration_t97EEEB0F5EAC5BF3E0790C8E845917F4B995EE8A * L_18 = __this->get_rotationHandlesConfiguration_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43866));
		NullCheck(L_18);
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_19 = VirtFuncInvoker0< RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * >::Invoke(4 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.RotationHandlesConfiguration::ConstructInstance() */, L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43866));
		__this->set_rotationHandles_34(L_19);
		// translationHandles = translationHandlesConfiguration.ConstructInstance();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43847));
		TranslationHandlesConfiguration_tC735C8B3B8FF4E6B676DB5CAF798A19A1603151B * L_20 = __this->get_translationHandlesConfiguration_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43867));
		NullCheck(L_20);
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_21 = VirtFuncInvoker0< TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * >::Invoke(4 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandles Microsoft.MixedReality.Toolkit.UI.BoundsControl.TranslationHandlesConfiguration::ConstructInstance() */, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43867));
		__this->set_translationHandles_35(L_21);
		// boxDisplay = new BoxDisplay(boxDisplayConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43848));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_22 = __this->get_boxDisplayConfiguration_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43868));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_23 = (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 *)il2cpp_codegen_object_new(BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537_il2cpp_TypeInfo_var);
		BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972(L_23, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43868));
		__this->set_boxDisplay_36(L_23);
		// links = new Links(linksConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43849));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_24 = __this->get_linksConfiguration_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43869));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_25 = (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 *)il2cpp_codegen_object_new(Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361_il2cpp_TypeInfo_var);
		Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171(L_25, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43869));
		__this->set_links_32(L_25);
		// proximityEffect = new ProximityEffect(handleProximityEffectConfiguration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43850));
		ProximityEffectConfiguration_tF5B8A33F4DE18E2EB8558484BD80FF4C6B45B808 * L_26 = __this->get_handleProximityEffectConfiguration_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43870));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_27 = (ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 *)il2cpp_codegen_object_new(ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34_il2cpp_TypeInfo_var);
		ProximityEffect__ctor_m118B4F8FD0802B3EB7609504EFD8988142D24319(L_27, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43870));
		__this->set_proximityEffect_37(L_27);
		// if (constraintsManager == null && EnableConstraints)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43851));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_28 = __this->get_constraintsManager_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43871));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_29 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_28, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43871));
		if (!L_29)
		{
			goto IL_00ff;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43872));
		bool L_30 = BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43872));
		G_B5_0 = ((int32_t)(L_30));
		goto IL_0100;
	}

IL_00ff:
	{
		G_B5_0 = 0;
	}

IL_0100:
	{
		V_1 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43852));
		bool L_31 = V_1;
		if (!L_31)
		{
			goto IL_0117;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43853));
		// constraintsManager = gameObject.EnsureComponent<ConstraintManager>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43854));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43873));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_32 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43873));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43874));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_33 = ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF(L_32, /*hidden argument*/ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43874));
		__this->set_constraintsManager_24(L_33);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43855));
	}

IL_0117:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43856));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnEnable_mF176F98F8FDD9E3E84AB4F4B763A06F59B6FB1D4 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnEnable_mF176F98F8FDD9E3E84AB4F4B763A06F59B6FB1D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnEnable_mF176F98F8FDD9E3E84AB4F4B763A06F59B6FB1D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43887));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43888));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43889));
		// DetermineTargetBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43890));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43895));
		BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43895));
		// SetActivationFlags();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43891));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43896));
		BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43896));
		// CreateRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43892));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43897));
		BoundsControl_CreateRig_m4065DA172D0D27429DF8448190020B0FA2B2D26B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43897));
		// CaptureInitialState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43893));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43898));
		BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43898));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43894));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::SetActivationFlags()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_SetActivationFlags_m635B288427D770441A79571E58297C138947C16B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43899));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43900));
	int32_t G_B4_0 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43901));
		// wireframeOnly = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43902));
		__this->set_wireframeOnly_38((bool)0);
		// if (activation == BoundsControlActivationType.ActivateByProximityAndPointer ||
		//     activation == BoundsControlActivationType.ActivateByProximity ||
		//     activation == BoundsControlActivationType.ActivateByPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43903));
		int32_t L_0 = __this->get_activation_7();
		if ((((int32_t)L_0) == ((int32_t)3)))
		{
			goto IL_0025;
		}
	}
	{
		int32_t L_1 = __this->get_activation_7();
		if ((((int32_t)L_1) == ((int32_t)1)))
		{
			goto IL_0025;
		}
	}
	{
		int32_t L_2 = __this->get_activation_7();
		G_B4_0 = ((((int32_t)L_2) == ((int32_t)2))? 1 : 0);
		goto IL_0026;
	}

IL_0025:
	{
		G_B4_0 = 1;
	}

IL_0026:
	{
		V_0 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43904));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_005d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43905));
		// Active = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43906));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43924));
		BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43924));
		// if (currentPointer == null || !DoesActivationMatchPointer(currentPointer))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43907));
		RuntimeObject* L_4 = __this->get_currentPointer_39();
		if (!L_4)
		{
			goto IL_004c;
		}
	}
	{
		RuntimeObject* L_5 = __this->get_currentPointer_39();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43925));
		bool L_6 = BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43925));
		G_B8_0 = ((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		goto IL_004d;
	}

IL_004c:
	{
		G_B8_0 = 1;
	}

IL_004d:
	{
		V_1 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43908));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43909));
		// wireframeOnly = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43910));
		__this->set_wireframeOnly_38((bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43911));
	}

IL_005a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43912));
		goto IL_008d;
	}

IL_005d:
	{
		// else if (activation == BoundsControlActivationType.ActivateOnStart)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43913));
		int32_t L_8 = __this->get_activation_7();
		V_2 = (bool)((((int32_t)L_8) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43914));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0076;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43915));
		// Active = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43916));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43926));
		BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43926));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43917));
		goto IL_008d;
	}

IL_0076:
	{
		// else if (activation == BoundsControlActivationType.ActivateManually)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43918));
		int32_t L_10 = __this->get_activation_7();
		V_3 = (bool)((((int32_t)L_10) == ((int32_t)4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43919));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_008d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43920));
		// Active = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43921));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43927));
		BoundsControl_set_Active_m2BEAD1B2C4993D8F0E137E88C31836617E50A1F8(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43927));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43922));
	}

IL_008d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43923));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnDisable_m2694A9A5B1E978588EAB05942AE90FB1888135CB (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnDisable_m2694A9A5B1E978588EAB05942AE90FB1888135CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnDisable_m2694A9A5B1E978588EAB05942AE90FB1888135CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43928));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43929));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43930));
		// DestroyRig();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43938));
		BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43938));
		// if (currentPointer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43932));
		RuntimeObject* L_0 = __this->get_currentPointer_39();
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43933));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43934));
		// DropController();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43935));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43939));
		BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43939));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43936));
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43937));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_Update_m60059DF72B5B7A1C26B01E2F00C638186B892321 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_Update_m60059DF72B5B7A1C26B01E2F00C638186B892321_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_Update_m60059DF72B5B7A1C26B01E2F00C638186B892321_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43940));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43941));
	int32_t G_B8_0 = 0;
	int32_t G_B10_0 = 0;
	int32_t G_B15_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43942));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43943));
		bool L_0 = __this->get_active_63();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43944));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_00dd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43945));
		// if (currentPointer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43946));
		RuntimeObject* L_2 = __this->get_currentPointer_39();
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43947));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_003b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43948));
		// TransformTarget(currentHandleType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43949));
		int32_t L_4 = __this->get_currentHandleType_54();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43967));
		BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43967));
		// UpdateExtents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43968));
		BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43968));
		// UpdateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43951));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43969));
		BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43969));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43952));
		goto IL_0095;
	}

IL_003b:
	{
		// else if ((!isChildOfTarget && Target.transform.hasChanged)
		//     || (boundsOverride != null && HasBoundsOverrideChanged()))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43953));
		bool L_5 = __this->get_isChildOfTarget_57();
		if (L_5)
		{
			goto IL_0055;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43970));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43970));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43971));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43971));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43972));
		NullCheck(L_7);
		bool L_8 = Transform_get_hasChanged_m57B246DA5FB4AC01F1F109DCFE1D7A12048767D2(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43972));
		if (L_8)
		{
			goto IL_006e;
		}
	}

IL_0055:
	{
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_9 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43973));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_10 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_9, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43973));
		if (!L_10)
		{
			goto IL_006b;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43974));
		bool L_11 = BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43974));
		G_B8_0 = ((int32_t)(L_11));
		goto IL_006c;
	}

IL_006b:
	{
		G_B8_0 = 0;
	}

IL_006c:
	{
		G_B10_0 = G_B8_0;
		goto IL_006f;
	}

IL_006e:
	{
		G_B10_0 = 1;
	}

IL_006f:
	{
		V_2 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43954));
		bool L_12 = V_2;
		if (!L_12)
		{
			goto IL_0095;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43955));
		// UpdateExtents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43956));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43975));
		BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43975));
		// UpdateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43957));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43976));
		BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43976));
		// Target.transform.hasChanged = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43958));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43977));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43977));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43978));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43978));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43979));
		NullCheck(L_14);
		Transform_set_hasChanged_mA2BDCABEEF63468A4CF354CB7ACFDCC8E910A3D9(L_14, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43979));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43959));
	}

IL_0095:
	{
		// if (!wireframeOnly && currentPointer == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43960));
		bool L_15 = __this->get_wireframeOnly_38();
		if (L_15)
		{
			goto IL_00a8;
		}
	}
	{
		RuntimeObject* L_16 = __this->get_currentPointer_39();
		G_B15_0 = ((((RuntimeObject*)(RuntimeObject*)L_16) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		goto IL_00a9;
	}

IL_00a8:
	{
		G_B15_0 = 0;
	}

IL_00a9:
	{
		V_3 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43961));
		bool L_17 = V_3;
		if (!L_17)
		{
			goto IL_00dc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43962));
		// proximityEffect.UpdateScaling(TargetBounds.transform.TransformPoint(TargetBounds.center), currentBoundsExtents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43963));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_18 = __this->get_proximityEffect_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43980));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_19 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43980));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43981));
		NullCheck(L_19);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43981));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43982));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_21 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43982));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43983));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = BoxCollider_get_center_mA9164B9949F419A35CC949685F1DC14588BC6402(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43983));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43984));
		NullCheck(L_20);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_20, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43984));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = __this->get_currentBoundsExtents_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43985));
		NullCheck(L_18);
		ProximityEffect_UpdateScaling_m65020F19499DE86ECA1B5023517DE79364BDD909(L_18, L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43985));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43964));
	}

IL_00dc:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43965));
	}

IL_00dd:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43966));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::HasBoundsOverrideChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_HasBoundsOverrideChanged_m0D20BDEAE50CA74D757DFF204F7A62EE2A78760D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43986));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43987));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43988));
		// Debug.Assert(boundsOverride != null, "HasBoundsOverrideChanged called but boundsOverride is null");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43989));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43995));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43995));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43996));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_1, _stringLiteral7F244EA782B969F5A351664BBBE0F12AAE1DE043, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43996));
		// Bounds curBounds = boundsOverride.bounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43990));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_2 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43997));
		NullCheck(L_2);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_3 = Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43997));
		V_0 = L_3;
		// bool result = curBounds != prevBoundsOverride;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43991));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_4 = V_0;
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_5 = __this->get_prevBoundsOverride_55();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43998));
		bool L_6 = Bounds_op_Inequality_mA6EBEDD980A41D5E206CBE009731EB1CA0B25502(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43998));
		V_1 = L_6;
		// prevBoundsOverride = curBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43992));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_7 = V_0;
		__this->set_prevBoundsOverride_55(L_7);
		// return result;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43993));
		bool L_8 = V_1;
		V_2 = L_8;
		goto IL_003c;
	}

IL_003c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43994));
		bool L_9 = V_2;
		return L_9;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DetermineTargetBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_DetermineTargetBounds_mF5249478C5583B6D173C0EA8291754619B17CD48_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43999));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44000));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44001));
		// UnityPhysics.SyncTransforms();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44002));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44034));
		Physics_SyncTransforms_mCC0AB451C1384416298E5FAEF4E818503929AE58(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44034));
		// if (boundsOverride != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44003));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44035));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44035));
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44004));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44005));
		// TargetBounds = boundsOverride;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44006));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_3 = __this->get_boundsOverride_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44036));
		BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44036));
		// TargetBounds.transform.hasChanged = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44007));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44037));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_4 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44037));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44038));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44038));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44039));
		NullCheck(L_5);
		Transform_set_hasChanged_mA2BDCABEEF63468A4CF354CB7ACFDCC8E910A3D9(L_5, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44039));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44008));
		goto IL_007b;
	}

IL_003a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44009));
		// TargetBounds = Target.EnsureComponent<BoxCollider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44010));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44040));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44040));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44041));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_7 = ComponentExtensions_EnsureComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mFDBA95177D298C1F56E7358E231E0BD6E41FE103(L_6, /*hidden argument*/ComponentExtensions_EnsureComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mFDBA95177D298C1F56E7358E231E0BD6E41FE103_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44042));
		BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_inline(__this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44042));
		// Bounds bounds = GetTargetBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44011));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44043));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_8 = BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44043));
		V_2 = L_8;
		// TargetBounds.center = bounds.center;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44012));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44044));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_9 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44044));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44045));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Bounds_get_center_m4FB6E99F0533EE2D432988B08474D6DC9B8B744B((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44045));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44046));
		NullCheck(L_9);
		BoxCollider_set_center_m8A871056CA383C9932A7694FE396A1EFA247FC69(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44046));
		// TargetBounds.size = bounds.size;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44013));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44047));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_11 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44047));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44048));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44048));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44049));
		NullCheck(L_11);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44049));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44014));
	}

IL_007b:
	{
		// if (boxPadding == Vector3.zero) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44015));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = __this->get_boxPadding_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44050));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44050));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44051));
		bool L_15 = Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44051));
		V_3 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44016));
		bool L_16 = V_3;
		if (!L_16)
		{
			goto IL_0092;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44017));
		// if (boxPadding == Vector3.zero) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44018));
		goto IL_0110;
	}

IL_0092:
	{
		// Vector3 scale = TargetBounds.transform.lossyScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44019));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44052));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_17 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44052));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44053));
		NullCheck(L_17);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44053));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44054));
		NullCheck(L_18);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44054));
		V_0 = L_19;
		// for (int i = 0; i < 3; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44020));
		V_4 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44021));
		goto IL_00e2;
	}

IL_00a8:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44022));
		// if (scale[i] == 0f) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44023));
		int32_t L_20 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44055));
		float L_21 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44055));
		V_5 = (bool)((((float)L_21) == ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44024));
		bool L_22 = V_5;
		if (!L_22)
		{
			goto IL_00c2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44025));
		// if (scale[i] == 0f) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44026));
		goto IL_0110;
	}

IL_00c2:
	{
		// scale[i] = 1f / scale[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44027));
		int32_t L_23 = V_4;
		int32_t L_24 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44056));
		float L_25 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44056));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44057));
		Vector3_set_Item_m89FF112CEC0D9ED43F1C4FE01522C75394B30AE6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), L_23, ((float)((float)(1.0f)/(float)L_25)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44057));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44028));
		// for (int i = 0; i < 3; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44029));
		int32_t L_26 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_26, (int32_t)1));
	}

IL_00e2:
	{
		// for (int i = 0; i < 3; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44030));
		int32_t L_27 = V_4;
		V_6 = (bool)((((int32_t)L_27) < ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44031));
		bool L_28 = V_6;
		if (L_28)
		{
			goto IL_00a8;
		}
	}
	{
		// TargetBounds.size += Vector3.Scale(boxPadding, scale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44032));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44058));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_29 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44058));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_30 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44059));
		NullCheck(L_30);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44059));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = __this->get_boxPadding_10();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44060));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Vector3_Scale_m77004B226483C7644B3F4A46B950589EE8F88775(L_32, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44060));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44061));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_31, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44061));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44062));
		NullCheck(L_30);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_30, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44062));
	}

IL_0110:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44033));
		return;
	}
}
// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetTargetBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	RuntimeObject* V_3 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_4 = NULL;
	bool V_5 = false;
	RuntimeObject* V_6 = NULL;
	Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  V_7;
	memset((&V_7), 0, sizeof(V_7));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_8 = NULL;
	bool V_9 = false;
	int32_t V_10 = 0;
	bool V_11 = false;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_12;
	memset((&V_12), 0, sizeof(V_12));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_4), (&V_8), (&V_10));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_GetTargetBounds_mE3BA6069E2302B51DA4C744BC3246B5357AB8693_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44064));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B21_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44065));
		// TotalBoundsCorners.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44066));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_0 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44114));
		NullCheck(L_0);
		List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8(L_0, /*hidden argument*/List_1_Clear_m8E7A9E8CF891528845C4B071CB8166DDB1A384B8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44114));
		// childTransforms.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44067));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_1 = __this->get_childTransforms_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44115));
		NullCheck(L_1);
		List_1_Clear_m46592EB68B43BB4C540DEE0D6D05FB29C7DCB10F(L_1, /*hidden argument*/List_1_Clear_m46592EB68B43BB4C540DEE0D6D05FB29C7DCB10F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44115));
		// if (Target != gameObject)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44068));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44116));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44117));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44117));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44118));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44118));
		V_2 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44069));
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44070));
		// childTransforms.Add(Target.transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44071));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_6 = __this->get_childTransforms_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44119));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44119));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44120));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44121));
		NullCheck(L_6);
		List_1_Add_m58D7C85FC3459259B4B9B182A98C838005A62F3C(L_6, L_8, /*hidden argument*/List_1_Add_m58D7C85FC3459259B4B9B182A98C838005A62F3C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44121));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44072));
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44073));
		// foreach (Transform childTransform in Target.transform)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44122));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44122));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44123));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44123));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44124));
		NullCheck(L_10);
		RuntimeObject* L_11 = Transform_GetEnumerator_mE98B6C5F644AE362EC1D58C10506327D6A5878FC(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44124));
		V_3 = L_11;
	}

IL_0058:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44075));
			goto IL_0096;
		}

IL_005a:
		{
			// foreach (Transform childTransform in Target.transform)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44076));
			RuntimeObject* L_12 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44125));
			NullCheck(L_12);
			RuntimeObject * L_13 = InterfaceFuncInvoker0< RuntimeObject * >::Invoke(1 /* System.Object System.Collections.IEnumerator::get_Current() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44125));
			V_4 = ((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)CastclassClass((RuntimeObject*)L_13, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_il2cpp_TypeInfo_var));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44077));
			// if (childTransform.name.Equals(RigRootName)) { continue; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44078));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44126));
			NullCheck(L_14);
			String_t* L_15 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44126));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44127));
			NullCheck(L_15);
			bool L_16 = String_Equals_m9C4D78DFA0979504FE31429B64A4C26DF48020D1(L_15, _stringLiteral251633BC76AA6975980E7B497D5E7089693427BC, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44127));
			V_5 = L_16;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44079));
			bool L_17 = V_5;
			if (!L_17)
			{
				goto IL_0082;
			}
		}

IL_007f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44080));
			// if (childTransform.name.Equals(RigRootName)) { continue; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44081));
			goto IL_0096;
		}

IL_0082:
		{
			// childTransforms.AddRange(childTransform.GetComponentsInChildren<Transform>());
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44082));
			List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_18 = __this->get_childTransforms_64();
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44128));
			NullCheck(L_19);
			TransformU5BU5D_t4F5A1132877D8BA66ABC0A9A7FADA4E0237A7804* L_20 = Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113(L_19, /*hidden argument*/Component_GetComponentsInChildren_TisTransform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_m335E18CE04D2AD7313D89DBEA3A88EDB76255113_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44128));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44129));
			NullCheck(L_18);
			List_1_AddRange_m78456E30423179376F5CD241BF311E83D15DC4D9(L_18, (RuntimeObject*)(RuntimeObject*)L_20, /*hidden argument*/List_1_AddRange_m78456E30423179376F5CD241BF311E83D15DC4D9_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44129));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44083));
		}

IL_0096:
		{
			// foreach (Transform childTransform in Target.transform)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44084));
			RuntimeObject* L_21 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44130));
			NullCheck(L_21);
			bool L_22 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean System.Collections.IEnumerator::MoveNext() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_21);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44130));
			if (L_22)
			{
				goto IL_005a;
			}
		}

IL_009e:
		{
			IL2CPP_LEAVE(0xB5, FINALLY_00a0);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00a0;
	}

FINALLY_00a0:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44085));
			RuntimeObject* L_23 = V_3;
			V_6 = ((RuntimeObject*)IsInst((RuntimeObject*)L_23, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var));
			RuntimeObject* L_24 = V_6;
			if (!L_24)
			{
				goto IL_00b4;
			}
		}

IL_00ac:
		{
			RuntimeObject* L_25 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44131));
			NullCheck(L_25);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_25);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44131));
		}

IL_00b4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44086));
			IL2CPP_END_FINALLY(160)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(160)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xB5, IL_00b5)
	}

IL_00b5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44087));
		// foreach (Transform childTransform in childTransforms)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44088));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_26 = __this->get_childTransforms_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44132));
		NullCheck(L_26);
		Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  L_27 = List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1(L_26, /*hidden argument*/List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44132));
		V_7 = L_27;
	}

IL_00c3:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44089));
			goto IL_00f2;
		}

IL_00c5:
		{
			// foreach (Transform childTransform in childTransforms)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44090));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44133));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_inline((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_7), /*hidden argument*/Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44133));
			V_8 = L_28;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44091));
			// Debug.Assert(childTransform != rigRoot);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44092));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = V_8;
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = __this->get_rigRoot_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44134));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_31 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_29, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44134));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44135));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E(L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44135));
			// ExtractBoundsCorners(childTransform, boundsCalculationMethod);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44093));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = V_8;
			int32_t L_33 = __this->get_boundsCalculationMethod_6();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44136));
			BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD(__this, L_32, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44136));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44094));
		}

IL_00f2:
		{
			// foreach (Transform childTransform in childTransforms)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44095));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44137));
			bool L_34 = Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_7), /*hidden argument*/Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44137));
			if (L_34)
			{
				goto IL_00c5;
			}
		}

IL_00fb:
		{
			IL2CPP_LEAVE(0x10C, FINALLY_00fd);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00fd;
	}

FINALLY_00fd:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44096));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44138));
		Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_7), /*hidden argument*/Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44138));
		IL2CPP_END_FINALLY(253)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(253)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x10C, IL_010c)
	}

IL_010c:
	{
		// Transform targetTransform = Target.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44139));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_35 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44139));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44140));
		NullCheck(L_35);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44140));
		V_0 = L_36;
		// if (TotalBoundsCorners.Count == 0 && Target == gameObject)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44098));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_37 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44141));
		NullCheck(L_37);
		int32_t L_38 = List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_inline(L_37, /*hidden argument*/List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44141));
		if (L_38)
		{
			goto IL_0137;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44142));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44142));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44143));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_40 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44143));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44144));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_41 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_39, L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44144));
		G_B21_0 = ((int32_t)(L_41));
		goto IL_0138;
	}

IL_0137:
	{
		G_B21_0 = 0;
	}

IL_0138:
	{
		V_9 = (bool)G_B21_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44099));
		bool L_42 = V_9;
		if (!L_42)
		{
			goto IL_0149;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44100));
		// ExtractBoundsCorners(targetTransform, BoundsCalculationMethod.ColliderOnly);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44101));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44145));
		BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD(__this, L_43, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44145));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44102));
	}

IL_0149:
	{
		// Bounds finalBounds = new Bounds(targetTransform.InverseTransformPoint(TotalBoundsCorners[0]), Vector3.zero);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44103));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_45 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44146));
		NullCheck(L_45);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_46 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_45, 0, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44147));
		NullCheck(L_44);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47(L_44, L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44147));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44148));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44149));
		Bounds__ctor_m294E77A20EC1A3E96985FE1A925CB271D1B5266D((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_1), L_47, L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44149));
		// for (int i = 1; i < TotalBoundsCorners.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44104));
		V_10 = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44105));
		goto IL_018d;
	}

IL_016b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44106));
		// finalBounds.Encapsulate(targetTransform.InverseTransformPoint(TotalBoundsCorners[i]));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44107));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_49 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_50 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		int32_t L_51 = V_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44150));
		NullCheck(L_50);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_inline(L_50, L_51, /*hidden argument*/List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44150));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44151));
		NullCheck(L_49);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47(L_49, L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44151));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44152));
		Bounds_Encapsulate_mD1F1DAC416D7147E07BF54D87CA7FF84C1088D8D((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_1), L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44152));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44108));
		// for (int i = 1; i < TotalBoundsCorners.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44109));
		int32_t L_54 = V_10;
		V_10 = ((int32_t)il2cpp_codegen_add((int32_t)L_54, (int32_t)1));
	}

IL_018d:
	{
		// for (int i = 1; i < TotalBoundsCorners.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44110));
		int32_t L_55 = V_10;
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_56 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44153));
		NullCheck(L_56);
		int32_t L_57 = List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_inline(L_56, /*hidden argument*/List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44153));
		V_11 = (bool)((((int32_t)L_55) < ((int32_t)L_57))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44111));
		bool L_58 = V_11;
		if (L_58)
		{
			goto IL_016b;
		}
	}
	{
		// return finalBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44112));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_59 = V_1;
		V_12 = L_59;
		goto IL_01a6;
	}

IL_01a6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44113));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_60 = V_12;
		return L_60;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::ExtractBoundsCorners(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.BoundsCalculationMethod)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___childTransform0, int32_t ___boundsCalculationMethod1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___childTransform0), (&___boundsCalculationMethod1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_ExtractBoundsCorners_mA29BC313023A6D3C409C1A337390E452919F72AD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44154));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44155));
	int32_t G_B9_0 = 0;
	int32_t G_B16_0 = 0;
	int32_t G_B21_0 = 0;
	int32_t G_B29_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44156));
		// KeyValuePair<Transform, Collider> colliderByTransform = default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44157));
		il2cpp_codegen_initobj((&V_0), sizeof(KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F ));
		// KeyValuePair<Transform, Bounds> rendererBoundsByTransform = default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44158));
		il2cpp_codegen_initobj((&V_1), sizeof(KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 ));
		// if (boundsCalculationMethod != BoundsCalculationMethod.RendererOnly)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44159));
		int32_t L_0 = ___boundsCalculationMethod1;
		V_2 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44160));
		bool L_1 = V_2;
		if (!L_1)
		{
			goto IL_0049;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44161));
		// Collider collider = childTransform.GetComponent<Collider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44162));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ___childTransform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44203));
		NullCheck(L_2);
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_3 = Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6(L_2, /*hidden argument*/Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44203));
		V_3 = L_3;
		// if (collider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44163));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_4 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44204));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44204));
		V_4 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44164));
		bool L_6 = V_4;
		if (!L_6)
		{
			goto IL_003e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44165));
		// colliderByTransform = new KeyValuePair<Transform, Collider>(childTransform, collider);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44166));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = ___childTransform0;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_8 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44205));
		KeyValuePair_2__ctor_mE18CB17C10459280BD5AA5CCBDEDE8B27D20DAA7((KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *)(&V_0), L_7, L_8, /*hidden argument*/KeyValuePair_2__ctor_mE18CB17C10459280BD5AA5CCBDEDE8B27D20DAA7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44205));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44167));
		goto IL_0048;
	}

IL_003e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44168));
		// colliderByTransform = new KeyValuePair<Transform, Collider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44169));
		il2cpp_codegen_initobj((&V_0), sizeof(KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F ));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44170));
	}

IL_0048:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44171));
	}

IL_0049:
	{
		// if (boundsCalculationMethod != BoundsCalculationMethod.ColliderOnly)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44172));
		int32_t L_9 = ___boundsCalculationMethod1;
		V_5 = (bool)((((int32_t)((((int32_t)L_9) == ((int32_t)2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44173));
		bool L_10 = V_5;
		if (!L_10)
		{
			goto IL_00a2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44174));
		// MeshFilter meshFilter = childTransform.GetComponent<MeshFilter>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44175));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = ___childTransform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44206));
		NullCheck(L_11);
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_12 = Component_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mF3F89565A9CEFF85AA1FB27C6EC64BE590DC386B(L_11, /*hidden argument*/Component_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mF3F89565A9CEFF85AA1FB27C6EC64BE590DC386B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44206));
		V_6 = L_12;
		// if (meshFilter != null && meshFilter.sharedMesh != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44176));
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_13 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44207));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_14 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_13, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44207));
		if (!L_14)
		{
			goto IL_0078;
		}
	}
	{
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_15 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44208));
		NullCheck(L_15);
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_16 = MeshFilter_get_sharedMesh_mC076FD5461BFBBAD3BE49D25263CF140700D9902(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44208));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44209));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_17 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_16, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44209));
		G_B9_0 = ((int32_t)(L_17));
		goto IL_0079;
	}

IL_0078:
	{
		G_B9_0 = 0;
	}

IL_0079:
	{
		V_7 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44177));
		bool L_18 = V_7;
		if (!L_18)
		{
			goto IL_0097;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44178));
		// rendererBoundsByTransform = new KeyValuePair<Transform, Bounds>(childTransform, meshFilter.sharedMesh.bounds);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44179));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = ___childTransform0;
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_20 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44210));
		NullCheck(L_20);
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_21 = MeshFilter_get_sharedMesh_mC076FD5461BFBBAD3BE49D25263CF140700D9902(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44210));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44211));
		NullCheck(L_21);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_22 = Mesh_get_bounds_m15A146B9397AA62A81986030D289320EDE4B3037(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44211));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44212));
		KeyValuePair_2__ctor_m45D320DDFB94FE9A072F8B4EFE2F9962EAC9281C((KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *)(&V_1), L_19, L_22, /*hidden argument*/KeyValuePair_2__ctor_m45D320DDFB94FE9A072F8B4EFE2F9962EAC9281C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44212));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44180));
		goto IL_00a1;
	}

IL_0097:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44181));
		// rendererBoundsByTransform = new KeyValuePair<Transform, Bounds>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44182));
		il2cpp_codegen_initobj((&V_1), sizeof(KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 ));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44183));
	}

IL_00a1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44184));
	}

IL_00a2:
	{
		// if (boundsCalculationMethod == BoundsCalculationMethod.ColliderOnly ||
		//     boundsCalculationMethod == BoundsCalculationMethod.ColliderOverRenderer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44185));
		int32_t L_23 = ___boundsCalculationMethod1;
		if ((((int32_t)L_23) == ((int32_t)2)))
		{
			goto IL_00ac;
		}
	}
	{
		int32_t L_24 = ___boundsCalculationMethod1;
		G_B16_0 = ((((int32_t)L_24) == ((int32_t)1))? 1 : 0);
		goto IL_00ad;
	}

IL_00ac:
	{
		G_B16_0 = 1;
	}

IL_00ad:
	{
		V_8 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44186));
		bool L_25 = V_8;
		if (!L_25)
		{
			goto IL_00d2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44187));
		// if (AddColliderBoundsCornersToTarget(colliderByTransform) && boundsCalculationMethod == BoundsCalculationMethod.ColliderOverRenderer ||
		//     boundsCalculationMethod == BoundsCalculationMethod.ColliderOnly) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44188));
		KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F  L_26 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44213));
		bool L_27 = BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E(__this, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44213));
		if (!L_27)
		{
			goto IL_00c1;
		}
	}
	{
		int32_t L_28 = ___boundsCalculationMethod1;
		if ((((int32_t)L_28) == ((int32_t)1)))
		{
			goto IL_00c7;
		}
	}

IL_00c1:
	{
		int32_t L_29 = ___boundsCalculationMethod1;
		G_B21_0 = ((((int32_t)L_29) == ((int32_t)2))? 1 : 0);
		goto IL_00c8;
	}

IL_00c7:
	{
		G_B21_0 = 1;
	}

IL_00c8:
	{
		V_9 = (bool)G_B21_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44189));
		bool L_30 = V_9;
		if (!L_30)
		{
			goto IL_00d1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44190));
		// boundsCalculationMethod == BoundsCalculationMethod.ColliderOnly) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44191));
		goto IL_0105;
	}

IL_00d1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44192));
	}

IL_00d2:
	{
		// if (boundsCalculationMethod != BoundsCalculationMethod.ColliderOnly)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44193));
		int32_t L_31 = ___boundsCalculationMethod1;
		V_10 = (bool)((((int32_t)((((int32_t)L_31) == ((int32_t)2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44194));
		bool L_32 = V_10;
		if (!L_32)
		{
			goto IL_00fd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44195));
		// if (AddRendererBoundsCornersToTarget(rendererBoundsByTransform) && boundsCalculationMethod == BoundsCalculationMethod.RendererOverCollider ||
		//     boundsCalculationMethod == BoundsCalculationMethod.RendererOnly) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44196));
		KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192  L_33 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44214));
		bool L_34 = BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01(__this, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44214));
		if (!L_34)
		{
			goto IL_00ec;
		}
	}
	{
		int32_t L_35 = ___boundsCalculationMethod1;
		if (!L_35)
		{
			goto IL_00f2;
		}
	}

IL_00ec:
	{
		int32_t L_36 = ___boundsCalculationMethod1;
		G_B29_0 = ((((int32_t)L_36) == ((int32_t)3))? 1 : 0);
		goto IL_00f3;
	}

IL_00f2:
	{
		G_B29_0 = 1;
	}

IL_00f3:
	{
		V_11 = (bool)G_B29_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44197));
		bool L_37 = V_11;
		if (!L_37)
		{
			goto IL_00fc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44198));
		// boundsCalculationMethod == BoundsCalculationMethod.RendererOnly) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44199));
		goto IL_0105;
	}

IL_00fc:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44200));
	}

IL_00fd:
	{
		// AddColliderBoundsCornersToTarget(colliderByTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44201));
		KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F  L_38 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44215));
		BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E(__this, L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44215));
	}

IL_0105:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44202));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::AddRendererBoundsCornersToTarget(System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Bounds>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192  ___rendererBoundsByTarget0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___rendererBoundsByTarget0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_AddRendererBoundsCornersToTarget_m54201AB42DD1C7F5427FA1189E74677DEEB50A01_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44216));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44217));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44218));
		// if (rendererBoundsByTarget.Key == null) { return false; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44219));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44228));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = KeyValuePair_2_get_Key_m64A02B47F623AB0CFA1D4B1CEF2106D000EABD99_inline((KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *)(&___rendererBoundsByTarget0), /*hidden argument*/KeyValuePair_2_get_Key_m64A02B47F623AB0CFA1D4B1CEF2106D000EABD99_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44228));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44229));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44229));
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44220));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0017;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44221));
		// if (rendererBoundsByTarget.Key == null) { return false; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44222));
		V_2 = (bool)0;
		goto IL_003f;
	}

IL_0017:
	{
		// Vector3[] cornersToWorld = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44223));
		V_0 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)NULL;
		// rendererBoundsByTarget.Value.GetCornerPositions(rendererBoundsByTarget.Key, ref cornersToWorld);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44224));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44230));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_3 = KeyValuePair_2_get_Value_mCC96A2A44A552DDD14AD6C1DA48AC6BD4A96DB2A_inline((KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *)(&___rendererBoundsByTarget0), /*hidden argument*/KeyValuePair_2_get_Value_mCC96A2A44A552DDD14AD6C1DA48AC6BD4A96DB2A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44230));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44231));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = KeyValuePair_2_get_Key_m64A02B47F623AB0CFA1D4B1CEF2106D000EABD99_inline((KeyValuePair_2_t134629937D2110081E9FBBB7F562850158C8A192 *)(&___rendererBoundsByTarget0), /*hidden argument*/KeyValuePair_2_get_Key_m64A02B47F623AB0CFA1D4B1CEF2106D000EABD99_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44231));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44232));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsExtensions_t65D5B81F0B4D8D20A4798B651AD4C93A9A761859_il2cpp_TypeInfo_var);
		BoundsExtensions_GetCornerPositions_mF018336198FE4467DE42DE733FB7DAB53E57B309(L_3, L_4, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44232));
		// TotalBoundsCorners.AddRange(cornersToWorld);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44225));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_5 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44233));
		NullCheck(L_5);
		List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F(L_5, (RuntimeObject*)(RuntimeObject*)L_6, /*hidden argument*/List_1_AddRange_m8335F712C7C1832E2EA4CD22C2326D16C4827F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44233));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44226));
		V_2 = (bool)1;
		goto IL_003f;
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44227));
		bool L_7 = V_2;
		return L_7;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::AddColliderBoundsCornersToTarget(System.Collections.Generic.KeyValuePair`2<UnityEngine.Transform,UnityEngine.Collider>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F  ___colliderByTransform0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___colliderByTransform0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_AddColliderBoundsCornersToTarget_m3C8EF3983B745B9AA7F86544F7214C97FEE0E64E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44234));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44235));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44236));
		// if (colliderByTransform.Key != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44237));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44244));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = KeyValuePair_2_get_Key_mD87156A4F3BA077A63D6B230982BA9821E6E4424_inline((KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *)(&___colliderByTransform0), /*hidden argument*/KeyValuePair_2_get_Key_mD87156A4F3BA077A63D6B230982BA9821E6E4424_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44244));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44245));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44245));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44238));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44239));
		// BoundsExtensions.GetColliderBoundsPoints(colliderByTransform.Value, TotalBoundsCorners, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44240));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44246));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_3 = KeyValuePair_2_get_Value_m0B81DA118CFB41C0D76A10355C4B70315E89D30E_inline((KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *)(&___colliderByTransform0), /*hidden argument*/KeyValuePair_2_get_Value_m0B81DA118CFB41C0D76A10355C4B70315E89D30E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44246));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var);
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_4 = ((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->get_TotalBoundsCorners_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44247));
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_5 = LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300(0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44247));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44248));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsExtensions_t65D5B81F0B4D8D20A4798B651AD4C93A9A761859_il2cpp_TypeInfo_var);
		BoundsExtensions_GetColliderBoundsPoints_mEBA9367B6D4131EDCCEF3B5B1FE4F3C0025538F3(L_3, L_4, L_5, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44248));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44241));
	}

IL_002d:
	{
		// return colliderByTransform.Key != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44242));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44249));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = KeyValuePair_2_get_Key_mD87156A4F3BA077A63D6B230982BA9821E6E4424_inline((KeyValuePair_2_t99CEB65550D173B053D1304917A2B2D675D4326F *)(&___colliderByTransform0), /*hidden argument*/KeyValuePair_2_get_Key_mD87156A4F3BA077A63D6B230982BA9821E6E4424_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44249));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44250));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44250));
		V_1 = L_7;
		goto IL_003d;
	}

IL_003d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44243));
		bool L_8 = V_1;
		return L_8;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetHandleType(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44251));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44252));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44253));
		// if (rotationHandles.IsHandleType(handle))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44254));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_0 = __this->get_rotationHandles_34();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44269));
		NullCheck(L_0);
		bool L_2 = HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44269));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44255));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44256));
		// return rotationHandles.GetHandleType();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44257));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_4 = __this->get_rotationHandles_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44270));
		NullCheck(L_4);
		int32_t L_5 = VirtFuncInvoker0< int32_t >::Invoke(15 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetHandleType() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44270));
		V_1 = L_5;
		goto IL_0063;
	}

IL_0020:
	{
		// else if (scaleHandles.IsHandleType(handle))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44258));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_6 = __this->get_scaleHandles_33();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44271));
		NullCheck(L_6);
		bool L_8 = HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44271));
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44259));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44260));
		// return scaleHandles.GetHandleType();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44261));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_10 = __this->get_scaleHandles_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44272));
		NullCheck(L_10);
		int32_t L_11 = VirtFuncInvoker0< int32_t >::Invoke(15 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetHandleType() */, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44272));
		V_1 = L_11;
		goto IL_0063;
	}

IL_003f:
	{
		// else if (translationHandles.IsHandleType(handle))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44262));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_12 = __this->get_translationHandles_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44273));
		NullCheck(L_12);
		bool L_14 = HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44273));
		V_3 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44263));
		bool L_15 = V_3;
		if (!L_15)
		{
			goto IL_005e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44264));
		// return translationHandles.GetHandleType();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44265));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_16 = __this->get_translationHandles_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44274));
		NullCheck(L_16);
		int32_t L_17 = VirtFuncInvoker0< int32_t >::Invoke(15 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetHandleType() */, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44274));
		V_1 = L_17;
		goto IL_0063;
	}

IL_005e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44266));
		// return HandleType.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44267));
		V_1 = 0;
		goto IL_0063;
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44268));
		int32_t L_18 = V_1;
		return L_18;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CaptureInitialState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_CaptureInitialState_mD4DE03E255C95821AC594481A0720920B5531178_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44275));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44276));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44277));
		// if (Target != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44278));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44284));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44284));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44285));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44285));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44279));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44280));
		// isChildOfTarget = transform.IsChildOf(Target.transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44281));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44286));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44286));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44287));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44287));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44288));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44288));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44289));
		NullCheck(L_3);
		bool L_6 = Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44289));
		__this->set_isChildOfTarget_57(L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44282));
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44283));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CalculateBoundsExtents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44290));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44291));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44292));
		// Quaternion currentRotation = Target.transform.rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44293));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44301));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44301));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44302));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44303));
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44303));
		V_0 = L_2;
		// Target.transform.rotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44294));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44304));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44304));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44305));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44305));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44306));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44306));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44307));
		NullCheck(L_4);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44307));
		// UnityPhysics.SyncTransforms(); // Update collider bounds
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44295));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44308));
		Physics_SyncTransforms_mCC0AB451C1384416298E5FAEF4E818503929AE58(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44308));
		// Vector3 boundsExtents = TargetBounds.bounds.extents;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44296));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44309));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_6 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44309));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44310));
		NullCheck(L_6);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_7 = Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44310));
		V_2 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44311));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Bounds_get_extents_mBA4B2196036DD5A858BDAD53BC71A778B41841C9((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44311));
		V_1 = L_8;
		// Target.transform.rotation = currentRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44297));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44312));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44312));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44313));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44313));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44314));
		NullCheck(L_10);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44314));
		// UnityPhysics.SyncTransforms();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44298));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44315));
		Physics_SyncTransforms_mCC0AB451C1384416298E5FAEF4E818503929AE58(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44315));
		// return VisualUtils.FlattenBounds(boundsExtents, flattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44299));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = V_1;
		int32_t L_13 = __this->get_flattenAxis_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44316));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = VisualUtils_FlattenBounds_m5E8273365CDEFEE89DD0B02C8D60E364ED15E542(L_12, L_13, (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44316));
		V_3 = L_14;
		goto IL_006e;
	}

IL_006e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44300));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = V_3;
		return L_15;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateExtents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_UpdateExtents_mA8D6FEE25351387E3887E0C413B00550EF6BAC63_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44317));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44318));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44319));
		// if (TargetBounds != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44320));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44332));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44332));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44333));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44333));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44321));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0058;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44322));
		// Vector3 newExtents = CalculateBoundsExtents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44323));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44334));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = BoundsControl_CalculateBoundsExtents_m802FDB3A172206DE12E7A7738A70565392A54BED(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44334));
		V_1 = L_3;
		// if (newExtents != Vector3.zero)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44324));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44335));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44335));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44336));
		bool L_6 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44336));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44325));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0057;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44326));
		// currentBoundsExtents = newExtents;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44327));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = V_1;
		__this->set_currentBoundsExtents_41(L_8);
		// VisualUtils.GetCornerPositionsFromBounds(new Bounds(Vector3.zero, currentBoundsExtents * 2.0f), ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44328));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44337));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44337));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = __this->get_currentBoundsExtents_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44338));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_10, (2.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44338));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44339));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_12;
		memset((&L_12), 0, sizeof(L_12));
		Bounds__ctor_m294E77A20EC1A3E96985FE1A925CB271D1B5266D((&L_12), L_9, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44339));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_13 = __this->get_address_of_boundsCorners_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44340));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_GetCornerPositionsFromBounds_m910A32EB37249B59C506F2E886FB96B1372AC0D0(L_12, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44340));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44329));
	}

IL_0057:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44330));
	}

IL_0058:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44331));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DoesActivationMatchPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44342));
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44343));
		// switch (activation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44344));
		int32_t L_0 = __this->get_activation_7();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44345));
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_0024;
			}
			case 1:
			{
				goto IL_0028;
			}
			case 2:
			{
				goto IL_0034;
			}
			case 3:
			{
				goto IL_0049;
			}
			case 4:
			{
				goto IL_0024;
			}
		}
	}
	{
		goto IL_004d;
	}

IL_0024:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44346));
		V_1 = (bool)0;
		goto IL_0051;
	}

IL_0028:
	{
		// return pointer is IMixedRealityNearPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44347));
		RuntimeObject* L_2 = ___pointer0;
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_2, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0051;
	}

IL_0034:
	{
		// return (pointer is IMixedRealityPointer && !(pointer is IMixedRealityNearPointer));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44348));
		RuntimeObject* L_3 = ___pointer0;
		if (!L_3)
		{
			goto IL_0045;
		}
	}
	{
		RuntimeObject* L_4 = ___pointer0;
		G_B7_0 = ((((int32_t)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_4, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0046;
	}

IL_0045:
	{
		G_B7_0 = 0;
	}

IL_0046:
	{
		V_1 = (bool)G_B7_0;
		goto IL_0051;
	}

IL_0049:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44349));
		V_1 = (bool)1;
		goto IL_0051;
	}

IL_004d:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44350));
		V_1 = (bool)0;
		goto IL_0051;
	}

IL_0051:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44351));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DropController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44352));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44353));
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B5_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B4_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B12_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B11_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B19_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B18_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44354));
		// HandleType lastHandleType = currentHandleType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44355));
		int32_t L_0 = __this->get_currentHandleType_54();
		V_0 = L_0;
		// currentPointer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44356));
		__this->set_currentPointer_39((RuntimeObject*)NULL);
		// currentHandleType = HandleType.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44357));
		__this->set_currentHandleType_54(0);
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44358));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44389));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44389));
		// if (lastHandleType == HandleType.Scale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44359));
		int32_t L_1 = V_0;
		V_1 = (bool)((((int32_t)L_1) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44360));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_005f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44361));
		// if (debugText != null) debugText.text = "DropController:ScaleStopped";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44362));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_3 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44390));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44390));
		V_2 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44363));
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_0047;
		}
	}
	{
		// if (debugText != null) debugText.text = "DropController:ScaleStopped";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44364));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_6 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44391));
		NullCheck(L_6);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_6, _stringLiteralEAE5401432A4F496F230DBD5AC09183BF436B5A7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44391));
	}

IL_0047:
	{
		// ScaleStopped?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44365));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44392));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_7 = BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44392));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_8 = L_7;
		G_B4_0 = L_8;
		if (L_8)
		{
			G_B5_0 = L_8;
			goto IL_0053;
		}
	}
	{
		goto IL_0059;
	}

IL_0053:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44393));
		NullCheck(G_B5_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B5_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44393));
	}

IL_0059:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44366));
		goto IL_00e1;
	}

IL_005f:
	{
		// else if (lastHandleType == HandleType.Rotation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44367));
		int32_t L_9 = V_0;
		V_3 = (bool)((((int32_t)L_9) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44368));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_00a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44369));
		// if (debugText != null) debugText.text = "DropController:RotateStopped";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44370));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_11 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44394));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_11, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44394));
		V_4 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44371));
		bool L_13 = V_4;
		if (!L_13)
		{
			goto IL_008b;
		}
	}
	{
		// if (debugText != null) debugText.text = "DropController:RotateStopped";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44372));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_14 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44395));
		NullCheck(L_14);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_14, _stringLiteralB6BA4393CE33DD7E78C074B462B34687236A1BE0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44395));
	}

IL_008b:
	{
		// RotateStopped?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44373));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44396));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_15 = BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44396));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_16 = L_15;
		G_B11_0 = L_16;
		if (L_16)
		{
			G_B12_0 = L_16;
			goto IL_0097;
		}
	}
	{
		goto IL_009d;
	}

IL_0097:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44397));
		NullCheck(G_B12_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B12_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44397));
	}

IL_009d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44374));
		goto IL_00e1;
	}

IL_00a0:
	{
		// else if (lastHandleType == HandleType.Translation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44375));
		int32_t L_17 = V_0;
		V_5 = (bool)((((int32_t)L_17) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44376));
		bool L_18 = V_5;
		if (!L_18)
		{
			goto IL_00e1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44377));
		// if (debugText != null) debugText.text = "DropController:TranslateStopped";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44378));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_19 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44398));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_20 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_19, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44398));
		V_6 = L_20;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44379));
		bool L_21 = V_6;
		if (!L_21)
		{
			goto IL_00ce;
		}
	}
	{
		// if (debugText != null) debugText.text = "DropController:TranslateStopped";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44380));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_22 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44399));
		NullCheck(L_22);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_22, _stringLiteral521D1A6377657D68B7A8FCB4A3799BEE83800D2B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44399));
	}

IL_00ce:
	{
		// TranslateStopped?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44381));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44400));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_23 = BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44400));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_24 = L_23;
		G_B18_0 = L_24;
		if (L_24)
		{
			G_B19_0 = L_24;
			goto IL_00da;
		}
	}
	{
		goto IL_00e0;
	}

IL_00da:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44401));
		NullCheck(G_B19_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B19_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44401));
	}

IL_00e0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44382));
	}

IL_00e1:
	{
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44383));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_25 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44402));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_26 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_25, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44402));
		V_7 = L_26;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44384));
		bool L_27 = V_7;
		if (!L_27)
		{
			goto IL_0102;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44385));
		// elasticsManager.EnableElasticsUpdate = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44386));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_28 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44403));
		NullCheck(L_28);
		ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline(L_28, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44403));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44387));
	}

IL_0102:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44388));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DestroyRig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_DestroyRig_m0BBD568C9866D2D56BBCCAA58A71DFE157C3499B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44404));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44405));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44406));
		// if (initialBoundsOverrideSize.HasValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44407));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_0 = __this->get_address_of_initialBoundsOverrideSize_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44420));
		bool L_1 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_0, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44420));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44408));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44409));
		// boundsOverride.size = initialBoundsOverrideSize.Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44410));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_3 = __this->get_boundsOverride_5();
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_4 = __this->get_address_of_initialBoundsOverrideSize_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44421));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_4, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44421));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44422));
		NullCheck(L_3);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44422));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44411));
	}

IL_0029:
	{
		// DestroyVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44412));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44423));
		BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44423));
		// if (rigRoot != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44413));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44424));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44424));
		V_1 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44414));
		bool L_8 = V_1;
		if (!L_8)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44415));
		// Destroy(rigRoot.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44416));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44425));
		NullCheck(L_9);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44426));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44426));
		// rigRoot = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44417));
		__this->set_rigRoot_40((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44418));
	}

IL_005a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44419));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateRigVisibilityInInspector()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_UpdateRigVisibilityInInspector_m58B712F63AD9DF0014E7BE80DB5689403ECEDC53_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44427));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44428));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44429));
		// if (!IsInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44430));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44444));
		bool L_0 = BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44444));
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44431));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44432));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44433));
		goto IL_0064;
	}

IL_0011:
	{
		// HideFlags desiredFlags = hideElementsInInspector ? HideFlags.HideInHierarchy | HideFlags.HideInInspector : HideFlags.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44434));
		bool L_2 = __this->get_hideElementsInInspector_18();
		if (L_2)
		{
			goto IL_001c;
		}
	}
	{
		G_B5_0 = 0;
		goto IL_001d;
	}

IL_001c:
	{
		G_B5_0 = 3;
	}

IL_001d:
	{
		V_0 = G_B5_0;
		// scaleHandles.UpdateVisibilityInInspector(desiredFlags);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44435));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_3 = __this->get_scaleHandles_33();
		int32_t L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44445));
		NullCheck(L_3);
		ScaleHandles_UpdateVisibilityInInspector_m10E0ACBB4D93690FF07212950317DD18FB6352AD(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44445));
		// links.UpdateVisibilityInInspector(desiredFlags);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44436));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_5 = __this->get_links_32();
		int32_t L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44446));
		NullCheck(L_5);
		Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44446));
		// boxDisplay.UpdateVisibilityInInspector(desiredFlags);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44437));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_7 = __this->get_boxDisplay_36();
		int32_t L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44447));
		NullCheck(L_7);
		BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44447));
		// if (rigRoot != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44438));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44448));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_10 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_9, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44448));
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44439));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0064;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44440));
		// rigRoot.hideFlags = desiredFlags;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44441));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_rigRoot_40();
		int32_t L_13 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44449));
		NullCheck(L_12);
		Object_set_hideFlags_mB0B45A19A5871EF407D7B09E0EB76003496BA4F0(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44449));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44442));
	}

IL_0064:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44443));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetRotationAxis(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44450));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44451));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44452));
		// CardinalAxisType axisType = rotationHandles.GetAxisType(handle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44453));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_0 = __this->get_rotationHandles_34();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44465));
		NullCheck(L_0);
		int32_t L_2 = PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44465));
		V_0 = L_2;
		// if (axisType == CardinalAxisType.X)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44454));
		int32_t L_3 = V_0;
		V_1 = (bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44455));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_002a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44456));
		// return rigRoot.transform.right;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44457));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44466));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44466));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44467));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Transform_get_right_mC32CE648E98D3D4F62F897A2751EE567C7C0CFB0(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44467));
		V_2 = L_7;
		goto IL_005a;
	}

IL_002a:
	{
		// else if (axisType == CardinalAxisType.Y)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44458));
		int32_t L_8 = V_0;
		V_3 = (bool)((((int32_t)L_8) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44459));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44460));
		// return rigRoot.transform.up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44461));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44468));
		NullCheck(L_10);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44468));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44469));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_up_m3E443F6EB278D547946E80D77065A871BEEEE282(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44469));
		V_2 = L_12;
		goto IL_005a;
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44462));
		// return rigRoot.transform.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44463));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44470));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44470));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44471));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44471));
		V_2 = L_15;
		goto IL_005a;
	}

IL_005a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44464));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = V_2;
		return L_16;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::GetTranslationAxis(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44472));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44473));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44474));
		// CardinalAxisType axisType = translationHandles.GetAxisType(handle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44475));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_0 = __this->get_translationHandles_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44487));
		NullCheck(L_0);
		int32_t L_2 = PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44487));
		V_0 = L_2;
		// if (axisType == CardinalAxisType.X)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44476));
		int32_t L_3 = V_0;
		V_1 = (bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44477));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_002a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44478));
		// return rigRoot.transform.right;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44479));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44488));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44488));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44489));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Transform_get_right_mC32CE648E98D3D4F62F897A2751EE567C7C0CFB0(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44489));
		V_2 = L_7;
		goto IL_005a;
	}

IL_002a:
	{
		// else if (axisType == CardinalAxisType.Y)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44480));
		int32_t L_8 = V_0;
		V_3 = (bool)((((int32_t)L_8) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44481));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44482));
		// return rigRoot.transform.up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44483));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44490));
		NullCheck(L_10);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44490));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44491));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_up_m3E443F6EB278D547946E80D77065A871BEEEE282(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44491));
		V_2 = L_12;
		goto IL_005a;
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44484));
		// return rigRoot.transform.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44485));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44492));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44492));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44493));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44493));
		V_2 = L_15;
		goto IL_005a;
	}

IL_005a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44486));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = V_2;
		return L_16;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::InitializeRigRoot()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_InitializeRigRoot_m9F6B8085F8558C09BB06CEEC310DED6C08763816_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44494));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44495));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44496));
		// var rigRootObj = new GameObject(RigRootName);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44497));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44505));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
		GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686(L_0, _stringLiteral251633BC76AA6975980E7B497D5E7089693427BC, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44505));
		V_0 = L_0;
		// rigRoot = rigRootObj.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44498));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44506));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44506));
		__this->set_rigRoot_40(L_2);
		// rigRoot.parent = Target.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44499));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44507));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44507));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44508));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44508));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44509));
		NullCheck(L_3);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44509));
		// var pH = rigRootObj.AddComponent<PointerHandler>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44500));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44510));
		NullCheck(L_6);
		PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * L_7 = GameObject_AddComponent_TisPointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C_m80E189103DE5864614034FD787210273CB188482(L_6, /*hidden argument*/GameObject_AddComponent_TisPointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C_m80E189103DE5864614034FD787210273CB188482_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44510));
		V_1 = L_7;
		// pH.OnPointerDown.AddListener(OnPointerDown);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44501));
		PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * L_8 = V_1;
		NullCheck(L_8);
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_9 = L_8->get_OnPointerDown_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44511));
		UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 * L_10 = (UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 *)il2cpp_codegen_object_new(UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452(L_10, __this, (intptr_t)((intptr_t)BoundsControl_OnPointerDown_mE4B572E04B99E05E04C22658D098975D715609EA_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44511));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44512));
		NullCheck(L_9);
		UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738(L_9, L_10, /*hidden argument*/UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44512));
		// pH.OnPointerDragged.AddListener(OnPointerDragged);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44502));
		PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * L_11 = V_1;
		NullCheck(L_11);
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_12 = L_11->get_OnPointerDragged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44513));
		UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 * L_13 = (UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 *)il2cpp_codegen_object_new(UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452(L_13, __this, (intptr_t)((intptr_t)BoundsControl_OnPointerDragged_m696CBB60F4E5E6EF736712EB530495924E435817_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44513));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44514));
		NullCheck(L_12);
		UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738(L_12, L_13, /*hidden argument*/UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44514));
		// pH.OnPointerUp.AddListener(OnPointerUp);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44503));
		PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * L_14 = V_1;
		NullCheck(L_14);
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_15 = L_14->get_OnPointerUp_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44515));
		UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 * L_16 = (UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20 *)il2cpp_codegen_object_new(UnityAction_1_tC375C9254C7E882A19A06C3760BE19FAD3B14A20_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452(L_16, __this, (intptr_t)((intptr_t)BoundsControl_OnPointerUp_mB652CDDDFEB7B91AF81827328753993134FEA2EC_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m5C75D3421B47C89F9D7E566FBF26CD911E774452_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44515));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44516));
		NullCheck(L_15);
		UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738(L_15, L_16, /*hidden argument*/UnityEvent_1_AddListener_m68AF3572A11966260CFED8991055F999317C8738_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44516));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44504));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::InitializeDataStructures()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_InitializeDataStructures_m3CD0D33F6D614BD7434D629E32DB63B97EE08A6B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44517));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44518));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44519));
		// sourcesDetected = new List<IMixedRealityController>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44520));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44522));
		List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * L_0 = (List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 *)il2cpp_codegen_object_new(List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100_il2cpp_TypeInfo_var);
		List_1__ctor_m132A5F71CCDF330F9374885DE091B10AF72D5C84(L_0, /*hidden argument*/List_1__ctor_m132A5F71CCDF330F9374885DE091B10AF72D5C84_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44522));
		__this->set_sourcesDetected_43(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44521));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::TransformTarget(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, int32_t ___transformType0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_6;
	memset((&V_6), 0, sizeof(V_6));
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  V_7;
	memset((&V_7), 0, sizeof(V_7));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_13;
	memset((&V_13), 0, sizeof(V_13));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_14;
	memset((&V_14), 0, sizeof(V_14));
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  V_15;
	memset((&V_15), 0, sizeof(V_15));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_16;
	memset((&V_16), 0, sizeof(V_16));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_17;
	memset((&V_17), 0, sizeof(V_17));
	bool V_18 = false;
	float V_19 = 0.0f;
	float V_20 = 0.0f;
	float V_21 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_22;
	memset((&V_22), 0, sizeof(V_22));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_23;
	memset((&V_23), 0, sizeof(V_23));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_24;
	memset((&V_24), 0, sizeof(V_24));
	bool V_25 = false;
	int32_t V_26 = 0;
	bool V_27 = false;
	bool V_28 = false;
	bool V_29 = false;
	bool V_30 = false;
	bool V_31 = false;
	bool V_32 = false;
	bool V_33 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_34;
	memset((&V_34), 0, sizeof(V_34));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_35;
	memset((&V_35), 0, sizeof(V_35));
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  V_36;
	memset((&V_36), 0, sizeof(V_36));
	bool V_37 = false;
	bool V_38 = false;
	bool V_39 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___transformType0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_4), (&V_5), (&V_6), (&V_7), (&V_13), (&V_14), (&V_15), (&V_16), (&V_17), (&V_19), (&V_20), (&V_21), (&V_22), (&V_23), (&V_24), (&V_26), (&V_34), (&V_35), (&V_36));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_TransformTarget_mDD236D3270F5F541C10FBF719701172D3DD40AE5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44523));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44524));
	int32_t G_B5_0 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B12_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B11_0 = NULL;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  G_B13_0;
	memset((&G_B13_0), 0, sizeof(G_B13_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B13_1 = NULL;
	int32_t G_B22_0 = 0;
	int32_t G_B33_0 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B40_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B39_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B41_0;
	memset((&G_B41_0), 0, sizeof(G_B41_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B41_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B44_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B43_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B45_0;
	memset((&G_B45_0), 0, sizeof(G_B45_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B45_1 = NULL;
	int32_t G_B50_0 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B57_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B56_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B58_0;
	memset((&G_B58_0), 0, sizeof(G_B58_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B58_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44525));
		// if (transformType != HandleType.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44526));
		int32_t L_0 = ___transformType0;
		V_0 = (bool)((!(((uint32_t)L_0) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44527));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0541;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44528));
		// currentGrabPoint = (currentPointer.Rotation * grabPointInPointer) + currentPointer.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44529));
		RuntimeObject* L_2 = __this->get_currentPointer_39();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44638));
		NullCheck(L_2);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44638));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = __this->get_grabPointInPointer_51();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44639));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44639));
		RuntimeObject* L_6 = __this->get_currentPointer_39();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44640));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44640));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44641));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44641));
		__this->set_currentGrabPoint_50(L_8);
		// bool isNear = currentPointer is IMixedRealityNearPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44530));
		RuntimeObject* L_9 = __this->get_currentPointer_39();
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_9, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		// TransformFlags transformUpdated = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44531));
		V_2 = 0;
		// if (transformType == HandleType.Rotation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44532));
		int32_t L_10 = ___transformType0;
		V_3 = (bool)((((int32_t)L_10) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44533));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_018a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44534));
		// Vector3 initDir = Vector3.ProjectOnPlane(initialGrabPoint - Target.transform.position, currentRotationAxis).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44535));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = __this->get_initialGrabPoint_49();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44642));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44642));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44643));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44644));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44644));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44645));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_12, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44645));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = __this->get_currentRotationAxis_44();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44646));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Vector3_ProjectOnPlane_mAF89645654808BBD9754610879F94A2B3323D206(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44646));
		V_8 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44647));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_8), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44647));
		V_4 = L_19;
		// Vector3 currentDir = Vector3.ProjectOnPlane(currentGrabPoint - Target.transform.position, currentRotationAxis).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44536));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = __this->get_currentGrabPoint_50();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44648));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44649));
		NullCheck(L_21);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44650));
		NullCheck(L_22);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44650));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44651));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_20, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44651));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = __this->get_currentRotationAxis_44();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44652));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_ProjectOnPlane_mAF89645654808BBD9754610879F94A2B3323D206(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44652));
		V_8 = L_26;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44653));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_8), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44653));
		V_5 = L_27;
		// Quaternion goal = Quaternion.FromToRotation(initDir, currentDir) * initialRotationOnGrabStart;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44537));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44654));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = Quaternion_FromToRotation_m9FEC4227991508EC27E2C3664AC7DDD4E69BA9BB(L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44654));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_31 = __this->get_initialRotationOnGrabStart_47();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44655));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_32 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_30, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44655));
		V_6 = L_32;
		// MixedRealityTransform constraintRotation = MixedRealityTransform.NewRotate(goal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44538));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_33 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44656));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_il2cpp_TypeInfo_var);
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_34 = MixedRealityTransform_NewRotate_m5EE08724A0ABE012735E16225F916D09FFA59EAF(L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44656));
		V_7 = L_34;
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44539));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44657));
		bool L_35 = BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44657));
		if (!L_35)
		{
			goto IL_00ed;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_36 = __this->get_constraintsManager_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44658));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_37 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_36, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44658));
		G_B5_0 = ((int32_t)(L_37));
		goto IL_00ee;
	}

IL_00ed:
	{
		G_B5_0 = 0;
	}

IL_00ee:
	{
		V_9 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44540));
		bool L_38 = V_9;
		if (!L_38)
		{
			goto IL_0106;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44541));
		// constraintsManager.ApplyRotationConstraints(ref constraintRotation, true, isNear);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44542));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_39 = __this->get_constraintsManager_24();
		bool L_40 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44659));
		NullCheck(L_39);
		ConstraintManager_ApplyRotationConstraints_mF00DF9ADCBCA35FFEC4317E59D3346BD1C7646BE(L_39, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_7), (bool)1, L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44659));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44543));
	}

IL_0106:
	{
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44544));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_41 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44660));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_42 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_41, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44660));
		V_10 = L_42;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44545));
		bool L_43 = V_10;
		if (!L_43)
		{
			goto IL_0129;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44546));
		// transformUpdated = elasticsManager.ApplyTargetTransform(constraintRotation, TransformFlags.Rotate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44547));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_44 = __this->get_elasticsManager_31();
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_45 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44661));
		NullCheck(L_44);
		int32_t L_46 = ElasticsManager_ApplyTargetTransform_m5A261D4771CE5BFF70831B3BF5595EA47F7B886C(L_44, L_45, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44661));
		V_2 = L_46;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44548));
	}

IL_0129:
	{
		// if (!transformUpdated.IsMaskSet(TransformFlags.Rotate))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44549));
		int32_t L_47 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44662));
		bool L_48 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_47, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44662));
		V_11 = (bool)((((int32_t)L_48) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44550));
		bool L_49 = V_11;
		if (!L_49)
		{
			goto IL_0184;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44551));
		// Target.transform.rotation = smoothingActive ?
		//     Smoothing.SmoothTo(Target.transform.rotation, constraintRotation.Rotation, rotateLerpTime, Time.deltaTime) :
		//     constraintRotation.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44552));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44663));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_50 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44663));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44664));
		NullCheck(L_50);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_51 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44664));
		bool L_52 = __this->get_smoothingActive_19();
		G_B11_0 = L_51;
		if (L_52)
		{
			G_B12_0 = L_51;
			goto IL_0156;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44665));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_53 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44665));
		G_B13_0 = L_53;
		G_B13_1 = G_B11_0;
		goto IL_017d;
	}

IL_0156:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44666));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_54 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44667));
		NullCheck(L_54);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_55 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44668));
		NullCheck(L_55);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_56 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44668));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44669));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_57 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44669));
		float L_58 = __this->get_rotateLerpTime_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44670));
		float L_59 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44670));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44671));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_60 = Smoothing_SmoothTo_m932CB726232605A1956F4768E94994E03325F17E(L_56, L_57, L_58, L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44671));
		G_B13_0 = L_60;
		G_B13_1 = G_B12_0;
	}

IL_017d:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44672));
		NullCheck(G_B13_1);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(G_B13_1, G_B13_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44672));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44553));
	}

IL_0184:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44554));
		goto IL_0540;
	}

IL_018a:
	{
		// else if (transformType == HandleType.Scale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44555));
		int32_t L_61 = ___transformType0;
		V_12 = (bool)((((int32_t)L_61) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44556));
		bool L_62 = V_12;
		if (!L_62)
		{
			goto IL_044e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44557));
		// Vector3 scaleFactor = Target.transform.localScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44558));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44673));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_63 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44673));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44674));
		NullCheck(L_63);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_64 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_63, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44674));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44675));
		NullCheck(L_64);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_65 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_64, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44675));
		V_13 = L_65;
		// if (ScaleHandlesConfig.ScaleBehavior == HandleScaleMode.Uniform)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44559));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44676));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_66 = BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44676));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44677));
		NullCheck(L_66);
		int32_t L_67 = ScaleHandlesConfiguration_get_ScaleBehavior_mCBC93C6D7164BCB1D4EE78E5A512CD503A0E18E2(L_66, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44677));
		V_18 = (bool)((((int32_t)L_67) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44560));
		bool L_68 = V_18;
		if (!L_68)
		{
			goto IL_021b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44561));
		// float initialDist = Vector3.Dot(initialGrabPoint - oppositeCorner, diagonalDir);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44562));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_69 = __this->get_initialGrabPoint_49();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_70 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44678));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_71 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_69, L_70, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44678));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_72 = __this->get_diagonalDir_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44679));
		float L_73 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_71, L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44679));
		V_19 = L_73;
		// float currentDist = Vector3.Dot(currentGrabPoint - oppositeCorner, diagonalDir);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44563));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_74 = __this->get_currentGrabPoint_50();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_75 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44680));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_76 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_74, L_75, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44680));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_77 = __this->get_diagonalDir_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44681));
		float L_78 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_76, L_77, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44681));
		V_20 = L_78;
		// float scaleFactorUniform = 1 + (currentDist - initialDist) / initialDist;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44564));
		float L_79 = V_20;
		float L_80 = V_19;
		float L_81 = V_19;
		V_21 = ((float)il2cpp_codegen_add((float)(1.0f), (float)((float)((float)((float)il2cpp_codegen_subtract((float)L_79, (float)L_80))/(float)L_81))));
		// scaleFactor = new Vector3(scaleFactorUniform, scaleFactorUniform, scaleFactorUniform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44565));
		float L_82 = V_21;
		float L_83 = V_21;
		float L_84 = V_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44682));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_13), L_82, L_83, L_84, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44682));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44566));
		goto IL_0283;
	}

IL_021b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44567));
		// Vector3 initialDist = Target.transform.InverseTransformVector(initialGrabPoint - oppositeCorner);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44568));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44683));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_85 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44683));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44684));
		NullCheck(L_85);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_86 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_85, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44684));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_87 = __this->get_initialGrabPoint_49();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_88 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44685));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_89 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_87, L_88, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44685));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44686));
		NullCheck(L_86);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_90 = Transform_InverseTransformVector_mC363B03FB4A80E242264469E68489E401285E525(L_86, L_89, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44686));
		V_22 = L_90;
		// Vector3 currentDist = Target.transform.InverseTransformVector(currentGrabPoint - oppositeCorner);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44569));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44687));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_91 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44687));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44688));
		NullCheck(L_91);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_92 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_91, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44688));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_93 = __this->get_currentGrabPoint_50();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_94 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44689));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_95 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_93, L_94, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44689));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44690));
		NullCheck(L_92);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_96 = Transform_InverseTransformVector_mC363B03FB4A80E242264469E68489E401285E525(L_92, L_95, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44690));
		V_23 = L_96;
		// Vector3 grabDiff = (currentDist - initialDist);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44570));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_97 = V_23;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_98 = V_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44691));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_99 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_97, L_98, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44691));
		V_24 = L_99;
		// scaleFactor = Vector3.one + grabDiff.Div(initialDist);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44571));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44692));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_100 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44692));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_101 = V_24;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_102 = V_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44693));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_103 = VectorExtensions_Div_m901DCF70B6AFE3AC446865B1D6EB15ABEF05F9B7(L_101, L_102, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44693));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44694));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_104 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_100, L_103, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44694));
		V_13 = L_104;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44572));
	}

IL_0283:
	{
		// if (ScaleHandlesConfig.ScaleBehavior != HandleScaleMode.Uniform || !UniformScaleOnFlattenedAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44573));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44695));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_105 = BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44695));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44696));
		NullCheck(L_105);
		int32_t L_106 = ScaleHandlesConfiguration_get_ScaleBehavior_mCBC93C6D7164BCB1D4EE78E5A512CD503A0E18E2(L_105, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44696));
		if (L_106)
		{
			goto IL_029b;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44697));
		bool L_107 = BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44697));
		G_B22_0 = ((((int32_t)L_107) == ((int32_t)0))? 1 : 0);
		goto IL_029c;
	}

IL_029b:
	{
		G_B22_0 = 1;
	}

IL_029c:
	{
		V_25 = (bool)G_B22_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44574));
		bool L_108 = V_25;
		if (!L_108)
		{
			goto IL_02fb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44575));
		// var currentActualFlattenAxis = ActualFlattenAxis; // Calculate flatten axis once
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44576));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44698));
		int32_t L_109 = BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44698));
		V_26 = L_109;
		// if (currentActualFlattenAxis == FlattenModeType.FlattenX)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44577));
		int32_t L_110 = V_26;
		V_27 = (bool)((((int32_t)L_110) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44578));
		bool L_111 = V_27;
		if (!L_111)
		{
			goto IL_02c6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44579));
		// scaleFactor.x = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44580));
		(&V_13)->set_x_2((1.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44581));
		goto IL_02fa;
	}

IL_02c6:
	{
		// else if (currentActualFlattenAxis == FlattenModeType.FlattenY)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44582));
		int32_t L_112 = V_26;
		V_28 = (bool)((((int32_t)L_112) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44583));
		bool L_113 = V_28;
		if (!L_113)
		{
			goto IL_02e1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44584));
		// scaleFactor.y = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44585));
		(&V_13)->set_y_3((1.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44586));
		goto IL_02fa;
	}

IL_02e1:
	{
		// else if (currentActualFlattenAxis == FlattenModeType.FlattenZ)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44587));
		int32_t L_114 = V_26;
		V_29 = (bool)((((int32_t)L_114) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44588));
		bool L_115 = V_29;
		if (!L_115)
		{
			goto IL_02fa;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44589));
		// scaleFactor.z = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44590));
		(&V_13)->set_z_4((1.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44591));
	}

IL_02fa:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44592));
	}

IL_02fb:
	{
		// Vector3 newScale = initialScaleOnGrabStart.Mul(scaleFactor);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44593));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_116 = __this->get_initialScaleOnGrabStart_46();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_117 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44699));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_118 = VectorExtensions_Mul_mA9E9CF9E094D4F73384941B8B1EF54789BDE3D20(L_116, L_117, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44699));
		V_14 = L_118;
		// MixedRealityTransform clampedTransform = MixedRealityTransform.NewScale(newScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44594));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_119 = V_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44700));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_il2cpp_TypeInfo_var);
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_120 = MixedRealityTransform_NewScale_m4E4EA5EDF4189B524D5A21E6372B6DDA978AFE04(L_119, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44700));
		V_15 = L_120;
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44595));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44701));
		bool L_121 = BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44701));
		if (!L_121)
		{
			goto IL_0329;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_122 = __this->get_constraintsManager_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44702));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_123 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_122, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44702));
		G_B33_0 = ((int32_t)(L_123));
		goto IL_032a;
	}

IL_0329:
	{
		G_B33_0 = 0;
	}

IL_032a:
	{
		V_30 = (bool)G_B33_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44596));
		bool L_124 = V_30;
		if (!L_124)
		{
			goto IL_0342;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44597));
		// constraintsManager.ApplyScaleConstraints(ref clampedTransform, true, isNear);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44598));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_125 = __this->get_constraintsManager_24();
		bool L_126 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44703));
		NullCheck(L_125);
		ConstraintManager_ApplyScaleConstraints_m55C4DE269179C5500CC4C8AC95E06066749BFD6F(L_125, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_15), (bool)1, L_126, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44703));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44599));
	}

IL_0342:
	{
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44600));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_127 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44704));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_128 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_127, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44704));
		V_31 = L_128;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44601));
		bool L_129 = V_31;
		if (!L_129)
		{
			goto IL_0365;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44602));
		// transformUpdated = elasticsManager.ApplyTargetTransform(clampedTransform, TransformFlags.Scale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44603));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_130 = __this->get_elasticsManager_31();
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_131 = V_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44705));
		NullCheck(L_130);
		int32_t L_132 = ElasticsManager_ApplyTargetTransform_m5A261D4771CE5BFF70831B3BF5595EA47F7B886C(L_130, L_131, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44705));
		V_2 = L_132;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44604));
	}

IL_0365:
	{
		// if (!transformUpdated.IsMaskSet(TransformFlags.Scale))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44605));
		int32_t L_133 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44706));
		bool L_134 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_133, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44706));
		V_32 = (bool)((((int32_t)L_134) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44606));
		bool L_135 = V_32;
		if (!L_135)
		{
			goto IL_03c0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44607));
		// Target.transform.localScale = smoothingActive ?
		//     Smoothing.SmoothTo(Target.transform.localScale, clampedTransform.Scale, scaleLerpTime, Time.deltaTime) :
		//     clampedTransform.Scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44707));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_136 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44707));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44708));
		NullCheck(L_136);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_137 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_136, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44708));
		bool L_138 = __this->get_smoothingActive_19();
		G_B39_0 = L_137;
		if (L_138)
		{
			G_B40_0 = L_137;
			goto IL_0392;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44709));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_139 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_15), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44709));
		G_B41_0 = L_139;
		G_B41_1 = G_B39_0;
		goto IL_03b9;
	}

IL_0392:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44710));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_140 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44710));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44711));
		NullCheck(L_140);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_141 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_140, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44711));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44712));
		NullCheck(L_141);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_142 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_141, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44712));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44713));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_143 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_15), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44713));
		float L_144 = __this->get_scaleLerpTime_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44714));
		float L_145 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44714));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44715));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_146 = Smoothing_SmoothTo_m1B0C9EEC16A7DE788A2993DBF9AE390F260FE2A0(L_142, L_143, L_144, L_145, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44715));
		G_B41_0 = L_146;
		G_B41_1 = G_B40_0;
	}

IL_03b9:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44716));
		NullCheck(G_B41_1);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(G_B41_1, G_B41_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44716));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44609));
	}

IL_03c0:
	{
		// var originalRelativePosition = Target.transform.InverseTransformDirection(initialPositionOnGrabStart - oppositeCorner);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44717));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_147 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44717));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44718));
		NullCheck(L_147);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_148 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_147, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44718));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_149 = __this->get_initialPositionOnGrabStart_48();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_150 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44719));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_151 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_149, L_150, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44719));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44720));
		NullCheck(L_148);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_152 = Transform_InverseTransformDirection_m6F0513F2EC19C204F2077E3C68DD1D45317CB5F2(L_148, L_151, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44720));
		V_16 = L_152;
		// var newPosition = Target.transform.TransformDirection(originalRelativePosition.Mul(scaleFactor)) + oppositeCorner;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44611));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44721));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_153 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44721));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44722));
		NullCheck(L_153);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_154 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_153, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44722));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_155 = V_16;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_156 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44723));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_157 = VectorExtensions_Mul_mA9E9CF9E094D4F73384941B8B1EF54789BDE3D20(L_155, L_156, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44723));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44724));
		NullCheck(L_154);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_158 = Transform_TransformDirection_m85FC1D7E1322E94F65DA59AEF3B1166850B183EF(L_154, L_157, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44724));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_159 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44725));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_160 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_158, L_159, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44725));
		V_17 = L_160;
		// Target.transform.position = smoothingActive ? Smoothing.SmoothTo(Target.transform.position, newPosition, scaleLerpTime, Time.deltaTime) : newPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44612));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44726));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_161 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44726));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44727));
		NullCheck(L_161);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_162 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_161, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44727));
		bool L_163 = __this->get_smoothingActive_19();
		G_B43_0 = L_162;
		if (L_163)
		{
			G_B44_0 = L_162;
			goto IL_0420;
		}
	}
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_164 = V_17;
		G_B45_0 = L_164;
		G_B45_1 = G_B43_0;
		goto IL_0442;
	}

IL_0420:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44728));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_165 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44728));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44729));
		NullCheck(L_165);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_166 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_165, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44730));
		NullCheck(L_166);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_167 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_166, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44730));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_168 = V_17;
		float L_169 = __this->get_scaleLerpTime_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44731));
		float L_170 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44731));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44732));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_171 = Smoothing_SmoothTo_m1B0C9EEC16A7DE788A2993DBF9AE390F260FE2A0(L_167, L_168, L_169, L_170, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44732));
		G_B45_0 = L_171;
		G_B45_1 = G_B44_0;
	}

IL_0442:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44733));
		NullCheck(G_B45_1);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(G_B45_1, G_B45_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44733));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44613));
		goto IL_0540;
	}

IL_044e:
	{
		// else if (transformType == HandleType.Translation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44614));
		int32_t L_172 = ___transformType0;
		V_33 = (bool)((((int32_t)L_172) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44615));
		bool L_173 = V_33;
		if (!L_173)
		{
			goto IL_0540;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44616));
		// Vector3 translateVectorAlongAxis = Vector3.Project(currentGrabPoint - initialGrabPoint, currentTranslationAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44617));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_174 = __this->get_currentGrabPoint_50();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_175 = __this->get_initialGrabPoint_49();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44734));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_176 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_174, L_175, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44734));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_177 = __this->get_currentTranslationAxis_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44735));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_178 = Vector3_Project_m3A2D462C2548AA76EB0BCD3305B1E8588347DB9D(L_176, L_177, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44735));
		V_34 = L_178;
		// var goal = initialPositionOnGrabStart + translateVectorAlongAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44618));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_179 = __this->get_initialPositionOnGrabStart_48();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_180 = V_34;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44736));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_181 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_179, L_180, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44736));
		V_35 = L_181;
		// MixedRealityTransform constraintTranslate = MixedRealityTransform.NewTranslate(goal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44619));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_182 = V_35;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44737));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_il2cpp_TypeInfo_var);
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_183 = MixedRealityTransform_NewTranslate_mAF995F7D8723715C01529DF15648AFE481CBF93B(L_182, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44737));
		V_36 = L_183;
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44620));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44738));
		bool L_184 = BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44738));
		if (!L_184)
		{
			goto IL_04a8;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_185 = __this->get_constraintsManager_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44739));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_186 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_185, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44739));
		G_B50_0 = ((int32_t)(L_186));
		goto IL_04a9;
	}

IL_04a8:
	{
		G_B50_0 = 0;
	}

IL_04a9:
	{
		V_37 = (bool)G_B50_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44621));
		bool L_187 = V_37;
		if (!L_187)
		{
			goto IL_04c1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44622));
		// constraintsManager.ApplyTranslationConstraints(ref constraintTranslate, true, isNear);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44623));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_188 = __this->get_constraintsManager_24();
		bool L_189 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44740));
		NullCheck(L_188);
		ConstraintManager_ApplyTranslationConstraints_mE33C3FEFE7E6C67D1F451EB9208E118328F8EB69(L_188, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_36), (bool)1, L_189, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44740));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44624));
	}

IL_04c1:
	{
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44625));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_190 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44741));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_191 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_190, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44741));
		V_38 = L_191;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44626));
		bool L_192 = V_38;
		if (!L_192)
		{
			goto IL_04e4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44627));
		// transformUpdated = elasticsManager.ApplyTargetTransform(constraintTranslate, TransformFlags.Move);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44628));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_193 = __this->get_elasticsManager_31();
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_194 = V_36;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44742));
		NullCheck(L_193);
		int32_t L_195 = ElasticsManager_ApplyTargetTransform_m5A261D4771CE5BFF70831B3BF5595EA47F7B886C(L_193, L_194, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44742));
		V_2 = L_195;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44629));
	}

IL_04e4:
	{
		// if (!transformUpdated.IsMaskSet(TransformFlags.Move))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44630));
		int32_t L_196 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44743));
		bool L_197 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_196, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44743));
		V_39 = (bool)((((int32_t)L_197) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44631));
		bool L_198 = V_39;
		if (!L_198)
		{
			goto IL_053f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44632));
		// Target.transform.position = smoothingActive ?
		//     Smoothing.SmoothTo(Target.transform.position, constraintTranslate.Position, translateLerpTime, Time.deltaTime) :
		//     constraintTranslate.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44633));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44744));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_199 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44744));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44745));
		NullCheck(L_199);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_200 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_199, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44745));
		bool L_201 = __this->get_smoothingActive_19();
		G_B56_0 = L_200;
		if (L_201)
		{
			G_B57_0 = L_200;
			goto IL_0511;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44746));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_202 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_36), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44746));
		G_B58_0 = L_202;
		G_B58_1 = G_B56_0;
		goto IL_0538;
	}

IL_0511:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44747));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_203 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44748));
		NullCheck(L_203);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_204 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_203, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44748));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44749));
		NullCheck(L_204);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_205 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_204, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44749));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44750));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_206 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_36), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44750));
		float L_207 = __this->get_translateLerpTime_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44751));
		float L_208 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44751));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44752));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_209 = Smoothing_SmoothTo_m1B0C9EEC16A7DE788A2993DBF9AE390F260FE2A0(L_205, L_206, L_207, L_208, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44752));
		G_B58_0 = L_209;
		G_B58_1 = G_B57_0;
	}

IL_0538:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44753));
		NullCheck(G_B58_1);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(G_B58_1, G_B58_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44753));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44634));
	}

IL_053f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44635));
	}

IL_0540:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44636));
	}

IL_0541:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44637));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusChangedHandler.OnFocusChanged(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnFocusChanged_mF67785DDAA039795A358E462B1019AE9C4C43C8A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnFocusChanged_mF67785DDAA039795A358E462B1019AE9C4C43C8A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnFocusChanged_mF67785DDAA039795A358E462B1019AE9C4C43C8A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44755));
	int32_t G_B5_0 = 0;
	int32_t G_B12_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44756));
		// if (eventData.NewFocusedObject == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44757));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44778));
		NullCheck(L_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44778));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44779));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44779));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44758));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44759));
		// proximityEffect.ResetProximityScale();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44760));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_4 = __this->get_proximityEffect_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44780));
		NullCheck(L_4);
		ProximityEffect_ResetProximityScale_mA0006227A4EF84138BF451F740EE9BC0B7A40366(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44780));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44761));
	}

IL_001f:
	{
		// if (activation == BoundsControlActivationType.ActivateManually || activation == BoundsControlActivationType.ActivateOnStart)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44762));
		int32_t L_5 = __this->get_activation_7();
		if ((((int32_t)L_5) == ((int32_t)4)))
		{
			goto IL_0033;
		}
	}
	{
		int32_t L_6 = __this->get_activation_7();
		G_B5_0 = ((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		goto IL_0034;
	}

IL_0033:
	{
		G_B5_0 = 1;
	}

IL_0034:
	{
		V_2 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44763));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_003b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44764));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44765));
		goto IL_009b;
	}

IL_003b:
	{
		// if (!DoesActivationMatchPointer(eventData.Pointer))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44766));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44781));
		NullCheck(L_8);
		RuntimeObject* L_9 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44782));
		bool L_10 = BoundsControl_DoesActivationMatchPointer_m3A6EC7FCFDA851C1A4DA60CA8B1146AA3D40EE95(__this, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44782));
		V_3 = (bool)((((int32_t)L_10) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44767));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44768));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44769));
		goto IL_009b;
	}

IL_0051:
	{
		// bool handInProximity = eventData.NewFocusedObject != null && eventData.NewFocusedObject.transform.IsChildOf(transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44770));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_12 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44783));
		NullCheck(L_12);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44784));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_14 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_13, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44784));
		if (!L_14)
		{
			goto IL_0077;
		}
	}
	{
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_15 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44785));
		NullCheck(L_15);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44785));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44786));
		NullCheck(L_16);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_17 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44786));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44787));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44787));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44788));
		NullCheck(L_17);
		bool L_19 = Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44788));
		G_B12_0 = ((int32_t)(L_19));
		goto IL_0078;
	}

IL_0077:
	{
		G_B12_0 = 0;
	}

IL_0078:
	{
		V_0 = (bool)G_B12_0;
		// if (handInProximity == wireframeOnly)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44771));
		bool L_20 = V_0;
		bool L_21 = __this->get_wireframeOnly_38();
		V_4 = (bool)((((int32_t)L_20) == ((int32_t)L_21))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44772));
		bool L_22 = V_4;
		if (!L_22)
		{
			goto IL_009b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44773));
		// wireframeOnly = !handInProximity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44774));
		bool L_23 = V_0;
		__this->set_wireframeOnly_38((bool)((((int32_t)L_23) == ((int32_t)0))? 1 : 0));
		// ResetVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44789));
		BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44789));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44776));
	}

IL_009b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44777));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler.OnFocusExit(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mFB767DA468A30043030D6BA2A0A22CF2C67CC714 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mFB767DA468A30043030D6BA2A0A22CF2C67CC714_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mFB767DA468A30043030D6BA2A0A22CF2C67CC714_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44790));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44791));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44792));
		// if (currentPointer != null && eventData.Pointer == currentPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44793));
		RuntimeObject* L_0 = __this->get_currentPointer_39();
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44799));
		NullCheck(L_1);
		RuntimeObject* L_2 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44799));
		RuntimeObject* L_3 = __this->get_currentPointer_39();
		G_B3_0 = ((((RuntimeObject*)(RuntimeObject*)L_2) == ((RuntimeObject*)(RuntimeObject*)L_3))? 1 : 0);
		goto IL_001a;
	}

IL_0019:
	{
		G_B3_0 = 0;
	}

IL_001a:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44794));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44795));
		// DropController();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44796));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44800));
		BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44800));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44797));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44798));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler.OnFocusEnter(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_mFDED5A4E496854A33CC7BC543BF6D370FC448C4F (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_mFDED5A4E496854A33CC7BC543BF6D370FC448C4F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_mFDED5A4E496854A33CC7BC543BF6D370FC448C4F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44801));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44802));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44803));
		// void IMixedRealityFocusHandler.OnFocusEnter(FocusEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44804));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnPointerUp_mB652CDDDFEB7B91AF81827328753993134FEA2EC (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnPointerUp_mB652CDDDFEB7B91AF81827328753993134FEA2EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnPointerUp_mB652CDDDFEB7B91AF81827328753993134FEA2EC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44805));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44806));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44807));
		// if (currentPointer != null && eventData.Pointer == currentPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44808));
		RuntimeObject* L_0 = __this->get_currentPointer_39();
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44815));
		NullCheck(L_1);
		RuntimeObject* L_2 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44815));
		RuntimeObject* L_3 = __this->get_currentPointer_39();
		G_B3_0 = ((((RuntimeObject*)(RuntimeObject*)L_2) == ((RuntimeObject*)(RuntimeObject*)L_3))? 1 : 0);
		goto IL_001a;
	}

IL_0019:
	{
		G_B3_0 = 0;
	}

IL_001a:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44809));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44810));
		// DropController();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44811));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44816));
		BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44816));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44812));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_5 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44817));
		NullCheck(L_5);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44817));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44813));
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44814));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnPointerDown_mE4B572E04B99E05E04C22658D098975D715609EA (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnPointerDown_mE4B572E04B99E05E04C22658D098975D715609EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_2 = NULL;
	bool V_3 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnPointerDown_mE4B572E04B99E05E04C22658D098975D715609EA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44818));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44819));
	int32_t G_B3_0 = 0;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B8_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B7_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B15_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B14_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B22_0 = NULL;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * G_B21_0 = NULL;
	int32_t G_B31_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44820));
		// if (currentPointer == null && !eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44821));
		RuntimeObject* L_0 = __this->get_currentPointer_39();
		if (L_0)
		{
			goto IL_0014;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44892));
		NullCheck(L_1);
		bool L_2 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44892));
		G_B3_0 = ((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 0;
	}

IL_0015:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44822));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_02ce;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44823));
		// GameObject grabbedHandle = eventData.Pointer.Result.CurrentPointerTarget;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44824));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44893));
		NullCheck(L_4);
		RuntimeObject* L_5 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44893));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44894));
		NullCheck(L_5);
		RuntimeObject* L_6 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44895));
		NullCheck(L_6);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44895));
		V_1 = L_7;
		// Transform grabbedHandleTransform = grabbedHandle.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44825));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44896));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44896));
		V_2 = L_9;
		// currentHandleType = GetHandleType(grabbedHandleTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44826));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44897));
		int32_t L_11 = BoundsControl_GetHandleType_m0E85710ABB91FE7B3D7B520B00DAE48D0F83C4D5(__this, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44897));
		__this->set_currentHandleType_54(L_11);
		// if (currentHandleType != HandleType.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44827));
		int32_t L_12 = __this->get_currentHandleType_54();
		V_3 = (bool)((!(((uint32_t)L_12) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44828));
		bool L_13 = V_3;
		if (!L_13)
		{
			goto IL_02cd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44829));
		// currentPointer = eventData.Pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44830));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_14 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44898));
		NullCheck(L_14);
		RuntimeObject* L_15 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44898));
		__this->set_currentPointer_39(L_15);
		// initialGrabPoint = currentPointer.Result.Details.Point;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44831));
		RuntimeObject* L_16 = __this->get_currentPointer_39();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44899));
		NullCheck(L_16);
		RuntimeObject* L_17 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44899));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44900));
		NullCheck(L_17);
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_18 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44900));
		V_4 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44901));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44901));
		__this->set_initialGrabPoint_49(L_19);
		// currentGrabPoint = initialGrabPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44832));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = __this->get_initialGrabPoint_49();
		__this->set_currentGrabPoint_50(L_20);
		// initialScaleOnGrabStart = Target.transform.localScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44833));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44902));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44903));
		NullCheck(L_21);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44904));
		NullCheck(L_22);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44904));
		__this->set_initialScaleOnGrabStart_46(L_23);
		// initialRotationOnGrabStart = Target.transform.rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44834));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44905));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44905));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44906));
		NullCheck(L_24);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44906));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44907));
		NullCheck(L_25);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_26 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44907));
		__this->set_initialRotationOnGrabStart_47(L_26);
		// initialPositionOnGrabStart = Target.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44835));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44908));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_27 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44908));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44909));
		NullCheck(L_27);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44909));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44910));
		NullCheck(L_28);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44910));
		__this->set_initialPositionOnGrabStart_48(L_29);
		// grabPointInPointer = Quaternion.Inverse(eventData.Pointer.Rotation) * (initialGrabPoint - currentPointer.Position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44836));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_30 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44911));
		NullCheck(L_30);
		RuntimeObject* L_31 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44911));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44912));
		NullCheck(L_31);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_32 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_31);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44912));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44913));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_33 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44913));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = __this->get_initialGrabPoint_49();
		RuntimeObject* L_35 = __this->get_currentPointer_39();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44914));
		NullCheck(L_35);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_35);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44914));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44915));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_34, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44915));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44916));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_38 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_33, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44916));
		__this->set_grabPointInPointer_51(L_38);
		// SetHighlighted(grabbedHandleTransform, eventData.Pointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44837));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_39 = V_2;
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_40 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44917));
		NullCheck(L_40);
		RuntimeObject* L_41 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44917));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44918));
		BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3(__this, L_39, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44918));
		// if (currentHandleType == HandleType.Scale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44838));
		int32_t L_42 = __this->get_currentHandleType_54();
		V_5 = (bool)((((int32_t)L_42) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44839));
		bool L_43 = V_5;
		if (!L_43)
		{
			goto IL_01a6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44840));
		// oppositeCorner = rigRoot.transform.TransformPoint(-grabbedHandle.transform.localPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44841));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44919));
		NullCheck(L_44);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_45 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44919));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_46 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44920));
		NullCheck(L_46);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44920));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44921));
		NullCheck(L_47);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44921));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44922));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44922));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44923));
		NullCheck(L_45);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_45, L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44923));
		__this->set_oppositeCorner_52(L_50);
		// diagonalDir = (grabbedHandle.transform.position - oppositeCorner).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44842));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_51 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44924));
		NullCheck(L_51);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_52 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44924));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44925));
		NullCheck(L_52);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44925));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = __this->get_oppositeCorner_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44926));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_53, L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44926));
		V_6 = L_55;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44927));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_56 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44927));
		__this->set_diagonalDir_53(L_56);
		// ScaleStarted?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44843));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44928));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_57 = BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44928));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_58 = L_57;
		G_B7_0 = L_58;
		if (L_58)
		{
			G_B8_0 = L_58;
			goto IL_0175;
		}
	}
	{
		goto IL_017b;
	}

IL_0175:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44929));
		NullCheck(G_B8_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B8_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44929));
	}

IL_017b:
	{
		// if (debugText != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44844));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_59 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44930));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_60 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_59, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44930));
		V_7 = L_60;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44845));
		bool L_61 = V_7;
		if (!L_61)
		{
			goto IL_01a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44846));
		// debugText.text = "OnPointerDown:ScaleStarted";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44847));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_62 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44931));
		NullCheck(L_62);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_62, _stringLiteralDD3564FE95675C3192AEAF4E78D1BF58491AF06A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44931));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44848));
	}

IL_01a0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44849));
		goto IL_0252;
	}

IL_01a6:
	{
		// else if (currentHandleType == HandleType.Rotation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44850));
		int32_t L_63 = __this->get_currentHandleType_54();
		V_8 = (bool)((((int32_t)L_63) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44851));
		bool L_64 = V_8;
		if (!L_64)
		{
			goto IL_01fd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44852));
		// currentRotationAxis = GetRotationAxis(grabbedHandleTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44853));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_65 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44932));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = BoundsControl_GetRotationAxis_m2871D8C87706500C3952392193AD5E31FB111E3E(__this, L_65, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44932));
		__this->set_currentRotationAxis_44(L_66);
		// RotateStarted?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44854));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44933));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_67 = BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44933));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_68 = L_67;
		G_B14_0 = L_68;
		if (L_68)
		{
			G_B15_0 = L_68;
			goto IL_01cf;
		}
	}
	{
		goto IL_01d5;
	}

IL_01cf:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44934));
		NullCheck(G_B15_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B15_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44934));
	}

IL_01d5:
	{
		// if (debugText != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44855));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_69 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44935));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_70 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_69, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44935));
		V_9 = L_70;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44856));
		bool L_71 = V_9;
		if (!L_71)
		{
			goto IL_01fa;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44857));
		// debugText.text = "OnPointerDown:RotateStarted";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44858));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_72 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44936));
		NullCheck(L_72);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_72, _stringLiteral019095ABB5BB7C8054A256B91430616E3B11796F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44936));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44859));
	}

IL_01fa:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44860));
		goto IL_0252;
	}

IL_01fd:
	{
		// else if (currentHandleType == HandleType.Translation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44861));
		int32_t L_73 = __this->get_currentHandleType_54();
		V_10 = (bool)((((int32_t)L_73) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44862));
		bool L_74 = V_10;
		if (!L_74)
		{
			goto IL_0252;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44863));
		// currentTranslationAxis = GetTranslationAxis(grabbedHandleTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44864));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_75 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44937));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_76 = BoundsControl_GetTranslationAxis_mB7E33230C8F9200BAB7966D5A9547824DF4C7193(__this, L_75, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44937));
		__this->set_currentTranslationAxis_45(L_76);
		// TranslateStarted?.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44865));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44938));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_77 = BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44938));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_78 = L_77;
		G_B21_0 = L_78;
		if (L_78)
		{
			G_B22_0 = L_78;
			goto IL_0226;
		}
	}
	{
		goto IL_022c;
	}

IL_0226:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44939));
		NullCheck(G_B22_0);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(G_B22_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44939));
	}

IL_022c:
	{
		// if (debugText != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44866));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_79 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44940));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_80 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_79, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44940));
		V_11 = L_80;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44867));
		bool L_81 = V_11;
		if (!L_81)
		{
			goto IL_0251;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44868));
		// debugText.text = "OnPointerDown:TranslateStarted";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44869));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_82 = __this->get_debugText_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44941));
		NullCheck(L_82);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_82, _stringLiteral2A79071C91137FE5D11A469748BBFF6C5CFDFB05, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44941));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44870));
	}

IL_0251:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44871));
	}

IL_0252:
	{
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44872));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_83 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44942));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_84 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_83, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44942));
		V_12 = L_84;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44873));
		bool L_85 = V_12;
		if (!L_85)
		{
			goto IL_028a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44874));
		// elasticsManager.InitializeElastics(Target.transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44875));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_86 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44943));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_87 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44943));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44944));
		NullCheck(L_87);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_88 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_87, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44944));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44945));
		NullCheck(L_86);
		ElasticsManager_InitializeElastics_m1F2102BE2AF0AEEDD08ED0FAD49468C26D04E8A8(L_86, L_88, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44945));
		// elasticsManager.EnableElasticsUpdate = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44876));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_89 = __this->get_elasticsManager_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44946));
		NullCheck(L_89);
		ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline(L_89, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44946));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44877));
	}

IL_028a:
	{
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44878));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44947));
		bool L_90 = BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44947));
		if (!L_90)
		{
			goto IL_02a0;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_91 = __this->get_constraintsManager_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44948));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_92 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_91, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44948));
		G_B31_0 = ((int32_t)(L_92));
		goto IL_02a1;
	}

IL_02a0:
	{
		G_B31_0 = 0;
	}

IL_02a1:
	{
		V_13 = (bool)G_B31_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44879));
		bool L_93 = V_13;
		if (!L_93)
		{
			goto IL_02c5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44880));
		// constraintsManager.Initialize(new MixedRealityTransform(Target.transform));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44881));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_94 = __this->get_constraintsManager_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44949));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_95 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44949));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44950));
		NullCheck(L_95);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_96 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_95, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44951));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_97;
		memset((&L_97), 0, sizeof(L_97));
		MixedRealityTransform__ctor_m9C17849F9137B911288BF804F27B607389C406F6((&L_97), L_96, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44951));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44952));
		NullCheck(L_94);
		ConstraintManager_Initialize_mE5A32824EE2B7EB7BA63CCA8AC2EA028D83DA93F(L_94, L_97, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44952));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44882));
	}

IL_02c5:
	{
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44883));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_98 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44953));
		NullCheck(L_98);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_98);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44953));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44884));
	}

IL_02cd:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44885));
	}

IL_02ce:
	{
		// if (currentPointer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44886));
		RuntimeObject* L_99 = __this->get_currentPointer_39();
		V_14 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_99) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44887));
		bool L_100 = V_14;
		if (!L_100)
		{
			goto IL_02e6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44888));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44889));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_101 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44954));
		NullCheck(L_101);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_101);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44954));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44890));
	}

IL_02e6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44891));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnPointerDragged_m696CBB60F4E5E6EF736712EB530495924E435817 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnPointerDragged_m696CBB60F4E5E6EF736712EB530495924E435817_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnPointerDragged_m696CBB60F4E5E6EF736712EB530495924E435817_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44955));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44956));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44957));
		// private void OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44958));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnSourceDetected_m6EA60CDD59831C15109496F1FAD171BBC0A2A4C1 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnSourceDetected_m6EA60CDD59831C15109496F1FAD171BBC0A2A4C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnSourceDetected_m6EA60CDD59831C15109496F1FAD171BBC0A2A4C1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44959));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44960));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44961));
		// if (eventData.Controller != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44962));
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44972));
		NullCheck(L_0);
		RuntimeObject* L_1 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44972));
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_1) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44963));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_004c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44964));
		// if (sourcesDetected.Count == 0 || sourcesDetected.Contains(eventData.Controller) == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44965));
		List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * L_3 = __this->get_sourcesDetected_43();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44973));
		NullCheck(L_3);
		int32_t L_4 = List_1_get_Count_m6B026913491C4363422E2EA14144C43CA5C11517_inline(L_3, /*hidden argument*/List_1_get_Count_m6B026913491C4363422E2EA14144C43CA5C11517_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44973));
		if (!L_4)
		{
			goto IL_0032;
		}
	}
	{
		List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * L_5 = __this->get_sourcesDetected_43();
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44974));
		NullCheck(L_6);
		RuntimeObject* L_7 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44974));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44975));
		NullCheck(L_5);
		bool L_8 = List_1_Contains_m265DE61D2C5C084052BFD071DAF6B09C193C46E7(L_5, L_7, /*hidden argument*/List_1_Contains_m265DE61D2C5C084052BFD071DAF6B09C193C46E7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44975));
		G_B4_0 = ((((int32_t)L_8) == ((int32_t)0))? 1 : 0);
		goto IL_0033;
	}

IL_0032:
	{
		G_B4_0 = 1;
	}

IL_0033:
	{
		V_1 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44966));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44967));
		// sourcesDetected.Add(eventData.Controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44968));
		List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * L_10 = __this->get_sourcesDetected_43();
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44976));
		NullCheck(L_11);
		RuntimeObject* L_12 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44976));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44977));
		NullCheck(L_10);
		List_1_Add_m14F5461E32CAE2A5FE0B0E3A9CFFA9D0F2AC3C24(L_10, L_12, /*hidden argument*/List_1_Add_m14F5461E32CAE2A5FE0B0E3A9CFFA9D0F2AC3C24_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44977));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44969));
	}

IL_004b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44970));
	}

IL_004c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44971));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_OnSourceLost_m982F35F5F7541394E0459F632F9EF01FBFFB43EC (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_OnSourceLost_m982F35F5F7541394E0459F632F9EF01FBFFB43EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_OnSourceLost_m982F35F5F7541394E0459F632F9EF01FBFFB43EC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44979));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44980));
		// sourcesDetected.Remove(eventData.Controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44981));
		List_1_t062C6E4C5EF31225D50FAA71602ED80B695E8100 * L_0 = __this->get_sourcesDetected_43();
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44988));
		NullCheck(L_1);
		RuntimeObject* L_2 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44988));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44989));
		NullCheck(L_0);
		List_1_Remove_mE39D4E9AA5A57AFC5582C742CF0CEA0E79DF304C(L_0, L_2, /*hidden argument*/List_1_Remove_mE39D4E9AA5A57AFC5582C742CF0CEA0E79DF304C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44989));
		// if (currentPointer != null && currentPointer.InputSourceParent.SourceId == eventData.SourceId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44982));
		RuntimeObject* L_3 = __this->get_currentPointer_39();
		if (!L_3)
		{
			goto IL_0035;
		}
	}
	{
		RuntimeObject* L_4 = __this->get_currentPointer_39();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44990));
		NullCheck(L_4);
		RuntimeObject* L_5 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(5 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_InputSourceParent() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44990));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44991));
		NullCheck(L_5);
		uint32_t L_6 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44991));
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44992));
		NullCheck(L_7);
		uint32_t L_8 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44992));
		G_B3_0 = ((((int32_t)L_6) == ((int32_t)L_8))? 1 : 0);
		goto IL_0036;
	}

IL_0035:
	{
		G_B3_0 = 0;
	}

IL_0036:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44983));
		bool L_9 = V_0;
		if (!L_9)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44984));
		// DropController();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44985));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44993));
		BoundsControl_DropController_m43C8152817B6536FC2021659E87D678D1313F1E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44993));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44986));
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44987));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusChangedHandler.OnBeforeFocusChange(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnBeforeFocusChange_m38D9DB744FB5206EFD211B5BD9CA0103CE6DE34B (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnBeforeFocusChange_m38D9DB744FB5206EFD211B5BD9CA0103CE6DE34B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusChangedHandler_OnBeforeFocusChange_m38D9DB744FB5206EFD211B5BD9CA0103CE6DE34B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44994));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44995));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44996));
		// void IMixedRealityFocusChangedHandler.OnBeforeFocusChange(FocusEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44997));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::SetHighlighted(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___activeHandle0, RuntimeObject* ___pointer1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___activeHandle0), (&___pointer1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_SetHighlighted_mD9AD28AB1AC943896883D2B71FB16EE2E190F7C3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 44999));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45000));
		// scaleHandles.SetHighlighted(activeHandle, pointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45001));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_0 = __this->get_scaleHandles_33();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = ___activeHandle0;
		RuntimeObject* L_2 = ___pointer1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45006));
		NullCheck(L_0);
		HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA(L_0, L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45006));
		// rotationHandles.SetHighlighted(activeHandle, pointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45002));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_3 = __this->get_rotationHandles_34();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = ___activeHandle0;
		RuntimeObject* L_5 = ___pointer1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45007));
		NullCheck(L_3);
		HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA(L_3, L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45007));
		// translationHandles.SetHighlighted(activeHandle, pointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45003));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_6 = __this->get_translationHandles_35();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = ___activeHandle0;
		RuntimeObject* L_8 = ___pointer1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45008));
		NullCheck(L_6);
		HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA(L_6, L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45008));
		// boxDisplay.SetHighlighted();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45004));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_9 = __this->get_boxDisplay_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45009));
		NullCheck(L_9);
		BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45009));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45005));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::ResetVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_ResetVisuals_m89B25A3E1FC87D3D3AF2632AAC26A9D0790926CA_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45010));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45011));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45012));
		// if (currentPointer != null || !IsInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45013));
		RuntimeObject* L_0 = __this->get_currentPointer_39();
		if (L_0)
		{
			goto IL_0014;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45026));
		bool L_1 = BoundsControl_get_IsInitialized_m226AB1B7288C1EC0E54B751D369D1CDA9615BF37(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45026));
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 1;
	}

IL_0015:
	{
		V_2 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45014));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_001c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45015));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45016));
		goto IL_0094;
	}

IL_001c:
	{
		// var actualAxis = ActualFlattenAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45017));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45027));
		int32_t L_3 = BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45027));
		V_0 = L_3;
		// boxDisplay.Reset(active);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45018));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_4 = __this->get_boxDisplay_36();
		bool L_5 = __this->get_active_63();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45028));
		NullCheck(L_4);
		BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45028));
		// boxDisplay.UpdateFlattenAxis(actualAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45019));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_6 = __this->get_boxDisplay_36();
		int32_t L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45029));
		NullCheck(L_6);
		BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45029));
		// bool isVisible = (active == true && wireframeOnly == false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45020));
		bool L_8 = __this->get_active_63();
		if (!L_8)
		{
			goto IL_0055;
		}
	}
	{
		bool L_9 = __this->get_wireframeOnly_38();
		G_B8_0 = ((((int32_t)L_9) == ((int32_t)0))? 1 : 0);
		goto IL_0056;
	}

IL_0055:
	{
		G_B8_0 = 0;
	}

IL_0056:
	{
		V_1 = (bool)G_B8_0;
		// rotationHandles.Reset(isVisible, actualAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45021));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_10 = __this->get_rotationHandles_34();
		bool L_11 = V_1;
		int32_t L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45030));
		NullCheck(L_10);
		PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A(L_10, L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45030));
		// links.Reset(active, actualAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45022));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_13 = __this->get_links_32();
		bool L_14 = __this->get_active_63();
		int32_t L_15 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45031));
		NullCheck(L_13);
		Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567(L_13, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45031));
		// scaleHandles.Reset(isVisible, actualAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45023));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_16 = __this->get_scaleHandles_33();
		bool L_17 = V_1;
		int32_t L_18 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45032));
		NullCheck(L_16);
		ScaleHandles_Reset_mFE5E3E9B5FBBF25E229A58A49FAA0FC53DB751F9(L_16, L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45032));
		// translationHandles.Reset(isVisible, actualAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45024));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_19 = __this->get_translationHandles_35();
		bool L_20 = V_1;
		int32_t L_21 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45033));
		NullCheck(L_19);
		PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A(L_19, L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45033));
	}

IL_0094:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45025));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::CreateVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_CreateVisuals_m29856676E1DCD89096888B3B654C8E24838BFFB0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45034));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45035));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45036));
		// bool isFlattened = flattenAxis != FlattenModeType.DoNotFlatten;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45037));
		int32_t L_0 = __this->get_flattenAxis_8();
		V_0 = (bool)((!(((uint32_t)L_0) <= ((uint32_t)0)))? 1 : 0);
		// scaleHandles.Create(ref boundsCorners, rigRoot, isFlattened);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45038));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_1 = __this->get_scaleHandles_33();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_2 = __this->get_address_of_boundsCorners_60();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_rigRoot_40();
		bool L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45048));
		NullCheck(L_1);
		ScaleHandles_Create_mCA0B3FFB58F92D04FD8CB179E8BBF77F6353202A(L_1, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_2, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45048));
		// proximityEffect.RegisterObjectProvider(scaleHandles);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45039));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_5 = __this->get_proximityEffect_37();
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_6 = __this->get_scaleHandles_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45049));
		NullCheck(L_5);
		ProximityEffect_RegisterObjectProvider_m68786966151D6C0E83AE3F5DF21A34F863A81AFC(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45049));
		// rotationHandles.Create(ref boundsCorners, rigRoot);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45040));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_7 = __this->get_rotationHandles_34();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_8 = __this->get_address_of_boundsCorners_60();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45050));
		NullCheck(L_7);
		PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9(L_7, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45050));
		// proximityEffect.RegisterObjectProvider(rotationHandles);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45041));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_10 = __this->get_proximityEffect_37();
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_11 = __this->get_rotationHandles_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45051));
		NullCheck(L_10);
		ProximityEffect_RegisterObjectProvider_m68786966151D6C0E83AE3F5DF21A34F863A81AFC(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45051));
		// links.CreateLinks(ref boundsCorners, rigRoot, currentBoundsExtents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45042));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_12 = __this->get_links_32();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_13 = __this->get_address_of_boundsCorners_60();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = __this->get_rigRoot_40();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = __this->get_currentBoundsExtents_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45052));
		NullCheck(L_12);
		Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12(L_12, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_13, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45052));
		// translationHandles.Create(ref boundsCorners, rigRoot);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45043));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_16 = __this->get_translationHandles_35();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_17 = __this->get_address_of_boundsCorners_60();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45053));
		NullCheck(L_16);
		PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9(L_16, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45053));
		// proximityEffect.RegisterObjectProvider(translationHandles);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45044));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_19 = __this->get_proximityEffect_37();
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_20 = __this->get_translationHandles_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45054));
		NullCheck(L_19);
		ProximityEffect_RegisterObjectProvider_m68786966151D6C0E83AE3F5DF21A34F863A81AFC(L_19, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45054));
		// boxDisplay.AddBoxDisplay(rigRoot.transform, currentBoundsExtents, flattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45045));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_21 = __this->get_boxDisplay_36();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45055));
		NullCheck(L_22);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45055));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = __this->get_currentBoundsExtents_41();
		int32_t L_25 = __this->get_flattenAxis_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45056));
		NullCheck(L_21);
		BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10(L_21, L_23, L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45056));
		// UpdateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45046));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45057));
		BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45057));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45047));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::DestroyVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_DestroyVisuals_m703B7393B79393B63B3EA1F2EBD5B39985AC863A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45058));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45059));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45060));
		// proximityEffect.ClearObjects();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45061));
		ProximityEffect_t7CB41FA17A6CD889EA34BDE0A0FA8FC07A634D34 * L_0 = __this->get_proximityEffect_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45067));
		NullCheck(L_0);
		ProximityEffect_ClearObjects_m7AEDBEB3BB2232ED7CFDAA88A180B94A10AD0230(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45067));
		// links.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45062));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_1 = __this->get_links_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45068));
		NullCheck(L_1);
		Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45068));
		// scaleHandles.DestroyHandles();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45063));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_2 = __this->get_scaleHandles_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45069));
		NullCheck(L_2);
		HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45069));
		// rotationHandles.DestroyHandles();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45064));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_3 = __this->get_rotationHandles_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45070));
		NullCheck(L_3);
		HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45070));
		// translationHandles.DestroyHandles();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45065));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_4 = __this->get_translationHandles_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45071));
		NullCheck(L_4);
		HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45071));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45066));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::UpdateVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2 (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_UpdateVisuals_mE271879BB35CF1FDA98AFB67B5DB9317D51372F2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45072));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45073));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45074));
		// if (rigRoot != null && Target != null && TargetBounds != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45075));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45093));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45093));
		if (!L_1)
		{
			goto IL_002b;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45094));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45095));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45095));
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45096));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_4 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45096));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45097));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45097));
		G_B4_0 = ((int32_t)(L_5));
		goto IL_002c;
	}

IL_002b:
	{
		G_B4_0 = 0;
	}

IL_002c:
	{
		V_0 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45076));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_0139;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45077));
		// rigRoot.parent = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45078));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45098));
		NullCheck(L_7);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_7, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45098));
		// rigRoot.rotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45079));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45099));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_9 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45100));
		NullCheck(L_8);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45100));
		// rigRoot.position = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45080));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45101));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45101));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45102));
		NullCheck(L_10);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45102));
		// rigRoot.localScale = Vector3.one;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45081));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45103));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45104));
		NullCheck(L_12);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45104));
		// rotationHandles.CalculateHandlePositions(ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45082));
		RotationHandles_t5004C9E1E6B654E189B2EC866B1D186AAE91CEFA * L_14 = __this->get_rotationHandles_34();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_15 = __this->get_address_of_boundsCorners_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45105));
		NullCheck(L_14);
		VirtActionInvoker1< Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** >::Invoke(21 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CalculateHandlePositions(UnityEngine.Vector3[]&) */, L_14, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45105));
		// links.UpdateLinkPositions(ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45083));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_16 = __this->get_links_32();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_17 = __this->get_address_of_boundsCorners_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45106));
		NullCheck(L_16);
		Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45(L_16, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45106));
		// links.UpdateLinkScales(currentBoundsExtents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45084));
		Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * L_18 = __this->get_links_32();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = __this->get_currentBoundsExtents_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45107));
		NullCheck(L_18);
		Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45107));
		// translationHandles.CalculateHandlePositions(ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45085));
		TranslationHandles_tC1BDBB87E621481EC1C570C0752A018D142FB8A5 * L_20 = __this->get_translationHandles_35();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_21 = __this->get_address_of_boundsCorners_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45108));
		NullCheck(L_20);
		VirtActionInvoker1< Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** >::Invoke(21 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CalculateHandlePositions(UnityEngine.Vector3[]&) */, L_20, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_21);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45108));
		// scaleHandles.CalculateHandlePositions(ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45086));
		ScaleHandles_t20E017B51B8504918F1A3A12BC63A8B047F82FA3 * L_22 = __this->get_scaleHandles_33();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_23 = __this->get_address_of_boundsCorners_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45109));
		NullCheck(L_22);
		ScaleHandles_CalculateHandlePositions_m644C40BBC9964C4AA5C18D66FA87381AE3487374(L_22, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45109));
		// boxDisplay.UpdateDisplay(currentBoundsExtents, ActualFlattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45087));
		BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * L_24 = __this->get_boxDisplay_36();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = __this->get_currentBoundsExtents_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45110));
		int32_t L_26 = BoundsControl_get_ActualFlattenAxis_m6566B7F1AF3B7530EB6CB4F82D33B325AB81D5BB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45110));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45111));
		NullCheck(L_24);
		BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C(L_24, L_25, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45111));
		// rigRoot.position = TargetBounds.bounds.center;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45088));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_27 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45112));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_28 = BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45112));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45113));
		NullCheck(L_28);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_29 = Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45113));
		V_1 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45114));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Bounds_get_center_m4FB6E99F0533EE2D432988B08474D6DC9B8B744B((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45114));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45115));
		NullCheck(L_27);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_27, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45115));
		// rigRoot.rotation = Target.transform.rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45089));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45116));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_32 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45117));
		NullCheck(L_32);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_33 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45117));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45118));
		NullCheck(L_33);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_34 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45118));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45119));
		NullCheck(L_31);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_31, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45119));
		// rigRoot.parent = Target.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45090));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = __this->get_rigRoot_40();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45120));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_36 = BoundsControl_get_Target_m5DE65B2CE0564B523735F30DAF8D371211D2DE21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45121));
		NullCheck(L_36);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45121));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45122));
		NullCheck(L_35);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_35, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45122));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45091));
	}

IL_0139:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45092));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl__ctor_mCF9B439F446FD6896CEDB73D9A225A16B44444BC (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl__ctor_mCF9B439F446FD6896CEDB73D9A225A16B44444BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl__ctor_mCF9B439F446FD6896CEDB73D9A225A16B44444BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45123));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45124));
	{
		// private BoxCollider boundsOverride = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45125));
		__this->set_boundsOverride_5((BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA *)NULL);
		// private BoundsCalculationMethod boundsCalculationMethod = BoundsCalculationMethod.RendererOverCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45126));
		__this->set_boundsCalculationMethod_6(0);
		// private BoundsControlActivationType activation = BoundsControlActivationType.ActivateOnStart;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45127));
		__this->set_activation_7(0);
		// private FlattenModeType flattenAxis = FlattenModeType.DoNotFlatten;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45128));
		__this->set_flattenAxis_8(0);
		// private bool uniformScaleOnFlattenedAxis = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45129));
		__this->set_uniformScaleOnFlattenedAxis_9((bool)1);
		// private Vector3 boxPadding = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45130));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45151));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45151));
		__this->set_boxPadding_10(L_0);
		// private bool hideElementsInInspector = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45131));
		__this->set_hideElementsInInspector_18((bool)1);
		// private bool smoothingActive = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45132));
		__this->set_smoothingActive_19((bool)0);
		// private float rotateLerpTime = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45133));
		__this->set_rotateLerpTime_20((0.001f));
		// private float scaleLerpTime = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45134));
		__this->set_scaleLerpTime_21((0.001f));
		// private float translateLerpTime = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45135));
		__this->set_translateLerpTime_22((0.001f));
		// private bool enableConstraints = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45136));
		__this->set_enableConstraints_23((bool)1);
		// private UnityEvent rotateStarted = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45137));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45152));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45152));
		__this->set_rotateStarted_25(L_1);
		// private UnityEvent rotateStopped = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45138));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45153));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_2 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45153));
		__this->set_rotateStopped_26(L_2);
		// private UnityEvent scaleStarted = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45139));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45154));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_3 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45154));
		__this->set_scaleStarted_27(L_3);
		// private UnityEvent scaleStopped = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45140));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45155));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_4 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45155));
		__this->set_scaleStopped_28(L_4);
		// private UnityEvent translateStarted = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45156));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_5 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45156));
		__this->set_translateStarted_29(L_5);
		// private UnityEvent translateStopped = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45142));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45157));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_6 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45157));
		__this->set_translateStopped_30(L_6);
		// private bool wireframeOnly = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45143));
		__this->set_wireframeOnly_38((bool)0);
		// private readonly List<IMixedRealityInputSource> touchingSources = new List<IMixedRealityInputSource>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45144));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45158));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_7 = (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *)il2cpp_codegen_object_new(List_1_t74E48C60E247472C3845D62B1372777193ED6D09_il2cpp_TypeInfo_var);
		List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46(L_7, /*hidden argument*/List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45158));
		__this->set_touchingSources_42(L_7);
		// private Bounds prevBoundsOverride = new Bounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45145));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * L_8 = __this->get_address_of_prevBoundsOverride_55();
		il2cpp_codegen_initobj(L_8, sizeof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 ));
		// private Vector3? initialBoundsOverrideSize = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45146));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_9 = __this->get_address_of_initialBoundsOverrideSize_56();
		il2cpp_codegen_initobj(L_9, sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		// private bool isChildOfTarget = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45147));
		__this->set_isChildOfTarget_57((bool)0);
		// private Vector3[] boundsCorners = new Vector3[8];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45148));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_10 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)8);
		__this->set_boundsCorners_60(L_10);
		// private bool active = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45149));
		__this->set_active_63((bool)0);
		// private readonly List<Transform> childTransforms = new List<Transform>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45150));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45159));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_11 = (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *)il2cpp_codegen_object_new(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91_il2cpp_TypeInfo_var);
		List_1__ctor_m12ABE366DAE5DA1A167EE7F75868147D825B232F(L_11, /*hidden argument*/List_1__ctor_m12ABE366DAE5DA1A167EE7F75868147D825B232F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45159));
		__this->set_childTransforms_64(L_11);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45160));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45160));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoundsControl::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoundsControl__cctor_m20405EADA1552B36A8A26B2E0678896355D448FC (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl__cctor_m20405EADA1552B36A8A26B2E0678896355D448FC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl__cctor_m20405EADA1552B36A8A26B2E0678896355D448FC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45161));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45162));
	{
		// private static readonly List<Vector3> TotalBoundsCorners = new List<Vector3>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45164));
		List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * L_0 = (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 *)il2cpp_codegen_object_new(List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5_il2cpp_TypeInfo_var);
		List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171(L_0, /*hidden argument*/List_1__ctor_m6834ABFBD98D5EFE53A4BD01EA25BC516F24B171_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45164));
		((BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_StaticFields*)il2cpp_codegen_static_fields_for(BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9_il2cpp_TypeInfo_var))->set_TotalBoundsCorners_59(L_0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::.ctor(Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * ___configuration0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___configuration0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay__ctor_mDAC12938CA1EE13BD79B3893AF9C03EDA3DF7972_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45165));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45166));
	{
		// private Vector3 cachedExtents = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45167));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45176));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45176));
		__this->set_cachedExtents_2(L_0);
		// private bool isVisible = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45168));
		__this->set_isVisible_4((bool)1);
		// internal BoxDisplay(BoxDisplayConfiguration configuration)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45169));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45177));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45177));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45170));
		// Debug.Assert(configuration != null, "Can't create BoundsControlBoxDisplay without valid configuration");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45171));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_1 = ___configuration0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45178));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45179));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_2, _stringLiteral1BA68F83FC032ED0525687BB29DC95D13B610291, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45179));
		// config = configuration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45172));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_3 = ___configuration0;
		__this->set_config_1(L_3);
		// config.flattenAxisScaleChanged.AddListener(UpdateDisplayWithCache);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45173));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_4 = __this->get_config_1();
		NullCheck(L_4);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_5 = L_4->get_flattenAxisScaleChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45180));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_6 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_6, __this, (intptr_t)((intptr_t)BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45180));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45181));
		NullCheck(L_5);
		UnityEvent_AddListener_m31973FDDC5BB0B2828AB6EF519EC4FD6563499C9(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45181));
		// config.materialChanged.AddListener(UpdateBoxDisplayMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45174));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_7 = __this->get_config_1();
		NullCheck(L_7);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_8 = L_7->get_materialChanged_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45182));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_9 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_9, __this, (intptr_t)((intptr_t)BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45182));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45183));
		NullCheck(L_8);
		UnityEvent_AddListener_m31973FDDC5BB0B2828AB6EF519EC4FD6563499C9(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45183));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45175));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::Finalize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_Finalize_m0D26ED6FBC068C40E8D10F466B8DE5FE71E3F67D (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_Finalize_m0D26ED6FBC068C40E8D10F466B8DE5FE71E3F67D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_Finalize_m0D26ED6FBC068C40E8D10F466B8DE5FE71E3F67D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45184));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45185));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45186));
	}

IL_0001:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45187));
		// config.flattenAxisScaleChanged.RemoveListener(UpdateDisplayWithCache);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45188));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_0 = __this->get_config_1();
		NullCheck(L_0);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = L_0->get_flattenAxisScaleChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45192));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_2 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_2, __this, (intptr_t)((intptr_t)BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45192));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45193));
		NullCheck(L_1);
		UnityEvent_RemoveListener_m26034605306E868B2E332675FCCBDA37CECBBA19(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45193));
		// config.materialChanged.RemoveListener(UpdateBoxDisplayMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45189));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_3 = __this->get_config_1();
		NullCheck(L_3);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_4 = L_3->get_materialChanged_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45194));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_5 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_5, __this, (intptr_t)((intptr_t)BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45194));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45195));
		NullCheck(L_4);
		UnityEvent_RemoveListener_m26034605306E868B2E332675FCCBDA37CECBBA19(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45195));
		IL2CPP_LEAVE(0x46, FINALLY_003e);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003e;
	}

FINALLY_003e:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45190));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45196));
		Object_Finalize_m4015B7D3A44DE125C5FE34D7276CD4697C06F380(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45196));
		IL2CPP_END_FINALLY(62)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(62)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x46, IL_0046)
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45191));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::AddBoxDisplay(UnityEngine.Transform,UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents1, int32_t ___flattenAxis2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___parent0), (&___currentBoundsExtents1), (&___flattenAxis2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_AddBoxDisplay_m3A3D43C85E4B9A8B927BFF0806C36BD7B57BCA10_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45198));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45199));
		// boxDisplay = GameObject.CreatePrimitive(PrimitiveType.Cube);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45200));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45209));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A(3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45209));
		__this->set_boxDisplay_0(L_0);
		// Object.Destroy(boxDisplay.GetComponent<Collider>());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45201));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45210));
		NullCheck(L_1);
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_2 = GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300(L_1, /*hidden argument*/GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45210));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45211));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45211));
		// boxDisplay.name = "box display";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45202));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45212));
		NullCheck(L_3);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_3, _stringLiteral121543AA0A9B4D4772D4FA290BDE35414C7ECD65, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45212));
		// cachedFlattenMode = flattenAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45203));
		int32_t L_4 = ___flattenAxis2;
		__this->set_cachedFlattenMode_3(L_4);
		// cachedExtents = currentBoundsExtents;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45204));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = ___currentBoundsExtents1;
		__this->set_cachedExtents_2(L_5);
		// Reset(isVisible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45205));
		bool L_6 = __this->get_isVisible_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45213));
		BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA(__this, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45213));
		// boxDisplay.transform.localScale = GetBoxDisplayScale(currentBoundsExtents, flattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45206));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45214));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45214));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = ___currentBoundsExtents1;
		int32_t L_10 = ___flattenAxis2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45215));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F(__this, L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45215));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45216));
		NullCheck(L_8);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_8, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45216));
		// boxDisplay.transform.parent = parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45207));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45217));
		NullCheck(L_12);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45217));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = ___parent0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45218));
		NullCheck(L_13);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45218));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45208));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::GetBoxDisplayScale(UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents0, int32_t ___flattenAxis1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___currentBoundsExtents0), (&___flattenAxis1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45219));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45220));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45221));
		// Vector3 displayScale = VisualUtils.FlattenBounds(currentBoundsExtents, flattenAxis, config.FlattenAxisDisplayScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45222));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___currentBoundsExtents0;
		int32_t L_1 = ___flattenAxis1;
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_2 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45225));
		NullCheck(L_2);
		float L_3 = BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45225));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45226));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = VisualUtils_FlattenBounds_m5E8273365CDEFEE89DD0B02C8D60E364ED15E542(L_0, L_1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45226));
		V_0 = L_4;
		// return 2.0f * displayScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45223));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45227));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839((2.0f), L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45227));
		V_1 = L_6;
		goto IL_0022;
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45224));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateVisibilityInInspector(UnityEngine.HideFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, int32_t ___desiredFlags0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___desiredFlags0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_UpdateVisibilityInInspector_mB2F57BA4FF193A6C92ADDC6020E07E43A6B148E1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45229));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45230));
		// if (boxDisplay != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45231));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45237));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45237));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45232));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45233));
		// boxDisplay.hideFlags = desiredFlags;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45234));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_boxDisplay_0();
		int32_t L_4 = ___desiredFlags0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45238));
		NullCheck(L_3);
		Object_set_hideFlags_mB0B45A19A5871EF407D7B09E0EB76003496BA4F0(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45238));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45235));
	}

IL_0020:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45236));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::SetHighlighted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_SetHighlighted_mB8A490A3B5FE5ED2596317931D1083B1B9857537_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45239));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45240));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45241));
		// if (boxDisplay != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45242));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45248));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45248));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45243));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45244));
		// VisualUtils.ApplyMaterialToAllRenderers(boxDisplay, config.BoxGrabbedMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45245));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_boxDisplay_0();
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_4 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45249));
		NullCheck(L_4);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_5 = BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45249));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45250));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45250));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45246));
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45247));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::Reset(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, bool ___visible0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___visible0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45251));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45252));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45253));
		// isVisible = visible;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45254));
		bool L_0 = ___visible0;
		__this->set_isVisible_4(L_0);
		// if (boxDisplay != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45255));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45267));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45267));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45256));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45257));
		// bool activate = config.BoxMaterial != null && isVisible; // only set active if material is set
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45258));
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_4 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45268));
		NullCheck(L_4);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_5 = BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45268));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45269));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45269));
		if (!L_6)
		{
			goto IL_0034;
		}
	}
	{
		bool L_7 = __this->get_isVisible_4();
		G_B4_0 = ((int32_t)(L_7));
		goto IL_0035;
	}

IL_0034:
	{
		G_B4_0 = 0;
	}

IL_0035:
	{
		V_1 = (bool)G_B4_0;
		// boxDisplay.SetActive(activate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45259));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_boxDisplay_0();
		bool L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45270));
		NullCheck(L_8);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45270));
		// if (activate)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45260));
		bool L_10 = V_1;
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45261));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0061;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45262));
		// VisualUtils.ApplyMaterialToAllRenderers(boxDisplay, config.BoxMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45263));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = __this->get_boxDisplay_0();
		BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * L_13 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45271));
		NullCheck(L_13);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_14 = BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45271));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45272));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6(L_12, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45272));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45264));
	}

IL_0061:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45265));
	}

IL_0062:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45266));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateDisplay(UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boundsExtents0, int32_t ___flattenAxis1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boundsExtents0), (&___flattenAxis1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45273));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45274));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45275));
		// if (boxDisplay != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45276));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45287));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45287));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45277));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0061;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45278));
		// Transform parent = boxDisplay.transform.parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45279));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45288));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45288));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45289));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45289));
		V_1 = L_5;
		// boxDisplay.transform.parent = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45280));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45290));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45290));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45291));
		NullCheck(L_7);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_7, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45291));
		// boxDisplay.transform.localScale = GetBoxDisplayScale(boundsExtents, flattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45281));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45292));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45292));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = ___boundsExtents0;
		int32_t L_11 = ___flattenAxis1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45293));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = BoxDisplay_GetBoxDisplayScale_m2426F1874DBBE350DBFD9480036DB42A38C0907F(__this, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45293));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45294));
		NullCheck(L_9);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_9, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45294));
		// boxDisplay.transform.parent = parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45282));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = __this->get_boxDisplay_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45295));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45295));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45296));
		NullCheck(L_14);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45296));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45283));
	}

IL_0061:
	{
		// cachedExtents = boundsExtents;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45284));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = ___boundsExtents0;
		__this->set_cachedExtents_2(L_16);
		// cachedFlattenMode = flattenAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45285));
		int32_t L_17 = ___flattenAxis1;
		__this->set_cachedFlattenMode_3(L_17);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45286));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateDisplayWithCache()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_UpdateDisplayWithCache_mF6E164D6E4CC96D55E67EE79633EBFAED0B8273C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45297));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45298));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45299));
		// UpdateDisplay(cachedExtents, cachedFlattenMode);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45300));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_cachedExtents_2();
		int32_t L_1 = __this->get_cachedFlattenMode_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45302));
		BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45302));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45301));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateFlattenAxis(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, int32_t ___flattenAxis0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___flattenAxis0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_UpdateFlattenAxis_m2C371040F63C02250720156E7AF19241614F2325_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45303));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45304));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45305));
		// cachedFlattenMode = flattenAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45306));
		int32_t L_0 = ___flattenAxis0;
		__this->set_cachedFlattenMode_3(L_0);
		// UpdateDisplay(cachedExtents, flattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45307));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = __this->get_cachedExtents_2();
		int32_t L_2 = ___flattenAxis0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45309));
		BoxDisplay_UpdateDisplay_m1C1AE7E47531E6AE8C0C0266EE63D7E728B1931C(__this, L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45309));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45308));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplay::UpdateBoxDisplayMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271 (BoxDisplay_t3999DF2864105A3B7C10779F69D1519A61295537 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplay_UpdateBoxDisplayMaterial_mC9FF8F0CEB8D6B810E7651753811A08A299E9271_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45310));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45311));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45312));
		// Reset(isVisible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45313));
		bool L_0 = __this->get_isVisible_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45315));
		BoxDisplay_Reset_m9E2CBEA538E9EEFCF4B8D5A4F61B83ADE5D4B9CA(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45315));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45314));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::get_BoxMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration_get_BoxMaterial_m6D489FBFA559C9D816060BC5F7297507D6670C7D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45316));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45317));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45318));
		// get { return boxMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45319));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_boxMaterial_4();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return boxMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45320));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::set_BoxMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplayConfiguration_set_BoxMaterial_mBE4D38C9DBEE04F56765B45C53C0C906A4C2B360 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration_set_BoxMaterial_mBE4D38C9DBEE04F56765B45C53C0C906A4C2B360_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration_set_BoxMaterial_mBE4D38C9DBEE04F56765B45C53C0C906A4C2B360_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45321));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45322));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45323));
		// if (boxMaterial != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45324));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_boxMaterial_4();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45331));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45331));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45325));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0026;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45326));
		// boxMaterial = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45327));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_4 = ___value0;
		__this->set_boxMaterial_4(L_4);
		// materialChanged.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45328));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_5 = __this->get_materialChanged_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45332));
		NullCheck(L_5);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45332));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45329));
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45330));
		return;
	}
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::get_BoxGrabbedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration_get_BoxGrabbedMaterial_m6C87BC62CAB34A7A20A18F8BA612F4B159B35881_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45333));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45334));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45335));
		// get { return boxGrabbedMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45336));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_boxGrabbedMaterial_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return boxGrabbedMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45337));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::set_BoxGrabbedMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplayConfiguration_set_BoxGrabbedMaterial_mBEAF7A4FF3ACC4B91E0EAFA922C0DBFD874D9186 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration_set_BoxGrabbedMaterial_mBEAF7A4FF3ACC4B91E0EAFA922C0DBFD874D9186_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration_set_BoxGrabbedMaterial_mBEAF7A4FF3ACC4B91E0EAFA922C0DBFD874D9186_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45339));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45340));
		// if (boxGrabbedMaterial != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45341));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_boxGrabbedMaterial_5();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45348));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45348));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45342));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0026;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45343));
		// boxGrabbedMaterial = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45344));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_4 = ___value0;
		__this->set_boxGrabbedMaterial_5(L_4);
		// materialChanged.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45345));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_5 = __this->get_materialChanged_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45349));
		NullCheck(L_5);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45349));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45346));
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45347));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::get_FlattenAxisDisplayScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39 (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration_get_FlattenAxisDisplayScale_mAD74356E9F2EF69E117B756C5163D22FBED0CD39_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45350));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45351));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45352));
		// get { return flattenAxisDisplayScale; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45353));
		float L_0 = __this->get_flattenAxisDisplayScale_6();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return flattenAxisDisplayScale; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45354));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::set_FlattenAxisDisplayScale(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplayConfiguration_set_FlattenAxisDisplayScale_m4986D548327F2791215C5EC33DA60D1D3715585C (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration_set_FlattenAxisDisplayScale_m4986D548327F2791215C5EC33DA60D1D3715585C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration_set_FlattenAxisDisplayScale_m4986D548327F2791215C5EC33DA60D1D3715585C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45355));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45356));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45357));
		// if (flattenAxisDisplayScale != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45358));
		float L_0 = __this->get_flattenAxisDisplayScale_6();
		float L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((float)L_0) == ((float)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45359));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45360));
		// flattenAxisDisplayScale = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45361));
		float L_3 = ___value0;
		__this->set_flattenAxisDisplayScale_6(L_3);
		// flattenAxisScaleChanged.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45362));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_4 = __this->get_flattenAxisScaleChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45365));
		NullCheck(L_4);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45365));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45363));
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45364));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.BoxDisplayConfiguration::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxDisplayConfiguration__ctor_mF04B7ADA8EB25F5E76B0E7E10F25FD06B557261E (BoxDisplayConfiguration_t2370D532D7E59C337C935C865F85C16FF7603797 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoxDisplayConfiguration__ctor_mF04B7ADA8EB25F5E76B0E7E10F25FD06B557261E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoxDisplayConfiguration__ctor_mF04B7ADA8EB25F5E76B0E7E10F25FD06B557261E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45366));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45367));
	{
		// private Material boxMaterial = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45368));
		__this->set_boxMaterial_4((Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)NULL);
		// private Material boxGrabbedMaterial = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45369));
		__this->set_boxGrabbedMaterial_5((Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)NULL);
		// private float flattenAxisDisplayScale = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45370));
		__this->set_flattenAxisDisplayScale_6((0.0f));
		// internal UnityEvent materialChanged = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45371));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45373));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45373));
		__this->set_materialChanged_7(L_0);
		// internal UnityEvent flattenAxisScaleChanged = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45372));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45374));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45374));
		__this->set_flattenAxisScaleChanged_8(L_1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45375));
		ScriptableObject__ctor_m6E2B3821A4A361556FC12E9B1C71E1D5DC002C5B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45375));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45779));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45780));
	{
		// internal protected List<Transform> handles = new List<Transform>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45788));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = (List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *)il2cpp_codegen_object_new(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91_il2cpp_TypeInfo_var);
		List_1__ctor_m12ABE366DAE5DA1A167EE7F75868147D825B232F(L_0, /*hidden argument*/List_1__ctor_m12ABE366DAE5DA1A167EE7F75868147D825B232F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45788));
		__this->set_handles_1(L_0);
		// private Transform highlightedHandle = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45782));
		__this->set_highlightedHandle_2((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// protected ProximityObjectsChangedEvent objectsChangedEvent = new ProximityObjectsChangedEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45789));
		ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * L_1 = (ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 *)il2cpp_codegen_object_new(ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9_il2cpp_TypeInfo_var);
		ProximityObjectsChangedEvent__ctor_mCC462938E71BAF5CE9B863C24A7B86D481EE53D5(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45789));
		__this->set_objectsChangedEvent_3(L_1);
		// private bool isActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45784));
		__this->set_isActive_4((bool)1);
		// internal HandlesBase() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45785));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45790));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45790));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45786));
		// internal HandlesBase() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45787));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::HandlesChanged(Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEventType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, int32_t ___changedType0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___changedType0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45791));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45792));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45793));
		// switch (changedType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45794));
		int32_t L_0 = ___changedType0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45795));
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_002f;
			}
			case 1:
			{
				goto IL_0038;
			}
			case 2:
			{
				goto IL_0041;
			}
			case 3:
			{
				goto IL_004a;
			}
			case 4:
			{
				goto IL_004a;
			}
			case 5:
			{
				goto IL_0053;
			}
			case 6:
			{
				goto IL_005c;
			}
			case 7:
			{
				goto IL_0066;
			}
			case 8:
			{
				goto IL_0070;
			}
		}
	}
	{
		goto IL_0079;
	}

IL_002f:
	{
		// UpdateBaseMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45796));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45813));
		HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45813));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45797));
		goto IL_0079;
	}

IL_0038:
	{
		// UpdateGrabbedMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45798));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45814));
		HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45814));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45799));
		goto IL_0079;
	}

IL_0041:
	{
		// RecreateVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45815));
		VirtActionInvoker0::Invoke(13 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::RecreateVisuals() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45815));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45801));
		goto IL_0079;
	}

IL_004a:
	{
		// UpdateColliderBounds();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45802));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45816));
		HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45816));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45803));
		goto IL_0079;
	}

IL_0053:
	{
		// UpdateDrawTether();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45804));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45817));
		HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45817));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45805));
		goto IL_0079;
	}

IL_005c:
	{
		// HandlesIgnoreConfigCollider(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45806));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45818));
		HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45818));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45807));
		goto IL_0079;
	}

IL_0066:
	{
		// HandlesIgnoreConfigCollider(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45808));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45819));
		HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45819));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45809));
		goto IL_0079;
	}

IL_0070:
	{
		// ResetHandles();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45810));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45820));
		HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45820));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45811));
		goto IL_0079;
	}

IL_0079:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45812));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::HandlesIgnoreConfigCollider(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, bool ___ignore0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___ignore0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_HandlesIgnoreConfigCollider_mBB642454BE7BC37EC65ACD4441906FE4E4E0D2C2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45821));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45822));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45823));
		// VisualUtils.HandleIgnoreCollider(BaseConfig.HandlesIgnoreCollider, handles, ignore);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45824));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45826));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_0 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45826));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45827));
		NullCheck(L_0);
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45827));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_2 = __this->get_handles_1();
		bool L_3 = ___ignore0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45828));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_HandleIgnoreCollider_m2648FB60E53140B183CD97FEE4C44E86E103BFF9(L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45828));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45825));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateDrawTether()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_UpdateDrawTether_m41F086E64F1FF80D77C8915932565E65937C3F46_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45829));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45830));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45831));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45832));
		// foreach (var handle in handles)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45833));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45843));
		NullCheck(L_0);
		Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  L_1 = List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1(L_0, /*hidden argument*/List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45843));
		V_0 = L_1;
	}

IL_000e:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45834));
			goto IL_0037;
		}

IL_0010:
		{
			// foreach (var handle in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45835));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45844));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_inline((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45844));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45836));
			// var grabbable = handle.gameObject.EnsureComponent<NearInteractionGrabbable>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45837));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45845));
			NullCheck(L_3);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45845));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45846));
			NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_5 = ComponentExtensions_EnsureComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_mBDD3C97C8134419B566EE49FB51F8F7032C58092(L_4, /*hidden argument*/ComponentExtensions_EnsureComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_mBDD3C97C8134419B566EE49FB51F8F7032C58092_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45846));
			V_2 = L_5;
			// grabbable.ShowTetherWhenManipulating = BaseConfig.DrawTetherWhenManipulating;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45838));
			NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_6 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45847));
			HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_7 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45847));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45848));
			NullCheck(L_7);
			bool L_8 = HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_inline(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45848));
			NullCheck(L_6);
			L_6->set_ShowTetherWhenManipulating_4(L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45839));
		}

IL_0037:
		{
			// foreach (var handle in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45840));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45849));
			bool L_9 = Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45849));
			if (L_9)
			{
				goto IL_0010;
			}
		}

IL_0040:
		{
			IL2CPP_LEAVE(0x51, FINALLY_0042);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0042;
	}

FINALLY_0042:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45841));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45850));
		Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45850));
		IL2CPP_END_FINALLY(66)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(66)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x51, IL_0051)
	}

IL_0051:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45842));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateColliderBounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_UpdateColliderBounds_m52406E414FFE768C4885EF46DCC6DB9DABA82A20_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45851));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45852));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45853));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45854));
		// foreach (var handle in handles)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45855));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45865));
		NullCheck(L_0);
		Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  L_1 = List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1(L_0, /*hidden argument*/List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45865));
		V_0 = L_1;
	}

IL_000e:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45856));
			goto IL_003b;
		}

IL_0010:
		{
			// foreach (var handle in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45857));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45866));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_inline((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45866));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45858));
			// var handleBounds = VisualUtils.GetMaxBounds(GetVisual(handle).gameObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45859));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45867));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = VirtFuncInvoker1< Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * >::Invoke(16 /* UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetVisual(UnityEngine.Transform) */, __this, L_3);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45867));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45868));
			NullCheck(L_4);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45868));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45869));
			IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
			Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_6 = VisualUtils_GetMaxBounds_mDB7C526F8CDD40196B0F8450B16A24A095DD7FA6(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45869));
			V_2 = L_6;
			// UpdateColliderBounds(handle, handleBounds.size);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45860));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45870));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45870));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45871));
			VirtActionInvoker2< Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(12 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateColliderBounds(UnityEngine.Transform,UnityEngine.Vector3) */, __this, L_7, L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45871));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45861));
		}

IL_003b:
		{
			// foreach (var handle in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45862));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45872));
			bool L_9 = Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45872));
			if (L_9)
			{
				goto IL_0010;
			}
		}

IL_0044:
		{
			IL2CPP_LEAVE(0x55, FINALLY_0046);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0046;
	}

FINALLY_0046:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45863));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45873));
		Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45873));
		IL2CPP_END_FINALLY(70)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(70)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x55, IL_0055)
	}

IL_0055:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45864));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::ResetHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45875));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45876));
		// if (handles != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45877));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45878));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0082;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45879));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45880));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45881));
		goto IL_006d;
	}

IL_0013:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45882));
		// bool isVisible = IsVisible(handles[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45883));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_2 = __this->get_handles_1();
		int32_t L_3 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45897));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_2, L_3, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45897));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45898));
		bool L_5 = VirtFuncInvoker1< bool, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * >::Invoke(14 /* System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::IsVisible(UnityEngine.Transform) */, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45898));
		V_2 = L_5;
		// handles[i].gameObject.SetActive(isVisible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45884));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_6 = __this->get_handles_1();
		int32_t L_7 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45899));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_6, L_7, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45899));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45900));
		NullCheck(L_8);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45900));
		bool L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45901));
		NullCheck(L_9);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45901));
		// if (isVisible)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45885));
		bool L_11 = V_2;
		V_3 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45886));
		bool L_12 = V_3;
		if (!L_12)
		{
			goto IL_0068;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45887));
		// VisualUtils.ApplyMaterialToAllRenderers(handles[i].gameObject, BaseConfig.HandleMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45888));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_13 = __this->get_handles_1();
		int32_t L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45902));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_13, L_14, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45903));
		NullCheck(L_15);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45904));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_17 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45904));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45905));
		NullCheck(L_17);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_18 = HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45905));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45906));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6(L_16, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45906));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45889));
	}

IL_0068:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45890));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45891));
		int32_t L_19 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1));
	}

IL_006d:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45892));
		int32_t L_20 = V_1;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_21 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45907));
		NullCheck(L_21);
		int32_t L_22 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_21, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45907));
		V_4 = (bool)((((int32_t)L_20) < ((int32_t)L_22))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45893));
		bool L_23 = V_4;
		if (L_23)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45894));
	}

IL_0082:
	{
		// highlightedHandle = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45895));
		__this->set_highlightedHandle_2((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45896));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.ProximityObjectsChangedEvent Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::Microsoft.MixedReality.Toolkit.UI.BoundsControl.IProximityEffectObjectProvider.get_ProximityObjectsChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * HandlesBase_Microsoft_MixedReality_Toolkit_UI_BoundsControl_IProximityEffectObjectProvider_get_ProximityObjectsChanged_m15D1CF7E65D9B50F9768987D3482C13007FE9010 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_Microsoft_MixedReality_Toolkit_UI_BoundsControl_IProximityEffectObjectProvider_get_ProximityObjectsChanged_m15D1CF7E65D9B50F9768987D3482C13007FE9010_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_Microsoft_MixedReality_Toolkit_UI_BoundsControl_IProximityEffectObjectProvider_get_ProximityObjectsChanged_m15D1CF7E65D9B50F9768987D3482C13007FE9010_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45908));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45909));
	{
		// ProximityObjectsChangedEvent IProximityEffectObjectProvider.ProximityObjectsChanged => objectsChangedEvent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45910));
		ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * L_0 = __this->get_objectsChangedEvent_3();
		return L_0;
	}
}
// System.Collections.Generic.IReadOnlyList`1<UnityEngine.Transform> Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_Handles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* HandlesBase_get_Handles_m8B4C389F265A8F9C059A1CAAA78E1110D562A961 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_get_Handles_m8B4C389F265A8F9C059A1CAAA78E1110D562A961_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_get_Handles_m8B4C389F265A8F9C059A1CAAA78E1110D562A961_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45911));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45912));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45913));
		// get { return handles; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45914));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		V_0 = (RuntimeObject*)L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return handles; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45915));
		RuntimeObject* L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::SetHighlighted(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handleToHighlight0, RuntimeObject* ___associatedPointer1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handleToHighlight0), (&___associatedPointer1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45917));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45918));
		// if (handles != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45919));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45920));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0089;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45921));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45922));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45923));
		goto IL_0076;
	}

IL_0013:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45924));
		// if (handles[i] != handleToHighlight)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45925));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_2 = __this->get_handles_1();
		int32_t L_3 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45940));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_2, L_3, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45940));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = ___handleToHighlight0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45941));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45941));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45926));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45927));
		// handles[i].gameObject.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45928));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_8 = __this->get_handles_1();
		int32_t L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45942));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_8, L_9, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45942));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45943));
		NullCheck(L_10);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45943));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45944));
		NullCheck(L_11);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_11, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45944));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45929));
		goto IL_0071;
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45930));
		// VisualUtils.ApplyMaterialToAllRenderers(handles[i].gameObject, BaseConfig.HandleGrabbedMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45931));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_12 = __this->get_handles_1();
		int32_t L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45945));
		NullCheck(L_12);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_12, L_13, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45945));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45946));
		NullCheck(L_14);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45946));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45947));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_16 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45947));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45948));
		NullCheck(L_16);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_17 = HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45948));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45949));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6(L_15, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45949));
		// highlightedHandle = handleToHighlight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45932));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = ___handleToHighlight0;
		__this->set_highlightedHandle_2(L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45933));
	}

IL_0071:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45934));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45935));
		int32_t L_19 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1));
	}

IL_0076:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45936));
		int32_t L_20 = V_1;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_21 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45950));
		NullCheck(L_21);
		int32_t L_22 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_21, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45950));
		V_3 = (bool)((((int32_t)L_20) < ((int32_t)L_22))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45937));
		bool L_23 = V_3;
		if (L_23)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45938));
	}

IL_0089:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45939));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::DestroyHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_DestroyHandles_m0B623910ECB4E035D8FEAF06FC60F1D7F2710F3E_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45951));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45952));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45953));
		// if (handles != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45954));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45955));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_005b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45956));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45957));
		// foreach (Transform transform in handles)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45958));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_2 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45969));
		NullCheck(L_2);
		Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  L_3 = List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1(L_2, /*hidden argument*/List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45969));
		V_1 = L_3;
	}

IL_001c:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45959));
			goto IL_0034;
		}

IL_001e:
		{
			// foreach (Transform transform in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45960));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45970));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_inline((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_1), /*hidden argument*/Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45970));
			V_2 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45961));
			// GameObject.Destroy(transform.gameObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45962));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45971));
			NullCheck(L_5);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45971));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45972));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45972));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45963));
		}

IL_0034:
		{
			// foreach (Transform transform in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45964));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45973));
			bool L_7 = Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_1), /*hidden argument*/Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45973));
			if (L_7)
			{
				goto IL_001e;
			}
		}

IL_003d:
		{
			IL2CPP_LEAVE(0x4E, FINALLY_003f);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003f;
	}

FINALLY_003f:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45965));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45974));
		Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_1), /*hidden argument*/Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45974));
		IL2CPP_END_FINALLY(63)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(63)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x4E, IL_004e)
	}

IL_004e:
	{
		// handles.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45966));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_8 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45975));
		NullCheck(L_8);
		List_1_Clear_m46592EB68B43BB4C540DEE0D6D05FB29C7DCB10F(L_8, /*hidden argument*/List_1_Clear_m46592EB68B43BB4C540DEE0D6D05FB29C7DCB10F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45975));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45967));
	}

IL_005b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45968));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::IsHandleType(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_IsHandleType_mD1D8E3A2B4A07C277AE9CFDC81475B4A0636AF91_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45976));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45977));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45978));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45979));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45980));
		goto IL_0026;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45981));
		// if (handle == handles[i])
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45982));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___handle0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_1 = __this->get_handles_1();
		int32_t L_2 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45992));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_1, L_2, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45992));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45993));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45993));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45983));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45984));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45985));
		V_2 = (bool)1;
		goto IL_003c;
	}

IL_0021:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45986));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45987));
		int32_t L_6 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_6, (int32_t)1));
	}

IL_0026:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45988));
		int32_t L_7 = V_0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_8 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45994));
		NullCheck(L_8);
		int32_t L_9 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_8, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45994));
		V_3 = (bool)((((int32_t)L_7) < ((int32_t)L_9))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45989));
		bool L_10 = V_3;
		if (L_10)
		{
			goto IL_0005;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45990));
		V_2 = (bool)0;
		goto IL_003c;
	}

IL_003c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45991));
		bool L_11 = V_2;
		return L_11;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.HandleType Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetHandleType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t HandlesBase_GetHandleType_m8177C27E6AB9774155877C60DC43412864470F44 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_GetHandleType_m8177C27E6AB9774155877C60DC43412864470F44_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_GetHandleType_m8177C27E6AB9774155877C60DC43412864470F44_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45995));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45996));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45997));
		// return HandleType.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45998));
		V_0 = 0;
		goto IL_0005;
	}

IL_0005:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45999));
		int32_t L_0 = V_0;
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateBaseMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_UpdateBaseMaterial_mF1E36A08372BF78ADA1F27975F34ABD919C47F54_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46000));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46001));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46002));
		// if (handles != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46003));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = __this->get_handles_1();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46004));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_006b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46005));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46006));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46007));
		goto IL_0058;
	}

IL_0013:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46008));
		// if (handles[i] != highlightedHandle)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46009));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_2 = __this->get_handles_1();
		int32_t L_3 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46020));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_2, L_3, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46020));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = __this->get_highlightedHandle_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46021));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46021));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46010));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0053;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46011));
		// VisualUtils.ApplyMaterialToAllRenderers(handles[i].gameObject, BaseConfig.HandleMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46012));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_8 = __this->get_handles_1();
		int32_t L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46022));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_8, L_9, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46022));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46023));
		NullCheck(L_10);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46023));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46024));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_12 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46024));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46025));
		NullCheck(L_12);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_13 = HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46025));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46026));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6(L_11, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46026));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46013));
	}

IL_0053:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46014));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46015));
		int32_t L_14 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_14, (int32_t)1));
	}

IL_0058:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46016));
		int32_t L_15 = V_1;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_16 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46027));
		NullCheck(L_16);
		int32_t L_17 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_16, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46027));
		V_3 = (bool)((((int32_t)L_15) < ((int32_t)L_17))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46017));
		bool L_18 = V_3;
		if (L_18)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46018));
	}

IL_006b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46019));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateGrabbedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_UpdateGrabbedMaterial_mF7DBDA3310B58B6C32FAD197129DF1AC26CC227F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46028));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46029));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46030));
		// if (highlightedHandle)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46031));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_highlightedHandle_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46037));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46037));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46032));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46033));
		// SetHighlighted(highlightedHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46034));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_highlightedHandle_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46038));
		HandlesBase_SetHighlighted_mC47F9770C11EBCEC07D3B1D69E3B7A33654071FA(__this, L_3, (RuntimeObject*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46038));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46035));
	}

IL_0020:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46036));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_IsActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46039));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46040));
	{
		// get => isActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46041));
		bool L_0 = __this->get_isActive_4();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::set_IsActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_set_IsActive_mA754D0FC3C080A45FF1E08A29E5F3A1DF6A095C6 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_set_IsActive_mA754D0FC3C080A45FF1E08A29E5F3A1DF6A095C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_set_IsActive_mA754D0FC3C080A45FF1E08A29E5F3A1DF6A095C6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46042));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46043));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46044));
		// if (isActive != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46045));
		bool L_0 = __this->get_isActive_4();
		bool L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46046));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46047));
		// isActive = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46048));
		bool L_3 = ___value0;
		__this->set_isActive_4(L_3);
		// ResetHandles();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46049));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46052));
		HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46052));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46050));
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46051));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::ForEachProximityObject(System.Action`1<UnityEngine.Transform>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBase_ForEachProximityObject_mD6BCF7B9B27B4F5DEE95438FC5B36ACD0CFC030B (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, Action_1_t944B085F4D5DEBCA83E9053D0BFC60EF26FA1C6A * ___action0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_ForEachProximityObject_mD6BCF7B9B27B4F5DEE95438FC5B36ACD0CFC030B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___action0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_ForEachProximityObject_mD6BCF7B9B27B4F5DEE95438FC5B36ACD0CFC030B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46053));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46054));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46055));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46056));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46057));
		goto IL_0024;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46058));
		// action(GetVisual(handles[i]));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46059));
		Action_1_t944B085F4D5DEBCA83E9053D0BFC60EF26FA1C6A * L_0 = ___action0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_1 = __this->get_handles_1();
		int32_t L_2 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46065));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_1, L_2, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46066));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = VirtFuncInvoker1< Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * >::Invoke(16 /* UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetVisual(UnityEngine.Transform) */, __this, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46067));
		NullCheck(L_0);
		Action_1_Invoke_m4535D9BC632DA737CDA40F7F9FC945DBF8931BD3(L_0, L_4, /*hidden argument*/Action_1_Invoke_m4535D9BC632DA737CDA40F7F9FC945DBF8931BD3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46067));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46060));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46061));
		int32_t L_5 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_5, (int32_t)1));
	}

IL_0024:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46062));
		int32_t L_6 = V_0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_7 = __this->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46068));
		NullCheck(L_7);
		int32_t L_8 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_7, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46068));
		V_1 = (bool)((((int32_t)L_6) < ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46063));
		bool L_9 = V_1;
		if (L_9)
		{
			goto IL_0005;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46064));
		return;
	}
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetBaseMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * HandlesBase_GetBaseMaterial_m88B97B30E5AD73ACD6DBCC53020F2981DA6176BE (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_GetBaseMaterial_m88B97B30E5AD73ACD6DBCC53020F2981DA6176BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_GetBaseMaterial_m88B97B30E5AD73ACD6DBCC53020F2981DA6176BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46069));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46070));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46071));
		// return BaseConfig.HandleMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46072));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46074));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_0 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46075));
		NullCheck(L_0);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46075));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46073));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_2 = V_0;
		return L_2;
	}
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetHighlightedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * HandlesBase_GetHighlightedMaterial_m8BF838A18D0898D24EA9D4B82CB00B732EF2984B (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_GetHighlightedMaterial_m8BF838A18D0898D24EA9D4B82CB00B732EF2984B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_GetHighlightedMaterial_m8BF838A18D0898D24EA9D4B82CB00B732EF2984B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46076));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46077));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46078));
		// return BaseConfig.HandleGrabbedMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46079));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46081));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_0 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46082));
		NullCheck(L_0);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46082));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46080));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_2 = V_0;
		return L_2;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetObjectSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandlesBase_GetObjectSize_m421D0908595A7038DE63168CE5A1EA63E9B24483 (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_GetObjectSize_m421D0908595A7038DE63168CE5A1EA63E9B24483_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_GetObjectSize_m421D0908595A7038DE63168CE5A1EA63E9B24483_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46083));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46084));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46085));
		// return BaseConfig.HandleSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46086));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46088));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_0 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46089));
		NullCheck(L_0);
		float L_1 = HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46089));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46087));
		float L_2 = V_0;
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandleMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45376));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45377));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45378));
		// get { return handleMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45379));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_handleMaterial_4();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return handleMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45380));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_HandleMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_HandleMaterial_mD9C19602BD432DDF4A4072A611633FAEA4DA8EF8 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_HandleMaterial_mD9C19602BD432DDF4A4072A611633FAEA4DA8EF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_HandleMaterial_mD9C19602BD432DDF4A4072A611633FAEA4DA8EF8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45381));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45382));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45383));
		// if (handleMaterial != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45384));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_handleMaterial_4();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45392));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45392));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45385));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45386));
		// handleMaterial = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45387));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_4 = ___value0;
		__this->set_handleMaterial_4(L_4);
		// TrySetDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45388));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45393));
		HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45393));
		// handlesChanged.Invoke(HandlesChangedEventType.Material);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45389));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_5 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45394));
		NullCheck(L_5);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_5, 0, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45394));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45390));
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45391));
		return;
	}
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandleGrabbedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_HandleGrabbedMaterial_m8101A0D2BA8D5CF6512E54AF49A2A3EAC36F64D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45395));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45396));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45397));
		// get { return handleGrabbedMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45398));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_handleGrabbedMaterial_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return handleGrabbedMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45399));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_HandleGrabbedMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_HandleGrabbedMaterial_mFAE932021639B0A3773967D91218369433F8F598 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_HandleGrabbedMaterial_mFAE932021639B0A3773967D91218369433F8F598_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_HandleGrabbedMaterial_mFAE932021639B0A3773967D91218369433F8F598_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45400));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45401));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45402));
		// if (handleGrabbedMaterial != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45403));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_handleGrabbedMaterial_5();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45411));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45411));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45404));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45405));
		// handleGrabbedMaterial = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45406));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_4 = ___value0;
		__this->set_handleGrabbedMaterial_5(L_4);
		// TrySetDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45407));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45412));
		HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45412));
		// handlesChanged.Invoke(HandlesChangedEventType.MaterialGrabbed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45408));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_5 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45413));
		NullCheck(L_5);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_5, 1, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45413));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45409));
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45410));
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandlePrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45414));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45415));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45416));
		// get { return handlePrefab; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45417));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_handlePrefab_6();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return handlePrefab; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45418));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_HandlePrefab(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_HandlePrefab_m0EF97AE02589E8CA042A94CA02C110CEE0D84826 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_HandlePrefab_m0EF97AE02589E8CA042A94CA02C110CEE0D84826_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_HandlePrefab_m0EF97AE02589E8CA042A94CA02C110CEE0D84826_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45419));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45420));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45421));
		// if (handlePrefab != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45422));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_handlePrefab_6();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45429));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45429));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45423));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45424));
		// handlePrefab = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45425));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = ___value0;
		__this->set_handlePrefab_6(L_4);
		// handlesChanged.Invoke(HandlesChangedEventType.Prefab);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45426));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_5 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45430));
		NullCheck(L_5);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_5, 2, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45430));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45427));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45428));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandleSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45431));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45432));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45433));
		// get { return handleSize; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45434));
		float L_0 = __this->get_handleSize_7();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return handleSize; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45435));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_HandleSize(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_HandleSize_m5E799B866A78631FCFD2858A35DB409241772A80 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_HandleSize_m5E799B866A78631FCFD2858A35DB409241772A80_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_HandleSize_m5E799B866A78631FCFD2858A35DB409241772A80_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45436));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45437));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45438));
		// if (handleSize != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45439));
		float L_0 = __this->get_handleSize_7();
		float L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((float)L_0) == ((float)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45440));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45441));
		// handleSize = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45442));
		float L_3 = ___value0;
		__this->set_handleSize_7(L_3);
		// handlesChanged.Invoke(HandlesChangedEventType.ColliderSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45443));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_4 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45446));
		NullCheck(L_4);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_4, 3, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45446));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45444));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45445));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_ColliderPadding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45447));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45448));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45449));
		// get { return colliderPadding; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45450));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_colliderPadding_8();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return colliderPadding; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45451));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_ColliderPadding(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_ColliderPadding_m4AACE1DBDDD3AE3C65E0CCCB830E6CEE04AC53CA (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_ColliderPadding_m4AACE1DBDDD3AE3C65E0CCCB830E6CEE04AC53CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_ColliderPadding_m4AACE1DBDDD3AE3C65E0CCCB830E6CEE04AC53CA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45452));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45453));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45454));
		// if (colliderPadding != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45455));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_colliderPadding_8();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45462));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		bool L_2 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45462));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45456));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45457));
		// colliderPadding = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45458));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = ___value0;
		__this->set_colliderPadding_8(L_4);
		// handlesChanged.Invoke(HandlesChangedEventType.ColliderPadding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45459));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_5 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45463));
		NullCheck(L_5);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_5, 4, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45463));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45460));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45461));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_DrawTetherWhenManipulating()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45464));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45465));
	{
		// get => drawTetherWhenManipulating;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45466));
		bool L_0 = __this->get_drawTetherWhenManipulating_9();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_DrawTetherWhenManipulating(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_DrawTetherWhenManipulating_m5DCE89DF3F7394D545845C1168B2F8BCBB7D30BC (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_DrawTetherWhenManipulating_m5DCE89DF3F7394D545845C1168B2F8BCBB7D30BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_DrawTetherWhenManipulating_m5DCE89DF3F7394D545845C1168B2F8BCBB7D30BC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45467));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45468));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45469));
		// if (value != drawTetherWhenManipulating)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45470));
		bool L_0 = ___value0;
		bool L_1 = __this->get_drawTetherWhenManipulating_9();
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45471));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45472));
		// drawTetherWhenManipulating = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45473));
		bool L_3 = ___value0;
		__this->set_drawTetherWhenManipulating_9(L_3);
		// handlesChanged.Invoke(HandlesChangedEventType.ManipulationTether);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45474));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_4 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45477));
		NullCheck(L_4);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_4, 5, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45477));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45475));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45476));
		return;
	}
}
// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::get_HandlesIgnoreCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45478));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45479));
	{
		// get => handlesIgnoreCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45480));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = __this->get_handlesIgnoreCollider_10();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::set_HandlesIgnoreCollider(UnityEngine.Collider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_set_HandlesIgnoreCollider_mB9FFE47533900758C50B50376FC10D68F1711CE9 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_set_HandlesIgnoreCollider_mB9FFE47533900758C50B50376FC10D68F1711CE9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_set_HandlesIgnoreCollider_mB9FFE47533900758C50B50376FC10D68F1711CE9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45481));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45482));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45483));
		// if (value != handlesIgnoreCollider)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45484));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = ___value0;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = __this->get_handlesIgnoreCollider_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45492));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45492));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45485));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45486));
		// handlesChanged.Invoke(HandlesChangedEventType.IgnoreColliderRemove);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45487));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_4 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45493));
		NullCheck(L_4);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_4, 6, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45493));
		// handlesIgnoreCollider = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45488));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_5 = ___value0;
		__this->set_handlesIgnoreCollider_10(L_5);
		// handlesChanged.Invoke(HandlesChangedEventType.IgnoreColliderAdd);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45489));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_6 = __this->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45494));
		NullCheck(L_6);
		UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133(L_6, 7, /*hidden argument*/UnityEvent_1_Invoke_mBBB8677CB816C6558866B97FDA6F333CD2D5A133_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45494));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45490));
	}

IL_0034:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45491));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_Awake_mBA7EA6669CB7BC58E84EEB02364C30E66D8A2E35 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_Awake_mBA7EA6669CB7BC58E84EEB02364C30E66D8A2E35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_Awake_mBA7EA6669CB7BC58E84EEB02364C30E66D8A2E35_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45495));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45496));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45497));
		// TrySetDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45498));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45500));
		HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45500));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45499));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::TrySetDefaultMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822 (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_TrySetDefaultMaterial_mFF37D8DF557B419674F389273AF3D28F39E63822_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45501));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45502));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45503));
		// if (handleMaterial == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45504));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_handleMaterial_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45515));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45515));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45505));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45506));
		// handleMaterial = VisualUtils.CreateDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45507));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45516));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_3 = VisualUtils_CreateDefaultMaterial_m3E507A8BCEA5476E96DC7C9CCE1A3F9918CD5D92(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45516));
		__this->set_handleMaterial_4(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45508));
	}

IL_001e:
	{
		// if (handleGrabbedMaterial == null && handleGrabbedMaterial != handleMaterial)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45509));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_4 = __this->get_handleGrabbedMaterial_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45517));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45517));
		if (!L_5)
		{
			goto IL_003f;
		}
	}
	{
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_6 = __this->get_handleGrabbedMaterial_5();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_7 = __this->get_handleMaterial_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45518));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_8 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45518));
		G_B5_0 = ((int32_t)(L_8));
		goto IL_0040;
	}

IL_003f:
	{
		G_B5_0 = 0;
	}

IL_0040:
	{
		V_1 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45510));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45511));
		// handleGrabbedMaterial = VisualUtils.CreateDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45512));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45519));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_10 = VisualUtils_CreateDefaultMaterial_m3E507A8BCEA5476E96DC7C9CCE1A3F9918CD5D92(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45519));
		__this->set_handleGrabbedMaterial_5(L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45513));
	}

IL_0051:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45514));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesBaseConfiguration__ctor_mFD47044AD031736BC6A57C1A4818AD34A8CD3B6C (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration__ctor_mFD47044AD031736BC6A57C1A4818AD34A8CD3B6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration__ctor_mFD47044AD031736BC6A57C1A4818AD34A8CD3B6C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45520));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45521));
	{
		// GameObject handlePrefab = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45522));
		__this->set_handlePrefab_6((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private float handleSize = 0.016f; // 1.6cm default handle size
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45523));
		__this->set_handleSize_7((0.016f));
		// private Vector3 colliderPadding = new Vector3(0.016f, 0.016f, 0.016f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45524));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45528));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_0), (0.016f), (0.016f), (0.016f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45528));
		__this->set_colliderPadding_8(L_0);
		// private bool drawTetherWhenManipulating = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45525));
		__this->set_drawTetherWhenManipulating_9((bool)1);
		// private Collider handlesIgnoreCollider = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45526));
		__this->set_handlesIgnoreCollider_10((Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF *)NULL);
		// internal HandlesChangedEvent handlesChanged = new HandlesChangedEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45527));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45529));
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_1 = (HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 *)il2cpp_codegen_object_new(HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1_il2cpp_TypeInfo_var);
		HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45529));
		__this->set_handlesChanged_11(L_1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45530));
		ScriptableObject__ctor_m6E2B3821A4A361556FC12E9B1C71E1D5DC002C5B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45530));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration/HandlesChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06 (HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesChangedEvent__ctor_mA33795BBC602B35DF046D85400EBC91FDFA51C06_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_1__ctor_mDF05FAB26872D5FDD63B2D45550515FEC4250F9C(__this, /*hidden argument*/UnityEvent_1__ctor_mDF05FAB26872D5FDD63B2D45550515FEC4250F9C_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::.ctor(Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * ___configuration0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___configuration0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links__ctor_mD2DDF8AB6FE91F10878A074A195FB7A1062E6171_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46090));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46091));
	{
		// private List<Link> links = new List<Link>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46099));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_0 = (List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *)il2cpp_codegen_object_new(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1_il2cpp_TypeInfo_var);
		List_1__ctor_m2D0FE9D764F15C766E94763597447A5E58A73770(L_0, /*hidden argument*/List_1__ctor_m2D0FE9D764F15C766E94763597447A5E58A73770_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46099));
		__this->set_links_0(L_0);
		// internal Links(LinksConfiguration configuration)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46093));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46100));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46100));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46094));
		// Debug.Assert(configuration != null, "Can't create BoundsControlLinks without valid configuration");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46095));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_1 = ___configuration0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46101));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46101));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46102));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_2, _stringLiteral53402B7F02136D01287CECF2F0264D7B1BA359CD, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46102));
		// config = configuration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46096));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_3 = ___configuration0;
		__this->set_config_1(L_3);
		// config.wireFrameChanged.AddListener(UpdateWireframe);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46097));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_4 = __this->get_config_1();
		NullCheck(L_4);
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_5 = L_4->get_wireFrameChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46103));
		UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 * L_6 = (UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 *)il2cpp_codegen_object_new(UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m6E1DB7AC7DAA970C8A220D6EB0D002792C7B9B42(L_6, __this, (intptr_t)((intptr_t)Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m6E1DB7AC7DAA970C8A220D6EB0D002792C7B9B42_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46104));
		NullCheck(L_5);
		UnityEvent_1_AddListener_m45B5BEC97C05BB578B1B23FF7156175AB9826D3A(L_5, L_6, /*hidden argument*/UnityEvent_1_AddListener_m45B5BEC97C05BB578B1B23FF7156175AB9826D3A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46104));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46098));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::Finalize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_Finalize_mF09DE0319FBDDF84DC565115F253F5734DF839E9 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_Finalize_mF09DE0319FBDDF84DC565115F253F5734DF839E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_Finalize_mF09DE0319FBDDF84DC565115F253F5734DF839E9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46106));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46107));
	}

IL_0001:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46108));
		// config.wireFrameChanged.RemoveListener(UpdateWireframe);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46109));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_0 = __this->get_config_1();
		NullCheck(L_0);
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_1 = L_0->get_wireFrameChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46112));
		UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 * L_2 = (UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8 *)il2cpp_codegen_object_new(UnityAction_1_tDF245F65F2D1A5F2E1E7B67AEDD50387ECF8DCD8_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m6E1DB7AC7DAA970C8A220D6EB0D002792C7B9B42(L_2, __this, (intptr_t)((intptr_t)Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m6E1DB7AC7DAA970C8A220D6EB0D002792C7B9B42_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46112));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46113));
		NullCheck(L_1);
		UnityEvent_1_RemoveListener_m5732395C2CB531AC2697095A3274423D20441414(L_1, L_2, /*hidden argument*/UnityEvent_1_RemoveListener_m5732395C2CB531AC2697095A3274423D20441414_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46113));
		IL2CPP_LEAVE(0x29, FINALLY_0021);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0021;
	}

FINALLY_0021:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46110));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46114));
		Object_Finalize_m4015B7D3A44DE125C5FE34D7276CD4697C06F380(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46114));
		IL2CPP_END_FINALLY(33)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(33)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x29, IL_0029)
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46111));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateWireframe(Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireframeChangedEventType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, int32_t ___changedType0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___changedType0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_UpdateWireframe_m3969F2B4BD98D544CDFC387CD0D6B660450BEF17_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46115));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46116));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46117));
		// switch (changedType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46118));
		int32_t L_0 = ___changedType0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46119));
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_001b;
			}
			case 1:
			{
				goto IL_0035;
			}
			case 2:
			{
				goto IL_0044;
			}
			case 3:
			{
				goto IL_004d;
			}
		}
	}
	{
		goto IL_0056;
	}

IL_001b:
	{
		// Reset(config.ShowWireFrame, cachedFlattenAxis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46120));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_2 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46129));
		NullCheck(L_2);
		bool L_3 = LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46129));
		int32_t L_4 = __this->get_cachedFlattenAxis_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46130));
		Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567(__this, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46130));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46121));
		goto IL_0056;
	}

IL_0035:
	{
		// UpdateLinkScales(cachedExtents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46122));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_cachedExtents_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46131));
		Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46131));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46123));
		goto IL_0056;
	}

IL_0044:
	{
		// UpdateLinkPrimitive();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46124));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46132));
		Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46132));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46125));
		goto IL_0056;
	}

IL_004d:
	{
		// UpdateMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46126));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46133));
		Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46133));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46127));
		goto IL_0056;
	}

IL_0056:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46128));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Link_t419BB37400AA583E48363DAB051577447DCEFBAB * V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_Clear_m674EBCCD9D5DC440FDC595E66C70694E8843C534_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46134));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46135));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46136));
		// if (links != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46137));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_0 = __this->get_links_0();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46138));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0060;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46139));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46140));
		// foreach (Link link in links)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46141));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_2 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46152));
		NullCheck(L_2);
		Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  L_3 = List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420(L_2, /*hidden argument*/List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46152));
		V_1 = L_3;
	}

IL_001c:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46142));
			goto IL_0039;
		}

IL_001e:
		{
			// foreach (Link link in links)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46143));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46153));
			Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_4 = Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_inline((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_1), /*hidden argument*/Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46153));
			V_2 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46144));
			// Object.Destroy(link.transform.gameObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46145));
			Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_5 = V_2;
			NullCheck(L_5);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = L_5->get_transform_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46154));
			NullCheck(L_6);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46154));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46155));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46155));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46146));
		}

IL_0039:
		{
			// foreach (Link link in links)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46147));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46156));
			bool L_8 = Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_1), /*hidden argument*/Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46156));
			if (L_8)
			{
				goto IL_001e;
			}
		}

IL_0042:
		{
			IL2CPP_LEAVE(0x53, FINALLY_0044);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0044;
	}

FINALLY_0044:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46157));
		Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_1), /*hidden argument*/Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46157));
		IL2CPP_END_FINALLY(68)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(68)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x53, IL_0053)
	}

IL_0053:
	{
		// links.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46149));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_9 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46158));
		NullCheck(L_9);
		List_1_Clear_m01914A35E2EDDC103B043CE5204596961BAB9177(L_9, /*hidden argument*/List_1_Clear_m01914A35E2EDDC103B043CE5204596961BAB9177_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46158));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46150));
	}

IL_0060:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46151));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_UpdateMaterial_m06BB876D05088481264A66E53C9B61D2D178F75F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46159));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46160));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46161));
		// if (links != null && config.WireframeMaterial != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46162));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_0 = __this->get_links_0();
		if (!L_0)
		{
			goto IL_001c;
		}
	}
	{
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_1 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46180));
		NullCheck(L_1);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_2 = LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46180));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46181));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46181));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001d;
	}

IL_001c:
	{
		G_B3_0 = 0;
	}

IL_001d:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46163));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_007c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46164));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46165));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46166));
		goto IL_0067;
	}

IL_0026:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46167));
		// Renderer linkRenderer = links[i].transform.gameObject.GetComponent<Renderer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46168));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_5 = __this->get_links_0();
		int32_t L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46182));
		NullCheck(L_5);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_7 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_5, L_6, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46182));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = L_7->get_transform_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46183));
		NullCheck(L_8);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46183));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46184));
		NullCheck(L_9);
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_10 = GameObject_GetComponent_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mD65E2552CCFED4D0EC506EE90DE51215D90AEF85(L_9, /*hidden argument*/GameObject_GetComponent_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mD65E2552CCFED4D0EC506EE90DE51215D90AEF85_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46184));
		V_2 = L_10;
		// if (linkRenderer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46169));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_11 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46185));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_11, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46185));
		V_3 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46170));
		bool L_13 = V_3;
		if (!L_13)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46171));
		// linkRenderer.material = config.WireframeMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46172));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_14 = V_2;
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_15 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46186));
		NullCheck(L_15);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_16 = LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46186));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46187));
		NullCheck(L_14);
		Renderer_set_material_mB4988AD6A93C7FDACC4C07A99D1DAC23D10C0344(L_14, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46187));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46173));
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46174));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46175));
		int32_t L_17 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_0067:
	{
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46176));
		int32_t L_18 = V_1;
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_19 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46188));
		NullCheck(L_19);
		int32_t L_20 = List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_inline(L_19, /*hidden argument*/List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46188));
		V_4 = (bool)((((int32_t)L_18) < ((int32_t)L_20))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46177));
		bool L_21 = V_4;
		if (L_21)
		{
			goto IL_0026;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46178));
	}

IL_007c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46179));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateVisibilityInInspector(UnityEngine.HideFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, int32_t ___flags0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Link_t419BB37400AA583E48363DAB051577447DCEFBAB * V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___flags0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_UpdateVisibilityInInspector_m9780A08923983150F9294F4C4878259CFF316F7F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46189));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46190));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46191));
		// if (links != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46192));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_0 = __this->get_links_0();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46193));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0050;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46194));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46195));
		// foreach (var link in links)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46196));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_2 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46206));
		NullCheck(L_2);
		Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  L_3 = List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420(L_2, /*hidden argument*/List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46206));
		V_1 = L_3;
	}

IL_001c:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46197));
			goto IL_0035;
		}

IL_001e:
		{
			// foreach (var link in links)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46198));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46207));
			Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_4 = Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_inline((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_1), /*hidden argument*/Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46207));
			V_2 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46199));
			// link.transform.hideFlags = flags;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46200));
			Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_5 = V_2;
			NullCheck(L_5);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = L_5->get_transform_0();
			int32_t L_7 = ___flags0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46208));
			NullCheck(L_6);
			Object_set_hideFlags_mB0B45A19A5871EF407D7B09E0EB76003496BA4F0(L_6, L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46208));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46201));
		}

IL_0035:
		{
			// foreach (var link in links)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46202));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46209));
			bool L_8 = Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_1), /*hidden argument*/Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46209));
			if (L_8)
			{
				goto IL_001e;
			}
		}

IL_003e:
		{
			IL2CPP_LEAVE(0x4F, FINALLY_0040);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0040;
	}

FINALLY_0040:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46203));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46210));
		Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_1), /*hidden argument*/Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46210));
		IL2CPP_END_FINALLY(64)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(64)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x4F, IL_004f)
	}

IL_004f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46204));
	}

IL_0050:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46205));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::Reset(System.Boolean,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, bool ___isVisible0, int32_t ___flattenAxis1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * V_1 = NULL;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isVisible0), (&___flattenAxis1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_Reset_m056C994B58FFD395050AEAB204EEFFB9649F1567_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46211));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46212));
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B4_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B3_0 = NULL;
	int32_t G_B5_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B5_1 = NULL;
	int32_t G_B10_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46213));
		// cachedFlattenAxis = flattenAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46214));
		int32_t L_0 = ___flattenAxis1;
		__this->set_cachedFlattenAxis_3(L_0);
		// if (links != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46215));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_1 = __this->get_links_0();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *)L_1) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46216));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00d7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46217));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46218));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46219));
		goto IL_0050;
	}

IL_001d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46220));
		// links[i].transform.gameObject.SetActive(isVisible && config.ShowWireFrame);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46221));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_3 = __this->get_links_0();
		int32_t L_4 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46241));
		NullCheck(L_3);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_5 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_3, L_4, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46241));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = L_5->get_transform_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46242));
		NullCheck(L_6);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46242));
		bool L_8 = ___isVisible0;
		G_B3_0 = L_7;
		if (!L_8)
		{
			G_B4_0 = L_7;
			goto IL_0044;
		}
	}
	{
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_9 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46243));
		NullCheck(L_9);
		bool L_10 = LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46243));
		G_B5_0 = ((int32_t)(L_10));
		G_B5_1 = G_B3_0;
		goto IL_0045;
	}

IL_0044:
	{
		G_B5_0 = 0;
		G_B5_1 = G_B4_0;
	}

IL_0045:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46244));
		NullCheck(G_B5_1);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(G_B5_1, (bool)G_B5_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46244));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46222));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46223));
		int32_t L_11 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)1));
	}

IL_0050:
	{
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46224));
		int32_t L_12 = V_2;
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_13 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46245));
		NullCheck(L_13);
		int32_t L_14 = List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_inline(L_13, /*hidden argument*/List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46245));
		V_3 = (bool)((((int32_t)L_12) < ((int32_t)L_14))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46225));
		bool L_15 = V_3;
		if (L_15)
		{
			goto IL_001d;
		}
	}
	{
		// List<int> flattenedHandles = VisualUtils.GetFlattenedIndices(cachedFlattenAxis, VisualUtils.EdgeAxisType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46226));
		int32_t L_16 = __this->get_cachedFlattenAxis_3();
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_17 = ((VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields*)il2cpp_codegen_static_fields_for(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var))->get_EdgeAxisType_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46246));
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_18 = VisualUtils_GetFlattenedIndices_m81EE91C2D3FD439A12215D9E929E162197789A97(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46246));
		V_1 = L_18;
		// if (flattenedHandles != null && VisualUtils.EdgeAxisType.Length == links.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46227));
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_19 = V_1;
		if (!L_19)
		{
			goto IL_008c;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_20 = ((VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields*)il2cpp_codegen_static_fields_for(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var))->get_EdgeAxisType_0();
		NullCheck(L_20);
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_21 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46247));
		NullCheck(L_21);
		int32_t L_22 = List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_inline(L_21, /*hidden argument*/List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46247));
		G_B10_0 = ((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_20)->max_length))))) == ((int32_t)L_22))? 1 : 0);
		goto IL_008d;
	}

IL_008c:
	{
		G_B10_0 = 0;
	}

IL_008d:
	{
		V_4 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46228));
		bool L_23 = V_4;
		if (!L_23)
		{
			goto IL_00d6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46229));
		// for (int i = 0; i < flattenedHandles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46230));
		V_5 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46231));
		goto IL_00c5;
	}

IL_0099:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46232));
		// links[flattenedHandles[i]].transform.gameObject.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46233));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_24 = __this->get_links_0();
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_25 = V_1;
		int32_t L_26 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46248));
		NullCheck(L_25);
		int32_t L_27 = List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_inline(L_25, L_26, /*hidden argument*/List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46248));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46249));
		NullCheck(L_24);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_28 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_24, L_27, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46249));
		NullCheck(L_28);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = L_28->get_transform_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46250));
		NullCheck(L_29);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_30 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46250));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46251));
		NullCheck(L_30);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_30, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46251));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46234));
		// for (int i = 0; i < flattenedHandles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46235));
		int32_t L_31 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_31, (int32_t)1));
	}

IL_00c5:
	{
		// for (int i = 0; i < flattenedHandles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46236));
		int32_t L_32 = V_5;
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_33 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46252));
		NullCheck(L_33);
		int32_t L_34 = List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_inline(L_33, /*hidden argument*/List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46252));
		V_6 = (bool)((((int32_t)L_32) < ((int32_t)L_34))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46237));
		bool L_35 = V_6;
		if (L_35)
		{
			goto IL_0099;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46238));
	}

IL_00d6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46239));
	}

IL_00d7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46240));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::GetLinkDimensions(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___currentBoundsExtents0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46253));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46254));
	float G_B3_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46255));
		// float wireframeEdgeRadius = config.WireframeEdgeRadius;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46256));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_0 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46260));
		NullCheck(L_0);
		float L_1 = LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46260));
		V_0 = L_1;
		// float linkLengthAdjustor = config.WireframeShape == WireframeType.Cubic ? 2.0f : 1.0f - (6.0f * wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46257));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_2 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46261));
		NullCheck(L_2);
		int32_t L_3 = LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46261));
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		float L_4 = V_0;
		G_B3_0 = ((float)il2cpp_codegen_subtract((float)(1.0f), (float)((float)il2cpp_codegen_multiply((float)(6.0f), (float)L_4))));
		goto IL_002e;
	}

IL_0029:
	{
		G_B3_0 = (2.0f);
	}

IL_002e:
	{
		V_1 = G_B3_0;
		// return (currentBoundsExtents * linkLengthAdjustor) + new Vector3(wireframeEdgeRadius, wireframeEdgeRadius, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46258));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = ___currentBoundsExtents0;
		float L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46262));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46262));
		float L_8 = V_0;
		float L_9 = V_0;
		float L_10 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46263));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11;
		memset((&L_11), 0, sizeof(L_11));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_11), L_8, L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46263));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46264));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_7, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46264));
		V_2 = L_12;
		goto IL_0046;
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46259));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_2;
		return L_13;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateLinkPositions(UnityEngine.Vector3[]&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boundsCorners0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_UpdateLinkPositions_m2AF5690FC79704C3B550AD2BAE063CDEE952EE45_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46265));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46266));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46267));
		// if (boundsCorners != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46268));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_0 = ___boundsCorners0;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_1 = *((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_0);
		V_0 = (bool)((!(((RuntimeObject*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)L_1) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46269));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46270));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46271));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46272));
		goto IL_0033;
	}

IL_000f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46273));
		// links[i].transform.position = VisualUtils.GetLinkPosition(i, ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46274));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_3 = __this->get_links_0();
		int32_t L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46281));
		NullCheck(L_3);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_5 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_3, L_4, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46281));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = L_5->get_transform_0();
		int32_t L_7 = V_1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_8 = ___boundsCorners0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46282));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = VisualUtils_GetLinkPosition_m1629C08A4FEE15B5392FEBDCDF9C3EAD0F88AA5F(L_7, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46282));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46283));
		NullCheck(L_6);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_6, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46283));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46275));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46276));
		int32_t L_10 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_10, (int32_t)1));
	}

IL_0033:
	{
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46277));
		int32_t L_11 = V_1;
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_12 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46284));
		NullCheck(L_12);
		int32_t L_13 = List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_inline(L_12, /*hidden argument*/List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46284));
		V_2 = (bool)((((int32_t)L_11) < ((int32_t)L_13))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46278));
		bool L_14 = V_2;
		if (L_14)
		{
			goto IL_000f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46279));
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46280));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateLinkScales(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_2 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	float V_6 = 0.0f;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___currentBoundsExtents0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46285));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46286));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46287));
		// if (links != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46288));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_0 = __this->get_links_0();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46289));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_015d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46290));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46291));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46292));
		goto IL_013e;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46293));
		// Transform parent = links[i].transform.parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46294));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_2 = __this->get_links_0();
		int32_t L_3 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46319));
		NullCheck(L_2);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_4 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_2, L_3, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46319));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = L_4->get_transform_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46320));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46320));
		V_2 = L_6;
		// Vector3 rootScale = parent.lossyScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46295));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46321));
		NullCheck(L_7);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46321));
		V_3 = L_8;
		// Vector3 invRootScale = new Vector3(1.0f / rootScale[0], 1.0f / rootScale[1], 1.0f / rootScale[2]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46296));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46322));
		float L_9 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46322));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46323));
		float L_10 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46323));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46324));
		float L_11 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46325));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_4), ((float)((float)(1.0f)/(float)L_9)), ((float)((float)(1.0f)/(float)L_10)), ((float)((float)(1.0f)/(float)L_11)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46325));
		// Vector3 linkDimensions = Vector3.Scale(GetLinkDimensions(currentBoundsExtents), invRootScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46297));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = ___currentBoundsExtents0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46326));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D(__this, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46326));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46327));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_Scale_m77004B226483C7644B3F4A46B950589EE8F88775(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46327));
		V_5 = L_15;
		// float wireframeEdgeRadius = config.WireframeEdgeRadius;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46298));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_16 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46328));
		NullCheck(L_16);
		float L_17 = LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46328));
		V_6 = L_17;
		// if (links[i].axisType == CardinalAxisType.X)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46299));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_18 = __this->get_links_0();
		int32_t L_19 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46329));
		NullCheck(L_18);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_20 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_18, L_19, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46329));
		NullCheck(L_20);
		int32_t L_21 = L_20->get_axisType_1();
		V_7 = (bool)((((int32_t)L_21) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46300));
		bool L_22 = V_7;
		if (!L_22)
		{
			goto IL_00cb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46301));
		// links[i].transform.localScale = new Vector3(wireframeEdgeRadius, linkDimensions.x, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46302));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_23 = __this->get_links_0();
		int32_t L_24 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46330));
		NullCheck(L_23);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_25 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_23, L_24, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46330));
		NullCheck(L_25);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = L_25->get_transform_0();
		float L_27 = V_6;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = V_5;
		float L_29 = L_28.get_x_2();
		float L_30 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46331));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31;
		memset((&L_31), 0, sizeof(L_31));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_31), L_27, L_29, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46332));
		NullCheck(L_26);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_26, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46332));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46303));
		goto IL_0139;
	}

IL_00cb:
	{
		// else if (links[i].axisType == CardinalAxisType.Y)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46304));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_32 = __this->get_links_0();
		int32_t L_33 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46333));
		NullCheck(L_32);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_34 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_32, L_33, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46333));
		NullCheck(L_34);
		int32_t L_35 = L_34->get_axisType_1();
		V_8 = (bool)((((int32_t)L_35) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46305));
		bool L_36 = V_8;
		if (!L_36)
		{
			goto IL_0110;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46306));
		// links[i].transform.localScale = new Vector3(wireframeEdgeRadius, linkDimensions.y, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46307));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_37 = __this->get_links_0();
		int32_t L_38 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46334));
		NullCheck(L_37);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_39 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_37, L_38, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46334));
		NullCheck(L_39);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_40 = L_39->get_transform_0();
		float L_41 = V_6;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = V_5;
		float L_43 = L_42.get_y_3();
		float L_44 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46335));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45;
		memset((&L_45), 0, sizeof(L_45));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_45), L_41, L_43, L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46335));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46336));
		NullCheck(L_40);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_40, L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46336));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46308));
		goto IL_0139;
	}

IL_0110:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46309));
		// links[i].transform.localScale = new Vector3(wireframeEdgeRadius, linkDimensions.z, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46310));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_46 = __this->get_links_0();
		int32_t L_47 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46337));
		NullCheck(L_46);
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_48 = List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_inline(L_46, L_47, /*hidden argument*/List_1_get_Item_m183E60669C1BB6D2DDDF41DDDEE5136399042BC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46337));
		NullCheck(L_48);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_49 = L_48->get_transform_0();
		float L_50 = V_6;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = V_5;
		float L_52 = L_51.get_z_4();
		float L_53 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46338));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54;
		memset((&L_54), 0, sizeof(L_54));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_54), L_50, L_52, L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46338));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46339));
		NullCheck(L_49);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_49, L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46339));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46311));
	}

IL_0139:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46312));
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46313));
		int32_t L_55 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_55, (int32_t)1));
	}

IL_013e:
	{
		// for (int i = 0; i < links.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46314));
		int32_t L_56 = V_1;
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_57 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46340));
		NullCheck(L_57);
		int32_t L_58 = List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_inline(L_57, /*hidden argument*/List_1_get_Count_m3E5A2F32FE1A12647006151A8845570C8F3DACA1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46340));
		V_9 = (bool)((((int32_t)L_56) < ((int32_t)L_58))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46315));
		bool L_59 = V_9;
		if (L_59)
		{
			goto IL_0019;
		}
	}
	{
		// cachedExtents = currentBoundsExtents;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46316));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = ___currentBoundsExtents0;
		__this->set_cachedExtents_2(L_60);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46317));
	}

IL_015d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46318));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::UpdateLinkPrimitive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Link_t419BB37400AA583E48363DAB051577447DCEFBAB * V_5 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_6 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_UpdateLinkPrimitive_m8AD003300BF4401144C8C57F26F1E41940C3695D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46342));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46343));
		// if (config.WireframeShape == WireframeType.Cubic)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46344));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_0 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46370));
		NullCheck(L_0);
		int32_t L_1 = LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46370));
		V_2 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46345));
		bool L_2 = V_2;
		if (!L_2)
		{
			goto IL_001e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46346));
		// sharedMeshPrimitive = GameObject.CreatePrimitive(PrimitiveType.Cube);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46347));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46371));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A(3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46371));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46348));
		goto IL_0027;
	}

IL_001e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46349));
		// sharedMeshPrimitive = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46350));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46372));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46372));
		V_0 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46351));
	}

IL_0027:
	{
		// var sharedMeshFilter = sharedMeshPrimitive.GetComponent<MeshFilter>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46352));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46373));
		NullCheck(L_5);
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_6 = GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4(L_5, /*hidden argument*/GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46373));
		V_1 = L_6;
		// if (sharedMeshFilter)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46353));
		MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_7 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46374));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_8 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46374));
		V_3 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46354));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_0090;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46355));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46356));
		// foreach (var link in links)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46357));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_10 = __this->get_links_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46375));
		NullCheck(L_10);
		Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979  L_11 = List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420(L_10, /*hidden argument*/List_1_GetEnumerator_mC151888741DCBDED02D27073E2236A56FE02E420_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46375));
		V_4 = L_11;
	}

IL_0047:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46358));
			goto IL_0075;
		}

IL_0049:
		{
			// foreach (var link in links)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46359));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46376));
			Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_12 = Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_inline((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_4), /*hidden argument*/Enumerator_get_Current_mBD2394177B58BA3CC183AD8C50F9E1F0D10305DA_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46376));
			V_5 = L_12;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46360));
			// GameObject linkObj = link.transform.gameObject;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46361));
			Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_13 = V_5;
			NullCheck(L_13);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = L_13->get_transform_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46377));
			NullCheck(L_14);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46377));
			V_6 = L_15;
			// linkObj.GetComponent<MeshFilter>().sharedMesh = sharedMeshFilter.sharedMesh;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46362));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46378));
			NullCheck(L_16);
			MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_17 = GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4(L_16, /*hidden argument*/GameObject_GetComponent_TisMeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0_mD1BA4FFEB800AB3D102141CD0A0ECE237EA70FB4_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46378));
			MeshFilter_t8D4BA8E8723DE5CFF53B0DA5EE2F6B3A5B0E0FE0 * L_18 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46379));
			NullCheck(L_18);
			Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_19 = MeshFilter_get_sharedMesh_mC076FD5461BFBBAD3BE49D25263CF140700D9902(L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46379));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46380));
			NullCheck(L_17);
			MeshFilter_set_sharedMesh_mFE8D12C35148063EB287951C7BFFB0328AAA7C5D(L_17, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46380));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46363));
		}

IL_0075:
		{
			// foreach (var link in links)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46364));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46381));
			bool L_20 = Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_4), /*hidden argument*/Enumerator_MoveNext_m1A00150959D98A9ACF4980532BCF25CC881EAFAD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46381));
			if (L_20)
			{
				goto IL_0049;
			}
		}

IL_007e:
		{
			IL2CPP_LEAVE(0x8F, FINALLY_0080);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0080;
	}

FINALLY_0080:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46365));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46382));
		Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225((Enumerator_t55BD9FA62F53D8D03167A4A51DCDE51A49E69979 *)(&V_4), /*hidden argument*/Enumerator_Dispose_mEFE02918441F06B9D0F3791882357C5139022225_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46382));
		IL2CPP_END_FINALLY(128)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(128)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x8F, IL_008f)
	}

IL_008f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46366));
	}

IL_0090:
	{
		// Object.Destroy(sharedMeshPrimitive);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46367));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46383));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46383));
		// UpdateLinkScales(cachedExtents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46368));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = __this->get_cachedExtents_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46384));
		Links_UpdateLinkScales_mF3CD53F1C69EF4A6294059A4D14DEE4C6D497778(__this, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46384));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46369));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links::CreateLinks(UnityEngine.Vector3[]&,UnityEngine.Transform,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12 (Links_tDE04234D58C621CEA1198CA80A8746B7E59DD361 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentBoundsExtents2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	float V_5 = 0.0f;
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boundsCorners0), (&___parent1), (&___currentBoundsExtents2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Links_CreateLinks_m0E5954BC6D3ECA984207F6D4785C7BE1073C3A12_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46385));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46386));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46387));
		// if (links != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46388));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_0 = __this->get_links_0();
		V_0 = (bool)((!(((RuntimeObject*)(List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46389));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_01fc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46390));
		// Vector3 linkDimensions = GetLinkDimensions(currentBoundsExtents);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46391));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___currentBoundsExtents2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46440));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Links_GetLinkDimensions_m7D9AD5AEA03171DEB715879B76081FFD3832082D(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46440));
		V_2 = L_3;
		// for (int i = 0; i < VisualUtils.EdgeAxisType.Length; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46392));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46393));
		goto IL_01e8;
	}

IL_0021:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46394));
		// if (config.WireframeShape == WireframeType.Cubic)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46395));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_4 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46441));
		NullCheck(L_4);
		int32_t L_5 = LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46441));
		V_7 = (bool)((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46396));
		bool L_6 = V_7;
		if (!L_6)
		{
			goto IL_004d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46397));
		// link = GameObject.CreatePrimitive(PrimitiveType.Cube);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46398));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46442));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A(3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46442));
		V_1 = L_7;
		// Object.Destroy(link.GetComponent<BoxCollider>());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46399));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46443));
		NullCheck(L_8);
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_9 = GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55(L_8, /*hidden argument*/GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46443));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46444));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46444));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46400));
		goto IL_0062;
	}

IL_004d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46401));
		// link = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46402));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46445));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46445));
		V_1 = L_10;
		// Object.Destroy(link.GetComponent<CapsuleCollider>());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46403));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46446));
		NullCheck(L_11);
		CapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1 * L_12 = GameObject_GetComponent_TisCapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1_m6CF92CB68F3A182E48CD844D126E0CE4C97EC718(L_11, /*hidden argument*/GameObject_GetComponent_TisCapsuleCollider_t5FD15B9E7BEEC4FFA8A2071E9FD2B8DEB3A826D1_m6CF92CB68F3A182E48CD844D126E0CE4C97EC718_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46446));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46447));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46447));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46404));
	}

IL_0062:
	{
		// link.name = "link_" + i.ToString();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46405));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46448));
		String_t* L_14 = Int32_ToString_m1863896DE712BF97C031D55B12E1583F1982DC02((int32_t*)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46448));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46449));
		String_t* L_15 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteralBC1876D393BC222D47221F31E8011825389E03E7, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46449));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46450));
		NullCheck(L_13);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46450));
		// CardinalAxisType axisType = VisualUtils.EdgeAxisType[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46406));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_16 = ((VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields*)il2cpp_codegen_static_fields_for(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var))->get_EdgeAxisType_0();
		int32_t L_17 = V_3;
		NullCheck(L_16);
		int32_t L_18 = L_17;
		int32_t L_19 = (int32_t)(L_16)->GetAt(static_cast<il2cpp_array_size_t>(L_18));
		V_4 = L_19;
		// float wireframeEdgeRadius = config.WireframeEdgeRadius;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46407));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_20 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46451));
		NullCheck(L_20);
		float L_21 = LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46451));
		V_5 = L_21;
		// if (axisType == CardinalAxisType.Y)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46408));
		int32_t L_22 = V_4;
		V_8 = (bool)((((int32_t)L_22) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46409));
		bool L_23 = V_8;
		if (!L_23)
		{
			goto IL_00dd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46410));
		// link.transform.localScale = new Vector3(wireframeEdgeRadius, linkDimensions.y, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46411));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46452));
		NullCheck(L_24);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46452));
		float L_26 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = V_2;
		float L_28 = L_27.get_y_3();
		float L_29 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46453));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30;
		memset((&L_30), 0, sizeof(L_30));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_30), L_26, L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46454));
		NullCheck(L_25);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_25, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46454));
		// link.transform.Rotate(new Vector3(0.0f, 90.0f, 0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46412));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46455));
		NullCheck(L_31);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46455));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46456));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33;
		memset((&L_33), 0, sizeof(L_33));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_33), (0.0f), (90.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46456));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46457));
		NullCheck(L_32);
		Transform_Rotate_m610B6793DCC2F987290D328942E649B5B7DE0F9A(L_32, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46457));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46413));
		goto IL_0164;
	}

IL_00dd:
	{
		// else if (axisType == CardinalAxisType.Z)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46414));
		int32_t L_34 = V_4;
		V_9 = (bool)((((int32_t)L_34) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46415));
		bool L_35 = V_9;
		if (!L_35)
		{
			goto IL_0127;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46416));
		// link.transform.localScale = new Vector3(wireframeEdgeRadius, linkDimensions.z, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46417));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_36 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46458));
		NullCheck(L_36);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46458));
		float L_38 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = V_2;
		float L_40 = L_39.get_z_4();
		float L_41 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46459));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42;
		memset((&L_42), 0, sizeof(L_42));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_42), L_38, L_40, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46459));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46460));
		NullCheck(L_37);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_37, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46460));
		// link.transform.Rotate(new Vector3(90.0f, 0.0f, 0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46418));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_43 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46461));
		NullCheck(L_43);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46461));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46462));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45;
		memset((&L_45), 0, sizeof(L_45));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_45), (90.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46462));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46463));
		NullCheck(L_44);
		Transform_Rotate_m610B6793DCC2F987290D328942E649B5B7DE0F9A(L_44, L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46463));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46419));
		goto IL_0164;
	}

IL_0127:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46420));
		// link.transform.localScale = new Vector3(wireframeEdgeRadius, linkDimensions.x, wireframeEdgeRadius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46421));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_46 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46464));
		NullCheck(L_46);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46464));
		float L_48 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = V_2;
		float L_50 = L_49.get_x_2();
		float L_51 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46465));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52;
		memset((&L_52), 0, sizeof(L_52));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_52), L_48, L_50, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46465));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46466));
		NullCheck(L_47);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_47, L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46466));
		// link.transform.Rotate(new Vector3(0.0f, 0.0f, 90.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46422));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_53 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46467));
		NullCheck(L_53);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_54 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46467));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46468));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55;
		memset((&L_55), 0, sizeof(L_55));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_55), (0.0f), (0.0f), (90.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46468));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46469));
		NullCheck(L_54);
		Transform_Rotate_m610B6793DCC2F987290D328942E649B5B7DE0F9A(L_54, L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46469));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46423));
	}

IL_0164:
	{
		// link.transform.position = VisualUtils.GetLinkPosition(i, ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46424));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_56 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46470));
		NullCheck(L_56);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_57 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_56, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46470));
		int32_t L_58 = V_3;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_59 = ___boundsCorners0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46471));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = VisualUtils_GetLinkPosition_m1629C08A4FEE15B5392FEBDCDF9C3EAD0F88AA5F(L_58, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46471));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46472));
		NullCheck(L_57);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_57, L_60, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46472));
		// link.transform.parent = parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46425));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_61 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46473));
		NullCheck(L_61);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_62 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_61, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46473));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_63 = ___parent1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46474));
		NullCheck(L_62);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_62, L_63, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46474));
		// Renderer linkRenderer = link.GetComponent<Renderer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46426));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_64 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46475));
		NullCheck(L_64);
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_65 = GameObject_GetComponent_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mD65E2552CCFED4D0EC506EE90DE51215D90AEF85(L_64, /*hidden argument*/GameObject_GetComponent_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mD65E2552CCFED4D0EC506EE90DE51215D90AEF85_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46475));
		V_6 = L_65;
		// if (config.WireframeMaterial != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46427));
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_66 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46476));
		NullCheck(L_66);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_67 = LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A(L_66, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46476));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46477));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_68 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_67, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46477));
		V_10 = L_68;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46428));
		bool L_69 = V_10;
		if (!L_69)
		{
			goto IL_01b8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46429));
		// linkRenderer.material = config.WireframeMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46430));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_70 = V_6;
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_71 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46478));
		NullCheck(L_71);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_72 = LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A(L_71, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46478));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46479));
		NullCheck(L_70);
		Renderer_set_material_mB4988AD6A93C7FDACC4C07A99D1DAC23D10C0344(L_70, L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46479));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46431));
	}

IL_01b8:
	{
		// link.SetActive(config.ShowWireFrame);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46432));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_73 = V_1;
		LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * L_74 = __this->get_config_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46480));
		NullCheck(L_74);
		bool L_75 = LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4(L_74, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46480));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46481));
		NullCheck(L_73);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_73, L_75, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46481));
		// links.Add(new Link(link.transform, axisType));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46433));
		List_1_t9E1D65212132ADFF3E7A1FFD4F44404E43F479A1 * L_76 = __this->get_links_0();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_77 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46482));
		NullCheck(L_77);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_78 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_77, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46482));
		int32_t L_79 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46483));
		Link_t419BB37400AA583E48363DAB051577447DCEFBAB * L_80 = (Link_t419BB37400AA583E48363DAB051577447DCEFBAB *)il2cpp_codegen_object_new(Link_t419BB37400AA583E48363DAB051577447DCEFBAB_il2cpp_TypeInfo_var);
		Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF(L_80, L_78, L_79, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46483));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46484));
		NullCheck(L_76);
		List_1_Add_mC11D4E37A3B1949DA8BC75B491EB049ED3364B20(L_76, L_80, /*hidden argument*/List_1_Add_mC11D4E37A3B1949DA8BC75B491EB049ED3364B20_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46484));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46434));
		// for (int i = 0; i < VisualUtils.EdgeAxisType.Length; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46435));
		int32_t L_81 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_81, (int32_t)1));
	}

IL_01e8:
	{
		// for (int i = 0; i < VisualUtils.EdgeAxisType.Length; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46436));
		int32_t L_82 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_83 = ((VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_StaticFields*)il2cpp_codegen_static_fields_for(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var))->get_EdgeAxisType_0();
		NullCheck(L_83);
		V_11 = (bool)((((int32_t)L_82) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_83)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46437));
		bool L_84 = V_11;
		if (L_84)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46438));
	}

IL_01fc:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46439));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.Links/Link::.ctor(UnityEngine.Transform,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF (Link_t419BB37400AA583E48363DAB051577447DCEFBAB * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___linkTransform0, int32_t ___linkAxis1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___linkTransform0), (&___linkAxis1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Link__ctor_m5FD2C7E1AA671F318A1CA9BCD92E38FAC17800AF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46485));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46486));
	{
		// public Link(Transform linkTransform, CardinalAxisType linkAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46487));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46492));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46492));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46488));
		// transform = linkTransform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46489));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___linkTransform0;
		__this->set_transform_0(L_0);
		// axisType = linkAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46490));
		int32_t L_1 = ___linkAxis1;
		__this->set_axisType_1(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46491));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Material Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_WireframeMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_get_WireframeMaterial_m2530217EB56CF28F625AC6842F730BCE925A305A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45531));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45532));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45533));
		// get { return wireframeMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45534));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_wireframeMaterial_4();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return wireframeMaterial; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45535));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::set_WireframeMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_set_WireframeMaterial_m1232D070DFCED645CA7CA42F99D6FB8078CA30AF (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_set_WireframeMaterial_m1232D070DFCED645CA7CA42F99D6FB8078CA30AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_set_WireframeMaterial_m1232D070DFCED645CA7CA42F99D6FB8078CA30AF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45536));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45537));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45538));
		// if (wireframeMaterial != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45539));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_wireframeMaterial_4();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45547));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45547));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45540));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45541));
		// wireframeMaterial = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45542));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_4 = ___value0;
		__this->set_wireframeMaterial_4(L_4);
		// TrySetDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45543));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45548));
		LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45548));
		// wireFrameChanged.Invoke(WireframeChangedEventType.Material);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45544));
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_5 = __this->get_wireFrameChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45549));
		NullCheck(L_5);
		UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F(L_5, 3, /*hidden argument*/UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45549));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45545));
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45546));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_WireframeEdgeRadius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_get_WireframeEdgeRadius_mE22D69EFF2D453C754AAD949135DD35E3B976275_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45550));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45551));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45552));
		// get { return wireframeEdgeRadius; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45553));
		float L_0 = __this->get_wireframeEdgeRadius_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return wireframeEdgeRadius; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45554));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::set_WireframeEdgeRadius(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_set_WireframeEdgeRadius_mA57D9B3252A1D63447323BADB31A6861C4D6325C (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_set_WireframeEdgeRadius_mA57D9B3252A1D63447323BADB31A6861C4D6325C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_set_WireframeEdgeRadius_mA57D9B3252A1D63447323BADB31A6861C4D6325C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45555));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45556));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45557));
		// if (wireframeEdgeRadius != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45558));
		float L_0 = __this->get_wireframeEdgeRadius_5();
		float L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((float)L_0) == ((float)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45559));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45560));
		// wireframeEdgeRadius = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45561));
		float L_3 = ___value0;
		__this->set_wireframeEdgeRadius_5(L_3);
		// wireFrameChanged.Invoke(WireframeChangedEventType.Radius);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45562));
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_4 = __this->get_wireFrameChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45565));
		NullCheck(L_4);
		UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F(L_4, 1, /*hidden argument*/UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45565));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45563));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45564));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.WireframeType Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_WireframeShape()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_get_WireframeShape_mA1404E85A804020AD0BD7F29FF323BBF696304D3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45566));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45567));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45568));
		// get { return wireframeShape; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45569));
		int32_t L_0 = __this->get_wireframeShape_6();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return wireframeShape; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45570));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::set_WireframeShape(Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.WireframeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_set_WireframeShape_m08DF43BA9F5710E6FBE642D0D2E70DC6F9DCF8F3 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_set_WireframeShape_m08DF43BA9F5710E6FBE642D0D2E70DC6F9DCF8F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_set_WireframeShape_m08DF43BA9F5710E6FBE642D0D2E70DC6F9DCF8F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45571));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45572));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45573));
		// if (wireframeShape != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45574));
		int32_t L_0 = __this->get_wireframeShape_6();
		int32_t L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45575));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45576));
		// wireframeShape = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45577));
		int32_t L_3 = ___value0;
		__this->set_wireframeShape_6(L_3);
		// wireFrameChanged.Invoke(WireframeChangedEventType.Shape);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45578));
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_4 = __this->get_wireFrameChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45581));
		NullCheck(L_4);
		UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F(L_4, 2, /*hidden argument*/UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45581));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45579));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45580));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::get_ShowWireFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_get_ShowWireFrame_m4B18645DA05BD520AC143DEA34E6D66A6BF0B6E4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45582));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45583));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45584));
		// get { return showWireframe; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45585));
		bool L_0 = __this->get_showWireframe_7();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return showWireframe; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45586));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::set_ShowWireFrame(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_set_ShowWireFrame_mE2BC5EF0BA778936BFB440DBC9A0941D4F8B4691 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_set_ShowWireFrame_mE2BC5EF0BA778936BFB440DBC9A0941D4F8B4691_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_set_ShowWireFrame_mE2BC5EF0BA778936BFB440DBC9A0941D4F8B4691_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45587));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45588));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45589));
		// if (showWireframe != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45590));
		bool L_0 = __this->get_showWireframe_7();
		bool L_1 = ___value0;
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45591));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45592));
		// showWireframe = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45593));
		bool L_3 = ___value0;
		__this->set_showWireframe_7(L_3);
		// wireFrameChanged.Invoke(WireframeChangedEventType.Visibility);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45594));
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_4 = __this->get_wireFrameChanged_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45597));
		NullCheck(L_4);
		UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F(L_4, 0, /*hidden argument*/UnityEvent_1_Invoke_m57F64C460A9FBBA9A51B02867007F901F1D36F1F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45597));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45595));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45596));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_Awake_mABDBFE06B90E63B5BD83F0F7A1CA3DFE15012756 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_Awake_mABDBFE06B90E63B5BD83F0F7A1CA3DFE15012756_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_Awake_mABDBFE06B90E63B5BD83F0F7A1CA3DFE15012756_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45598));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45599));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45600));
		// TrySetDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45601));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45603));
		LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45603));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45602));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::TrySetDefaultMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration_TrySetDefaultMaterial_mB6BEC5297AEE99C8EA9EC82A26D43C4E4E29DA74_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45604));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45605));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45606));
		// if (wireframeMaterial == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45607));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_wireframeMaterial_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45613));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45613));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45608));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45609));
		// wireframeMaterial = VisualUtils.CreateDefaultMaterial();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45614));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_3 = VisualUtils_CreateDefaultMaterial_m3E507A8BCEA5476E96DC7C9CCE1A3F9918CD5D92(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45614));
		__this->set_wireframeMaterial_4(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45611));
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45612));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinksConfiguration__ctor_m80967E0FF5F8CBE4F2982541178E0666D79310A7 (LinksConfiguration_t71FF09DA1B8EDF26EDA93CADD005C1EA17ED6ED5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinksConfiguration__ctor_m80967E0FF5F8CBE4F2982541178E0666D79310A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinksConfiguration__ctor_m80967E0FF5F8CBE4F2982541178E0666D79310A7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45615));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45616));
	{
		// private float wireframeEdgeRadius = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45617));
		__this->set_wireframeEdgeRadius_5((0.001f));
		// private WireframeType wireframeShape = WireframeType.Cubic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45618));
		__this->set_wireframeShape_6(0);
		// private bool showWireframe = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45619));
		__this->set_showWireframe_7((bool)1);
		// internal WireFrameEvent wireFrameChanged = new WireFrameEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45620));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45621));
		WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * L_0 = (WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 *)il2cpp_codegen_object_new(WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5_il2cpp_TypeInfo_var);
		WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45621));
		__this->set_wireFrameChanged_8(L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45622));
		ScriptableObject__ctor_m6E2B3821A4A361556FC12E9B1C71E1D5DC002C5B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45622));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.LinksConfiguration/WireFrameEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5 (WireFrameEvent_t81DBA2F9B843518EC668AAD5BE487F60AA8293A5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, WireFrameEvent__ctor_mBA5DD448CEE01CB2733096576A9EC6CC7B3BA7E5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_1__ctor_mF84792954A024CA251E856E343F8B1239BCD366B(__this, /*hidden argument*/UnityEvent_1__ctor_mF84792954A024CA251E856E343F8B1239BCD366B_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_BaseConfig()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * PerAxisHandles_get_BaseConfig_m1CD972447829502A13D5BE142B9F7CBCDFEF2C93 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_get_BaseConfig_m1CD972447829502A13D5BE142B9F7CBCDFEF2C93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_get_BaseConfig_m1CD972447829502A13D5BE142B9F7CBCDFEF2C93_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46493));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46494));
	{
		// protected override HandlesBaseConfiguration BaseConfig => config;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46495));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_0 = __this->get_config_5();
		return L_0;
	}
}
// System.String Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_HandlePositionDescription()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* PerAxisHandles_get_HandlePositionDescription_m52DE2A47DE2EEEA56DBE1046D1530A9B01760960 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_get_HandlePositionDescription_m52DE2A47DE2EEEA56DBE1046D1530A9B01760960_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_get_HandlePositionDescription_m52DE2A47DE2EEEA56DBE1046D1530A9B01760960_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46496));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46497));
	{
		// protected virtual string HandlePositionDescription => "handle";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46498));
		return _stringLiteralA2DD7EC666AACD57FC6D0571DB038B51DEB9FB6E;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_NumHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46499));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46500));
	{
		// private int NumHandles => handleAxes.Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46501));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46502));
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_0 = VirtFuncInvoker0< CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* >::Invoke(19 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_handleAxes() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46502));
		NullCheck(L_0);
		return (((int32_t)((int32_t)(((RuntimeArray*)L_0)->max_length))));
	}
}
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_HandlePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46503));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46504));
	{
		// protected Vector3[] HandlePositions { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46505));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CHandlePositionsU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::set_HandlePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46506));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46507));
	{
		// protected Vector3[] HandlePositions { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46508));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CHandlePositionsU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::.ctor(Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandlesConfiguration)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles__ctor_m882A82918E49FABA363BC18E32F39735651BBC78 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * ___configuration0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles__ctor_m882A82918E49FABA363BC18E32F39735651BBC78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___configuration0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles__ctor_m882A82918E49FABA363BC18E32F39735651BBC78_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46509));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46510));
	{
		// internal PerAxisHandles(PerAxisHandlesConfiguration configuration)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46511));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46519));
		HandlesBase__ctor_m84ECF7AE2DAD1664D2F4ACD1E02D93277A0B07F3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46519));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46512));
		// HandlePositions = new Vector3[NumHandles];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46513));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46520));
		int32_t L_0 = PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46520));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_1 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46521));
		PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_inline(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46521));
		// Debug.Assert(configuration != null, "Can't create " + ToString() + " without valid configuration");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46514));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_2 = ___configuration0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46522));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46522));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46523));
		String_t* L_4 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46523));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46524));
		String_t* L_5 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteral799E12B3BBB688C3098C5046A3419B79C3EC504E, L_4, _stringLiteral9C120160FA608C811E67C06027257CAA6E332E9C, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46524));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46525));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46525));
		// config = configuration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46515));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_6 = ___configuration0;
		__this->set_config_5(L_6);
		// config.handlesChanged.AddListener(HandlesChanged);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46516));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_7 = __this->get_config_5();
		NullCheck(L_7);
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_8 = ((HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C *)L_7)->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46526));
		UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B * L_9 = (UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B *)il2cpp_codegen_object_new(UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_mE40F217F9A81ED21656F88767AAC6395523ED339(L_9, __this, (intptr_t)((intptr_t)HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_mE40F217F9A81ED21656F88767AAC6395523ED339_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46526));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46527));
		NullCheck(L_8);
		UnityEvent_1_AddListener_m3FD24B0D3AD04907870C986E5B49CBE766E89F6C(L_8, L_9, /*hidden argument*/UnityEvent_1_AddListener_m3FD24B0D3AD04907870C986E5B49CBE766E89F6C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46527));
		// config.colliderTypeChanged.AddListener(UpdateColliderType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46517));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_10 = __this->get_config_5();
		NullCheck(L_10);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_11 = L_10->get_colliderTypeChanged_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46528));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_12 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_12, __this, (intptr_t)((intptr_t)PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46528));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46529));
		NullCheck(L_11);
		UnityEvent_AddListener_m31973FDDC5BB0B2828AB6EF519EC4FD6563499C9(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46529));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46518));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::Finalize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_Finalize_mC2A8A3C3C646BD005C5F9D96859E09F7FF86599A (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_Finalize_mC2A8A3C3C646BD005C5F9D96859E09F7FF86599A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_Finalize_mC2A8A3C3C646BD005C5F9D96859E09F7FF86599A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46530));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46531));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46532));
	}

IL_0001:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46533));
		// config.handlesChanged.RemoveListener(HandlesChanged);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46534));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_0 = __this->get_config_5();
		NullCheck(L_0);
		HandlesChangedEvent_tA43927E65EEA4627EDBB845E7FF3077ACD7125F1 * L_1 = ((HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C *)L_0)->get_handlesChanged_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46538));
		UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B * L_2 = (UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B *)il2cpp_codegen_object_new(UnityAction_1_t8F55F743801D5AC11FF5C25EEAAC99ABAECC2E5B_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_mE40F217F9A81ED21656F88767AAC6395523ED339(L_2, __this, (intptr_t)((intptr_t)HandlesBase_HandlesChanged_m0E243E1042A0739D39A3897F2644A15E21C1898E_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_mE40F217F9A81ED21656F88767AAC6395523ED339_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46538));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46539));
		NullCheck(L_1);
		UnityEvent_1_RemoveListener_m41F33A1B6E6A9CA12A9123FE8B49695715EB6F0D(L_1, L_2, /*hidden argument*/UnityEvent_1_RemoveListener_m41F33A1B6E6A9CA12A9123FE8B49695715EB6F0D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46539));
		// config.colliderTypeChanged.RemoveListener(UpdateColliderType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46535));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_3 = __this->get_config_5();
		NullCheck(L_3);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_4 = L_3->get_colliderTypeChanged_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46540));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_5 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_5, __this, (intptr_t)((intptr_t)PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46540));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46541));
		NullCheck(L_4);
		UnityEvent_RemoveListener_m26034605306E868B2E332675FCCBDA37CECBBA19(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46541));
		IL2CPP_LEAVE(0x46, FINALLY_003e);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003e;
	}

FINALLY_003e:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46536));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46542));
		Object_Finalize_m4015B7D3A44DE125C5FE34D7276CD4697C06F380(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46542));
		IL2CPP_END_FINALLY(62)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(62)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x46, IL_0046)
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46537));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::UpdateColliderType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	bool V_2 = false;
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * V_3 = NULL;
	SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * V_4 = NULL;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_8;
	memset((&V_8), 0, sizeof(V_8));
	float V_9 = 0.0f;
	float V_10 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_11;
	memset((&V_11), 0, sizeof(V_11));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_12;
	memset((&V_12), 0, sizeof(V_12));
	bool V_13 = false;
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * V_14 = NULL;
	SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * V_15 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_4), (&V_8), (&V_9), (&V_10), (&V_11), (&V_12), (&V_14), (&V_15));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_UpdateColliderType_m0A3527716B662200ED219ADB1C5FCD55253E974A_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46543));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46544));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B5_0 = 0;
	int32_t G_B10_0 = 0;
	float G_B16_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46545));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46546));
		// foreach (var handle in handles)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46547));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46593));
		NullCheck(L_0);
		Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85  L_1 = List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1(L_0, /*hidden argument*/List_1_GetEnumerator_mA24ECF0FE9272DD27FFE329ED3B08214CC24CAC1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46593));
		V_0 = L_1;
	}

IL_000e:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46548));
			goto IL_0197;
		}

IL_0013:
		{
			// foreach (var handle in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46549));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46594));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_inline((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_get_Current_mA6B77B2407AA21B94F8B47A9A6A4B6BEE5DA597A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46594));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46550));
			// bool shouldCreateNewCollider = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46551));
			V_2 = (bool)0;
			// var oldBoxCollider = handle.GetComponent<BoxCollider>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46552));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46595));
			NullCheck(L_3);
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_4 = Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E(L_3, /*hidden argument*/Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46595));
			V_3 = L_4;
			// if (oldBoxCollider != null && config.HandlePrefabColliderType == HandlePrefabCollider.Sphere)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46553));
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_5 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46596));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46596));
			if (!L_6)
			{
				goto IL_003e;
			}
		}

IL_002e:
		{
			PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_7 = __this->get_config_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46597));
			NullCheck(L_7);
			int32_t L_8 = PerAxisHandlesConfiguration_get_HandlePrefabColliderType_m420415B40C9BEF30ACC8571E95B8297ECB129A3D(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46597));
			G_B5_0 = ((((int32_t)L_8) == ((int32_t)0))? 1 : 0);
			goto IL_003f;
		}

IL_003e:
		{
			G_B5_0 = 0;
		}

IL_003f:
		{
			V_5 = (bool)G_B5_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46554));
			bool L_9 = V_5;
			if (!L_9)
			{
				goto IL_0050;
			}
		}

IL_0045:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46555));
			// shouldCreateNewCollider = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46556));
			V_2 = (bool)1;
			// Object.Destroy(oldBoxCollider);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46557));
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_10 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46598));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46598));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46558));
		}

IL_0050:
		{
			// var oldSphereCollider = handle.GetComponent<SphereCollider>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46559));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46599));
			NullCheck(L_11);
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_12 = Component_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_mF7FF996C9C093859C2E567CB3991F9DCC003F82F(L_11, /*hidden argument*/Component_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_mF7FF996C9C093859C2E567CB3991F9DCC003F82F_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46599));
			V_4 = L_12;
			// if (oldSphereCollider != null && config.HandlePrefabColliderType == HandlePrefabCollider.Box)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46560));
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_13 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46600));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_14 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_13, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46600));
			if (!L_14)
			{
				goto IL_0072;
			}
		}

IL_0062:
		{
			PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_15 = __this->get_config_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46601));
			NullCheck(L_15);
			int32_t L_16 = PerAxisHandlesConfiguration_get_HandlePrefabColliderType_m420415B40C9BEF30ACC8571E95B8297ECB129A3D(L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46601));
			G_B10_0 = ((((int32_t)L_16) == ((int32_t)1))? 1 : 0);
			goto IL_0073;
		}

IL_0072:
		{
			G_B10_0 = 0;
		}

IL_0073:
		{
			V_6 = (bool)G_B10_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46561));
			bool L_17 = V_6;
			if (!L_17)
			{
				goto IL_0085;
			}
		}

IL_0079:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46562));
			// shouldCreateNewCollider = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46563));
			V_2 = (bool)1;
			// Object.Destroy(oldSphereCollider);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46564));
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_18 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46602));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46602));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46565));
		}

IL_0085:
		{
			// if (shouldCreateNewCollider)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46566));
			bool L_19 = V_2;
			V_7 = L_19;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46567));
			bool L_20 = V_7;
			if (!L_20)
			{
				goto IL_0196;
			}
		}

IL_008f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46568));
			// var handleBounds = VisualUtils.GetMaxBounds(GetVisual(handle).gameObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46569));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46603));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = VirtFuncInvoker1< Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * >::Invoke(16 /* UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetVisual(UnityEngine.Transform) */, __this, L_21);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46603));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46604));
			NullCheck(L_22);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46604));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46605));
			IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
			Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_24 = VisualUtils_GetMaxBounds_mDB7C526F8CDD40196B0F8450B16A24A095DD7FA6(L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46605));
			V_8 = L_24;
			// float maxDim = VisualUtils.GetMaxComponent(handleBounds.size);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46570));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46606));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46606));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46607));
			float L_26 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46607));
			V_9 = L_26;
			// float invScale = maxDim == 0.0f ? 0.0f : config.HandleSize / maxDim;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46571));
			float L_27 = V_9;
			if ((((float)L_27) == ((float)(0.0f))))
			{
				goto IL_00ca;
			}
		}

IL_00ba:
		{
			PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_28 = __this->get_config_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46608));
			NullCheck(L_28);
			float L_29 = HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB(L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46608));
			float L_30 = V_9;
			G_B16_0 = ((float)((float)L_29/(float)L_30));
			goto IL_00cf;
		}

IL_00ca:
		{
			G_B16_0 = (0.0f);
		}

IL_00cf:
		{
			V_10 = G_B16_0;
			// Vector3 colliderSizeScaled = handleBounds.size * invScale;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46572));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46609));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46609));
			float L_32 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46610));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_31, L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46610));
			V_11 = L_33;
			// Vector3 colliderCenterScaled = handleBounds.center * invScale;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46573));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46611));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Bounds_get_center_m4FB6E99F0533EE2D432988B08474D6DC9B8B744B((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46611));
			float L_35 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46612));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_34, L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46612));
			V_12 = L_36;
			// if (config.HandlePrefabColliderType == HandlePrefabCollider.Box)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46574));
			PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_37 = __this->get_config_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46613));
			NullCheck(L_37);
			int32_t L_38 = PerAxisHandlesConfiguration_get_HandlePrefabColliderType_m420415B40C9BEF30ACC8571E95B8297ECB129A3D(L_37, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46613));
			V_13 = (bool)((((int32_t)L_38) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46575));
			bool L_39 = V_13;
			if (!L_39)
			{
				goto IL_0148;
			}
		}

IL_0105:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46576));
			// BoxCollider collider = handle.gameObject.AddComponent<BoxCollider>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46577));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_40 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46614));
			NullCheck(L_40);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_41 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_40, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46614));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46615));
			NullCheck(L_41);
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_42 = GameObject_AddComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m94D5E6D9493DE6A574C28A9517C792D607653FE2(L_41, /*hidden argument*/GameObject_AddComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m94D5E6D9493DE6A574C28A9517C792D607653FE2_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46615));
			V_14 = L_42;
			// collider.size = colliderSizeScaled;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46578));
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_43 = V_14;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_44 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46616));
			NullCheck(L_43);
			BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_43, L_44, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46616));
			// collider.center = colliderCenterScaled;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46579));
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_45 = V_14;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_46 = V_12;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46617));
			NullCheck(L_45);
			BoxCollider_set_center_m8A871056CA383C9932A7694FE396A1EFA247FC69(L_45, L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46617));
			// collider.size += config.ColliderPadding;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46580));
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_47 = V_14;
			BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_48 = L_47;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46618));
			NullCheck(L_48);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_48, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46618));
			PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_50 = __this->get_config_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46619));
			NullCheck(L_50);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577(L_50, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46619));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46620));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_49, L_51, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46620));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46621));
			NullCheck(L_48);
			BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_48, L_52, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46621));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46581));
			goto IL_0195;
		}

IL_0148:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46582));
			// SphereCollider sphere = handle.gameObject.AddComponent<SphereCollider>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46583));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_53 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46622));
			NullCheck(L_53);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_54 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_53, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46622));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46623));
			NullCheck(L_54);
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_55 = GameObject_AddComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m95241D4825AC44999273D4B749190F26B0DBDDC7(L_54, /*hidden argument*/GameObject_AddComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m95241D4825AC44999273D4B749190F26B0DBDDC7_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46623));
			V_15 = L_55;
			// sphere.center = colliderCenterScaled;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46584));
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_56 = V_15;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = V_12;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46624));
			NullCheck(L_56);
			SphereCollider_set_center_m325070F5252B4A2EA567B653CAE3285F101FA3EE(L_56, L_57, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46624));
			// sphere.radius = VisualUtils.GetMaxComponent(colliderSizeScaled) * 0.5f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46585));
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_58 = V_15;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_59 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46625));
			IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
			float L_60 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_59, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46625));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46626));
			NullCheck(L_58);
			SphereCollider_set_radius_m3161573A2D89F495F4B79E16C52B905C0F9AD699(L_58, ((float)il2cpp_codegen_multiply((float)L_60, (float)(0.5f))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46626));
			// sphere.radius += VisualUtils.GetMaxComponent(config.ColliderPadding);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46586));
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_61 = V_15;
			SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_62 = L_61;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46627));
			NullCheck(L_62);
			float L_63 = SphereCollider_get_radius_m255804173C17314FD9538AE45C4A46D4882BC094(L_62, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46627));
			PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_64 = __this->get_config_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46628));
			NullCheck(L_64);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_65 = HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577(L_64, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46628));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46629));
			float L_66 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_65, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46629));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46630));
			NullCheck(L_62);
			SphereCollider_set_radius_m3161573A2D89F495F4B79E16C52B905C0F9AD699(L_62, ((float)il2cpp_codegen_add((float)L_63, (float)L_66)), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46630));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46587));
		}

IL_0195:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46588));
		}

IL_0196:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46589));
		}

IL_0197:
		{
			// foreach (var handle in handles)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46590));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46631));
			bool L_67 = Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_mAD3D01CD59B4E5F85488F4558068A27F9A4995AD_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46631));
			if (L_67)
			{
				goto IL_0013;
			}
		}

IL_01a3:
		{
			IL2CPP_LEAVE(0x1B4, FINALLY_01a5);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01a5;
	}

FINALLY_01a5:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46591));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46632));
		Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93((Enumerator_t003636A0CF194A4F8A0C2D810B60016904D40E85 *)(&V_0), /*hidden argument*/Enumerator_Dispose_m21545B453FC1DFF580D34B4D5ECA9C96DC09AE93_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46632));
		IL2CPP_END_FINALLY(421)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(421)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1B4, IL_01b4)
	}

IL_01b4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46592));
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetHandleIndex(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46633));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46634));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46635));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46636));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46637));
		goto IL_0026;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46638));
		// if (handle == handles[i])
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46639));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___handle0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_1 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		int32_t L_2 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46649));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_1, L_2, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46650));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46650));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46640));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46641));
		// return i;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46642));
		int32_t L_6 = V_0;
		V_2 = L_6;
		goto IL_0046;
	}

IL_0021:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46643));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46644));
		int32_t L_7 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_7, (int32_t)1));
	}

IL_0026:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46645));
		int32_t L_8 = V_0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_9 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46651));
		NullCheck(L_9);
		int32_t L_10 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_9, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46651));
		V_3 = (bool)((((int32_t)L_8) < ((int32_t)L_10))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46646));
		bool L_11 = V_3;
		if (L_11)
		{
			goto IL_0005;
		}
	}
	{
		// return handles.Count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46647));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_12 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46652));
		NullCheck(L_12);
		int32_t L_13 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_12, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46652));
		V_2 = L_13;
		goto IL_0046;
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46648));
		int32_t L_14 = V_2;
		return L_14;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetHandlePosition(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46653));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46654));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46655));
		// Debug.Assert(index >= 0 && index < NumHandles, "Handle position index out of bounds");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46656));
		int32_t L_0 = ___index0;
		if ((((int32_t)L_0) < ((int32_t)0)))
		{
			goto IL_0010;
		}
	}
	{
		int32_t L_1 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46659));
		int32_t L_2 = PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46659));
		G_B3_0 = ((((int32_t)L_1) < ((int32_t)L_2))? 1 : 0);
		goto IL_0011;
	}

IL_0010:
	{
		G_B3_0 = 0;
	}

IL_0011:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46660));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)G_B3_0, _stringLiteral5B165476B3A3CF4F6E7D18410F8FED86E519574A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46660));
		// return HandlePositions[index];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46657));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46661));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46661));
		int32_t L_4 = ___index0;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_0 = L_6;
		goto IL_002b;
	}

IL_002b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46658));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		return L_7;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetAxisType(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46662));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46663));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46664));
		// Debug.Assert(index >= 0 && index < NumHandles, "Edge axes index out of bounds");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46665));
		int32_t L_0 = ___index0;
		if ((((int32_t)L_0) < ((int32_t)0)))
		{
			goto IL_0010;
		}
	}
	{
		int32_t L_1 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46668));
		int32_t L_2 = PerAxisHandles_get_NumHandles_m4C2BDA504EC21558218C49D31B628BD0732E503B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46668));
		G_B3_0 = ((((int32_t)L_1) < ((int32_t)L_2))? 1 : 0);
		goto IL_0011;
	}

IL_0010:
	{
		G_B3_0 = 0;
	}

IL_0011:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46669));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)G_B3_0, _stringLiteralDA7F7509BC62962B546728EE5E4CCFFF5CAB8FE6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46669));
		// return handleAxes[index];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46670));
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_3 = VirtFuncInvoker0< CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* >::Invoke(19 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_handleAxes() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46670));
		int32_t L_4 = ___index0;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		int32_t L_6 = (int32_t)(L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_0 = L_6;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46667));
		int32_t L_7 = V_0;
		return L_7;
	}
}
// Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetAxisType(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46671));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46672));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46673));
		// int index = GetHandleIndex(handle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46674));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46677));
		int32_t L_1 = PerAxisHandles_GetHandleIndex_mF9F400C25F2808B25F6ED1544C0F07C6A8EF1D22(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46677));
		V_0 = L_1;
		// return GetAxisType(index);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46675));
		int32_t L_2 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46678));
		int32_t L_3 = PerAxisHandles_GetAxisType_mDABDD090D46225DDEBDFF7CB1BE97DD7E21DACD9(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46678));
		V_1 = L_3;
		goto IL_0013;
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46676));
		int32_t L_4 = V_1;
		return L_4;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::UpdateHandles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_UpdateHandles_m1DFEC16EB8A69A3D693FCB76F4F4AE0AA103A0F7 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_UpdateHandles_m1DFEC16EB8A69A3D693FCB76F4F4AE0AA103A0F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_UpdateHandles_m1DFEC16EB8A69A3D693FCB76F4F4AE0AA103A0F7_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46680));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46681));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46682));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46683));
		goto IL_0024;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46684));
		// handles[i].position = GetHandlePosition(i);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46685));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		int32_t L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46691));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_0, L_1, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46691));
		int32_t L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46692));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = PerAxisHandles_GetHandlePosition_mBB72D4D76B4B9ECCD0738A71A9D60E79CA527BC3(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46692));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46693));
		NullCheck(L_2);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_2, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46693));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46686));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46687));
		int32_t L_5 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_5, (int32_t)1));
	}

IL_0024:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46688));
		int32_t L_6 = V_0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_7 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46694));
		NullCheck(L_7);
		int32_t L_8 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_7, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46694));
		V_1 = (bool)((((int32_t)L_6) < ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46689));
		bool L_9 = V_1;
		if (L_9)
		{
			goto IL_0005;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46690));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::Reset(System.Boolean,Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.FlattenModeType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, bool ___areHandlesActive0, int32_t ___flattenAxis1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * V_1 = NULL;
	bool V_2 = false;
	int32_t V_3 = 0;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___areHandlesActive0), (&___flattenAxis1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_Reset_m49178B6D0747F727BC739B9D22E1E0615DE0710A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46695));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46696));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46697));
		// IsActive = areHandlesActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46698));
		bool L_0 = ___areHandlesActive0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46718));
		VirtActionInvoker1< bool >::Invoke(18 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::set_IsActive(System.Boolean) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46718));
		// ResetHandles();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46699));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46719));
		HandlesBase_ResetHandles_m0579BC8D7FC76F9D2C00F5B1A740A4932C8E0718(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46719));
		// if (IsActive && handleAxes.Length == handles.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46700));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46720));
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(17 /* System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_IsActive() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46720));
		if (!L_1)
		{
			goto IL_002f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46721));
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_2 = VirtFuncInvoker0< CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* >::Invoke(19 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_handleAxes() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46721));
		NullCheck(L_2);
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_3 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46722));
		NullCheck(L_3);
		int32_t L_4 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_3, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46722));
		G_B3_0 = ((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length))))) == ((int32_t)L_4))? 1 : 0);
		goto IL_0030;
	}

IL_002f:
	{
		G_B3_0 = 0;
	}

IL_0030:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46701));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0084;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46702));
		// List<int> flattenedHandles = VisualUtils.GetFlattenedIndices(flattenAxis, handleAxes);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46703));
		int32_t L_6 = ___flattenAxis1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46723));
		CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* L_7 = VirtFuncInvoker0< CardinalAxisTypeU5BU5D_t2BA4303ECAE6A134B6CE4873AE3F2C796CBC8161* >::Invoke(19 /* Microsoft.MixedReality.Toolkit.UI.BoundsControlTypes.CardinalAxisType[] Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_handleAxes() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46723));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46724));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_8 = VisualUtils_GetFlattenedIndices_m81EE91C2D3FD439A12215D9E929E162197789A97(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46724));
		V_1 = L_8;
		// if (flattenedHandles != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46704));
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_9 = V_1;
		V_2 = (bool)((!(((RuntimeObject*)(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 *)L_9) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46705));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_0083;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46706));
		// for (int i = 0; i < flattenedHandles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46707));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46708));
		goto IL_0073;
	}

IL_004f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46709));
		// handles[flattenedHandles[i]].gameObject.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46710));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_11 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_12 = V_1;
		int32_t L_13 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46725));
		NullCheck(L_12);
		int32_t L_14 = List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_inline(L_12, L_13, /*hidden argument*/List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46725));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46726));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_11, L_14, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46726));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46727));
		NullCheck(L_15);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46727));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46728));
		NullCheck(L_16);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_16, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46728));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46711));
		// for (int i = 0; i < flattenedHandles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46712));
		int32_t L_17 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_0073:
	{
		// for (int i = 0; i < flattenedHandles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46713));
		int32_t L_18 = V_3;
		List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * L_19 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46729));
		NullCheck(L_19);
		int32_t L_20 = List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_inline(L_19, /*hidden argument*/List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46729));
		V_4 = (bool)((((int32_t)L_18) < ((int32_t)L_20))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46714));
		bool L_21 = V_4;
		if (L_21)
		{
			goto IL_004f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46715));
	}

IL_0083:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46716));
	}

IL_0084:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46717));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::Create(UnityEngine.Vector3[]&,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** ___boundsCorners0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___boundsCorners0), (&___parent1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_Create_mEB5BF7A4AAEE7FEC93D3AFC255C1D6C7D6F7C1F9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46731));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46732));
		// CalculateHandlePositions(ref boundsCorners);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46733));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** L_0 = ___boundsCorners0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46736));
		VirtActionInvoker1< Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** >::Invoke(21 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CalculateHandlePositions(UnityEngine.Vector3[]&) */, __this, (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28**)L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46736));
		// CreateHandles(parent);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46734));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = ___parent1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46737));
		PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46737));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46735));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CreateHandles(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___parent0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_CreateHandles_mDB787C0CE92296DC90A3A9BCD0DEA3B0CC7FB2C5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46738));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46739));
	float G_B4_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46740));
		// for (int i = 0; i < HandlePositions.Length; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46741));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46742));
		goto IL_00e8;
	}

IL_0008:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46743));
		// GameObject handle = new GameObject();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46744));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46760));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
		GameObject__ctor_mA4DFA8F4471418C248E95B55070665EF344B4B2D(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46760));
		V_1 = L_0;
		// handle.name = HandlePositionDescription + "_" + i.ToString();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46745));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46761));
		String_t* L_2 = VirtFuncInvoker0< String_t* >::Invoke(20 /* System.String Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_HandlePositionDescription() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46761));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46762));
		String_t* L_3 = Int32_ToString_m1863896DE712BF97C031D55B12E1583F1982DC02((int32_t*)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46762));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46763));
		String_t* L_4 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(L_2, _stringLiteral53A0ACFAD59379B3E050338BF9F23CFC172EE787, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46763));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46764));
		NullCheck(L_1);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_1, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46764));
		// handle.transform.position = HandlePositions[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46746));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46765));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46765));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46766));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46766));
		int32_t L_8 = V_0;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46767));
		NullCheck(L_6);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_6, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46767));
		// handle.transform.parent = parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46747));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46768));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46768));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = ___parent0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46769));
		NullCheck(L_12);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46769));
		// Bounds handleVisualBounds = CreateVisual(i, handle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46748));
		int32_t L_14 = V_0;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46770));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_16 = PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6(__this, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46770));
		V_2 = L_16;
		// float maxDim = VisualUtils.GetMaxComponent(handleVisualBounds.size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46749));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46771));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46771));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46772));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		float L_18 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46772));
		V_3 = L_18;
		// float invScale = maxDim == 0.0f ? 0.0f : config.HandleSize / maxDim;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46750));
		float L_19 = V_3;
		if ((((float)L_19) == ((float)(0.0f))))
		{
			goto IL_007f;
		}
	}
	{
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_20 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46773));
		NullCheck(L_20);
		float L_21 = HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46773));
		float L_22 = V_3;
		G_B4_0 = ((float)((float)L_21/(float)L_22));
		goto IL_0084;
	}

IL_007f:
	{
		G_B4_0 = (0.0f);
	}

IL_0084:
	{
		V_4 = G_B4_0;
		// VisualUtils.AddComponentsToAffordance(handle, new Bounds(handleVisualBounds.center * invScale, handleVisualBounds.size * invScale),
		//     config.HandlePrefabColliderType, CursorContextInfo.CursorAction.Rotate, config.ColliderPadding, parent, config.DrawTetherWhenManipulating);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46751));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46774));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Bounds_get_center_m4FB6E99F0533EE2D432988B08474D6DC9B8B744B((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46774));
		float L_25 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46775));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46776));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46776));
		float L_28 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46777));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46777));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46778));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_30;
		memset((&L_30), 0, sizeof(L_30));
		Bounds__ctor_m294E77A20EC1A3E96985FE1A925CB271D1B5266D((&L_30), L_26, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46778));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_31 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46779));
		NullCheck(L_31);
		int32_t L_32 = PerAxisHandlesConfiguration_get_HandlePrefabColliderType_m420415B40C9BEF30ACC8571E95B8297ECB129A3D(L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46779));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_33 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46780));
		NullCheck(L_33);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577(L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46780));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = ___parent0;
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_36 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46781));
		NullCheck(L_36);
		bool L_37 = HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_inline(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46782));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_AddComponentsToAffordance_m7C70AF054EA3FC321C976E96C5138CCCD808E717(L_23, L_30, L_32, 2, L_34, L_35, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46782));
		// handles.Add(handle.transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46752));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_38 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46783));
		NullCheck(L_39);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_40 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46784));
		NullCheck(L_38);
		List_1_Add_m58D7C85FC3459259B4B9B182A98C838005A62F3C(L_38, L_40, /*hidden argument*/List_1_Add_m58D7C85FC3459259B4B9B182A98C838005A62F3C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46784));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46753));
		// for (int i = 0; i < HandlePositions.Length; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46754));
		int32_t L_41 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_41, (int32_t)1));
	}

IL_00e8:
	{
		// for (int i = 0; i < HandlePositions.Length; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46755));
		int32_t L_42 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46785));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_43 = PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46785));
		NullCheck(L_43);
		V_5 = (bool)((((int32_t)L_42) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_43)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46756));
		bool L_44 = V_5;
		if (L_44)
		{
			goto IL_0008;
		}
	}
	{
		// VisualUtils.HandleIgnoreCollider(config.HandlesIgnoreCollider, handles);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46757));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_45 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46786));
		NullCheck(L_45);
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_46 = HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_inline(L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46786));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_47 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46787));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_HandleIgnoreCollider_m2648FB60E53140B183CD97FEE4C44E86E103BFF9(L_46, L_47, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46787));
		// objectsChangedEvent.Invoke(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46758));
		ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * L_48 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_objectsChangedEvent_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46788));
		NullCheck(L_48);
		UnityEvent_1_Invoke_mCB79CAADA85E82A1F2DE6F295514F0E0218CB5FB(L_48, __this, /*hidden argument*/UnityEvent_1_Invoke_mCB79CAADA85E82A1F2DE6F295514F0E0218CB5FB_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46788));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46759));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::RecreateVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_RecreateVisuals_mA352CE750372B392B144CFB91CB40DFAF931E019 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_RecreateVisuals_mA352CE750372B392B144CFB91CB40DFAF931E019_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_RecreateVisuals_mA352CE750372B392B144CFB91CB40DFAF931E019_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46789));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46790));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46791));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46792));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46793));
		goto IL_0084;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46794));
		// Transform obsoleteChild = handles[i].Find(visualsName);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46795));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_0 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		int32_t L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46813));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_0, L_1, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46813));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46814));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = Transform_Find_m673797B6329C2669A543904532ABA1680DA4EAD1(L_2, _stringLiteralEFFCB816CD41234C058C479A353FFE257645BE7A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46814));
		V_1 = L_3;
		// if (obsoleteChild)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46796));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46815));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46815));
		V_3 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46797));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46798));
		// obsoleteChild.parent = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46799));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46816));
		NullCheck(L_7);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_7, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46816));
		// Object.Destroy(obsoleteChild.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46800));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46817));
		NullCheck(L_8);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46817));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46818));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46818));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46801));
		goto IL_004c;
	}

IL_003f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46802));
		// Debug.LogError("Couldn't find handle visual on recreating visuals");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46803));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46819));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(_stringLiteralD74E03B133803949AEF715A6F3947650E235C6DA, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46819));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46804));
	}

IL_004c:
	{
		// Bounds visualBounds = CreateVisual(i, handles[i].gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46805));
		int32_t L_10 = V_0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_11 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		int32_t L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46820));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_11, L_12, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46820));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46821));
		NullCheck(L_13);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46821));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46822));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_15 = PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6(__this, L_10, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46822));
		V_2 = L_15;
		// UpdateColliderBounds(handles[i], visualBounds.size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46806));
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_16 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		int32_t L_17 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46823));
		NullCheck(L_16);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_inline(L_16, L_17, /*hidden argument*/List_1_get_Item_mA33D8A6F21573AD262EE055BA64C73668489B86D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46823));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46824));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46824));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46825));
		VirtActionInvoker2< Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(12 /* System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::UpdateColliderBounds(UnityEngine.Transform,UnityEngine.Vector3) */, __this, L_18, L_19);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46825));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46807));
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46808));
		int32_t L_20 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_20, (int32_t)1));
	}

IL_0084:
	{
		// for (int i = 0; i < handles.Count; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46809));
		int32_t L_21 = V_0;
		List_1_tE2895D6ED3A7C02005A89712BECBA7812B6CCC91 * L_22 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_handles_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46826));
		NullCheck(L_22);
		int32_t L_23 = List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_inline(L_22, /*hidden argument*/List_1_get_Count_m60ECB73FE15B95838DB91630185659793A5B3B8B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46826));
		V_4 = (bool)((((int32_t)L_21) < ((int32_t)L_23))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46810));
		bool L_24 = V_4;
		if (L_24)
		{
			goto IL_0005;
		}
	}
	{
		// objectsChangedEvent.Invoke(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46811));
		ProximityObjectsChangedEvent_tE81CAAEFF51DC152CAE2C4A4CA84E96AEAB21ED9 * L_25 = ((HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 *)__this)->get_objectsChangedEvent_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46827));
		NullCheck(L_25);
		UnityEvent_1_Invoke_mCB79CAADA85E82A1F2DE6F295514F0E0218CB5FB(L_25, __this, /*hidden argument*/UnityEvent_1_Invoke_mCB79CAADA85E82A1F2DE6F295514F0E0218CB5FB_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46827));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46812));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::UpdateColliderBounds(UnityEngine.Transform,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PerAxisHandles_UpdateColliderBounds_mDC89FEBD908D628660F87D3202B751CFCA67B128 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___visualSize1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_UpdateColliderBounds_mDC89FEBD908D628660F87D3202B751CFCA67B128_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * V_4 = NULL;
	SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * V_5 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0), (&___visualSize1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_UpdateColliderBounds_mDC89FEBD908D628660F87D3202B751CFCA67B128_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46828));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46829));
	float G_B3_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46830));
		// float maxDim = VisualUtils.GetMaxComponent(visualSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46831));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___visualSize1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46848));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		float L_1 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46848));
		V_0 = L_1;
		// float invScale = maxDim == 0.0f ? 0.0f : config.HandleSize / maxDim;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46832));
		float L_2 = V_0;
		if ((((float)L_2) == ((float)(0.0f))))
		{
			goto IL_001f;
		}
	}
	{
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_3 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46849));
		NullCheck(L_3);
		float L_4 = HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46849));
		float L_5 = V_0;
		G_B3_0 = ((float)((float)L_4/(float)L_5));
		goto IL_0024;
	}

IL_001f:
	{
		G_B3_0 = (0.0f);
	}

IL_0024:
	{
		V_1 = G_B3_0;
		// GetVisual(handle).transform.localScale = new Vector3(invScale, invScale, invScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46833));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46850));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = VirtFuncInvoker1< Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * >::Invoke(16 /* UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::GetVisual(UnityEngine.Transform) */, __this, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46850));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46851));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46851));
		float L_9 = V_1;
		float L_10 = V_1;
		float L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46852));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12;
		memset((&L_12), 0, sizeof(L_12));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_12), L_9, L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46852));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46853));
		NullCheck(L_8);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_8, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46853));
		// Vector3 colliderSizeScaled = visualSize * invScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46834));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = ___visualSize1;
		float L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46854));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46854));
		V_2 = L_15;
		// if (config.HandlePrefabColliderType == HandlePrefabCollider.Box)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46835));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_16 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46855));
		NullCheck(L_16);
		int32_t L_17 = PerAxisHandlesConfiguration_get_HandlePrefabColliderType_m420415B40C9BEF30ACC8571E95B8297ECB129A3D(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46855));
		V_3 = (bool)((((int32_t)L_17) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46836));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_0091;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46837));
		// BoxCollider collider = handle.gameObject.GetComponent<BoxCollider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46838));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46856));
		NullCheck(L_19);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46856));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46857));
		NullCheck(L_20);
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_21 = GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55(L_20, /*hidden argument*/GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46857));
		V_4 = L_21;
		// collider.size = colliderSizeScaled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46839));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_22 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46858));
		NullCheck(L_22);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46858));
		// collider.size += BaseConfig.ColliderPadding;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46840));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_24 = V_4;
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_25 = L_24;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46859));
		NullCheck(L_25);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46859));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46860));
		HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * L_27 = VirtFuncInvoker0< HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * >::Invoke(11 /* Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBaseConfiguration Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_BaseConfig() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46860));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46861));
		NullCheck(L_27);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46861));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46862));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_26, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46862));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46863));
		NullCheck(L_25);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_25, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46863));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46841));
		goto IL_00d3;
	}

IL_0091:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46842));
		// SphereCollider collider = handle.gameObject.GetComponent<SphereCollider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46843));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46864));
		NullCheck(L_30);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46864));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46865));
		NullCheck(L_31);
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_32 = GameObject_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m4DEC2B4735AA4EA2D41E2D02AF512A49659AD039(L_31, /*hidden argument*/GameObject_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m4DEC2B4735AA4EA2D41E2D02AF512A49659AD039_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46865));
		V_5 = L_32;
		// collider.radius = VisualUtils.GetMaxComponent(colliderSizeScaled) * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46844));
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_33 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46866));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		float L_35 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46866));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46867));
		NullCheck(L_33);
		SphereCollider_set_radius_m3161573A2D89F495F4B79E16C52B905C0F9AD699(L_33, ((float)il2cpp_codegen_multiply((float)L_35, (float)(0.5f))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46867));
		// collider.radius += VisualUtils.GetMaxComponent(config.ColliderPadding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46845));
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_36 = V_5;
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_37 = L_36;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46868));
		NullCheck(L_37);
		float L_38 = SphereCollider_get_radius_m255804173C17314FD9538AE45C4A46D4882BC094(L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46868));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_39 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46869));
		NullCheck(L_39);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = HandlesBaseConfiguration_get_ColliderPadding_m6D8D81CF4145AF2DF4AFD930D285484967283577(L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46869));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46870));
		float L_41 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46870));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46871));
		NullCheck(L_37);
		SphereCollider_set_radius_m3161573A2D89F495F4B79E16C52B905C0F9AD699(L_37, ((float)il2cpp_codegen_add((float)L_38, (float)L_41)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46871));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46846));
	}

IL_00d3:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46847));
		return;
	}
}
// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::CreateVisual(System.Int32,UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, int32_t ___handleIndex0, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___parent1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * V_7 = NULL;
	bool V_8 = false;
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  V_9;
	memset((&V_9), 0, sizeof(V_9));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handleIndex0), (&___parent1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_CreateVisual_mFE0EF533B3EE0EB288608AC49DA416451778ABC6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46872));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46873));
	float G_B6_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46874));
		// GameObject prefabType = config.HandlePrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46875));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_0 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46904));
		NullCheck(L_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = HandlesBaseConfiguration_get_HandlePrefab_m2872FE76A3DC5EF81400D8FACBAF54D14732A37B(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46904));
		V_1 = L_1;
		// if (prefabType != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46876));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46905));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46905));
		V_6 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46877));
		bool L_4 = V_6;
		if (!L_4)
		{
			goto IL_0025;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46878));
		// handleVisual = Object.Instantiate(prefabType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46879));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46906));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_5, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46906));
		V_0 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46880));
		goto IL_0047;
	}

IL_0025:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46881));
		// handleVisual = GameObject.CreatePrimitive(PrimitiveType.Sphere);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46882));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46907));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = GameObject_CreatePrimitive_mA4D35085D817369E4A513FF31D745CEB27B07F6A(0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46907));
		V_0 = L_7;
		// var collider = handleVisual.GetComponent<SphereCollider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46883));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46908));
		NullCheck(L_8);
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_9 = GameObject_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m4DEC2B4735AA4EA2D41E2D02AF512A49659AD039(L_8, /*hidden argument*/GameObject_GetComponent_TisSphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F_m4DEC2B4735AA4EA2D41E2D02AF512A49659AD039_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46908));
		V_7 = L_9;
		// collider.enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46884));
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_10 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46909));
		NullCheck(L_10);
		Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B(L_10, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46909));
		// Object.Destroy(collider);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46885));
		SphereCollider_tAC3E5E20B385DF1C0B17F3EA5C7214F71367706F * L_11 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46910));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46910));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46886));
	}

IL_0047:
	{
		// Bounds handleVisualBounds = VisualUtils.GetMaxBounds(handleVisual);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46887));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46911));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_13 = VisualUtils_GetMaxBounds_mDB7C526F8CDD40196B0F8450B16A24A095DD7FA6(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46911));
		V_2 = L_13;
		// float maxDim = VisualUtils.GetMaxComponent(handleVisualBounds.size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46888));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46912));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Bounds_get_size_m0739F2686AE2D3416A33AEF892653091347FD4A6((Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46912));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46913));
		float L_15 = VisualUtils_GetMaxComponent_m91CAEC309A11233981FCABB88F5981A6FFF8DC0C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46913));
		V_3 = L_15;
		// float invScale = maxDim == 0.0f ? 0.0f : config.HandleSize / maxDim;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46889));
		float L_16 = V_3;
		if ((((float)L_16) == ((float)(0.0f))))
		{
			goto IL_0072;
		}
	}
	{
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_17 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46914));
		NullCheck(L_17);
		float L_18 = HandlesBaseConfiguration_get_HandleSize_m10B1DF6D5A8DABA56E4F3E297E707950635117CB(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46914));
		float L_19 = V_3;
		G_B6_0 = ((float)((float)L_18/(float)L_19));
		goto IL_0077;
	}

IL_0072:
	{
		G_B6_0 = (0.0f);
	}

IL_0077:
	{
		V_4 = G_B6_0;
		// handleVisual.name = visualsName;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46890));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46915));
		NullCheck(L_20);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_20, _stringLiteralEFFCB816CD41234C058C479A353FFE257645BE7A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46915));
		// handleVisual.transform.parent = parent.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46891));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46916));
		NullCheck(L_21);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46916));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = ___parent1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46917));
		NullCheck(L_23);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46917));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46918));
		NullCheck(L_22);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_22, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46918));
		// handleVisual.transform.localScale = new Vector3(invScale, invScale, invScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46892));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_25 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46919));
		NullCheck(L_25);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46919));
		float L_27 = V_4;
		float L_28 = V_4;
		float L_29 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46920));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30;
		memset((&L_30), 0, sizeof(L_30));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_30), L_27, L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46920));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46921));
		NullCheck(L_26);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_26, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46921));
		// handleVisual.transform.localPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46893));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46922));
		NullCheck(L_31);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46922));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46923));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46923));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46924));
		NullCheck(L_32);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_32, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46924));
		// handleVisual.transform.localRotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46894));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_34 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46925));
		NullCheck(L_34);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46925));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46926));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_36 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46926));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46927));
		NullCheck(L_35);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_35, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46927));
		// Quaternion realignment = GetRotationRealignment(handleIndex);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46895));
		int32_t L_37 = ___handleIndex0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46928));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_38 = VirtFuncInvoker1< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , int32_t >::Invoke(22 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetRotationRealignment(System.Int32) */, __this, L_37);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46928));
		V_5 = L_38;
		// parent.transform.localRotation = realignment;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46896));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = ___parent1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46929));
		NullCheck(L_39);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_40 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46929));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_41 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46930));
		NullCheck(L_40);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_40, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46930));
		// if (config.HandleMaterial != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46897));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_42 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46931));
		NullCheck(L_42);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_43 = HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A(L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46932));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_44 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_43, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46932));
		V_8 = L_44;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46898));
		bool L_45 = V_8;
		if (!L_45)
		{
			goto IL_0112;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46899));
		// VisualUtils.ApplyMaterialToAllRenderers(handleVisual, config.HandleMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46900));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_46 = V_0;
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_47 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46933));
		NullCheck(L_47);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_48 = HandlesBaseConfiguration_get_HandleMaterial_m17FC98349CA115E1B8A77EFC4858E3D3EA13BB3A(L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46933));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46934));
		IL2CPP_RUNTIME_CLASS_INIT(VisualUtils_t5887DB35DBC877498B2A1B28F861365F164FBD18_il2cpp_TypeInfo_var);
		VisualUtils_ApplyMaterialToAllRenderers_m02BE007BE28185C87FE3C4BA56E6A1B659CE2BC6(L_46, L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46934));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46901));
	}

IL_0112:
	{
		// return handleVisualBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46902));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_49 = V_2;
		V_9 = L_49;
		goto IL_0117;
	}

IL_0117:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46903));
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_50 = V_9;
		return L_50;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::IsVisible(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PerAxisHandles_IsVisible_m6677B58F1E1336A9D3AA56AC6CC7CD4AED400EF1 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_IsVisible_m6677B58F1E1336A9D3AA56AC6CC7CD4AED400EF1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_IsVisible_m6677B58F1E1336A9D3AA56AC6CC7CD4AED400EF1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46935));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46936));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46937));
		// if (!IsActive)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46951));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(17 /* System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.HandlesBase::get_IsActive() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46951));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46939));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46940));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46941));
		V_1 = (bool)0;
		goto IL_0060;
	}

IL_0013:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46942));
		// CardinalAxisType axisType = GetAxisType(handle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46943));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46952));
		int32_t L_3 = PerAxisHandles_GetAxisType_mC3C33BEF8A51FC55E9533EA4F71908DF8C0BE407(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46952));
		V_2 = L_3;
		// switch (axisType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46944));
		int32_t L_4 = V_2;
		V_3 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46945));
		int32_t L_5 = V_3;
		switch (L_5)
		{
			case 0:
			{
				goto IL_0032;
			}
			case 1:
			{
				goto IL_0040;
			}
			case 2:
			{
				goto IL_004e;
			}
		}
	}
	{
		goto IL_005c;
	}

IL_0032:
	{
		// return config.ShowHandleForX;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46946));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_6 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46953));
		NullCheck(L_6);
		bool L_7 = PerAxisHandlesConfiguration_get_ShowHandleForX_m35126E9B653827DAFB16D98204BAD55F9F231745(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46953));
		V_1 = L_7;
		goto IL_0060;
	}

IL_0040:
	{
		// return config.ShowHandleForY;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46947));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_8 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46954));
		NullCheck(L_8);
		bool L_9 = PerAxisHandlesConfiguration_get_ShowHandleForY_m878DB1D479ED2CAEF609C69B9E287FC20FBF29B5(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46954));
		V_1 = L_9;
		goto IL_0060;
	}

IL_004e:
	{
		// return config.ShowHandleForZ;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46948));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_10 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46955));
		NullCheck(L_10);
		bool L_11 = PerAxisHandlesConfiguration_get_ShowHandleForZ_mF11D7B3ECD7B8D89A395A8A36A4B3B56B88892D4(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46955));
		V_1 = L_11;
		goto IL_0060;
	}

IL_005c:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46949));
		V_1 = (bool)0;
		goto IL_0060;
	}

IL_0060:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46950));
		bool L_12 = V_1;
		return L_12;
	}
}
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::GetVisual(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * PerAxisHandles_GetVisual_mC47AE66595F28612675BBE780D6A42CCC80FC754 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_GetVisual_mC47AE66595F28612675BBE780D6A42CCC80FC754_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_0 = NULL;
	bool V_1 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_GetVisual_mC47AE66595F28612675BBE780D6A42CCC80FC754_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46956));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46957));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46958));
		// Transform childTransform = handle.GetChild(0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46959));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___handle0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46966));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = Transform_GetChild_mC86B9B61E4EC086A571B09EA7A33FFBF50DF52D3(L_0, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46966));
		V_0 = L_1;
		// if (childTransform != null && childTransform.name == visualsName)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46960));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46967));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46967));
		if (!L_3)
		{
			goto IL_0024;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46968));
		NullCheck(L_4);
		String_t* L_5 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46968));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46969));
		bool L_6 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_5, _stringLiteralEFFCB816CD41234C058C479A353FFE257645BE7A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46969));
		G_B3_0 = ((int32_t)(L_6));
		goto IL_0025;
	}

IL_0024:
	{
		G_B3_0 = 0;
	}

IL_0025:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46961));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46962));
		// return childTransform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46963));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = V_0;
		V_2 = L_8;
		goto IL_0032;
	}

IL_002e:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46964));
		V_2 = (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL;
		goto IL_0032;
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46965));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = V_2;
		return L_9;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.BoundsControl.PerAxisHandles::get_IsActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PerAxisHandles_get_IsActive_mE586BAE00D980C689E115879CB24D187AFFACAA6 (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_get_IsActive_mE586BAE00D980C689E115879CB24D187AFFACAA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_get_IsActive_mE586BAE00D980C689E115879CB24D187AFFACAA6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46970));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46971));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46972));
		// return (config.ShowHandleForX || config.ShowHandleForY || config.ShowHandleForZ) && base.IsActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46973));
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_0 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46975));
		NullCheck(L_0);
		bool L_1 = PerAxisHandlesConfiguration_get_ShowHandleForX_m35126E9B653827DAFB16D98204BAD55F9F231745(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46975));
		if (L_1)
		{
			goto IL_0028;
		}
	}
	{
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_2 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46976));
		NullCheck(L_2);
		bool L_3 = PerAxisHandlesConfiguration_get_ShowHandleForY_m878DB1D479ED2CAEF609C69B9E287FC20FBF29B5(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46976));
		if (L_3)
		{
			goto IL_0028;
		}
	}
	{
		PerAxisHandlesConfiguration_t511756290A2E629E020494043AE643EA80AABCFA * L_4 = __this->get_config_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46977));
		NullCheck(L_4);
		bool L_5 = PerAxisHandlesConfiguration_get_ShowHandleForZ_mF11D7B3ECD7B8D89A395A8A36A4B3B56B88892D4(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46977));
		if (!L_5)
		{
			goto IL_0030;
		}
	}

IL_0028:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46978));
		bool L_6 = HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46978));
		G_B5_0 = ((int32_t)(L_6));
		goto IL_0031;
	}

IL_0030:
	{
		G_B5_0 = 0;
	}

IL_0031:
	{
		V_0 = (bool)G_B5_0;
		goto IL_0034;
	}

IL_0034:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46974));
		bool L_7 = V_0;
		return L_7;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12_inline (BoundingBox_t41CD02EF26031C50CD85087BDE30D1FEA9B8D921 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundingBox_get_TargetBounds_m942893AF257C8846876F41FF094874E21C0BCC12_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 25898));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 25899));
	{
		// public BoxCollider TargetBounds { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 25900));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_U3CTargetBoundsU3Ek__BackingField_82();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10FMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TargetBounds_mEE6F52049C58C98A3C86B5AA477CC428B3CFE10F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43734));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43735));
	{
		// public BoxCollider TargetBounds { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43736));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_U3CTargetBoundsU3Ek__BackingField_62();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_EnableConstraints_m17872209608EC071D1EECE353562FF162CCBF217_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43655));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43656));
	{
		// get => enableConstraints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43657));
		bool L_0 = __this->get_enableConstraints_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_set_TargetBounds_mA72C231E2EED0058428BAC2BF06637A0A191C7F1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43737));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43738));
	{
		// public BoxCollider TargetBounds { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43739));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = ___value0;
		__this->set_U3CTargetBoundsU3Ek__BackingField_62(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9CMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleStopped_mE3179A747A9FF3E40ED9681AEF00D8E1C5718B9C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43685));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43686));
	{
		// get => scaleStopped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43687));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_scaleStopped_28();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_RotateStopped_m4E1053B3195371059B2CED87A150BAD1A1FADCA2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43673));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43674));
	{
		// get => rotateStopped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43675));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_rotateStopped_26();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TranslateStopped_mD5B66B8FF883B0F59C0ACA7BDD7CBCED162146D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43698));
	{
		// get => translateStopped;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43699));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_translateStopped_30();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 50938));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 50939));
	{
		// set;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 50940));
		bool L_0 = ___value0;
		__this->set_U3CEnableElasticsUpdateU3Ek__BackingField_11(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577FMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleHandlesConfig_m24C5AD9B46366D82A329C037DC0CC470CCF7577F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43561));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43562));
	{
		// get => scaleHandlesConfiguration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43563));
		ScaleHandlesConfiguration_tCE9C53AB5B537C3C8812BA690D901F087292A339 * L_0 = __this->get_scaleHandlesConfiguration_13();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_UniformScaleOnFlattenedAxis_m4843E0B726FC346A2BD42CB2585B8AB68FDB3C63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43514));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43515));
	{
		// get => uniformScaleOnFlattenedAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43516));
		bool L_0 = __this->get_uniformScaleOnFlattenedAxis_9();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26680));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26681));
	{
		// public GameObject NewFocusedObject { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26682));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CNewFocusedObjectU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26668));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26669));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26670));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0DMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26775));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26776));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21973));
	{
		// public Vector3 Point { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21974));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1DMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_ScaleStarted_m0EC28F62BDE34575E27F8E40EC9F62AA2B49FF1D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43680));
	{
		// get => scaleStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43681));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_scaleStarted_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_RotateStarted_m1EABB6F917EB336EA8D97067A9CD6299A28EEBA9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43667));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43668));
	{
		// get => rotateStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43669));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_rotateStarted_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_inline (BoundsControl_t5E7C6F3F7BA6091290642C73CA96AC5C812F9BA9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BoundsControl_get_TranslateStarted_m3693343EA180D8784717FD6ECD1B03B6397979F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43691));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43692));
	{
		// get => translateStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 43693));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_translateStarted_29();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26842));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26843));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26844));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_inline (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_HandlesIgnoreCollider_m7B06132089520AE8D260F4D148D74FBB96E814A5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45478));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45479));
	{
		// get => handlesIgnoreCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45480));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = __this->get_handlesIgnoreCollider_10();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_inline (HandlesBaseConfiguration_t7FD9823A98F433F7DB30637A362CE0FAA626249C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBaseConfiguration_get_DrawTetherWhenManipulating_m78FE3643A114E9E769581A66F53EA1E509B85BD8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45464));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45465));
	{
		// get => drawTetherWhenManipulating;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 45466));
		bool L_0 = __this->get_drawTetherWhenManipulating_9();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_inline (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_set_HandlePositions_m24AC4DD3EA2B74291453DD14928928F102679778_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46506));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46507));
	{
		// protected Vector3[] HandlePositions { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46508));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CHandlePositionsU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_inline (PerAxisHandles_t77BE907C783B41E518DC06AD3724BCCD98CAF2A6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PerAxisHandles_get_HandlePositions_m08DCDFD35036EB35DC9BF7261A5AD5CE2132F228_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46503));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46504));
	{
		// protected Vector3[] HandlePositions { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46505));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CHandlePositionsU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_inline (HandlesBase_t391E8087244B9B9778CF9296B14066551D6EC395 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8DMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandlesBase_get_IsActive_mF743C11B645A673747E847B739293DD84559DA8D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46039));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46040));
	{
		// get => isActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 46041));
		bool L_0 = __this->get_isActive_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_gshared_inline (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mB9D869619B30FC5432E5F514D166A02AE8E8D626_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)__this->get__items_1();
		int32_t L_3 = ___index0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)L_2, (int32_t)L_3);
		return (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_gshared_inline (List_1_tFCCBEDAA56D8F7598520FB136A9F8D713033D6B5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6FMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m2E29D30C43F78ABB30F6C7881652C11852FD4D6F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55CMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_current_3();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72_gshared_inline (KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Key_mCD5F3A00B8E2EB1EF1E4EA80AD1BE779D2977A72_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_key_0();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6_gshared_inline (KeyValuePair_2_t24A56D908A4696DEB18C00F0092EC0027C9EE55A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_m5439C15C59A3A47EE8C742B84EE189C0A6843BD6_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_0 = (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 )__this->get_value_1();
		return (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Key_m9D4E9BCBAB1BE560871A0889C851FC22A09975F4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_key_0();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AECMicrosoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_value_1();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_2 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)__this->get__items_1();
		int32_t L_3 = ___index0;
		RuntimeObject * L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)L_2, (int32_t)L_3);
		return (RuntimeObject *)L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_gshared_inline (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mDF3F52C7C1985C572A07CD15F1486A0035D288D5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)__this->get__items_1();
		int32_t L_3 = ___index0;
		int32_t L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)L_2, (int32_t)L_3);
		return (int32_t)L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_gshared_inline (List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76Microsoft_MixedReality_Toolkit_SDK6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m0AEC7165BCDA1870BB35D5B1BE47F1F0EAE89C76_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
