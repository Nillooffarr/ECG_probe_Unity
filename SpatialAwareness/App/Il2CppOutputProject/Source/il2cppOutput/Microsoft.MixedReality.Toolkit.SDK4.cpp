#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer
struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7;
// Microsoft.MixedReality.Toolkit.Input.BaseCursor
struct BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.BaseInputHandler
struct BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35;
// Microsoft.MixedReality.Toolkit.Input.BaseMousePointer
struct BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99;
// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable
struct BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03;
// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer
struct ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064;
// Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData
struct HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69;
// Microsoft.MixedReality.Toolkit.Input.ICursorModifier
struct ICursorModifier_tDE9922B058ED50BEA8696DA85B1548D40B879493;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor
struct IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler
struct IMixedRealityFocusHandler_t5437E688850A82CF30CBB00C70F476568C7AC7A5;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem
struct IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
// Microsoft.MixedReality.Toolkit.Input.IPointerResult
struct IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278;
// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>
struct InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Object>
struct InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440;
// Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse[]
struct KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75;
// Microsoft.MixedReality.Toolkit.Input.LinePointer
struct LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile
struct MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile
struct MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile
struct MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile
struct MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile
struct MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile
struct MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[]
struct MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile
struct MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E;
// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile
struct MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI[]
struct NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798;
// Microsoft.MixedReality.Toolkit.Input.ObjectCursor
struct ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2;
// Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum[]
struct ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26;
// Microsoft.MixedReality.Toolkit.Input.PointerClickHandler
struct PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50;
// Microsoft.MixedReality.Toolkit.Input.PointerHandler
struct PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C;
// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent
struct PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7;
// Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7
struct U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816;
// Microsoft.MixedReality.Toolkit.Input.PokePointer
struct PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18;
// Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer
struct RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7;
// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer
struct ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175;
// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer
struct ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4;
// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7;
// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler
struct SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560;
// Microsoft.MixedReality.Toolkit.Input.SpherePointer
struct SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C;
// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo
struct SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A;
// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint
struct SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA;
// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual
struct SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017;
// Microsoft.MixedReality.Toolkit.Input.SpriteCursor
struct SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2;
// Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum[]
struct SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C;
// Microsoft.MixedReality.Toolkit.Input.TouchHandler
struct TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2;
// Microsoft.MixedReality.Toolkit.Input.TouchPointer
struct TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F;
// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer
struct IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD;
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip
struct SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355;
// Microsoft.MixedReality.Toolkit.UI.TouchEvent
struct TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4;
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider
struct BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4;
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer
struct BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA;
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[]
struct BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822;
// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider
struct BezierDataProvider_t437659C918416945599C5DF216E705A48291C685;
// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia
struct BezierInertia_t247BB6E8220F78509717A5D550548037C274B166;
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer
struct MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE;
// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2/Entry<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>[]
struct EntryU5BU5D_tC8A9A1409B9B63FD9461726F53E2E641394AE72B;
// System.Collections.Generic.Dictionary`2/Entry<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>[]
struct EntryU5BU5D_tEAD84EBA91834A43954F0A429774E0250668D119;
// System.Collections.Generic.Dictionary`2/Entry<System.String,UnityEngine.Events.UnityEvent>[]
struct EntryU5BU5D_t3A0605A366C9BC0D7BC15F59F1FA9BB378197E72;
// System.Collections.Generic.Dictionary`2/KeyCollection<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>
struct KeyCollection_t23E1BC3938DB450E5B0FEA3C253406E55AEA406C;
// System.Collections.Generic.Dictionary`2/KeyCollection<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>
struct KeyCollection_t954500B5418B642F1F87D3C4D68630608EC86C5B;
// System.Collections.Generic.Dictionary`2/KeyCollection<System.String,UnityEngine.Events.UnityEvent>
struct KeyCollection_tC37B50614E4B343CC850DFD6CBF8142542987FDC;
// System.Collections.Generic.Dictionary`2/ValueCollection<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>
struct ValueCollection_t116B84921B01585404DF27C46FD9295BC2136572;
// System.Collections.Generic.Dictionary`2/ValueCollection<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>
struct ValueCollection_t54605B51AD0B778B85F671E119C623D4DBE89AA6;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.String,UnityEngine.Events.UnityEvent>
struct ValueCollection_tFE7F4FABB32A712697C4E554092412BA9CC4EDB0;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>
struct Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>
struct Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC;
// System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>
struct Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060;
// System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Single>
struct Dictionary_2_t4EE284C45B1CEC7BE865F08F7BD7C0776765B88B;
// System.Collections.Generic.Dictionary`2<System.Object,System.Object>
struct Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA;
// System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>
struct Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545;
// System.Collections.Generic.HashSet`1/Slot<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>[]
struct SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1;
// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F;
// System.Collections.Generic.HashSet`1<System.Object>
struct HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3;
// System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB;
// System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>
struct IEnumerable_1_tB5C07E05E215DF4A14723468D97495ED351CD5A0;
// System.Collections.Generic.IEnumerator`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>
struct IEnumerator_1_t07E1A24FEC6726D9EBDBA123BAFA3DE1B50208C5;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct IEqualityComparer_1_t064C223FF9217A6DF0423D99A6E66C28C73E518A;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint>
struct IEqualityComparer_1_t223CDEA89E79F60CB0C83D846FA30D2BD466ADFA;
// System.Collections.Generic.IEqualityComparer`1<System.String>
struct IEqualityComparer_1_t1F07EAC22CC1D4F279164B144240E4718BD7E7A9;
// System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI>
struct IReadOnlyList_1_tDC67F606C39A8C34254D870959C6C18CF0B50D68;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI>
struct List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Physics.Distorter>
struct List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.IToolTipBackground>
struct List_1_t1F7CF4BE5036D18AC61BCD74E7D06CD4CF7872E7;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.IToolTipHighlight>
struct List_1_t8EF8C6D7F65FD831BF6535C5B2C753BB14EB1427;
// System.Collections.Generic.List`1<System.Globalization.CultureInfo>
struct List_1_t74F59DD36FAE0CFB087612565C42CAD359647832;
// System.Collections.Generic.List`1<System.UInt32>
struct List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Collections.IEnumerator
struct IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.Exception
struct Exception_t;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.Lazy`1<UnityEngine.RectTransform>
struct Lazy_1_tD2C2BE8F758DC9A6D241E6920D8A6D441B86EDF4;
// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Runtime.Serialization.SerializationInfo
struct SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// TMPro.TextMeshPro
struct TextMeshPro_t6FF60D9DCAF295045FE47C014CC855C5784752E2;
// UnityEngine.AnimationCurve
struct AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C;
// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8;
// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Collider[]
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC;
// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4;
// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData>
struct UnityEvent_1_t37F503D98B7CF110A224EE25F9BECB4CAA781E6A;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>
struct UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C;
// UnityEngine.Events.UnityEvent`1<System.Object>
struct UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A;
// UnityEngine.GradientAlphaKey[]
struct GradientAlphaKeyU5BU5D_t6907BD924111274532A9E85C9426951DF1C6FB4B;
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
// UnityEngine.LineRenderer
struct LineRenderer_tD225C480F28F28A4D737866474F21001B803B7C3;
// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598;
// UnityEngine.MaterialPropertyBlock
struct MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13;
// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C;
// UnityEngine.MeshCollider
struct MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.RaycastHit[]
struct RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57;
// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4;
// UnityEngine.SkinnedMeshRenderer
struct SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65;
// UnityEngine.Sprite
struct Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198;
// UnityEngine.SpriteRenderer
struct SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsUnityEngine_CoreModule[];
IL2CPP_EXTERN_C RuntimeClass* BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BoundsExtensions_t65D5B81F0B4D8D20A4798B651AD4C93A9A761859_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CameraFOVChecker_tB0E867F4D4A49EC7C4CDDF0DC4878BE3CC75A4C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Exception_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Graphics_t6FB7A5D4561F3AB3C34BF334BB0BD8061BE763B1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerable_1_t385ABBCB0D9D1F8F1B9626A031BA17632B70A41C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerator_1_t572D4256F69C72A02F1854B1B8A482AB0E38B072_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IPointerPreferences_t81DF64613E85FE457EDCD0CCAAF5A84ACAFBD33E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IReadOnlyCollection_1_t76FAFA7A34215C680E1D2FEDC953AA1FB9BCBB7C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IReadOnlyList_1_tDC67F606C39A8C34254D870959C6C18CF0B50D68_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityPlayspace_t26F34BB4D1D53C64B140AF101E96EB151A9770A4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral0724F0AFCBC3D048BEE26BA863183A81AD44E932;
IL2CPP_EXTERN_C String_t* _stringLiteral085002B3B7EB25B824CBDB37C210BCCDABA1415B;
IL2CPP_EXTERN_C String_t* _stringLiteral0A9C57CEA2317CAC7695315327EED57E4485CDEE;
IL2CPP_EXTERN_C String_t* _stringLiteral1DC1BD0DB1B180ABEA454C213634ACB9943B6932;
IL2CPP_EXTERN_C String_t* _stringLiteral21FD6EB453B2B988D22B805FF3B86D6A9E06EC97;
IL2CPP_EXTERN_C String_t* _stringLiteral31167BDECCD92629BE4BB63AF3E02B2AF8C1D58E;
IL2CPP_EXTERN_C String_t* _stringLiteral35063E09E652F9038C1CAA6BABF2534984630749;
IL2CPP_EXTERN_C String_t* _stringLiteral36A3B7184BD46EBB0AF6EF70549452E3DE0EF62B;
IL2CPP_EXTERN_C String_t* _stringLiteral3A074CF0B8B6E70909485C4A6867804D1AE3BB16;
IL2CPP_EXTERN_C String_t* _stringLiteral3A52CE780950D4D969792A2559CD519D7EE8C727;
IL2CPP_EXTERN_C String_t* _stringLiteral44742D336E587EC2128A3E569629C97928489B24;
IL2CPP_EXTERN_C String_t* _stringLiteral46EFC595CFB8E0F246662AB7EECB2F2681F98B1E;
IL2CPP_EXTERN_C String_t* _stringLiteral5BAB61EB53176449E25C2C82F172B82CB13FFB9D;
IL2CPP_EXTERN_C String_t* _stringLiteral5DC4C4759AC19DD1F022757CF88BCC8AF51B12A5;
IL2CPP_EXTERN_C String_t* _stringLiteral60CDB39C83666A276FD8082ED7AAC72AFCBA2F45;
IL2CPP_EXTERN_C String_t* _stringLiteral634A289DCAB10B0E94E2C054268C5DE77E45F353;
IL2CPP_EXTERN_C String_t* _stringLiteral678E68D0A76926EABC9B45D86415CA94903BCABB;
IL2CPP_EXTERN_C String_t* _stringLiteral6A7F61D8C9ED50B1B29F67B489C9F2C8B389B0A9;
IL2CPP_EXTERN_C String_t* _stringLiteral727EC8DEECA4244B2AED10DE668F463FE91EC0E6;
IL2CPP_EXTERN_C String_t* _stringLiteral7A47472A1120F3DE60FF125D012BB8161B64BDC5;
IL2CPP_EXTERN_C String_t* _stringLiteral809C6CDDFF78E8933D07602CF5E60FCF61CCAC0B;
IL2CPP_EXTERN_C String_t* _stringLiteral81448FE273247B533B9F018E96C158CAB7901247;
IL2CPP_EXTERN_C String_t* _stringLiteral81798B408B677F364F56B2C7054C660112F3974E;
IL2CPP_EXTERN_C String_t* _stringLiteral846456EB030EBDA42854E8FEF8AC6BE7B6DB6313;
IL2CPP_EXTERN_C String_t* _stringLiteral85CDEBE110457B615877365242D1EABFDA3A6346;
IL2CPP_EXTERN_C String_t* _stringLiteral8951363A979607739364D55730A9537579E964A3;
IL2CPP_EXTERN_C String_t* _stringLiteral9449B08A0CE91CEBB796EA7E4B727AA8756A7F06;
IL2CPP_EXTERN_C String_t* _stringLiteralA01F23363E2CF795D01D6628C7A12ED43F4F80C1;
IL2CPP_EXTERN_C String_t* _stringLiteralA664038B5DD5E9F959CE40D88E844FEDDEE164CB;
IL2CPP_EXTERN_C String_t* _stringLiteralAC01D46412374306E79D795674795C0728373A60;
IL2CPP_EXTERN_C String_t* _stringLiteralB869932F03E15335DFA1FCEECABFFB873C6F21C8;
IL2CPP_EXTERN_C String_t* _stringLiteralBB4B466E3D27EA9B5EDBCF317F4D69C188120733;
IL2CPP_EXTERN_C String_t* _stringLiteralBE8ADD7943C507E20F6E892B05E7A4D36C452A16;
IL2CPP_EXTERN_C String_t* _stringLiteralC0D91897C2813D212D32A644893D61B6F525BF27;
IL2CPP_EXTERN_C String_t* _stringLiteralC47A905AD1548A7299898CC00AB606DF10E8699A;
IL2CPP_EXTERN_C String_t* _stringLiteralC521E7BD131229C8D4FFAB4A0D008E5F3543A953;
IL2CPP_EXTERN_C String_t* _stringLiteralC5BE8E43810C8287C942394782ABE833121178B2;
IL2CPP_EXTERN_C String_t* _stringLiteralC692260D69D220BDFCA074467A934176DB0EE83D;
IL2CPP_EXTERN_C String_t* _stringLiteralCD162394C73DDA97FDD11954A2E58DA7CDA0E9AC;
IL2CPP_EXTERN_C String_t* _stringLiteralD175759664151F85FCF8CA05CE1509910E87223F;
IL2CPP_EXTERN_C String_t* _stringLiteralDFF7CB3801443D7B10EF2A6B8EC490CBBF8E65B5;
IL2CPP_EXTERN_C String_t* _stringLiteralDFFC0E4522726B468881CAFB7963FCDD1F40F452;
IL2CPP_EXTERN_C String_t* _stringLiteralE411DE2CBF1416C179FCCB015C2EF784A31774C0;
IL2CPP_EXTERN_C String_t* _stringLiteralE5A37A156725ACBF18488A7BEDF3E9C5231AF5AE;
IL2CPP_EXTERN_C String_t* _stringLiteralE6CD03753C55931B22FB34243C876E8A36C086B2;
IL2CPP_EXTERN_C String_t* _stringLiteralE8FF914E7B9841E14CC22FA57CF16605FF5A575B;
IL2CPP_EXTERN_C String_t* _stringLiteralEB1A12EF0A7A41B583E885757EB879E8C46613BB;
IL2CPP_EXTERN_C String_t* _stringLiteralF5EB7246A1A0CB8C3B1EE5883A65F4B0B0A24735;
IL2CPP_EXTERN_C String_t* _stringLiteralFAFBA073700296227A7D1B4785C63F0194C967FA;
IL2CPP_EXTERN_C String_t* _stringLiteralFC1A14A78841EC880532BAB180A62D341E29A2C9;
IL2CPP_EXTERN_C String_t* _stringLiteralFDCC443041D00DF5E1AA6E470DF4A8EF991509E1;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ComponentExtensions_EnsureComponent_TisBezierInertia_t247BB6E8220F78509717A5D550548037C274B166_m7B6C9D7A0767E1ABC9BF172197761DBA2036190C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentInChildren_TisSpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F_mAD0C39866683E6B19390CF583FDBE270C404CE48_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisBaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03_m92609490C15DBE5DF1BF1D874DC3CA4ABFF0BC89_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisSpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_m2C4023D0F1D82C87B46A6C93FC6672F32B0755C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mC2BB6693AFBB586B7F247B2C1B441EAB19060429_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ControllerPoseSynchronizer_SourcePoseDataUsable_TisMixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_m64357EB618B8D575F56DFCEB1A24D4AFFD7C77EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m4CFA57209EE0914F9303FF47D0B03EA36A906E7C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m91224B9F05BAC1F74036CC7C7F410A09B0342571_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Clear_mA0003A5CF7470458E93C46F79C1EBF76C20AEBD3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_mD7E370735C5EA2BBCF7ACD55D3830E4DE58EB06D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_m9851F753DF7DBCCD8B5F5925B2C39ED61B435A35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_mF8B5C93F97F75DEDAAEE6A102E0E0A4246FCC25E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m344907F6AD8CF77075CF7FB231E09ADDAA4F1E72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m54B736E0BEA480FA9225CC5AC65BA751B0CB70A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m95D1D183F16D34613D72DF94B2E5EA591AC0DB0B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Item_m3191532CB4E726DE98C33C4E7FD784203452B539_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Item_mF33FB01DD22B2BA44D8F916CDE69E5A4813CA434_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_set_Item_mEAF2152A0B717399053421137786D390F421F654_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m01ADE188221C9709AC882B037FF64386273300C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m195BA60B00623B8FDDF169CC39CF709AE2F3BC84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m6AC729407154418031B1B58A3AD5839EBAEB7644_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m06D77325398A80EE1C356EEC55A0E058313CE2EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityHandJointHandler_t77C089DB868FC835FEFEF29811BEABBAC3FD3B31_m3DF506523059306D61105F9CE235BD0FF198B98F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m8045547AED9E0A33D8E70DE66F076E2EE6E206DC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_m47B07025FD5C8A66BA152D91C274B257BC986164_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m15D9DD6955A5C09C418FC0763139AC5CF0BF02DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityHandJointHandler_t77C089DB868FC835FEFEF29811BEABBAC3FD3B31_m675989B7D28DE0A7AB269882E140696E8DD5F923_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m7DF6B444D35B11AACB65301352ED33F3F466774D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_mF0FE6BDF3711F115C265014A0CB44A0F61EAF864_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m8A7D870AD5804E1F3F2B85756B79AD5736774C41_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IPointerPreferences_SetPointerBehavior_TisGGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_m450BAACB61EC8D0A6E10A160C4272475CC25B131_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m927BFC1204A89B72DBCB89019A1E7E60B82D3E0F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectCursor_OnCursorStateChange_m36DB8454A4380350696E5641A2A543B26DCE2ED8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectCursor_OnEnable_mFBF82C88DC6E793B3E99B8766379D2A776CBBAF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectCursor__ctor_mE367EC2A75CEEA901AE35E56E82EBFE4D6522A48_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisSpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355_mA775CD76A9E97CA381DF830EEC6217DCFE808BC1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_Awake_m27E00864520007608015CA366EAD482A3AB63D49_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_OnPointerClicked_m2CAAEB770DBBA0F723EFCA78B86BB4964DF907B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_OnPointerDown_m91AFE966B8EE3A3758368F53BF7C83CC4A21B792_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_OnPointerDragged_m6575D136D65CAFBF543D238C5626410994D047DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_OnPointerUp_m787653E2F8C70E3057F447D5246867CA36C685AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_RegisterHandlers_m0398C36F72149FE1001F08B5F41F4C09743AA2D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler_UnregisterHandlers_mEE8C80BE5BA0194C9C6BACBA8C73747F3501E72F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerClickHandler__ctor_m4925D933547404B84E4C39D01D3DB4D49125007D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m0DDB6A4CBA60692E51E2A860BE2AEC93153DDFC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m0FF5CC03B138696A0ADB94A4C353EA3CC764597C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m2AB54EB8C563159690814A9F26158F81E66383A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF466C2A845DAC98E384A25DBE7D043F043C912A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler_RegisterHandlers_m9611572A5FA7B8114182ED802295765EA1F15849_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler_UnregisterHandlers_mF1A6E8A4E9F47F1D7366E528DDE4BA96CBA4C235_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHandler__ctor_m2B00E8A24A2D5340A8FB66E23553044A090586C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_GetPointers_m954A57F013E7DFF288BAE39EEE83938911B3E02C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetPointerBehavior_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_m0AC3ED302E4AE0A8F9E1B7EE5DACB5C48020E472_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetPointerBehavior_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_m8E1ADBA8CA0E9AA6B4047030A52A1A371AAA0200_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_SetPointerBehavior_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mD952FCD76DAF0A99AE9108118B23585F64AC25C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_TryGetHandRayEndPoint_mA978AE6BD31C67CEB217DCDF0532860A08AF14B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_TryGetMotionControllerEndPoint_m2103E98E4B04C0383EAD7E7B0BD4C373405A6BF9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_TryGetPointerEndpoint_TisLinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_mF2DA95AABCC4CEA97E82F91EFBDE70B4B681CFDC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_Awake_mB8C3FAC8E340D3FCB10FB11BEC5942DB61DEB6DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetDistanceToNearestSurface_m072861A03E945D89342B457DE8A11455511562BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNearGraspPoint_m7BB85E6D6B6302A73D714F3ED373470ADD4253BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNormalToNearestSurface_m467676018B03FEFA353A631EA37D1878D8020D96_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnDrawGizmos_m5130C0B3D4A008B0A37689573B6B10259F9911D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnEnable_m0C9E0360659942D8C09658DF0452C54582781B57_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnInputDown_m87E9D1699C6400984D13B2DADBE10D538383E103_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnInputUp_mF04BB0584833FF22F9B03B112D3E42D820125ED8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnPostSceneQuery_mBA7A83C26A3AE691426681029620B791D9CACFB8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnPreCurrentPointerTargetChange_m795EDADD45029177EBAACAB96CD7FEE642F3307D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnPreSceneQuery_m22BBAA6DABEB910AD8AEC776B82FA35260C531AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnSourceDetected_mD73D4A279A5F3B4B1758DD6ABC3B6913CB5F4131_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnSourceLost_mE53476A6663B3CA38F7446A7C37EBA4495156269_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnSourcePoseChanged_mC9549C992330095FBD4B2F8406CA42BE5EBE5640_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_OnValidate_mC766A07AC99A0F37D0CCD5F4917F61F3DA358ED2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer__cctor_mF0A0A6F42666213601017ED723A2E97B27ADBD9D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer__ctor_mBDAAEE8253CE042E4862C43781639271B1F5A353_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_ClosestProximityTouchable_m311A15C3FE7778851F015E024FC7BD11310698AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_IsInteractionEnabled_m673EDEF09003D610A4B9AD3EEACE1FD5BA234B86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_IsNearObject_m12DDAEE378400EE012F4BE3EA9E650484F957528_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_PokeLayerMasks_mEB8C2A9809C8A07D14A95021F16BF1F26D8147FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_PrioritizedLayerMasksOverride_m70BF462D9192E78897DE8B8E754F39F976C400F9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_SceneQueryBufferSize_m9FDED9A2418FE9AD708C2D1D0D8BD94FC6BF79E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_SourcePoseOffset_mBAE04FF8A8E93CF46321D76A33D15DB4DBE93A66_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_TouchableDistance_m3CAFAD7A2FA0837FE0CAED48668962CAA9F62E3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_TriggerInteraction_m42DB94F9EFF78CE33CFF2BBD11F18F2F14617061_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_set_IgnoreCollidersNotInFOV_m2730C1BA0C9486C761E3A8EE72942C174378A9B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_set_PrioritizedLayerMasksOverride_mBDD7F58A2AF741BE8AA6531B50F1C813790CF84F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_Distance_m07CEDFDCFF5B58A75EE344A7E1D4BAB92B0FBF2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m971EC8D6B1F6018DB2DF757C6F420C34F4CC5FEF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m5225D4F741620AEDB153C142A6C8C29A97AEF2BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mDBE1C00920F5E8FDF0DB8EFDCEFE6A223BCDEB1F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_OnDisable_m6D8A3F5F4795014C9CB7CE63999951E3F4C844FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_OnEnable_m42AD1945AFF57A21B1BA5F48FF2F7873345CB869_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_Start_m34414F3689FD5D392B99002BB50014FC9230908E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer__ctor_m88DE2F61B99E1EF8FAFF79B5EB8290FC3BFAAC63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_get_GameObjectProxy_m424F0E776CFAC56EF5D4ADB6D94AD9EF27560D48_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_get_HandMaterial_mE7FAF6048E31A6EC54A26ECC2D975D126B2DBAD4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_get_PinchStrengthMaterialProperty_m2DDAB8EF7050F93E38D5666F75BC5B80C21DA6DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RiggedHandVisualizer_set_Controller_m727630D5A11D16D42CCEDD9275C922C144967B2F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScreenSpaceMousePointer_OnPreSceneQuery_m3AEA1A536A866D838B02061D693553538BEDAF11_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScreenSpaceMousePointer_SetVisibility_mAC377CC459D8CC673B818525A740686AFAAB110A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScreenSpaceMousePointer__cctor_m86525A897FB504D5E4CC3FDF0072D137D696EDEE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScreenSpaceMousePointer__ctor_mEC1E94D96A2AD6B762E2E4F068EC361F87B98C8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScreenSpaceMousePointer_get_ControllerName_m1D7C321D2714931AAFE342E2F39D28151F9006FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ShellHandRayPointer_OnEnable_m29D7260FA43FB8D09F141C27C04057182507B044_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ShellHandRayPointer_OnPostSceneQuery_m5CE6E678C4DBF25591E59815BD6F766F223102E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ShellHandRayPointer_PreUpdateLineRenderers_mD1B784157E29224FCE29F5059A8AE46B096AD5F2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ShellHandRayPointer_Start_mDAC37A103F98F48CCAEB2C048D8471F6B1250208_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ShellHandRayPointer__cctor_m95BC5BCFE3013E281592436CE651F0F6182EA95C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ShellHandRayPointer__ctor_m83ACCCB76B0BDBEE5BE7858DD36C7AE88BF16EBB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_AddResponse_mBD66F1FA467E80B710E78F8001970558661ABFD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m4EEBC821A3654708802B991DF0E9F7EB736109A0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_RegisterHandlers_mA2845F50E7F07687F83A872EB8758536A195BCFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_RemoveResponse_mFC15F1872DAF0FDB27D14DE74BE164EC7498058A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_Start_mBD389786A7D85570F4E2F6A7C79DA69AC23DEDF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_UnregisterHandlers_m143999F76AA865C77568BCD9DFE5A53003AA5DF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler__ctor_m61BA4B1A4B78584514DF98BDABD37AC00C86BE83_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_get_Keywords_m44BD2AE1F849903DAF3D7EC32DD52ADC6C42A74B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechInputHandler_set_SpeechConfirmationTooltipPrefab_m6CCA5DEBD91E88B208A364EE117D009CA10CD867_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerGrabPoint_LateUpdate_mD33E43B2E734C013208F363DD2CA7480E4C18836_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerGrabPoint_OnEnable_m1CB773929D281F62521A13718ABACB924D0D9F3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerGrabPoint__cctor_m43F935B9A9484A8CC8C5864D6243DA6C0A8FD1F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerGrabPoint__ctor_mDF6CC5DD14CBDD32E2A6C698F5FDEADBACB07EFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo__cctor_m535F1BBCCD86EE50E287FCC45D6E144A6610FE93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_OnDestroy_m76D072B53CD1FC97749BD451922B22CC1EEA7BCC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_OnEnable_mA87C2779D321FF547DBBD434E154BC8D0A7DAFBC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_Start_mB33183163072266053ABA911330C7B4A50D28CC4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_Update_m8F7C7353C0F245E62FDB98559AA98FFCE4ABFC36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual__cctor_m463C69B8D5C2A0C66ECB5B734738415F1E4F7DE4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual__ctor_m657C2907C14957E7E122EF377588B874C4310250_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_Awake_m1B3331909318911303A86C64F36D3D3ABECFF1EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_OnPreSceneQuery_m1A400F413230CABB39180E16A2E92A99B0E8B376_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_OnSceneQuery_m7477C67B2623AB7029C2396952B6314E9320F45E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_TryGetDistanceToNearestSurface_m79287D47DD54CCBD1E6D7665F0662CD8CE61DDE7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_TryGetNormalToNearestSurface_m646754A57E28101F63810F55FFA893266471806C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer__cctor_mB90A449CCEBE3FA35F3BD76BFE303F953B68D974_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer__ctor_mB4ED4DFB8EAA0D510CC6023ED0FDBADE1ABA71FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_GrabLayerMasks_m0F4201E3D85DF84491684FCFB64D0F2E3F8B3D45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_IsInteractionEnabled_m3C8A83EA3303972636AB0E3D028596F1A3771734_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_IsNearObject_m95E75966E2272EC9EFD8C4A66781DE7AE2667573_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_NearObjectSmoothingFactor_mD9E4D620B4A9B2C9352AEAF3F3BB9C09B6424E07_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_PrioritizedLayerMasksOverride_m223A7A40B76537A05B4F594B352DA5B7157497BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_SceneQueryBufferSize_m10C1D90A8E15689572FD7B7C3B18D82646D701B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_SceneQueryType_m76E735348279BBAAA846C2C56DB60C7A590BD2B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_get_TriggerInteraction_m5961AA072C445130A86D95898336B830E3A21111_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_IgnoreCollidersNotInFOV_m08EBF442F4854FFF13F0DAB376C1C4BEE9EA8919_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_NearObjectAxisLerp_m5D71466C34B7AF5005DD54F5EE4ED54583FFCF07_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_NearObjectMargin_mE4D088EA4329EDCA83936EBC4465313A0BC23945_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_NearObjectSectorAngle_mE268817A65CB902C82C943D3D0086C9D455012F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_NearObjectSmoothingFactor_m84694DFEC173B2A282ED5E7BEDC7BE2C17E30519_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_PrioritizedLayerMasksOverride_m5653F6393533F32BE6DEDC6D86023955257EE6B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_PullbackDistance_m4DCCFB52358D261E9E3C2541A8137718B9134F88_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpherePointer_set_SceneQueryType_mF4D39B2B6644840C652710C09DFE9E85D13368FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpriteCursor_OnCursorStateChange_mC355EB99A332AE54589034F3B90A2C6FC658374B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpriteCursor_OnEnable_m726AA38A9F5439D3243AB3F193DE8EA346B59C36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpriteCursor__ctor_m1ABF8604F5E42EE352DD29BF54902C5BF8F40749_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_mA84775DEAF66185861D2E7798781B34F277BA577_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m4D149429C28201D8619A517581CAA6E75EA9FD8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_m447DE9545D54CF3AB8CC0126EEBAB095164D0DC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchHandler__ctor_m59DAE3670D7085215765F50822AA33CA46B111E6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_OnPreSceneQuery_mD9A9C8CC282A3F6F9A6C5560264A6601B0D30BDD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_OnSourceDetected_m9AA089034C682AB45CEE7B5B9090F643B8879DE8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_OnSourceLost_mEC209CC5869A86DD90211CDAF6432E3DCCF8C785_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer__cctor_m66E9EBB26C64369EF2AEF32C63EAD5641ED2D996_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer__ctor_m17F2061D06A88EEFD79C16B0621D50E65F2B9AC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_get_FingerId_mF9A464A12C3B1B8C4A1B73248A303F76D4F090A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_get_IsInteractionEnabled_mD293680D6633DA2C9CC1A4551F381BD37F2376CF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_get_Position_mA6FE7FEB89426C6448306757C4FDB36F9FA54AE3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_get_Rotation_m233C76C6E2D8B59770636C17B968B0B46B9A4188_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_set_FingerId_mE77F56C07A232FA0C7B6589592A4C52F289808A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchPointer_set_TouchRay_m95521AED8EC39D36C025BE3EF364AEF48E5435BB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_MoveNext_mBF3912770E78181A97A21C6FAAB8DBC7C3989E2F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumeratorU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_get_Current_mBA8C02CBE9B3E7C3607CE61D1EAC4B939BA0D127_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_System_Collections_IEnumerable_GetEnumerator_mE6664A63E4537DD6358917B5632863D58BD321EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_System_Collections_IEnumerator_Reset_m3B8BCC1D6AC73B44E2ADD184AC2604EF2E71BFE7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_System_Collections_IEnumerator_get_Current_mB8C0846179405165761A9E2B699EFAB053318AA9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1__ctor_mB363ED1BADDD555B67FB52330A7D2E90801696A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GraspPointPlacement_tCACDF9EE8876778DEA11A9B6C210FE704248AFCF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IEnumerator_1_t572D4256F69C72A02F1854B1B8A482AB0E38B072_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IPointerPreferences_t81DF64613E85FE457EDCD0CCAAF5A84ACAFBD33E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_1_tB7CFFF4084649FE066002BB179F7CC250E6A8968_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028EMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785DMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0FMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FBMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAEMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6CMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CEMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3CMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EBMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DEMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512BMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4ACMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectCursor_OnCursorStateChange_m36DB8454A4380350696E5641A2A543B26DCE2ED8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectCursor_OnEnable_mFBF82C88DC6E793B3E99B8766379D2A776CBBAF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectCursor__ctor_mE367EC2A75CEEA901AE35E56E82EBFE4D6522A48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_Awake_m27E00864520007608015CA366EAD482A3AB63D49_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_OnPointerClicked_m2CAAEB770DBBA0F723EFCA78B86BB4964DF907B1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_OnPointerDown_m91AFE966B8EE3A3758368F53BF7C83CC4A21B792_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_OnPointerDragged_m6575D136D65CAFBF543D238C5626410994D047DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_OnPointerUp_m787653E2F8C70E3057F447D5246867CA36C685AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_RegisterHandlers_m0398C36F72149FE1001F08B5F41F4C09743AA2D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler_UnregisterHandlers_mEE8C80BE5BA0194C9C6BACBA8C73747F3501E72F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerClickHandler__ctor_m4925D933547404B84E4C39D01D3DB4D49125007D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m0DDB6A4CBA60692E51E2A860BE2AEC93153DDFC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m0FF5CC03B138696A0ADB94A4C353EA3CC764597C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m2AB54EB8C563159690814A9F26158F81E66383A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF466C2A845DAC98E384A25DBE7D043F043C912A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler_RegisterHandlers_m9611572A5FA7B8114182ED802295765EA1F15849_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler_UnregisterHandlers_mF1A6E8A4E9F47F1D7366E528DDE4BA96CBA4C235_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHandler__ctor_m2B00E8A24A2D5340A8FB66E23553044A090586C3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_GetPointers_m954A57F013E7DFF288BAE39EEE83938911B3E02C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_TryGetHandRayEndPoint_mA978AE6BD31C67CEB217DCDF0532860A08AF14B1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_TryGetMotionControllerEndPoint_m2103E98E4B04C0383EAD7E7B0BD4C373405A6BF9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_Awake_mB8C3FAC8E340D3FCB10FB11BEC5942DB61DEB6DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetDistanceToNearestSurface_m072861A03E945D89342B457DE8A11455511562BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNearGraspPoint_m7BB85E6D6B6302A73D714F3ED373470ADD4253BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNormalToNearestSurface_m467676018B03FEFA353A631EA37D1878D8020D96_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnDrawGizmos_m5130C0B3D4A008B0A37689573B6B10259F9911D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnEnable_m0C9E0360659942D8C09658DF0452C54582781B57_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnInputDown_m87E9D1699C6400984D13B2DADBE10D538383E103_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnInputUp_mF04BB0584833FF22F9B03B112D3E42D820125ED8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnPostSceneQuery_mBA7A83C26A3AE691426681029620B791D9CACFB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnPreCurrentPointerTargetChange_m795EDADD45029177EBAACAB96CD7FEE642F3307D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnPreSceneQuery_m22BBAA6DABEB910AD8AEC776B82FA35260C531AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnSourceDetected_mD73D4A279A5F3B4B1758DD6ABC3B6913CB5F4131_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnSourceLost_mE53476A6663B3CA38F7446A7C37EBA4495156269_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnSourcePoseChanged_mC9549C992330095FBD4B2F8406CA42BE5EBE5640_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_OnValidate_mC766A07AC99A0F37D0CCD5F4917F61F3DA358ED2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer__cctor_mF0A0A6F42666213601017ED723A2E97B27ADBD9D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer__ctor_mBDAAEE8253CE042E4862C43781639271B1F5A353_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_ClosestProximityTouchable_m311A15C3FE7778851F015E024FC7BD11310698AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_IsInteractionEnabled_m673EDEF09003D610A4B9AD3EEACE1FD5BA234B86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_IsNearObject_m12DDAEE378400EE012F4BE3EA9E650484F957528_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_PokeLayerMasks_mEB8C2A9809C8A07D14A95021F16BF1F26D8147FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_PrioritizedLayerMasksOverride_m70BF462D9192E78897DE8B8E754F39F976C400F9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_SceneQueryBufferSize_m9FDED9A2418FE9AD708C2D1D0D8BD94FC6BF79E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_SourcePoseOffset_mBAE04FF8A8E93CF46321D76A33D15DB4DBE93A66_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_TouchableDistance_m3CAFAD7A2FA0837FE0CAED48668962CAA9F62E3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_TriggerInteraction_m42DB94F9EFF78CE33CFF2BBD11F18F2F14617061_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_set_IgnoreCollidersNotInFOV_m2730C1BA0C9486C761E3A8EE72942C174378A9B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41DMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_set_PrioritizedLayerMasksOverride_mBDD7F58A2AF741BE8AA6531B50F1C813790CF84F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317BMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_Distance_m07CEDFDCFF5B58A75EE344A7E1D4BAB92B0FBF2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m971EC8D6B1F6018DB2DF757C6F420C34F4CC5FEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m5225D4F741620AEDB153C142A6C8C29A97AEF2BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mDBE1C00920F5E8FDF0DB8EFDCEFE6A223BCDEB1F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_OnDisable_m6D8A3F5F4795014C9CB7CE63999951E3F4C844FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_OnEnable_m42AD1945AFF57A21B1BA5F48FF2F7873345CB869_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_Start_m34414F3689FD5D392B99002BB50014FC9230908E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer__ctor_m88DE2F61B99E1EF8FAFF79B5EB8290FC3BFAAC63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_GameObjectProxy_m424F0E776CFAC56EF5D4ADB6D94AD9EF27560D48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_HandMaterial_mE7FAF6048E31A6EC54A26ECC2D975D126B2DBAD4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDAMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_PinchStrengthMaterialProperty_m2DDAB8EF7050F93E38D5666F75BC5B80C21DA6DB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RiggedHandVisualizer_set_Controller_m727630D5A11D16D42CCEDD9275C922C144967B2F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScreenSpaceMousePointer_OnPreSceneQuery_m3AEA1A536A866D838B02061D693553538BEDAF11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScreenSpaceMousePointer_SetVisibility_mAC377CC459D8CC673B818525A740686AFAAB110A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScreenSpaceMousePointer__cctor_m86525A897FB504D5E4CC3FDF0072D137D696EDEE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScreenSpaceMousePointer__ctor_mEC1E94D96A2AD6B762E2E4F068EC361F87B98C8A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScreenSpaceMousePointer_get_ControllerName_m1D7C321D2714931AAFE342E2F39D28151F9006FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ShellHandRayPointer_OnEnable_m29D7260FA43FB8D09F141C27C04057182507B044_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ShellHandRayPointer_OnPostSceneQuery_m5CE6E678C4DBF25591E59815BD6F766F223102E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ShellHandRayPointer_PreUpdateLineRenderers_mD1B784157E29224FCE29F5059A8AE46B096AD5F2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ShellHandRayPointer_Start_mDAC37A103F98F48CCAEB2C048D8471F6B1250208_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ShellHandRayPointer__cctor_m95BC5BCFE3013E281592436CE651F0F6182EA95C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ShellHandRayPointer__ctor_m83ACCCB76B0BDBEE5BE7858DD36C7AE88BF16EBB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_AddResponse_mBD66F1FA467E80B710E78F8001970558661ABFD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m4EEBC821A3654708802B991DF0E9F7EB736109A0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_RegisterHandlers_mA2845F50E7F07687F83A872EB8758536A195BCFA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_RemoveResponse_mFC15F1872DAF0FDB27D14DE74BE164EC7498058A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_Start_mBD389786A7D85570F4E2F6A7C79DA69AC23DEDF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_UnregisterHandlers_m143999F76AA865C77568BCD9DFE5A53003AA5DF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler__ctor_m61BA4B1A4B78584514DF98BDABD37AC00C86BE83_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_get_Keywords_m44BD2AE1F849903DAF3D7EC32DD52ADC6C42A74B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechInputHandler_set_SpeechConfirmationTooltipPrefab_m6CCA5DEBD91E88B208A364EE117D009CA10CD867_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerGrabPoint_LateUpdate_mD33E43B2E734C013208F363DD2CA7480E4C18836_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerGrabPoint_OnEnable_m1CB773929D281F62521A13718ABACB924D0D9F3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerGrabPoint__cctor_m43F935B9A9484A8CC8C5864D6243DA6C0A8FD1F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerGrabPoint__ctor_mDF6CC5DD14CBDD32E2A6C698F5FDEADBACB07EFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo__cctor_m535F1BBCCD86EE50E287FCC45D6E144A6610FE93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_OnDestroy_m76D072B53CD1FC97749BD451922B22CC1EEA7BCC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_OnEnable_mA87C2779D321FF547DBBD434E154BC8D0A7DAFBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_Start_mB33183163072266053ABA911330C7B4A50D28CC4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_Update_m8F7C7353C0F245E62FDB98559AA98FFCE4ABFC36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual__cctor_m463C69B8D5C2A0C66ECB5B734738415F1E4F7DE4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual__ctor_m657C2907C14957E7E122EF377588B874C4310250_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404CMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_Awake_m1B3331909318911303A86C64F36D3D3ABECFF1EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_OnPreSceneQuery_m1A400F413230CABB39180E16A2E92A99B0E8B376_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_OnSceneQuery_m7477C67B2623AB7029C2396952B6314E9320F45E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_TryGetDistanceToNearestSurface_m79287D47DD54CCBD1E6D7665F0662CD8CE61DDE7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_TryGetNormalToNearestSurface_m646754A57E28101F63810F55FFA893266471806C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer__cctor_mB90A449CCEBE3FA35F3BD76BFE303F953B68D974_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer__ctor_mB4ED4DFB8EAA0D510CC6023ED0FDBADE1ABA71FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_GrabLayerMasks_m0F4201E3D85DF84491684FCFB64D0F2E3F8B3D45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECAMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_IsInteractionEnabled_m3C8A83EA3303972636AB0E3D028596F1A3771734_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_IsNearObject_m95E75966E2272EC9EFD8C4A66781DE7AE2667573_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1DMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_NearObjectSmoothingFactor_mD9E4D620B4A9B2C9352AEAF3F3BB9C09B6424E07_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_PrioritizedLayerMasksOverride_m223A7A40B76537A05B4F594B352DA5B7157497BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_SceneQueryBufferSize_m10C1D90A8E15689572FD7B7C3B18D82646D701B7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_SceneQueryType_m76E735348279BBAAA846C2C56DB60C7A590BD2B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_get_TriggerInteraction_m5961AA072C445130A86D95898336B830E3A21111_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_IgnoreCollidersNotInFOV_m08EBF442F4854FFF13F0DAB376C1C4BEE9EA8919_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_NearObjectAxisLerp_m5D71466C34B7AF5005DD54F5EE4ED54583FFCF07_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_NearObjectMargin_mE4D088EA4329EDCA83936EBC4465313A0BC23945_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_NearObjectSectorAngle_mE268817A65CB902C82C943D3D0086C9D455012F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_NearObjectSmoothingFactor_m84694DFEC173B2A282ED5E7BEDC7BE2C17E30519_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_PrioritizedLayerMasksOverride_m5653F6393533F32BE6DEDC6D86023955257EE6B7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_PullbackDistance_m4DCCFB52358D261E9E3C2541A8137718B9134F88_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpherePointer_set_SceneQueryType_mF4D39B2B6644840C652710C09DFE9E85D13368FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpriteCursor_OnCursorStateChange_mC355EB99A332AE54589034F3B90A2C6FC658374B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpriteCursor_OnEnable_m726AA38A9F5439D3243AB3F193DE8EA346B59C36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpriteCursor__ctor_m1ABF8604F5E42EE352DD29BF54902C5BF8F40749_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_mA84775DEAF66185861D2E7798781B34F277BA577_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m4D149429C28201D8619A517581CAA6E75EA9FD8A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_m447DE9545D54CF3AB8CC0126EEBAB095164D0DC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchHandler__ctor_m59DAE3670D7085215765F50822AA33CA46B111E6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_OnPreSceneQuery_mD9A9C8CC282A3F6F9A6C5560264A6601B0D30BDD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_OnSourceDetected_m9AA089034C682AB45CEE7B5B9090F643B8879DE8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_OnSourceLost_mEC209CC5869A86DD90211CDAF6432E3DCCF8C785_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer__cctor_m66E9EBB26C64369EF2AEF32C63EAD5641ED2D996_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer__ctor_m17F2061D06A88EEFD79C16B0621D50E65F2B9AC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_get_FingerId_mF9A464A12C3B1B8C4A1B73248A303F76D4F090A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_get_IsInteractionEnabled_mD293680D6633DA2C9CC1A4551F381BD37F2376CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_get_Position_mA6FE7FEB89426C6448306757C4FDB36F9FA54AE3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_get_Rotation_m233C76C6E2D8B59770636C17B968B0B46B9A4188_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3EMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_set_FingerId_mE77F56C07A232FA0C7B6589592A4C52F289808A9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchPointer_set_TouchRay_m95521AED8EC39D36C025BE3EF364AEF48E5435BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_MoveNext_mBF3912770E78181A97A21C6FAAB8DBC7C3989E2F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumeratorU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_get_Current_mBA8C02CBE9B3E7C3607CE61D1EAC4B939BA0D127_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_System_Collections_IEnumerable_GetEnumerator_mE6664A63E4537DD6358917B5632863D58BD321EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_System_Collections_IEnumerator_Reset_m3B8BCC1D6AC73B44E2ADD184AC2604EF2E71BFE7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_System_Collections_IEnumerator_get_Current_mB8C0846179405165761A9E2B699EFAB053318AA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
struct KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75;
struct ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26;
struct SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C;
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
struct BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252;
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object


// Microsoft.MixedReality.Toolkit.Input.PointerUtils
struct PointerUtils_tC7EC1506993D511984BC3FEC5009B11B00AB5FAD  : public RuntimeObject
{
public:

public:
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>
struct Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_tC8A9A1409B9B63FD9461726F53E2E641394AE72B* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_t23E1BC3938DB450E5B0FEA3C253406E55AEA406C * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_t116B84921B01585404DF27C46FD9295BC2136572 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___entries_1)); }
	inline EntryU5BU5D_tC8A9A1409B9B63FD9461726F53E2E641394AE72B* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_tC8A9A1409B9B63FD9461726F53E2E641394AE72B** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_tC8A9A1409B9B63FD9461726F53E2E641394AE72B* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___keys_7)); }
	inline KeyCollection_t23E1BC3938DB450E5B0FEA3C253406E55AEA406C * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_t23E1BC3938DB450E5B0FEA3C253406E55AEA406C ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_t23E1BC3938DB450E5B0FEA3C253406E55AEA406C * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ___values_8)); }
	inline ValueCollection_t116B84921B01585404DF27C46FD9295BC2136572 * get_values_8() const { return ___values_8; }
	inline ValueCollection_t116B84921B01585404DF27C46FD9295BC2136572 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_t116B84921B01585404DF27C46FD9295BC2136572 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>
struct Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_tEAD84EBA91834A43954F0A429774E0250668D119* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_t954500B5418B642F1F87D3C4D68630608EC86C5B * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_t54605B51AD0B778B85F671E119C623D4DBE89AA6 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___entries_1)); }
	inline EntryU5BU5D_tEAD84EBA91834A43954F0A429774E0250668D119* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_tEAD84EBA91834A43954F0A429774E0250668D119** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_tEAD84EBA91834A43954F0A429774E0250668D119* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___keys_7)); }
	inline KeyCollection_t954500B5418B642F1F87D3C4D68630608EC86C5B * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_t954500B5418B642F1F87D3C4D68630608EC86C5B ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_t954500B5418B642F1F87D3C4D68630608EC86C5B * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ___values_8)); }
	inline ValueCollection_t54605B51AD0B778B85F671E119C623D4DBE89AA6 * get_values_8() const { return ___values_8; }
	inline ValueCollection_t54605B51AD0B778B85F671E119C623D4DBE89AA6 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_t54605B51AD0B778B85F671E119C623D4DBE89AA6 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>
struct Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_t3A0605A366C9BC0D7BC15F59F1FA9BB378197E72* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_tC37B50614E4B343CC850DFD6CBF8142542987FDC * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_tFE7F4FABB32A712697C4E554092412BA9CC4EDB0 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___entries_1)); }
	inline EntryU5BU5D_t3A0605A366C9BC0D7BC15F59F1FA9BB378197E72* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_t3A0605A366C9BC0D7BC15F59F1FA9BB378197E72** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_t3A0605A366C9BC0D7BC15F59F1FA9BB378197E72* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___keys_7)); }
	inline KeyCollection_tC37B50614E4B343CC850DFD6CBF8142542987FDC * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_tC37B50614E4B343CC850DFD6CBF8142542987FDC ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_tC37B50614E4B343CC850DFD6CBF8142542987FDC * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ___values_8)); }
	inline ValueCollection_tFE7F4FABB32A712697C4E554092412BA9CC4EDB0 * get_values_8() const { return ___values_8; }
	inline ValueCollection_tFE7F4FABB32A712697C4E554092412BA9CC4EDB0 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_tFE7F4FABB32A712697C4E554092412BA9CC4EDB0 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * ____siInfo_14;

public:
	inline static int32_t get_offset_of__buckets_7() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____buckets_7)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__buckets_7() const { return ____buckets_7; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__buckets_7() { return &____buckets_7; }
	inline void set__buckets_7(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____buckets_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____buckets_7), (void*)value);
	}

	inline static int32_t get_offset_of__slots_8() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____slots_8)); }
	inline SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* get__slots_8() const { return ____slots_8; }
	inline SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1** get_address_of__slots_8() { return &____slots_8; }
	inline void set__slots_8(SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* value)
	{
		____slots_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____slots_8), (void*)value);
	}

	inline static int32_t get_offset_of__count_9() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____count_9)); }
	inline int32_t get__count_9() const { return ____count_9; }
	inline int32_t* get_address_of__count_9() { return &____count_9; }
	inline void set__count_9(int32_t value)
	{
		____count_9 = value;
	}

	inline static int32_t get_offset_of__lastIndex_10() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____lastIndex_10)); }
	inline int32_t get__lastIndex_10() const { return ____lastIndex_10; }
	inline int32_t* get_address_of__lastIndex_10() { return &____lastIndex_10; }
	inline void set__lastIndex_10(int32_t value)
	{
		____lastIndex_10 = value;
	}

	inline static int32_t get_offset_of__freeList_11() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____freeList_11)); }
	inline int32_t get__freeList_11() const { return ____freeList_11; }
	inline int32_t* get_address_of__freeList_11() { return &____freeList_11; }
	inline void set__freeList_11(int32_t value)
	{
		____freeList_11 = value;
	}

	inline static int32_t get_offset_of__comparer_12() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____comparer_12)); }
	inline RuntimeObject* get__comparer_12() const { return ____comparer_12; }
	inline RuntimeObject** get_address_of__comparer_12() { return &____comparer_12; }
	inline void set__comparer_12(RuntimeObject* value)
	{
		____comparer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____comparer_12), (void*)value);
	}

	inline static int32_t get_offset_of__version_13() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____version_13)); }
	inline int32_t get__version_13() const { return ____version_13; }
	inline int32_t* get_address_of__version_13() { return &____version_13; }
	inline void set__version_13(int32_t value)
	{
		____version_13 = value;
	}

	inline static int32_t get_offset_of__siInfo_14() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____siInfo_14)); }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * get__siInfo_14() const { return ____siInfo_14; }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 ** get_address_of__siInfo_14() { return &____siInfo_14; }
	inline void set__siInfo_14(SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * value)
	{
		____siInfo_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____siInfo_14), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI>
struct List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65, ____items_1)); }
	inline NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798* get__items_1() const { return ____items_1; }
	inline NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65_StaticFields, ____emptyArray_5)); }
	inline NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798* get__emptyArray_5() const { return ____emptyArray_5; }
	inline NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(NearInteractionTouchableUnityUIU5BU5D_tE0536118E1BB12FEAF4F0EE2820A964A504E8798* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.EmptyArray`1<Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse>
struct EmptyArray_1_t97F97A54C24BC0E28CFA3FBD556842A04F112FC6  : public RuntimeObject
{
public:

public:
};

struct EmptyArray_1_t97F97A54C24BC0E28CFA3FBD556842A04F112FC6_StaticFields
{
public:
	// T[] System.EmptyArray`1::Value
	KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* ___Value_0;

public:
	inline static int32_t get_offset_of_Value_0() { return static_cast<int32_t>(offsetof(EmptyArray_1_t97F97A54C24BC0E28CFA3FBD556842A04F112FC6_StaticFields, ___Value_0)); }
	inline KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* get_Value_0() const { return ___Value_0; }
	inline KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75** get_address_of_Value_0() { return &___Value_0; }
	inline void set_Value_0(KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* value)
	{
		___Value_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Value_0), (void*)value);
	}
};


// System.EmptyArray`1<Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum>
struct EmptyArray_1_t143CCC6829B035146127AD6B741D057DF92E5BB6  : public RuntimeObject
{
public:

public:
};

struct EmptyArray_1_t143CCC6829B035146127AD6B741D057DF92E5BB6_StaticFields
{
public:
	// T[] System.EmptyArray`1::Value
	SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* ___Value_0;

public:
	inline static int32_t get_offset_of_Value_0() { return static_cast<int32_t>(offsetof(EmptyArray_1_t143CCC6829B035146127AD6B741D057DF92E5BB6_StaticFields, ___Value_0)); }
	inline SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* get_Value_0() const { return ___Value_0; }
	inline SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C** get_address_of_Value_0() { return &___Value_0; }
	inline void set_Value_0(SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* value)
	{
		___Value_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Value_0), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// UnityEngine.Events.UnityEventBase
struct UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse
struct KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse::keyword
	String_t* ___keyword_0;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse::response
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___response_1;

public:
	inline static int32_t get_offset_of_keyword_0() { return static_cast<int32_t>(offsetof(KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A, ___keyword_0)); }
	inline String_t* get_keyword_0() const { return ___keyword_0; }
	inline String_t** get_address_of_keyword_0() { return &___keyword_0; }
	inline void set_keyword_0(String_t* value)
	{
		___keyword_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keyword_0), (void*)value);
	}

	inline static int32_t get_offset_of_response_1() { return static_cast<int32_t>(offsetof(KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A, ___response_1)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_response_1() const { return ___response_1; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_response_1() { return &___response_1; }
	inline void set_response_1(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___response_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___response_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse
struct KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_marshaled_pinvoke
{
	char* ___keyword_0;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___response_1;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse
struct KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_marshaled_com
{
	Il2CppChar* ___keyword_0;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___response_1;
};

// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject* ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____set_0)); }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * get__set_0() const { return ____set_0; }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____current_3)); }
	inline RuntimeObject* get__current_3() const { return ____current_3; }
	inline RuntimeObject** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject* value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<System.Object>
struct Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject * ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____set_0)); }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * get__set_0() const { return ____set_0; }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____current_3)); }
	inline RuntimeObject * get__current_3() const { return ____current_3; }
	inline RuntimeObject ** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject * value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.UInt32>
struct Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 
{
public:
	// T System.Nullable`1::value
	uint32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043, ___value_0)); }
	inline uint32_t get_value_0() const { return ___value_0; }
	inline uint32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt16
struct UInt16_tAE45CEF73BF720100519F6867F32145D075F928E 
{
public:
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt16_tAE45CEF73BF720100519F6867F32145D075F928E, ___m_value_0)); }
	inline uint16_t get_m_value_0() const { return ___m_value_0; }
	inline uint16_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint16_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Color
struct Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 
{
public:
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData>
struct UnityEvent_1_t37F503D98B7CF110A224EE25F9BECB4CAA781E6A  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t37F503D98B7CF110A224EE25F9BECB4CAA781E6A, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>
struct UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.LayerMask
struct LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 
{
public:
	// System.Int32 UnityEngine.LayerMask::m_Mask
	int32_t ___m_Mask_0;

public:
	inline static int32_t get_offset_of_m_Mask_0() { return static_cast<int32_t>(offsetof(LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0, ___m_Mask_0)); }
	inline int32_t get_m_Mask_0() const { return ___m_Mask_0; }
	inline int32_t* get_address_of_m_Mask_0() { return &___m_Mask_0; }
	inline void set_m_Mask_0(int32_t value)
	{
		___m_Mask_0 = value;
	}
};


// UnityEngine.Matrix4x4
struct Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA 
{
public:
	// System.Single UnityEngine.Matrix4x4::m00
	float ___m00_0;
	// System.Single UnityEngine.Matrix4x4::m10
	float ___m10_1;
	// System.Single UnityEngine.Matrix4x4::m20
	float ___m20_2;
	// System.Single UnityEngine.Matrix4x4::m30
	float ___m30_3;
	// System.Single UnityEngine.Matrix4x4::m01
	float ___m01_4;
	// System.Single UnityEngine.Matrix4x4::m11
	float ___m11_5;
	// System.Single UnityEngine.Matrix4x4::m21
	float ___m21_6;
	// System.Single UnityEngine.Matrix4x4::m31
	float ___m31_7;
	// System.Single UnityEngine.Matrix4x4::m02
	float ___m02_8;
	// System.Single UnityEngine.Matrix4x4::m12
	float ___m12_9;
	// System.Single UnityEngine.Matrix4x4::m22
	float ___m22_10;
	// System.Single UnityEngine.Matrix4x4::m32
	float ___m32_11;
	// System.Single UnityEngine.Matrix4x4::m03
	float ___m03_12;
	// System.Single UnityEngine.Matrix4x4::m13
	float ___m13_13;
	// System.Single UnityEngine.Matrix4x4::m23
	float ___m23_14;
	// System.Single UnityEngine.Matrix4x4::m33
	float ___m33_15;

public:
	inline static int32_t get_offset_of_m00_0() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m00_0)); }
	inline float get_m00_0() const { return ___m00_0; }
	inline float* get_address_of_m00_0() { return &___m00_0; }
	inline void set_m00_0(float value)
	{
		___m00_0 = value;
	}

	inline static int32_t get_offset_of_m10_1() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m10_1)); }
	inline float get_m10_1() const { return ___m10_1; }
	inline float* get_address_of_m10_1() { return &___m10_1; }
	inline void set_m10_1(float value)
	{
		___m10_1 = value;
	}

	inline static int32_t get_offset_of_m20_2() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m20_2)); }
	inline float get_m20_2() const { return ___m20_2; }
	inline float* get_address_of_m20_2() { return &___m20_2; }
	inline void set_m20_2(float value)
	{
		___m20_2 = value;
	}

	inline static int32_t get_offset_of_m30_3() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m30_3)); }
	inline float get_m30_3() const { return ___m30_3; }
	inline float* get_address_of_m30_3() { return &___m30_3; }
	inline void set_m30_3(float value)
	{
		___m30_3 = value;
	}

	inline static int32_t get_offset_of_m01_4() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m01_4)); }
	inline float get_m01_4() const { return ___m01_4; }
	inline float* get_address_of_m01_4() { return &___m01_4; }
	inline void set_m01_4(float value)
	{
		___m01_4 = value;
	}

	inline static int32_t get_offset_of_m11_5() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m11_5)); }
	inline float get_m11_5() const { return ___m11_5; }
	inline float* get_address_of_m11_5() { return &___m11_5; }
	inline void set_m11_5(float value)
	{
		___m11_5 = value;
	}

	inline static int32_t get_offset_of_m21_6() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m21_6)); }
	inline float get_m21_6() const { return ___m21_6; }
	inline float* get_address_of_m21_6() { return &___m21_6; }
	inline void set_m21_6(float value)
	{
		___m21_6 = value;
	}

	inline static int32_t get_offset_of_m31_7() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m31_7)); }
	inline float get_m31_7() const { return ___m31_7; }
	inline float* get_address_of_m31_7() { return &___m31_7; }
	inline void set_m31_7(float value)
	{
		___m31_7 = value;
	}

	inline static int32_t get_offset_of_m02_8() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m02_8)); }
	inline float get_m02_8() const { return ___m02_8; }
	inline float* get_address_of_m02_8() { return &___m02_8; }
	inline void set_m02_8(float value)
	{
		___m02_8 = value;
	}

	inline static int32_t get_offset_of_m12_9() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m12_9)); }
	inline float get_m12_9() const { return ___m12_9; }
	inline float* get_address_of_m12_9() { return &___m12_9; }
	inline void set_m12_9(float value)
	{
		___m12_9 = value;
	}

	inline static int32_t get_offset_of_m22_10() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m22_10)); }
	inline float get_m22_10() const { return ___m22_10; }
	inline float* get_address_of_m22_10() { return &___m22_10; }
	inline void set_m22_10(float value)
	{
		___m22_10 = value;
	}

	inline static int32_t get_offset_of_m32_11() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m32_11)); }
	inline float get_m32_11() const { return ___m32_11; }
	inline float* get_address_of_m32_11() { return &___m32_11; }
	inline void set_m32_11(float value)
	{
		___m32_11 = value;
	}

	inline static int32_t get_offset_of_m03_12() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m03_12)); }
	inline float get_m03_12() const { return ___m03_12; }
	inline float* get_address_of_m03_12() { return &___m03_12; }
	inline void set_m03_12(float value)
	{
		___m03_12 = value;
	}

	inline static int32_t get_offset_of_m13_13() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m13_13)); }
	inline float get_m13_13() const { return ___m13_13; }
	inline float* get_address_of_m13_13() { return &___m13_13; }
	inline void set_m13_13(float value)
	{
		___m13_13 = value;
	}

	inline static int32_t get_offset_of_m23_14() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m23_14)); }
	inline float get_m23_14() const { return ___m23_14; }
	inline float* get_address_of_m23_14() { return &___m23_14; }
	inline void set_m23_14(float value)
	{
		___m23_14 = value;
	}

	inline static int32_t get_offset_of_m33_15() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA, ___m33_15)); }
	inline float get_m33_15() const { return ___m33_15; }
	inline float* get_address_of_m33_15() { return &___m33_15; }
	inline void set_m33_15(float value)
	{
		___m33_15 = value;
	}
};

struct Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields
{
public:
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::zeroMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___zeroMatrix_16;
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::identityMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___identityMatrix_17;

public:
	inline static int32_t get_offset_of_zeroMatrix_16() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields, ___zeroMatrix_16)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_zeroMatrix_16() const { return ___zeroMatrix_16; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_zeroMatrix_16() { return &___zeroMatrix_16; }
	inline void set_zeroMatrix_16(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___zeroMatrix_16 = value;
	}

	inline static int32_t get_offset_of_identityMatrix_17() { return static_cast<int32_t>(offsetof(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_StaticFields, ___identityMatrix_17)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_identityMatrix_17() const { return ___identityMatrix_17; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_identityMatrix_17() { return &___identityMatrix_17; }
	inline void set_identityMatrix_17(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___identityMatrix_17 = value;
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// UnityEngine.Vector4
struct Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E 
{
public:
	// System.Single UnityEngine.Vector4::x
	float ___x_1;
	// System.Single UnityEngine.Vector4::y
	float ___y_2;
	// System.Single UnityEngine.Vector4::z
	float ___z_3;
	// System.Single UnityEngine.Vector4::w
	float ___w_4;

public:
	inline static int32_t get_offset_of_x_1() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___x_1)); }
	inline float get_x_1() const { return ___x_1; }
	inline float* get_address_of_x_1() { return &___x_1; }
	inline void set_x_1(float value)
	{
		___x_1 = value;
	}

	inline static int32_t get_offset_of_y_2() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___y_2)); }
	inline float get_y_2() const { return ___y_2; }
	inline float* get_address_of_y_2() { return &___y_2; }
	inline void set_y_2(float value)
	{
		___y_2 = value;
	}

	inline static int32_t get_offset_of_z_3() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___z_3)); }
	inline float get_z_3() const { return ___z_3; }
	inline float* get_address_of_z_3() { return &___z_3; }
	inline void set_z_3(float value)
	{
		___z_3 = value;
	}

	inline static int32_t get_offset_of_w_4() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___w_4)); }
	inline float get_w_4() const { return ___w_4; }
	inline float* get_address_of_w_4() { return &___w_4; }
	inline void set_w_4(float value)
	{
		___w_4 = value;
	}
};

struct Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields
{
public:
	// UnityEngine.Vector4 UnityEngine.Vector4::zeroVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___zeroVector_5;
	// UnityEngine.Vector4 UnityEngine.Vector4::oneVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___oneVector_6;
	// UnityEngine.Vector4 UnityEngine.Vector4::positiveInfinityVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___positiveInfinityVector_7;
	// UnityEngine.Vector4 UnityEngine.Vector4::negativeInfinityVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___negativeInfinityVector_8;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___zeroVector_5)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___oneVector_6)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_7() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___positiveInfinityVector_7)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_positiveInfinityVector_7() const { return ___positiveInfinityVector_7; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_positiveInfinityVector_7() { return &___positiveInfinityVector_7; }
	inline void set_positiveInfinityVector_7(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___positiveInfinityVector_7 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___negativeInfinityVector_8)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_negativeInfinityVector_8() const { return ___negativeInfinityVector_8; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_negativeInfinityVector_8() { return &___negativeInfinityVector_8; }
	inline void set_negativeInfinityVector_8(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___negativeInfinityVector_8 = value;
	}
};


// Microsoft.MixedReality.Toolkit.DistortionMode
struct DistortionMode_t0A44618736AD74E06283A0507B7A27F4180BFCBF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.DistortionMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DistortionMode_t0A44618736AD74E06283A0507B7A27F4180BFCBF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.CursorContextEnum
struct CursorContextEnum_t3BACC4A07299CEF28000BE9D371313ED764A7A30 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.CursorContextEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CursorContextEnum_t3BACC4A07299CEF28000BE9D371313ED764A7A30, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum
struct CursorStateEnum_t247F2213B5F13A4A20859354F8F6FB28423C0FB6 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.CursorStateEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CursorStateEnum_t247F2213B5F13A4A20859354F8F6FB28423C0FB6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSourceType
struct InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.InputSourceType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::barycentricCoordinate
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::distance
	float ___distance_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::triangleIndex
	int32_t ___triangleIndex_4;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord2
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::lightmapCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::raycastValid
	bool ___raycastValid_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::collider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;

public:
	inline static int32_t get_offset_of_point_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_point_0() const { return ___point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_point_0() { return &___point_0; }
	inline void set_point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___point_0 = value;
	}

	inline static int32_t get_offset_of_normal_1() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_normal_1() const { return ___normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_normal_1() { return &___normal_1; }
	inline void set_normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___normal_1 = value;
	}

	inline static int32_t get_offset_of_barycentricCoordinate_2() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___barycentricCoordinate_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_barycentricCoordinate_2() const { return ___barycentricCoordinate_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_barycentricCoordinate_2() { return &___barycentricCoordinate_2; }
	inline void set_barycentricCoordinate_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___barycentricCoordinate_2 = value;
	}

	inline static int32_t get_offset_of_distance_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___distance_3)); }
	inline float get_distance_3() const { return ___distance_3; }
	inline float* get_address_of_distance_3() { return &___distance_3; }
	inline void set_distance_3(float value)
	{
		___distance_3 = value;
	}

	inline static int32_t get_offset_of_triangleIndex_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___triangleIndex_4)); }
	inline int32_t get_triangleIndex_4() const { return ___triangleIndex_4; }
	inline int32_t* get_address_of_triangleIndex_4() { return &___triangleIndex_4; }
	inline void set_triangleIndex_4(int32_t value)
	{
		___triangleIndex_4 = value;
	}

	inline static int32_t get_offset_of_textureCoord_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord_5() const { return ___textureCoord_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord_5() { return &___textureCoord_5; }
	inline void set_textureCoord_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord_5 = value;
	}

	inline static int32_t get_offset_of_textureCoord2_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord2_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord2_6() const { return ___textureCoord2_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord2_6() { return &___textureCoord2_6; }
	inline void set_textureCoord2_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord2_6 = value;
	}

	inline static int32_t get_offset_of_transform_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___transform_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_7() const { return ___transform_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_7() { return &___transform_7; }
	inline void set_transform_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_7), (void*)value);
	}

	inline static int32_t get_offset_of_lightmapCoord_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___lightmapCoord_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lightmapCoord_8() const { return ___lightmapCoord_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lightmapCoord_8() { return &___lightmapCoord_8; }
	inline void set_lightmapCoord_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lightmapCoord_8 = value;
	}

	inline static int32_t get_offset_of_raycastValid_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___raycastValid_9)); }
	inline bool get_raycastValid_9() const { return ___raycastValid_9; }
	inline bool* get_address_of_raycastValid_9() { return &___raycastValid_9; }
	inline void set_raycastValid_9(bool value)
	{
		___raycastValid_9 = value;
	}

	inline static int32_t get_offset_of_collider_10() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___collider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_collider_10() const { return ___collider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_collider_10() { return &___collider_10; }
	inline void set_collider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___collider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___collider_10), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};

// Microsoft.MixedReality.Toolkit.Input.PointerBehavior
struct PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerBehavior::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent
struct PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7  : public UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7
struct U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>1__state
	int32_t ___U3CU3E1__state_0;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>l__initialThreadId
	int32_t ___U3CU3El__initialThreadId_2;
	// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<inputSources>5__1
	HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * ___U3CinputSourcesU3E5__1_3;
	// System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>s__2
	Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  ___U3CU3Es__2_4;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<inputSource>5__3
	RuntimeObject* ___U3CinputSourceU3E5__3_5;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>s__4
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* ___U3CU3Es__4_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>s__5
	int32_t ___U3CU3Es__5_7;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<pointer>5__6
	RuntimeObject* ___U3CpointerU3E5__6_8;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CU3E2__current_1)); }
	inline RuntimeObject* get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject* value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3El__initialThreadId_2() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CU3El__initialThreadId_2)); }
	inline int32_t get_U3CU3El__initialThreadId_2() const { return ___U3CU3El__initialThreadId_2; }
	inline int32_t* get_address_of_U3CU3El__initialThreadId_2() { return &___U3CU3El__initialThreadId_2; }
	inline void set_U3CU3El__initialThreadId_2(int32_t value)
	{
		___U3CU3El__initialThreadId_2 = value;
	}

	inline static int32_t get_offset_of_U3CinputSourcesU3E5__1_3() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CinputSourcesU3E5__1_3)); }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * get_U3CinputSourcesU3E5__1_3() const { return ___U3CinputSourcesU3E5__1_3; }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F ** get_address_of_U3CinputSourcesU3E5__1_3() { return &___U3CinputSourcesU3E5__1_3; }
	inline void set_U3CinputSourcesU3E5__1_3(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * value)
	{
		___U3CinputSourcesU3E5__1_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CinputSourcesU3E5__1_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Es__2_4() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CU3Es__2_4)); }
	inline Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  get_U3CU3Es__2_4() const { return ___U3CU3Es__2_4; }
	inline Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * get_address_of_U3CU3Es__2_4() { return &___U3CU3Es__2_4; }
	inline void set_U3CU3Es__2_4(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  value)
	{
		___U3CU3Es__2_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Es__2_4))->____set_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Es__2_4))->____current_3), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CinputSourceU3E5__3_5() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CinputSourceU3E5__3_5)); }
	inline RuntimeObject* get_U3CinputSourceU3E5__3_5() const { return ___U3CinputSourceU3E5__3_5; }
	inline RuntimeObject** get_address_of_U3CinputSourceU3E5__3_5() { return &___U3CinputSourceU3E5__3_5; }
	inline void set_U3CinputSourceU3E5__3_5(RuntimeObject* value)
	{
		___U3CinputSourceU3E5__3_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CinputSourceU3E5__3_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Es__4_6() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CU3Es__4_6)); }
	inline IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* get_U3CU3Es__4_6() const { return ___U3CU3Es__4_6; }
	inline IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778** get_address_of_U3CU3Es__4_6() { return &___U3CU3Es__4_6; }
	inline void set_U3CU3Es__4_6(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* value)
	{
		___U3CU3Es__4_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3Es__4_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Es__5_7() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CU3Es__5_7)); }
	inline int32_t get_U3CU3Es__5_7() const { return ___U3CU3Es__5_7; }
	inline int32_t* get_address_of_U3CU3Es__5_7() { return &___U3CU3Es__5_7; }
	inline void set_U3CU3Es__5_7(int32_t value)
	{
		___U3CU3Es__5_7 = value;
	}

	inline static int32_t get_offset_of_U3CpointerU3E5__6_8() { return static_cast<int32_t>(offsetof(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816, ___U3CpointerU3E5__6_8)); }
	inline RuntimeObject* get_U3CpointerU3E5__6_8() const { return ___U3CpointerU3E5__6_8; }
	inline RuntimeObject** get_address_of_U3CpointerU3E5__6_8() { return &___U3CpointerU3E5__6_8; }
	inline void set_U3CpointerU3E5__6_8(RuntimeObject* value)
	{
		___U3CpointerU3E5__6_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CpointerU3E5__6_8), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpherePointer/GraspPointPlacement
struct GraspPointPlacement_tCACDF9EE8876778DEA11A9B6C210FE704248AFCF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.SpherePointer/GraspPointPlacement::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(GraspPointPlacement_tCACDF9EE8876778DEA11A9B6C210FE704248AFCF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.TouchableEventType
struct TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.TouchableEventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.LinePointTransformMode
struct LinePointTransformMode_t496E7D51A14B4B29D2288460AEACDD081ACF1278 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.LinePointTransformMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LinePointTransformMode_t496E7D51A14B4B29D2288460AEACDD081ACF1278, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.LineRotationMode
struct LineRotationMode_t2D532F6C06583CBFF8A24E3E19B92C7EFA40E8E8 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.LineRotationMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LineRotationMode_t2D532F6C06583CBFF8A24E3E19B92C7EFA40E8E8, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.RayStep
struct RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Origin>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3COriginU3Ek__BackingField_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Terminus>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CTerminusU3Ek__BackingField_4;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Direction>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CDirectionU3Ek__BackingField_5;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::<Length>k__BackingField
	float ___U3CLengthU3Ek__BackingField_6;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::epsilon
	float ___epsilon_7;

public:
	inline static int32_t get_offset_of_U3COriginU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3COriginU3Ek__BackingField_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3COriginU3Ek__BackingField_3() const { return ___U3COriginU3Ek__BackingField_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3COriginU3Ek__BackingField_3() { return &___U3COriginU3Ek__BackingField_3; }
	inline void set_U3COriginU3Ek__BackingField_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3COriginU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CTerminusU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CTerminusU3Ek__BackingField_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CTerminusU3Ek__BackingField_4() const { return ___U3CTerminusU3Ek__BackingField_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CTerminusU3Ek__BackingField_4() { return &___U3CTerminusU3Ek__BackingField_4; }
	inline void set_U3CTerminusU3Ek__BackingField_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CTerminusU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CDirectionU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CDirectionU3Ek__BackingField_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CDirectionU3Ek__BackingField_5() const { return ___U3CDirectionU3Ek__BackingField_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CDirectionU3Ek__BackingField_5() { return &___U3CDirectionU3Ek__BackingField_5; }
	inline void set_U3CDirectionU3Ek__BackingField_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CDirectionU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CLengthU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CLengthU3Ek__BackingField_6)); }
	inline float get_U3CLengthU3Ek__BackingField_6() const { return ___U3CLengthU3Ek__BackingField_6; }
	inline float* get_address_of_U3CLengthU3Ek__BackingField_6() { return &___U3CLengthU3Ek__BackingField_6; }
	inline void set_U3CLengthU3Ek__BackingField_6(float value)
	{
		___U3CLengthU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_epsilon_7() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___epsilon_7)); }
	inline float get_epsilon_7() const { return ___epsilon_7; }
	inline float* get_address_of_epsilon_7() { return &___epsilon_7; }
	inline void set_epsilon_7(float value)
	{
		___epsilon_7 = value;
	}
};

struct RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::dist
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dist_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::dir
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dir_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_2;

public:
	inline static int32_t get_offset_of_dist_0() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___dist_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_dist_0() const { return ___dist_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_dist_0() { return &___dist_0; }
	inline void set_dist_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___dist_0 = value;
	}

	inline static int32_t get_offset_of_dir_1() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___dir_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_dir_1() const { return ___dir_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_dir_1() { return &___dir_1; }
	inline void set_dir_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___dir_1 = value;
	}

	inline static int32_t get_offset_of_pos_2() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___pos_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_2() const { return ___pos_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_2() { return &___pos_2; }
	inline void set_pos_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType
struct SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Physics.SceneQueryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.PointDistributionMode
struct PointDistributionMode_t6D12977E4ECBE97E4A8863C6305AF58F62664505 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.PointDistributionMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PointDistributionMode_t6D12977E4ECBE97E4A8863C6305AF58F62664505, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.StepMode
struct StepMode_tD424E2BFB962AB9F31B80B8D9F7BC2D7EDA50127 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.StepMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(StepMode_tD424E2BFB962AB9F31B80B8D9F7BC2D7EDA50127, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.TrackingState
struct TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.TrackingState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.DisplayMode
struct DisplayMode_tF21317F99ED10DE61B55440AE78A99EE30A51DF2 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.DisplayMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DisplayMode_tF21317F99ED10DE61B55440AE78A99EE30A51DF2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ToolTipAttachPoint
struct ToolTipAttachPoint_t97C3D71EE3D110C6D7639B41F44E970A663A19E9 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ToolTipAttachPoint::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ToolTipAttachPoint_t97C3D71EE3D110C6D7639B41F44E970A663A19E9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.TouchEvent
struct TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4  : public UnityEvent_1_t37F503D98B7CF110A224EE25F9BECB4CAA781E6A
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel
struct RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.SupportedApplicationModes
struct SupportedApplicationModes_t6510CC124D37AE52F002CDB7E62AB86A4017EBF3 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.SupportedApplicationModes::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SupportedApplicationModes_t6510CC124D37AE52F002CDB7E62AB86A4017EBF3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint
struct TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Int32Enum
struct Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.StringComparison
struct StringComparison_t02BAA95468CE9E91115C604577611FDF58FEDCF0 
{
public:
	// System.Int32 System.StringComparison::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(StringComparison_t02BAA95468CE9E91115C604577611FDF58FEDCF0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.TimeSpan
struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 
{
public:
	// System.Int64 System.TimeSpan::_ticks
	int64_t ____ticks_3;

public:
	inline static int32_t get_offset_of__ticks_3() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4, ____ticks_3)); }
	inline int64_t get__ticks_3() const { return ____ticks_3; }
	inline int64_t* get_address_of__ticks_3() { return &____ticks_3; }
	inline void set__ticks_3(int64_t value)
	{
		____ticks_3 = value;
	}
};

struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields
{
public:
	// System.TimeSpan System.TimeSpan::Zero
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___Zero_0;
	// System.TimeSpan System.TimeSpan::MaxValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MaxValue_1;
	// System.TimeSpan System.TimeSpan::MinValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MinValue_2;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyConfigChecked
	bool ____legacyConfigChecked_4;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyMode
	bool ____legacyMode_5;

public:
	inline static int32_t get_offset_of_Zero_0() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___Zero_0)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_Zero_0() const { return ___Zero_0; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_Zero_0() { return &___Zero_0; }
	inline void set_Zero_0(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___Zero_0 = value;
	}

	inline static int32_t get_offset_of_MaxValue_1() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MaxValue_1)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MaxValue_1() const { return ___MaxValue_1; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MaxValue_1() { return &___MaxValue_1; }
	inline void set_MaxValue_1(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MaxValue_1 = value;
	}

	inline static int32_t get_offset_of_MinValue_2() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MinValue_2)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MinValue_2() const { return ___MinValue_2; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MinValue_2() { return &___MinValue_2; }
	inline void set_MinValue_2(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MinValue_2 = value;
	}

	inline static int32_t get_offset_of__legacyConfigChecked_4() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyConfigChecked_4)); }
	inline bool get__legacyConfigChecked_4() const { return ____legacyConfigChecked_4; }
	inline bool* get_address_of__legacyConfigChecked_4() { return &____legacyConfigChecked_4; }
	inline void set__legacyConfigChecked_4(bool value)
	{
		____legacyConfigChecked_4 = value;
	}

	inline static int32_t get_offset_of__legacyMode_5() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyMode_5)); }
	inline bool get__legacyMode_5() const { return ____legacyMode_5; }
	inline bool* get_address_of__legacyMode_5() { return &____legacyMode_5; }
	inline void set__legacyMode_5(bool value)
	{
		____legacyMode_5 = value;
	}
};


// Unity.Profiling.ProfilerMarker
struct ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// Unity.Profiling.ProfilerMarker/AutoScope
struct AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker/AutoScope::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// UnityEngine.Bounds
struct Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 
{
public:
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Center
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Center_0;
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Extents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Extents_1;

public:
	inline static int32_t get_offset_of_m_Center_0() { return static_cast<int32_t>(offsetof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890, ___m_Center_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Center_0() const { return ___m_Center_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Center_0() { return &___m_Center_0; }
	inline void set_m_Center_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Center_0 = value;
	}

	inline static int32_t get_offset_of_m_Extents_1() { return static_cast<int32_t>(offsetof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890, ___m_Extents_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Extents_1() const { return ___m_Extents_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Extents_1() { return &___m_Extents_1; }
	inline void set_m_Extents_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Extents_1 = value;
	}
};


// UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 
{
public:
	// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::m_GameObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.RaycastResult::module
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	// System.Single UnityEngine.EventSystems.RaycastResult::distance
	float ___distance_2;
	// System.Single UnityEngine.EventSystems.RaycastResult::index
	float ___index_3;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::depth
	int32_t ___depth_4;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingLayer
	int32_t ___sortingLayer_5;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingOrder
	int32_t ___sortingOrder_6;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	// UnityEngine.Vector2 UnityEngine.EventSystems.RaycastResult::screenPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::displayIndex
	int32_t ___displayIndex_10;

public:
	inline static int32_t get_offset_of_m_GameObject_0() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___m_GameObject_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_GameObject_0() const { return ___m_GameObject_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_GameObject_0() { return &___m_GameObject_0; }
	inline void set_m_GameObject_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_GameObject_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_GameObject_0), (void*)value);
	}

	inline static int32_t get_offset_of_module_1() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___module_1)); }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * get_module_1() const { return ___module_1; }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 ** get_address_of_module_1() { return &___module_1; }
	inline void set_module_1(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * value)
	{
		___module_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___module_1), (void*)value);
	}

	inline static int32_t get_offset_of_distance_2() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___distance_2)); }
	inline float get_distance_2() const { return ___distance_2; }
	inline float* get_address_of_distance_2() { return &___distance_2; }
	inline void set_distance_2(float value)
	{
		___distance_2 = value;
	}

	inline static int32_t get_offset_of_index_3() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___index_3)); }
	inline float get_index_3() const { return ___index_3; }
	inline float* get_address_of_index_3() { return &___index_3; }
	inline void set_index_3(float value)
	{
		___index_3 = value;
	}

	inline static int32_t get_offset_of_depth_4() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___depth_4)); }
	inline int32_t get_depth_4() const { return ___depth_4; }
	inline int32_t* get_address_of_depth_4() { return &___depth_4; }
	inline void set_depth_4(int32_t value)
	{
		___depth_4 = value;
	}

	inline static int32_t get_offset_of_sortingLayer_5() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingLayer_5)); }
	inline int32_t get_sortingLayer_5() const { return ___sortingLayer_5; }
	inline int32_t* get_address_of_sortingLayer_5() { return &___sortingLayer_5; }
	inline void set_sortingLayer_5(int32_t value)
	{
		___sortingLayer_5 = value;
	}

	inline static int32_t get_offset_of_sortingOrder_6() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingOrder_6)); }
	inline int32_t get_sortingOrder_6() const { return ___sortingOrder_6; }
	inline int32_t* get_address_of_sortingOrder_6() { return &___sortingOrder_6; }
	inline void set_sortingOrder_6(int32_t value)
	{
		___sortingOrder_6 = value;
	}

	inline static int32_t get_offset_of_worldPosition_7() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldPosition_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldPosition_7() const { return ___worldPosition_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldPosition_7() { return &___worldPosition_7; }
	inline void set_worldPosition_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldPosition_7 = value;
	}

	inline static int32_t get_offset_of_worldNormal_8() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldNormal_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldNormal_8() const { return ___worldNormal_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldNormal_8() { return &___worldNormal_8; }
	inline void set_worldNormal_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldNormal_8 = value;
	}

	inline static int32_t get_offset_of_screenPosition_9() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___screenPosition_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_screenPosition_9() const { return ___screenPosition_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_screenPosition_9() { return &___screenPosition_9; }
	inline void set_screenPosition_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___screenPosition_9 = value;
	}

	inline static int32_t get_offset_of_displayIndex_10() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___displayIndex_10)); }
	inline int32_t get_displayIndex_10() const { return ___displayIndex_10; }
	inline int32_t* get_address_of_displayIndex_10() { return &___displayIndex_10; }
	inline void set_displayIndex_10(int32_t value)
	{
		___displayIndex_10 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};
// Native definition for COM marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};

// UnityEngine.KeyCode
struct KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C 
{
public:
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.QueryTriggerInteraction
struct QueryTriggerInteraction_t56ABDF7B81C5D989BE40455CF39647A532791739 
{
public:
	// System.Int32 UnityEngine.QueryTriggerInteraction::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(QueryTriggerInteraction_t56ABDF7B81C5D989BE40455CF39647A532791739, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Ray
struct Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 
{
public:
	// UnityEngine.Vector3 UnityEngine.Ray::m_Origin
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Origin_0;
	// UnityEngine.Vector3 UnityEngine.Ray::m_Direction
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Direction_1;

public:
	inline static int32_t get_offset_of_m_Origin_0() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Origin_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Origin_0() const { return ___m_Origin_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Origin_0() { return &___m_Origin_0; }
	inline void set_m_Origin_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Origin_0 = value;
	}

	inline static int32_t get_offset_of_m_Direction_1() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Direction_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Direction_1() const { return ___m_Direction_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Direction_1() { return &___m_Direction_1; }
	inline void set_m_Direction_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Direction_1 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
struct ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum::Name
	String_t* ___Name_0;
	// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum::CursorState
	int32_t ___CursorState_1;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum::CursorObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___CursorObject_2;

public:
	inline static int32_t get_offset_of_Name_0() { return static_cast<int32_t>(offsetof(ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4, ___Name_0)); }
	inline String_t* get_Name_0() const { return ___Name_0; }
	inline String_t** get_address_of_Name_0() { return &___Name_0; }
	inline void set_Name_0(String_t* value)
	{
		___Name_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Name_0), (void*)value);
	}

	inline static int32_t get_offset_of_CursorState_1() { return static_cast<int32_t>(offsetof(ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4, ___CursorState_1)); }
	inline int32_t get_CursorState_1() const { return ___CursorState_1; }
	inline int32_t* get_address_of_CursorState_1() { return &___CursorState_1; }
	inline void set_CursorState_1(int32_t value)
	{
		___CursorState_1 = value;
	}

	inline static int32_t get_offset_of_CursorObject_2() { return static_cast<int32_t>(offsetof(ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4, ___CursorObject_2)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_CursorObject_2() const { return ___CursorObject_2; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_CursorObject_2() { return &___CursorObject_2; }
	inline void set_CursorObject_2(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___CursorObject_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CursorObject_2), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
struct ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_pinvoke
{
	char* ___Name_0;
	int32_t ___CursorState_1;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___CursorObject_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
struct ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_com
{
	Il2CppChar* ___Name_0;
	int32_t ___CursorState_1;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___CursorObject_2;
};

// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo
struct SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::numColliders
	int32_t ___numColliders_0;
	// UnityEngine.Collider[] Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::queryBuffer
	ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* ___queryBuffer_1;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::queryRadius
	float ___queryRadius_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::queryMinDistance
	float ___queryMinDistance_3;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::queryAngle
	float ___queryAngle_4;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::querySmoothingFactor
	float ___querySmoothingFactor_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::ignoreBoundsHandlesForQuery
	bool ___ignoreBoundsHandlesForQuery_6;
	// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::grabbable
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * ___grabbable_7;

public:
	inline static int32_t get_offset_of_numColliders_0() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___numColliders_0)); }
	inline int32_t get_numColliders_0() const { return ___numColliders_0; }
	inline int32_t* get_address_of_numColliders_0() { return &___numColliders_0; }
	inline void set_numColliders_0(int32_t value)
	{
		___numColliders_0 = value;
	}

	inline static int32_t get_offset_of_queryBuffer_1() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___queryBuffer_1)); }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* get_queryBuffer_1() const { return ___queryBuffer_1; }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252** get_address_of_queryBuffer_1() { return &___queryBuffer_1; }
	inline void set_queryBuffer_1(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* value)
	{
		___queryBuffer_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBuffer_1), (void*)value);
	}

	inline static int32_t get_offset_of_queryRadius_2() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___queryRadius_2)); }
	inline float get_queryRadius_2() const { return ___queryRadius_2; }
	inline float* get_address_of_queryRadius_2() { return &___queryRadius_2; }
	inline void set_queryRadius_2(float value)
	{
		___queryRadius_2 = value;
	}

	inline static int32_t get_offset_of_queryMinDistance_3() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___queryMinDistance_3)); }
	inline float get_queryMinDistance_3() const { return ___queryMinDistance_3; }
	inline float* get_address_of_queryMinDistance_3() { return &___queryMinDistance_3; }
	inline void set_queryMinDistance_3(float value)
	{
		___queryMinDistance_3 = value;
	}

	inline static int32_t get_offset_of_queryAngle_4() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___queryAngle_4)); }
	inline float get_queryAngle_4() const { return ___queryAngle_4; }
	inline float* get_address_of_queryAngle_4() { return &___queryAngle_4; }
	inline void set_queryAngle_4(float value)
	{
		___queryAngle_4 = value;
	}

	inline static int32_t get_offset_of_querySmoothingFactor_5() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___querySmoothingFactor_5)); }
	inline float get_querySmoothingFactor_5() const { return ___querySmoothingFactor_5; }
	inline float* get_address_of_querySmoothingFactor_5() { return &___querySmoothingFactor_5; }
	inline void set_querySmoothingFactor_5(float value)
	{
		___querySmoothingFactor_5 = value;
	}

	inline static int32_t get_offset_of_ignoreBoundsHandlesForQuery_6() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___ignoreBoundsHandlesForQuery_6)); }
	inline bool get_ignoreBoundsHandlesForQuery_6() const { return ___ignoreBoundsHandlesForQuery_6; }
	inline bool* get_address_of_ignoreBoundsHandlesForQuery_6() { return &___ignoreBoundsHandlesForQuery_6; }
	inline void set_ignoreBoundsHandlesForQuery_6(bool value)
	{
		___ignoreBoundsHandlesForQuery_6 = value;
	}

	inline static int32_t get_offset_of_grabbable_7() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A, ___grabbable_7)); }
	inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * get_grabbable_7() const { return ___grabbable_7; }
	inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** get_address_of_grabbable_7() { return &___grabbable_7; }
	inline void set_grabbable_7(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * value)
	{
		___grabbable_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___grabbable_7), (void*)value);
	}
};

struct SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::TryUpdateQueryBufferForLayerMaskPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryUpdateQueryBufferForLayerMaskPerfMarker_9;

public:
	inline static int32_t get_offset_of_TryUpdateQueryBufferForLayerMaskPerfMarker_9() { return static_cast<int32_t>(offsetof(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_StaticFields, ___TryUpdateQueryBufferForLayerMaskPerfMarker_9)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryUpdateQueryBufferForLayerMaskPerfMarker_9() const { return ___TryUpdateQueryBufferForLayerMaskPerfMarker_9; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryUpdateQueryBufferForLayerMaskPerfMarker_9() { return &___TryUpdateQueryBufferForLayerMaskPerfMarker_9; }
	inline void set_TryUpdateQueryBufferForLayerMaskPerfMarker_9(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryUpdateQueryBufferForLayerMaskPerfMarker_9 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
struct SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum::Name
	String_t* ___Name_0;
	// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum::CursorState
	int32_t ___CursorState_1;
	// UnityEngine.Sprite Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum::CursorSprite
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___CursorSprite_2;
	// UnityEngine.Color Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum::CursorColor
	Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___CursorColor_3;

public:
	inline static int32_t get_offset_of_Name_0() { return static_cast<int32_t>(offsetof(SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784, ___Name_0)); }
	inline String_t* get_Name_0() const { return ___Name_0; }
	inline String_t** get_address_of_Name_0() { return &___Name_0; }
	inline void set_Name_0(String_t* value)
	{
		___Name_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Name_0), (void*)value);
	}

	inline static int32_t get_offset_of_CursorState_1() { return static_cast<int32_t>(offsetof(SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784, ___CursorState_1)); }
	inline int32_t get_CursorState_1() const { return ___CursorState_1; }
	inline int32_t* get_address_of_CursorState_1() { return &___CursorState_1; }
	inline void set_CursorState_1(int32_t value)
	{
		___CursorState_1 = value;
	}

	inline static int32_t get_offset_of_CursorSprite_2() { return static_cast<int32_t>(offsetof(SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784, ___CursorSprite_2)); }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * get_CursorSprite_2() const { return ___CursorSprite_2; }
	inline Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 ** get_address_of_CursorSprite_2() { return &___CursorSprite_2; }
	inline void set_CursorSprite_2(Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * value)
	{
		___CursorSprite_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CursorSprite_2), (void*)value);
	}

	inline static int32_t get_offset_of_CursorColor_3() { return static_cast<int32_t>(offsetof(SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784, ___CursorColor_3)); }
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  get_CursorColor_3() const { return ___CursorColor_3; }
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 * get_address_of_CursorColor_3() { return &___CursorColor_3; }
	inline void set_CursorColor_3(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  value)
	{
		___CursorColor_3 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
struct SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_pinvoke
{
	char* ___Name_0;
	int32_t ___CursorState_1;
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___CursorSprite_2;
	Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___CursorColor_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
struct SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_com
{
	Il2CppChar* ___Name_0;
	int32_t ___CursorState_1;
	Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___CursorSprite_2;
	Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___CursorColor_3;
};

// Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<RayDistance>k__BackingField
	float ___U3CRayDistanceU3Ek__BackingField_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Point>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Normal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Object>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastRaycastHit>k__BackingField
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___U3CLastRaycastHitU3Ek__BackingField_4;
	// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastGraphicsRaycastResult>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<PointLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<NormalLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CRayDistanceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CRayDistanceU3Ek__BackingField_0)); }
	inline float get_U3CRayDistanceU3Ek__BackingField_0() const { return ___U3CRayDistanceU3Ek__BackingField_0; }
	inline float* get_address_of_U3CRayDistanceU3Ek__BackingField_0() { return &___U3CRayDistanceU3Ek__BackingField_0; }
	inline void set_U3CRayDistanceU3Ek__BackingField_0(float value)
	{
		___U3CRayDistanceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CPointU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointU3Ek__BackingField_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointU3Ek__BackingField_1() const { return ___U3CPointU3Ek__BackingField_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointU3Ek__BackingField_1() { return &___U3CPointU3Ek__BackingField_1; }
	inline void set_U3CPointU3Ek__BackingField_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CNormalU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalU3Ek__BackingField_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalU3Ek__BackingField_2() const { return ___U3CNormalU3Ek__BackingField_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalU3Ek__BackingField_2() { return &___U3CNormalU3Ek__BackingField_2; }
	inline void set_U3CNormalU3Ek__BackingField_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CObjectU3Ek__BackingField_3() const { return ___U3CObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CObjectU3Ek__BackingField_3() { return &___U3CObjectU3Ek__BackingField_3; }
	inline void set_U3CObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CLastRaycastHitU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastRaycastHitU3Ek__BackingField_4)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_U3CLastRaycastHitU3Ek__BackingField_4() const { return ___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_U3CLastRaycastHitU3Ek__BackingField_4() { return &___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline void set_U3CLastRaycastHitU3Ek__BackingField_4(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___U3CLastRaycastHitU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() const { return ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return &___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline void set_U3CLastGraphicsRaycastResultU3Ek__BackingField_5(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CLastGraphicsRaycastResultU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointLocalSpaceU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointLocalSpaceU3Ek__BackingField_6() const { return ___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return &___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline void set_U3CPointLocalSpaceU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointLocalSpaceU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalLocalSpaceU3Ek__BackingField_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalLocalSpaceU3Ek__BackingField_7() const { return ___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return &___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline void set_U3CNormalLocalSpaceU3Ek__BackingField_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalLocalSpaceU3Ek__BackingField_7 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_pinvoke
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_com
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};

// Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster
struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F  : public RuntimeObject
{
public:

public:
};

struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::DebugEnabled
	bool ___DebugEnabled_0;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___RaycastHits_3;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::SphereCastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___SphereCastHits_4;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSimplePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSimplePhysicsStepPerfMarker_5;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastBoxPhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastBoxPhysicsStepPerfMarker_6;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSpherePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSpherePhysicsStepPerfMarker_7;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::TryGetPrioritizedPhysicsHitPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetPrioritizedPhysicsHitPerfMarker_8;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastPlanePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastPlanePhysicsStepPerfMarker_9;

public:
	inline static int32_t get_offset_of_DebugEnabled_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___DebugEnabled_0)); }
	inline bool get_DebugEnabled_0() const { return ___DebugEnabled_0; }
	inline bool* get_address_of_DebugEnabled_0() { return &___DebugEnabled_0; }
	inline void set_DebugEnabled_0(bool value)
	{
		___DebugEnabled_0 = value;
	}

	inline static int32_t get_offset_of_RaycastHits_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastHits_3)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_RaycastHits_3() const { return ___RaycastHits_3; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_RaycastHits_3() { return &___RaycastHits_3; }
	inline void set_RaycastHits_3(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___RaycastHits_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RaycastHits_3), (void*)value);
	}

	inline static int32_t get_offset_of_SphereCastHits_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___SphereCastHits_4)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_SphereCastHits_4() const { return ___SphereCastHits_4; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_SphereCastHits_4() { return &___SphereCastHits_4; }
	inline void set_SphereCastHits_4(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___SphereCastHits_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SphereCastHits_4), (void*)value);
	}

	inline static int32_t get_offset_of_RaycastSimplePhysicsStepPerfMarker_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSimplePhysicsStepPerfMarker_5)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSimplePhysicsStepPerfMarker_5() const { return ___RaycastSimplePhysicsStepPerfMarker_5; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSimplePhysicsStepPerfMarker_5() { return &___RaycastSimplePhysicsStepPerfMarker_5; }
	inline void set_RaycastSimplePhysicsStepPerfMarker_5(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSimplePhysicsStepPerfMarker_5 = value;
	}

	inline static int32_t get_offset_of_RaycastBoxPhysicsStepPerfMarker_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastBoxPhysicsStepPerfMarker_6)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastBoxPhysicsStepPerfMarker_6() const { return ___RaycastBoxPhysicsStepPerfMarker_6; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastBoxPhysicsStepPerfMarker_6() { return &___RaycastBoxPhysicsStepPerfMarker_6; }
	inline void set_RaycastBoxPhysicsStepPerfMarker_6(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastBoxPhysicsStepPerfMarker_6 = value;
	}

	inline static int32_t get_offset_of_RaycastSpherePhysicsStepPerfMarker_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSpherePhysicsStepPerfMarker_7)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSpherePhysicsStepPerfMarker_7() const { return ___RaycastSpherePhysicsStepPerfMarker_7; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSpherePhysicsStepPerfMarker_7() { return &___RaycastSpherePhysicsStepPerfMarker_7; }
	inline void set_RaycastSpherePhysicsStepPerfMarker_7(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSpherePhysicsStepPerfMarker_7 = value;
	}

	inline static int32_t get_offset_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___TryGetPrioritizedPhysicsHitPerfMarker_8)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetPrioritizedPhysicsHitPerfMarker_8() const { return ___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return &___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline void set_TryGetPrioritizedPhysicsHitPerfMarker_8(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetPrioritizedPhysicsHitPerfMarker_8 = value;
	}

	inline static int32_t get_offset_of_RaycastPlanePhysicsStepPerfMarker_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastPlanePhysicsStepPerfMarker_9)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastPlanePhysicsStepPerfMarker_9() const { return ___RaycastPlanePhysicsStepPerfMarker_9; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastPlanePhysicsStepPerfMarker_9() { return &___RaycastPlanePhysicsStepPerfMarker_9; }
	inline void set_RaycastPlanePhysicsStepPerfMarker_9(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastPlanePhysicsStepPerfMarker_9 = value;
	}
};


// System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>
struct KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	int32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23, ___key_0)); }
	inline int32_t get_key_0() const { return ___key_0; }
	inline int32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(int32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23, ___value_1)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_value_1() const { return ___value_1; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Int32Enum,System.Object>
struct KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	int32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0, ___key_0)); }
	inline int32_t get_key_0() const { return ___key_0; }
	inline int32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(int32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0, ___value_1)); }
	inline RuntimeObject * get_value_1() const { return ___value_1; }
	inline RuntimeObject ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.SystemException
struct SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_pinvoke : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_com : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
};

// UnityEngine.Sprite
struct Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile
struct BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile::isCustomProfile
	bool ___isCustomProfile_4;

public:
	inline static int32_t get_offset_of_isCustomProfile_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8, ___isCustomProfile_4)); }
	inline bool get_isCustomProfile_4() const { return ___isCustomProfile_4; }
	inline bool* get_address_of_isCustomProfile_4() { return &___isCustomProfile_4; }
	inline void set_isCustomProfile_4(bool value)
	{
		___isCustomProfile_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputActionEventPair
struct InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D 
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.InputActionEventPair::inputAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction_0;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.InputActionEventPair::unityEvent
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___unityEvent_1;

public:
	inline static int32_t get_offset_of_inputAction_0() { return static_cast<int32_t>(offsetof(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D, ___inputAction_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_inputAction_0() const { return ___inputAction_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_inputAction_0() { return &___inputAction_0; }
	inline void set_inputAction_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___inputAction_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___inputAction_0))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_unityEvent_1() { return static_cast<int32_t>(offsetof(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D, ___unityEvent_1)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_unityEvent_1() const { return ___unityEvent_1; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_unityEvent_1() { return &___unityEvent_1; }
	inline void set_unityEvent_1(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___unityEvent_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___unityEvent_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.InputActionEventPair
struct InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D_marshaled_pinvoke
{
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___inputAction_0;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___unityEvent_1;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.InputActionEventPair
struct InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D_marshaled_com
{
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___inputAction_0;
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___unityEvent_1;
};

// Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizationKey
	String_t* ___localizationKey_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizedKeyword
	String_t* ___localizedKeyword_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyword
	String_t* ___keyword_2;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyCode
	int32_t ___keyCode_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_4;

public:
	inline static int32_t get_offset_of_localizationKey_0() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizationKey_0)); }
	inline String_t* get_localizationKey_0() const { return ___localizationKey_0; }
	inline String_t** get_address_of_localizationKey_0() { return &___localizationKey_0; }
	inline void set_localizationKey_0(String_t* value)
	{
		___localizationKey_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizationKey_0), (void*)value);
	}

	inline static int32_t get_offset_of_localizedKeyword_1() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizedKeyword_1)); }
	inline String_t* get_localizedKeyword_1() const { return ___localizedKeyword_1; }
	inline String_t** get_address_of_localizedKeyword_1() { return &___localizedKeyword_1; }
	inline void set_localizedKeyword_1(String_t* value)
	{
		___localizedKeyword_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizedKeyword_1), (void*)value);
	}

	inline static int32_t get_offset_of_keyword_2() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyword_2)); }
	inline String_t* get_keyword_2() const { return ___keyword_2; }
	inline String_t** get_address_of_keyword_2() { return &___keyword_2; }
	inline void set_keyword_2(String_t* value)
	{
		___keyword_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keyword_2), (void*)value);
	}

	inline static int32_t get_offset_of_keyCode_3() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyCode_3)); }
	inline int32_t get_keyCode_3() const { return ___keyCode_3; }
	inline int32_t* get_address_of_keyCode_3() { return &___keyCode_3; }
	inline void set_keyCode_3(int32_t value)
	{
		___keyCode_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___action_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_4() const { return ___action_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_4))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke
{
	char* ___localizationKey_0;
	char* ___localizedKeyword_1;
	char* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com
{
	Il2CppChar* ___localizationKey_0;
	Il2CppChar* ___localizedKeyword_1;
	Il2CppChar* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_4;
};

// System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>
struct Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56, ___dictionary_0)); }
	inline Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56, ___current_3)); }
	inline KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23 * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32Enum,System.Object>
struct Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179, ___dictionary_0)); }
	inline Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179, ___current_3)); }
	inline KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0 * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile
struct MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::jointPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___jointPrefab_5;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::palmPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___palmPrefab_6;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::fingertipPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___fingertipPrefab_7;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::handMeshPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___handMeshPrefab_8;
	// Microsoft.MixedReality.Toolkit.Utilities.SupportedApplicationModes Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::handMeshVisualizationModes
	int32_t ___handMeshVisualizationModes_9;
	// Microsoft.MixedReality.Toolkit.Utilities.SupportedApplicationModes Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::handJointVisualizationModes
	int32_t ___handJointVisualizationModes_10;

public:
	inline static int32_t get_offset_of_jointPrefab_5() { return static_cast<int32_t>(offsetof(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36, ___jointPrefab_5)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_jointPrefab_5() const { return ___jointPrefab_5; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_jointPrefab_5() { return &___jointPrefab_5; }
	inline void set_jointPrefab_5(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___jointPrefab_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___jointPrefab_5), (void*)value);
	}

	inline static int32_t get_offset_of_palmPrefab_6() { return static_cast<int32_t>(offsetof(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36, ___palmPrefab_6)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_palmPrefab_6() const { return ___palmPrefab_6; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_palmPrefab_6() { return &___palmPrefab_6; }
	inline void set_palmPrefab_6(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___palmPrefab_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___palmPrefab_6), (void*)value);
	}

	inline static int32_t get_offset_of_fingertipPrefab_7() { return static_cast<int32_t>(offsetof(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36, ___fingertipPrefab_7)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_fingertipPrefab_7() const { return ___fingertipPrefab_7; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_fingertipPrefab_7() { return &___fingertipPrefab_7; }
	inline void set_fingertipPrefab_7(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___fingertipPrefab_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fingertipPrefab_7), (void*)value);
	}

	inline static int32_t get_offset_of_handMeshPrefab_8() { return static_cast<int32_t>(offsetof(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36, ___handMeshPrefab_8)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_handMeshPrefab_8() const { return ___handMeshPrefab_8; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_handMeshPrefab_8() { return &___handMeshPrefab_8; }
	inline void set_handMeshPrefab_8(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___handMeshPrefab_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handMeshPrefab_8), (void*)value);
	}

	inline static int32_t get_offset_of_handMeshVisualizationModes_9() { return static_cast<int32_t>(offsetof(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36, ___handMeshVisualizationModes_9)); }
	inline int32_t get_handMeshVisualizationModes_9() const { return ___handMeshVisualizationModes_9; }
	inline int32_t* get_address_of_handMeshVisualizationModes_9() { return &___handMeshVisualizationModes_9; }
	inline void set_handMeshVisualizationModes_9(int32_t value)
	{
		___handMeshVisualizationModes_9 = value;
	}

	inline static int32_t get_offset_of_handJointVisualizationModes_10() { return static_cast<int32_t>(offsetof(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36, ___handJointVisualizationModes_10)); }
	inline int32_t get_handJointVisualizationModes_10() const { return ___handJointVisualizationModes_10; }
	inline int32_t* get_address_of_handJointVisualizationModes_10() { return &___handJointVisualizationModes_10; }
	inline void set_handJointVisualizationModes_10(int32_t value)
	{
		___handJointVisualizationModes_10 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[] Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::dataProviderConfigurations
	MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* ___dataProviderConfigurations_5;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___focusProviderType_6;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::raycastProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___raycastProviderType_7;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusQueryBufferSize
	int32_t ___focusQueryBufferSize_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::shouldUseGraphicsRaycast
	bool ___shouldUseGraphicsRaycast_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusIndividualCompoundCollider
	bool ___focusIndividualCompoundCollider_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionsProfile
	MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * ___inputActionsProfile_11;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionRulesProfile
	MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * ___inputActionRulesProfile_12;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::pointerProfile
	MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * ___pointerProfile_13;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::gesturesProfile
	MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * ___gesturesProfile_14;
	// System.Collections.Generic.List`1<System.Globalization.CultureInfo> Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::supportedVoiceCultures
	List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * ___supportedVoiceCultures_15;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::speechCommandsProfile
	MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * ___speechCommandsProfile_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::enableControllerMapping
	bool ___enableControllerMapping_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerMappingProfile
	MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * ___controllerMappingProfile_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerVisualizationProfile
	MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * ___controllerVisualizationProfile_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::handTrackingProfile
	MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * ___handTrackingProfile_20;

public:
	inline static int32_t get_offset_of_dataProviderConfigurations_5() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___dataProviderConfigurations_5)); }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* get_dataProviderConfigurations_5() const { return ___dataProviderConfigurations_5; }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426** get_address_of_dataProviderConfigurations_5() { return &___dataProviderConfigurations_5; }
	inline void set_dataProviderConfigurations_5(MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* value)
	{
		___dataProviderConfigurations_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dataProviderConfigurations_5), (void*)value);
	}

	inline static int32_t get_offset_of_focusProviderType_6() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusProviderType_6)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_focusProviderType_6() const { return ___focusProviderType_6; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_focusProviderType_6() { return &___focusProviderType_6; }
	inline void set_focusProviderType_6(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___focusProviderType_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___focusProviderType_6), (void*)value);
	}

	inline static int32_t get_offset_of_raycastProviderType_7() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___raycastProviderType_7)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_raycastProviderType_7() const { return ___raycastProviderType_7; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_raycastProviderType_7() { return &___raycastProviderType_7; }
	inline void set_raycastProviderType_7(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___raycastProviderType_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastProviderType_7), (void*)value);
	}

	inline static int32_t get_offset_of_focusQueryBufferSize_8() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusQueryBufferSize_8)); }
	inline int32_t get_focusQueryBufferSize_8() const { return ___focusQueryBufferSize_8; }
	inline int32_t* get_address_of_focusQueryBufferSize_8() { return &___focusQueryBufferSize_8; }
	inline void set_focusQueryBufferSize_8(int32_t value)
	{
		___focusQueryBufferSize_8 = value;
	}

	inline static int32_t get_offset_of_shouldUseGraphicsRaycast_9() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___shouldUseGraphicsRaycast_9)); }
	inline bool get_shouldUseGraphicsRaycast_9() const { return ___shouldUseGraphicsRaycast_9; }
	inline bool* get_address_of_shouldUseGraphicsRaycast_9() { return &___shouldUseGraphicsRaycast_9; }
	inline void set_shouldUseGraphicsRaycast_9(bool value)
	{
		___shouldUseGraphicsRaycast_9 = value;
	}

	inline static int32_t get_offset_of_focusIndividualCompoundCollider_10() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusIndividualCompoundCollider_10)); }
	inline bool get_focusIndividualCompoundCollider_10() const { return ___focusIndividualCompoundCollider_10; }
	inline bool* get_address_of_focusIndividualCompoundCollider_10() { return &___focusIndividualCompoundCollider_10; }
	inline void set_focusIndividualCompoundCollider_10(bool value)
	{
		___focusIndividualCompoundCollider_10 = value;
	}

	inline static int32_t get_offset_of_inputActionsProfile_11() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionsProfile_11)); }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * get_inputActionsProfile_11() const { return ___inputActionsProfile_11; }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 ** get_address_of_inputActionsProfile_11() { return &___inputActionsProfile_11; }
	inline void set_inputActionsProfile_11(MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * value)
	{
		___inputActionsProfile_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionsProfile_11), (void*)value);
	}

	inline static int32_t get_offset_of_inputActionRulesProfile_12() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionRulesProfile_12)); }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * get_inputActionRulesProfile_12() const { return ___inputActionRulesProfile_12; }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A ** get_address_of_inputActionRulesProfile_12() { return &___inputActionRulesProfile_12; }
	inline void set_inputActionRulesProfile_12(MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * value)
	{
		___inputActionRulesProfile_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionRulesProfile_12), (void*)value);
	}

	inline static int32_t get_offset_of_pointerProfile_13() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___pointerProfile_13)); }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * get_pointerProfile_13() const { return ___pointerProfile_13; }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E ** get_address_of_pointerProfile_13() { return &___pointerProfile_13; }
	inline void set_pointerProfile_13(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * value)
	{
		___pointerProfile_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerProfile_13), (void*)value);
	}

	inline static int32_t get_offset_of_gesturesProfile_14() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___gesturesProfile_14)); }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * get_gesturesProfile_14() const { return ___gesturesProfile_14; }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 ** get_address_of_gesturesProfile_14() { return &___gesturesProfile_14; }
	inline void set_gesturesProfile_14(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * value)
	{
		___gesturesProfile_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gesturesProfile_14), (void*)value);
	}

	inline static int32_t get_offset_of_supportedVoiceCultures_15() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___supportedVoiceCultures_15)); }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * get_supportedVoiceCultures_15() const { return ___supportedVoiceCultures_15; }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 ** get_address_of_supportedVoiceCultures_15() { return &___supportedVoiceCultures_15; }
	inline void set_supportedVoiceCultures_15(List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * value)
	{
		___supportedVoiceCultures_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___supportedVoiceCultures_15), (void*)value);
	}

	inline static int32_t get_offset_of_speechCommandsProfile_16() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___speechCommandsProfile_16)); }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * get_speechCommandsProfile_16() const { return ___speechCommandsProfile_16; }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD ** get_address_of_speechCommandsProfile_16() { return &___speechCommandsProfile_16; }
	inline void set_speechCommandsProfile_16(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * value)
	{
		___speechCommandsProfile_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechCommandsProfile_16), (void*)value);
	}

	inline static int32_t get_offset_of_enableControllerMapping_17() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___enableControllerMapping_17)); }
	inline bool get_enableControllerMapping_17() const { return ___enableControllerMapping_17; }
	inline bool* get_address_of_enableControllerMapping_17() { return &___enableControllerMapping_17; }
	inline void set_enableControllerMapping_17(bool value)
	{
		___enableControllerMapping_17 = value;
	}

	inline static int32_t get_offset_of_controllerMappingProfile_18() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerMappingProfile_18)); }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * get_controllerMappingProfile_18() const { return ___controllerMappingProfile_18; }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB ** get_address_of_controllerMappingProfile_18() { return &___controllerMappingProfile_18; }
	inline void set_controllerMappingProfile_18(MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * value)
	{
		___controllerMappingProfile_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerMappingProfile_18), (void*)value);
	}

	inline static int32_t get_offset_of_controllerVisualizationProfile_19() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerVisualizationProfile_19)); }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * get_controllerVisualizationProfile_19() const { return ___controllerVisualizationProfile_19; }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D ** get_address_of_controllerVisualizationProfile_19() { return &___controllerVisualizationProfile_19; }
	inline void set_controllerVisualizationProfile_19(MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * value)
	{
		___controllerVisualizationProfile_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerVisualizationProfile_19), (void*)value);
	}

	inline static int32_t get_offset_of_handTrackingProfile_20() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___handTrackingProfile_20)); }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * get_handTrackingProfile_20() const { return ___handTrackingProfile_20; }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 ** get_address_of_handTrackingProfile_20() { return &___handTrackingProfile_20; }
	inline void set_handTrackingProfile_20(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * value)
	{
		___handTrackingProfile_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handTrackingProfile_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// System.TimeSpan Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseDuration>k__BackingField
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___U3CPhraseDurationU3Ek__BackingField_5;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseStartTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CPhraseStartTimeU3Ek__BackingField_6;
	// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Command>k__BackingField
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___U3CCommandU3Ek__BackingField_7;
	// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Confidence>k__BackingField
	int32_t ___U3CConfidenceU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_U3CPhraseDurationU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseDurationU3Ek__BackingField_5)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_U3CPhraseDurationU3Ek__BackingField_5() const { return ___U3CPhraseDurationU3Ek__BackingField_5; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_U3CPhraseDurationU3Ek__BackingField_5() { return &___U3CPhraseDurationU3Ek__BackingField_5; }
	inline void set_U3CPhraseDurationU3Ek__BackingField_5(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___U3CPhraseDurationU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseStartTimeU3Ek__BackingField_6)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CPhraseStartTimeU3Ek__BackingField_6() const { return ___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return &___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline void set_U3CPhraseStartTimeU3Ek__BackingField_6(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CPhraseStartTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CCommandU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CCommandU3Ek__BackingField_7)); }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  get_U3CCommandU3Ek__BackingField_7() const { return ___U3CCommandU3Ek__BackingField_7; }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * get_address_of_U3CCommandU3Ek__BackingField_7() { return &___U3CCommandU3Ek__BackingField_7; }
	inline void set_U3CCommandU3Ek__BackingField_7(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		___U3CCommandU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CCommandU3Ek__BackingField_7))->___action_4))->___description_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CConfidenceU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CConfidenceU3Ek__BackingField_8)); }
	inline int32_t get_U3CConfidenceU3Ek__BackingField_8() const { return ___U3CConfidenceU3Ek__BackingField_8; }
	inline int32_t* get_address_of_U3CConfidenceU3Ek__BackingField_8() { return &___U3CConfidenceU3Ek__BackingField_8; }
	inline void set_U3CConfidenceU3Ek__BackingField_8(int32_t value)
	{
		___U3CConfidenceU3Ek__BackingField_8 = value;
	}
};


// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};

struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields
{
public:
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPostRender_6;

public:
	inline static int32_t get_offset_of_onPreCull_4() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreCull_4)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreCull_4() const { return ___onPreCull_4; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreCull_4() { return &___onPreCull_4; }
	inline void set_onPreCull_4(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreCull_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreCull_4), (void*)value);
	}

	inline static int32_t get_offset_of_onPreRender_5() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreRender_5)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreRender_5() const { return ___onPreRender_5; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreRender_5() { return &___onPreRender_5; }
	inline void set_onPreRender_5(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreRender_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreRender_5), (void*)value);
	}

	inline static int32_t get_offset_of_onPostRender_6() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPostRender_6)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPostRender_6() const { return ___onPostRender_6; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPostRender_6() { return &___onPostRender_6; }
	inline void set_onPostRender_6(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPostRender_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPostRender_6), (void*)value);
	}
};


// UnityEngine.MeshCollider
struct MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE  : public Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF
{
public:

public:
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// UnityEngine.SkinnedMeshRenderer
struct SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65  : public Renderer_t0556D67DD582620D1F495627EDE30D03284151F4
{
public:

public:
};


// UnityEngine.SpriteRenderer
struct SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F  : public Renderer_t0556D67DD582620D1F495627EDE30D03284151F4
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseCursor
struct BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.CursorStateEnum Microsoft.MixedReality.Toolkit.Input.BaseCursor::<CursorState>k__BackingField
	int32_t ___U3CCursorStateU3Ek__BackingField_4;
	// Microsoft.MixedReality.Toolkit.Input.CursorContextEnum Microsoft.MixedReality.Toolkit.Input.BaseCursor::<CursorContext>k__BackingField
	int32_t ___U3CCursorContextU3Ek__BackingField_5;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::surfaceCursorDistance
	float ___surfaceCursorDistance_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::useUnscaledTime
	bool ___useUnscaledTime_7;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::positionLerpTime
	float ___positionLerpTime_8;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::scaleLerpTime
	float ___scaleLerpTime_9;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::rotationLerpTime
	float ___rotationLerpTime_10;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::lookRotationBlend
	float ___lookRotationBlend_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::resizeCursorWithDistance
	bool ___resizeCursorWithDistance_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::cursorAngularSize
	float ___cursorAngularSize_13;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.BaseCursor::PrimaryCursorVisual
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___PrimaryCursorVisual_14;
	// System.Collections.Generic.List`1<System.UInt32> Microsoft.MixedReality.Toolkit.Input.BaseCursor::SourceDownIds
	List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * ___SourceDownIds_15;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseCursor::TargetedObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___TargetedObject_16;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseCursor::visibleSourcesCount
	uint32_t ___visibleSourcesCount_17;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseCursor::targetPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___targetPosition_18;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseCursor::targetScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___targetScale_19;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseCursor::targetRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___targetRotation_20;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.BaseCursor::pointer
	RuntimeObject* ___pointer_21;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseCursor::defaultCursorDistance
	float ___defaultCursorDistance_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseCursor::<SetVisibilityOnSourceDetected>k__BackingField
	bool ___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23;
	// Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.BaseCursor::focusDetails
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  ___focusDetails_24;

public:
	inline static int32_t get_offset_of_U3CCursorStateU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___U3CCursorStateU3Ek__BackingField_4)); }
	inline int32_t get_U3CCursorStateU3Ek__BackingField_4() const { return ___U3CCursorStateU3Ek__BackingField_4; }
	inline int32_t* get_address_of_U3CCursorStateU3Ek__BackingField_4() { return &___U3CCursorStateU3Ek__BackingField_4; }
	inline void set_U3CCursorStateU3Ek__BackingField_4(int32_t value)
	{
		___U3CCursorStateU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CCursorContextU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___U3CCursorContextU3Ek__BackingField_5)); }
	inline int32_t get_U3CCursorContextU3Ek__BackingField_5() const { return ___U3CCursorContextU3Ek__BackingField_5; }
	inline int32_t* get_address_of_U3CCursorContextU3Ek__BackingField_5() { return &___U3CCursorContextU3Ek__BackingField_5; }
	inline void set_U3CCursorContextU3Ek__BackingField_5(int32_t value)
	{
		___U3CCursorContextU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_surfaceCursorDistance_6() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___surfaceCursorDistance_6)); }
	inline float get_surfaceCursorDistance_6() const { return ___surfaceCursorDistance_6; }
	inline float* get_address_of_surfaceCursorDistance_6() { return &___surfaceCursorDistance_6; }
	inline void set_surfaceCursorDistance_6(float value)
	{
		___surfaceCursorDistance_6 = value;
	}

	inline static int32_t get_offset_of_useUnscaledTime_7() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___useUnscaledTime_7)); }
	inline bool get_useUnscaledTime_7() const { return ___useUnscaledTime_7; }
	inline bool* get_address_of_useUnscaledTime_7() { return &___useUnscaledTime_7; }
	inline void set_useUnscaledTime_7(bool value)
	{
		___useUnscaledTime_7 = value;
	}

	inline static int32_t get_offset_of_positionLerpTime_8() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___positionLerpTime_8)); }
	inline float get_positionLerpTime_8() const { return ___positionLerpTime_8; }
	inline float* get_address_of_positionLerpTime_8() { return &___positionLerpTime_8; }
	inline void set_positionLerpTime_8(float value)
	{
		___positionLerpTime_8 = value;
	}

	inline static int32_t get_offset_of_scaleLerpTime_9() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___scaleLerpTime_9)); }
	inline float get_scaleLerpTime_9() const { return ___scaleLerpTime_9; }
	inline float* get_address_of_scaleLerpTime_9() { return &___scaleLerpTime_9; }
	inline void set_scaleLerpTime_9(float value)
	{
		___scaleLerpTime_9 = value;
	}

	inline static int32_t get_offset_of_rotationLerpTime_10() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___rotationLerpTime_10)); }
	inline float get_rotationLerpTime_10() const { return ___rotationLerpTime_10; }
	inline float* get_address_of_rotationLerpTime_10() { return &___rotationLerpTime_10; }
	inline void set_rotationLerpTime_10(float value)
	{
		___rotationLerpTime_10 = value;
	}

	inline static int32_t get_offset_of_lookRotationBlend_11() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___lookRotationBlend_11)); }
	inline float get_lookRotationBlend_11() const { return ___lookRotationBlend_11; }
	inline float* get_address_of_lookRotationBlend_11() { return &___lookRotationBlend_11; }
	inline void set_lookRotationBlend_11(float value)
	{
		___lookRotationBlend_11 = value;
	}

	inline static int32_t get_offset_of_resizeCursorWithDistance_12() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___resizeCursorWithDistance_12)); }
	inline bool get_resizeCursorWithDistance_12() const { return ___resizeCursorWithDistance_12; }
	inline bool* get_address_of_resizeCursorWithDistance_12() { return &___resizeCursorWithDistance_12; }
	inline void set_resizeCursorWithDistance_12(bool value)
	{
		___resizeCursorWithDistance_12 = value;
	}

	inline static int32_t get_offset_of_cursorAngularSize_13() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___cursorAngularSize_13)); }
	inline float get_cursorAngularSize_13() const { return ___cursorAngularSize_13; }
	inline float* get_address_of_cursorAngularSize_13() { return &___cursorAngularSize_13; }
	inline void set_cursorAngularSize_13(float value)
	{
		___cursorAngularSize_13 = value;
	}

	inline static int32_t get_offset_of_PrimaryCursorVisual_14() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___PrimaryCursorVisual_14)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_PrimaryCursorVisual_14() const { return ___PrimaryCursorVisual_14; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_PrimaryCursorVisual_14() { return &___PrimaryCursorVisual_14; }
	inline void set_PrimaryCursorVisual_14(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___PrimaryCursorVisual_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PrimaryCursorVisual_14), (void*)value);
	}

	inline static int32_t get_offset_of_SourceDownIds_15() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___SourceDownIds_15)); }
	inline List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * get_SourceDownIds_15() const { return ___SourceDownIds_15; }
	inline List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E ** get_address_of_SourceDownIds_15() { return &___SourceDownIds_15; }
	inline void set_SourceDownIds_15(List_1_t49B315A213A231954A3718D77EE3A2AFF443C38E * value)
	{
		___SourceDownIds_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SourceDownIds_15), (void*)value);
	}

	inline static int32_t get_offset_of_TargetedObject_16() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___TargetedObject_16)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_TargetedObject_16() const { return ___TargetedObject_16; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_TargetedObject_16() { return &___TargetedObject_16; }
	inline void set_TargetedObject_16(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___TargetedObject_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TargetedObject_16), (void*)value);
	}

	inline static int32_t get_offset_of_visibleSourcesCount_17() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___visibleSourcesCount_17)); }
	inline uint32_t get_visibleSourcesCount_17() const { return ___visibleSourcesCount_17; }
	inline uint32_t* get_address_of_visibleSourcesCount_17() { return &___visibleSourcesCount_17; }
	inline void set_visibleSourcesCount_17(uint32_t value)
	{
		___visibleSourcesCount_17 = value;
	}

	inline static int32_t get_offset_of_targetPosition_18() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___targetPosition_18)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_targetPosition_18() const { return ___targetPosition_18; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_targetPosition_18() { return &___targetPosition_18; }
	inline void set_targetPosition_18(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___targetPosition_18 = value;
	}

	inline static int32_t get_offset_of_targetScale_19() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___targetScale_19)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_targetScale_19() const { return ___targetScale_19; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_targetScale_19() { return &___targetScale_19; }
	inline void set_targetScale_19(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___targetScale_19 = value;
	}

	inline static int32_t get_offset_of_targetRotation_20() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___targetRotation_20)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_targetRotation_20() const { return ___targetRotation_20; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_targetRotation_20() { return &___targetRotation_20; }
	inline void set_targetRotation_20(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___targetRotation_20 = value;
	}

	inline static int32_t get_offset_of_pointer_21() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___pointer_21)); }
	inline RuntimeObject* get_pointer_21() const { return ___pointer_21; }
	inline RuntimeObject** get_address_of_pointer_21() { return &___pointer_21; }
	inline void set_pointer_21(RuntimeObject* value)
	{
		___pointer_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointer_21), (void*)value);
	}

	inline static int32_t get_offset_of_defaultCursorDistance_22() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___defaultCursorDistance_22)); }
	inline float get_defaultCursorDistance_22() const { return ___defaultCursorDistance_22; }
	inline float* get_address_of_defaultCursorDistance_22() { return &___defaultCursorDistance_22; }
	inline void set_defaultCursorDistance_22(float value)
	{
		___defaultCursorDistance_22 = value;
	}

	inline static int32_t get_offset_of_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23)); }
	inline bool get_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23() const { return ___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23; }
	inline bool* get_address_of_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23() { return &___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23; }
	inline void set_U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23(bool value)
	{
		___U3CSetVisibilityOnSourceDetectedU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_focusDetails_24() { return static_cast<int32_t>(offsetof(BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8, ___focusDetails_24)); }
	inline FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  get_focusDetails_24() const { return ___focusDetails_24; }
	inline FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * get_address_of_focusDetails_24() { return &___focusDetails_24; }
	inline void set_focusDetails_24(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  value)
	{
		___focusDetails_24 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___focusDetails_24))->___U3CObjectU3Ek__BackingField_3), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_24))->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable
struct BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.TouchableEventType Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::eventsToReceive
	int32_t ___eventsToReceive_4;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::debounceThreshold
	float ___debounceThreshold_5;

public:
	inline static int32_t get_offset_of_eventsToReceive_4() { return static_cast<int32_t>(offsetof(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03, ___eventsToReceive_4)); }
	inline int32_t get_eventsToReceive_4() const { return ___eventsToReceive_4; }
	inline int32_t* get_address_of_eventsToReceive_4() { return &___eventsToReceive_4; }
	inline void set_eventsToReceive_4(int32_t value)
	{
		___eventsToReceive_4 = value;
	}

	inline static int32_t get_offset_of_debounceThreshold_5() { return static_cast<int32_t>(offsetof(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03, ___debounceThreshold_5)); }
	inline float get_debounceThreshold_5() const { return ___debounceThreshold_5; }
	inline float* get_address_of_debounceThreshold_5() { return &___debounceThreshold_5; }
	inline void set_debounceThreshold_5(float value)
	{
		___debounceThreshold_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>
struct InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	RuntimeObject* ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E, ___U3CInputDataU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputDataU3Ek__BackingField_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Object>
struct InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	RuntimeObject * ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440, ___U3CInputDataU3Ek__BackingField_6)); }
	inline RuntimeObject * get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline RuntimeObject ** get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(RuntimeObject * value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputDataU3Ek__BackingField_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector3>
struct InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D, ___U3CInputDataU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::lateInitialize
	bool ___lateInitialize_4;

public:
	inline static int32_t get_offset_of_lateInitialize_4() { return static_cast<int32_t>(offsetof(InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5, ___lateInitialize_4)); }
	inline bool get_lateInitialize_4() const { return ___lateInitialize_4; }
	inline bool* get_address_of_lateInitialize_4() { return &___lateInitialize_4; }
	inline void set_lateInitialize_4(bool value)
	{
		___lateInitialize_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CPointerU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_6() const { return ___U3CPointerU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_6() { return &___U3CPointerU3Ek__BackingField_6; }
	inline void set_U3CPointerU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCountU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CCountU3Ek__BackingField_7)); }
	inline int32_t get_U3CCountU3Ek__BackingField_7() const { return ___U3CCountU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3CCountU3Ek__BackingField_7() { return &___U3CCountU3Ek__BackingField_7; }
	inline void set_U3CCountU3Ek__BackingField_7(int32_t value)
	{
		___U3CCountU3Ek__BackingField_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::ShowTetherWhenManipulating
	bool ___ShowTetherWhenManipulating_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::IsBoundsHandles
	bool ___IsBoundsHandles_5;

public:
	inline static int32_t get_offset_of_ShowTetherWhenManipulating_4() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___ShowTetherWhenManipulating_4)); }
	inline bool get_ShowTetherWhenManipulating_4() const { return ___ShowTetherWhenManipulating_4; }
	inline bool* get_address_of_ShowTetherWhenManipulating_4() { return &___ShowTetherWhenManipulating_4; }
	inline void set_ShowTetherWhenManipulating_4(bool value)
	{
		___ShowTetherWhenManipulating_4 = value;
	}

	inline static int32_t get_offset_of_IsBoundsHandles_5() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___IsBoundsHandles_5)); }
	inline bool get_IsBoundsHandles_5() const { return ___IsBoundsHandles_5; }
	inline bool* get_address_of_IsBoundsHandles_5() { return &___IsBoundsHandles_5; }
	inline void set_IsBoundsHandles_5(bool value)
	{
		___IsBoundsHandles_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer
struct RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_4;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Wrist
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___Wrist_5;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Palm
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___Palm_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ThumbRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___ThumbRoot_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ThumbRootIsMetacarpal
	bool ___ThumbRootIsMetacarpal_8;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::IndexRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___IndexRoot_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::IndexRootIsMetacarpal
	bool ___IndexRootIsMetacarpal_10;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::MiddleRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___MiddleRoot_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::MiddleRootIsMetacarpal
	bool ___MiddleRootIsMetacarpal_12;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::RingRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___RingRoot_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::RingRootIsMetacarpal
	bool ___RingRootIsMetacarpal_14;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::PinkyRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___PinkyRoot_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::PinkyRootIsMetacarpal
	bool ___PinkyRootIsMetacarpal_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ModelPalmAtLeapWrist
	bool ___ModelPalmAtLeapWrist_17;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::DeformPosition
	bool ___DeformPosition_18;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ScaleLastFingerBone
	bool ___ScaleLastFingerBone_19;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ModelFingerPointing
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___ModelFingerPointing_20;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ModelPalmFacing
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___ModelPalmFacing_21;
	// UnityEngine.SkinnedMeshRenderer Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::handRenderer
	SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * ___handRenderer_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::handRendererInitialized
	bool ___handRendererInitialized_23;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::handMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___handMaterial_24;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single> Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::fingerTipLengths
	Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * ___fingerTipLengths_31;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform> Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::joints
	Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * ___joints_32;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform> Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::skeletonJoints
	Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * ___skeletonJoints_33;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___U3CControllerU3Ek__BackingField_4)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_4() const { return ___U3CControllerU3Ek__BackingField_4; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_4() { return &___U3CControllerU3Ek__BackingField_4; }
	inline void set_U3CControllerU3Ek__BackingField_4(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_Wrist_5() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___Wrist_5)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_Wrist_5() const { return ___Wrist_5; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_Wrist_5() { return &___Wrist_5; }
	inline void set_Wrist_5(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___Wrist_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Wrist_5), (void*)value);
	}

	inline static int32_t get_offset_of_Palm_6() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___Palm_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_Palm_6() const { return ___Palm_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_Palm_6() { return &___Palm_6; }
	inline void set_Palm_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___Palm_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Palm_6), (void*)value);
	}

	inline static int32_t get_offset_of_ThumbRoot_7() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___ThumbRoot_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_ThumbRoot_7() const { return ___ThumbRoot_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_ThumbRoot_7() { return &___ThumbRoot_7; }
	inline void set_ThumbRoot_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___ThumbRoot_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ThumbRoot_7), (void*)value);
	}

	inline static int32_t get_offset_of_ThumbRootIsMetacarpal_8() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___ThumbRootIsMetacarpal_8)); }
	inline bool get_ThumbRootIsMetacarpal_8() const { return ___ThumbRootIsMetacarpal_8; }
	inline bool* get_address_of_ThumbRootIsMetacarpal_8() { return &___ThumbRootIsMetacarpal_8; }
	inline void set_ThumbRootIsMetacarpal_8(bool value)
	{
		___ThumbRootIsMetacarpal_8 = value;
	}

	inline static int32_t get_offset_of_IndexRoot_9() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___IndexRoot_9)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_IndexRoot_9() const { return ___IndexRoot_9; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_IndexRoot_9() { return &___IndexRoot_9; }
	inline void set_IndexRoot_9(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___IndexRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IndexRoot_9), (void*)value);
	}

	inline static int32_t get_offset_of_IndexRootIsMetacarpal_10() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___IndexRootIsMetacarpal_10)); }
	inline bool get_IndexRootIsMetacarpal_10() const { return ___IndexRootIsMetacarpal_10; }
	inline bool* get_address_of_IndexRootIsMetacarpal_10() { return &___IndexRootIsMetacarpal_10; }
	inline void set_IndexRootIsMetacarpal_10(bool value)
	{
		___IndexRootIsMetacarpal_10 = value;
	}

	inline static int32_t get_offset_of_MiddleRoot_11() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___MiddleRoot_11)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_MiddleRoot_11() const { return ___MiddleRoot_11; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_MiddleRoot_11() { return &___MiddleRoot_11; }
	inline void set_MiddleRoot_11(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___MiddleRoot_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___MiddleRoot_11), (void*)value);
	}

	inline static int32_t get_offset_of_MiddleRootIsMetacarpal_12() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___MiddleRootIsMetacarpal_12)); }
	inline bool get_MiddleRootIsMetacarpal_12() const { return ___MiddleRootIsMetacarpal_12; }
	inline bool* get_address_of_MiddleRootIsMetacarpal_12() { return &___MiddleRootIsMetacarpal_12; }
	inline void set_MiddleRootIsMetacarpal_12(bool value)
	{
		___MiddleRootIsMetacarpal_12 = value;
	}

	inline static int32_t get_offset_of_RingRoot_13() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___RingRoot_13)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_RingRoot_13() const { return ___RingRoot_13; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_RingRoot_13() { return &___RingRoot_13; }
	inline void set_RingRoot_13(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___RingRoot_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RingRoot_13), (void*)value);
	}

	inline static int32_t get_offset_of_RingRootIsMetacarpal_14() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___RingRootIsMetacarpal_14)); }
	inline bool get_RingRootIsMetacarpal_14() const { return ___RingRootIsMetacarpal_14; }
	inline bool* get_address_of_RingRootIsMetacarpal_14() { return &___RingRootIsMetacarpal_14; }
	inline void set_RingRootIsMetacarpal_14(bool value)
	{
		___RingRootIsMetacarpal_14 = value;
	}

	inline static int32_t get_offset_of_PinkyRoot_15() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___PinkyRoot_15)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_PinkyRoot_15() const { return ___PinkyRoot_15; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_PinkyRoot_15() { return &___PinkyRoot_15; }
	inline void set_PinkyRoot_15(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___PinkyRoot_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PinkyRoot_15), (void*)value);
	}

	inline static int32_t get_offset_of_PinkyRootIsMetacarpal_16() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___PinkyRootIsMetacarpal_16)); }
	inline bool get_PinkyRootIsMetacarpal_16() const { return ___PinkyRootIsMetacarpal_16; }
	inline bool* get_address_of_PinkyRootIsMetacarpal_16() { return &___PinkyRootIsMetacarpal_16; }
	inline void set_PinkyRootIsMetacarpal_16(bool value)
	{
		___PinkyRootIsMetacarpal_16 = value;
	}

	inline static int32_t get_offset_of_ModelPalmAtLeapWrist_17() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___ModelPalmAtLeapWrist_17)); }
	inline bool get_ModelPalmAtLeapWrist_17() const { return ___ModelPalmAtLeapWrist_17; }
	inline bool* get_address_of_ModelPalmAtLeapWrist_17() { return &___ModelPalmAtLeapWrist_17; }
	inline void set_ModelPalmAtLeapWrist_17(bool value)
	{
		___ModelPalmAtLeapWrist_17 = value;
	}

	inline static int32_t get_offset_of_DeformPosition_18() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___DeformPosition_18)); }
	inline bool get_DeformPosition_18() const { return ___DeformPosition_18; }
	inline bool* get_address_of_DeformPosition_18() { return &___DeformPosition_18; }
	inline void set_DeformPosition_18(bool value)
	{
		___DeformPosition_18 = value;
	}

	inline static int32_t get_offset_of_ScaleLastFingerBone_19() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___ScaleLastFingerBone_19)); }
	inline bool get_ScaleLastFingerBone_19() const { return ___ScaleLastFingerBone_19; }
	inline bool* get_address_of_ScaleLastFingerBone_19() { return &___ScaleLastFingerBone_19; }
	inline void set_ScaleLastFingerBone_19(bool value)
	{
		___ScaleLastFingerBone_19 = value;
	}

	inline static int32_t get_offset_of_ModelFingerPointing_20() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___ModelFingerPointing_20)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_ModelFingerPointing_20() const { return ___ModelFingerPointing_20; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_ModelFingerPointing_20() { return &___ModelFingerPointing_20; }
	inline void set_ModelFingerPointing_20(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___ModelFingerPointing_20 = value;
	}

	inline static int32_t get_offset_of_ModelPalmFacing_21() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___ModelPalmFacing_21)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_ModelPalmFacing_21() const { return ___ModelPalmFacing_21; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_ModelPalmFacing_21() { return &___ModelPalmFacing_21; }
	inline void set_ModelPalmFacing_21(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___ModelPalmFacing_21 = value;
	}

	inline static int32_t get_offset_of_handRenderer_22() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___handRenderer_22)); }
	inline SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * get_handRenderer_22() const { return ___handRenderer_22; }
	inline SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 ** get_address_of_handRenderer_22() { return &___handRenderer_22; }
	inline void set_handRenderer_22(SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * value)
	{
		___handRenderer_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handRenderer_22), (void*)value);
	}

	inline static int32_t get_offset_of_handRendererInitialized_23() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___handRendererInitialized_23)); }
	inline bool get_handRendererInitialized_23() const { return ___handRendererInitialized_23; }
	inline bool* get_address_of_handRendererInitialized_23() { return &___handRendererInitialized_23; }
	inline void set_handRendererInitialized_23(bool value)
	{
		___handRendererInitialized_23 = value;
	}

	inline static int32_t get_offset_of_handMaterial_24() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___handMaterial_24)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_handMaterial_24() const { return ___handMaterial_24; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_handMaterial_24() { return &___handMaterial_24; }
	inline void set_handMaterial_24(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___handMaterial_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handMaterial_24), (void*)value);
	}

	inline static int32_t get_offset_of_fingerTipLengths_31() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___fingerTipLengths_31)); }
	inline Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * get_fingerTipLengths_31() const { return ___fingerTipLengths_31; }
	inline Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE ** get_address_of_fingerTipLengths_31() { return &___fingerTipLengths_31; }
	inline void set_fingerTipLengths_31(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * value)
	{
		___fingerTipLengths_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fingerTipLengths_31), (void*)value);
	}

	inline static int32_t get_offset_of_joints_32() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___joints_32)); }
	inline Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * get_joints_32() const { return ___joints_32; }
	inline Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC ** get_address_of_joints_32() { return &___joints_32; }
	inline void set_joints_32(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * value)
	{
		___joints_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___joints_32), (void*)value);
	}

	inline static int32_t get_offset_of_skeletonJoints_33() { return static_cast<int32_t>(offsetof(RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7, ___skeletonJoints_33)); }
	inline Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * get_skeletonJoints_33() const { return ___skeletonJoints_33; }
	inline Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC ** get_address_of_skeletonJoints_33() { return &___skeletonJoints_33; }
	inline void set_skeletonJoints_33(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * value)
	{
		___skeletonJoints_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonJoints_33), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141  : public SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1::<SourceData>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CSourceDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CSourceDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141, ___U3CSourceDataU3Ek__BackingField_6)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CSourceDataU3Ek__BackingField_6() const { return ___U3CSourceDataU3Ek__BackingField_6; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CSourceDataU3Ek__BackingField_6() { return &___U3CSourceDataU3Ek__BackingField_6; }
	inline void set_U3CSourceDataU3Ek__BackingField_6(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CSourceDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint
struct SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::pointerVisual
	SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * ___pointerVisual_4;
	// UnityEngine.Mesh Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::grabPointMesh
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___grabPointMesh_5;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::grabPointMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___grabPointMaterial_6;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::scale
	float ___scale_7;
	// UnityEngine.Matrix4x4 Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::pointMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___pointMatrix_8;

public:
	inline static int32_t get_offset_of_pointerVisual_4() { return static_cast<int32_t>(offsetof(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA, ___pointerVisual_4)); }
	inline SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * get_pointerVisual_4() const { return ___pointerVisual_4; }
	inline SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 ** get_address_of_pointerVisual_4() { return &___pointerVisual_4; }
	inline void set_pointerVisual_4(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * value)
	{
		___pointerVisual_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerVisual_4), (void*)value);
	}

	inline static int32_t get_offset_of_grabPointMesh_5() { return static_cast<int32_t>(offsetof(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA, ___grabPointMesh_5)); }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * get_grabPointMesh_5() const { return ___grabPointMesh_5; }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C ** get_address_of_grabPointMesh_5() { return &___grabPointMesh_5; }
	inline void set_grabPointMesh_5(Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * value)
	{
		___grabPointMesh_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___grabPointMesh_5), (void*)value);
	}

	inline static int32_t get_offset_of_grabPointMaterial_6() { return static_cast<int32_t>(offsetof(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA, ___grabPointMaterial_6)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_grabPointMaterial_6() const { return ___grabPointMaterial_6; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_grabPointMaterial_6() { return &___grabPointMaterial_6; }
	inline void set_grabPointMaterial_6(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___grabPointMaterial_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___grabPointMaterial_6), (void*)value);
	}

	inline static int32_t get_offset_of_scale_7() { return static_cast<int32_t>(offsetof(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA, ___scale_7)); }
	inline float get_scale_7() const { return ___scale_7; }
	inline float* get_address_of_scale_7() { return &___scale_7; }
	inline void set_scale_7(float value)
	{
		___scale_7 = value;
	}

	inline static int32_t get_offset_of_pointMatrix_8() { return static_cast<int32_t>(offsetof(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA, ___pointMatrix_8)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_pointMatrix_8() const { return ___pointMatrix_8; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_pointMatrix_8() { return &___pointMatrix_8; }
	inline void set_pointMatrix_8(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___pointMatrix_8 = value;
	}
};

struct SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::LateUpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___LateUpdatePerfMarker_9;

public:
	inline static int32_t get_offset_of_LateUpdatePerfMarker_9() { return static_cast<int32_t>(offsetof(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_StaticFields, ___LateUpdatePerfMarker_9)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_LateUpdatePerfMarker_9() const { return ___LateUpdatePerfMarker_9; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_LateUpdatePerfMarker_9() { return &___LateUpdatePerfMarker_9; }
	inline void set_LateUpdatePerfMarker_9(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___LateUpdatePerfMarker_9 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual
struct SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::<TetherVisualsEnabled>k__BackingField
	bool ___U3CTetherVisualsEnabledU3Ek__BackingField_4;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::pointer
	SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * ___pointer_5;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::minTetherLength
	float ___minTetherLength_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::visualsRoot
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___visualsRoot_7;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::tetherEndPoint
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___tetherEndPoint_8;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::tetherLine
	BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * ___tetherLine_9;

public:
	inline static int32_t get_offset_of_U3CTetherVisualsEnabledU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017, ___U3CTetherVisualsEnabledU3Ek__BackingField_4)); }
	inline bool get_U3CTetherVisualsEnabledU3Ek__BackingField_4() const { return ___U3CTetherVisualsEnabledU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CTetherVisualsEnabledU3Ek__BackingField_4() { return &___U3CTetherVisualsEnabledU3Ek__BackingField_4; }
	inline void set_U3CTetherVisualsEnabledU3Ek__BackingField_4(bool value)
	{
		___U3CTetherVisualsEnabledU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_pointer_5() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017, ___pointer_5)); }
	inline SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * get_pointer_5() const { return ___pointer_5; }
	inline SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C ** get_address_of_pointer_5() { return &___pointer_5; }
	inline void set_pointer_5(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * value)
	{
		___pointer_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointer_5), (void*)value);
	}

	inline static int32_t get_offset_of_minTetherLength_6() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017, ___minTetherLength_6)); }
	inline float get_minTetherLength_6() const { return ___minTetherLength_6; }
	inline float* get_address_of_minTetherLength_6() { return &___minTetherLength_6; }
	inline void set_minTetherLength_6(float value)
	{
		___minTetherLength_6 = value;
	}

	inline static int32_t get_offset_of_visualsRoot_7() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017, ___visualsRoot_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_visualsRoot_7() const { return ___visualsRoot_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_visualsRoot_7() { return &___visualsRoot_7; }
	inline void set_visualsRoot_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___visualsRoot_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___visualsRoot_7), (void*)value);
	}

	inline static int32_t get_offset_of_tetherEndPoint_8() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017, ___tetherEndPoint_8)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_tetherEndPoint_8() const { return ___tetherEndPoint_8; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_tetherEndPoint_8() { return &___tetherEndPoint_8; }
	inline void set_tetherEndPoint_8(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___tetherEndPoint_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tetherEndPoint_8), (void*)value);
	}

	inline static int32_t get_offset_of_tetherLine_9() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017, ___tetherLine_9)); }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * get_tetherLine_9() const { return ___tetherLine_9; }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 ** get_address_of_tetherLine_9() { return &___tetherLine_9; }
	inline void set_tetherLine_9(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * value)
	{
		___tetherLine_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tetherLine_9), (void*)value);
	}
};

struct SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_10;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::GetGrabbedObjectPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GetGrabbedObjectPerfMarker_11;

public:
	inline static int32_t get_offset_of_UpdatePerfMarker_10() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields, ___UpdatePerfMarker_10)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_10() const { return ___UpdatePerfMarker_10; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_10() { return &___UpdatePerfMarker_10; }
	inline void set_UpdatePerfMarker_10(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_10 = value;
	}

	inline static int32_t get_offset_of_GetGrabbedObjectPerfMarker_11() { return static_cast<int32_t>(offsetof(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields, ___GetGrabbedObjectPerfMarker_11)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GetGrabbedObjectPerfMarker_11() const { return ___GetGrabbedObjectPerfMarker_11; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GetGrabbedObjectPerfMarker_11() { return &___GetGrabbedObjectPerfMarker_11; }
	inline void set_GetGrabbedObjectPerfMarker_11(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GetGrabbedObjectPerfMarker_11 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.TouchHandler
struct TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.UI.TouchEvent Microsoft.MixedReality.Toolkit.Input.TouchHandler::OnTouchStarted
	TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * ___OnTouchStarted_4;
	// Microsoft.MixedReality.Toolkit.UI.TouchEvent Microsoft.MixedReality.Toolkit.Input.TouchHandler::OnTouchCompleted
	TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * ___OnTouchCompleted_5;
	// Microsoft.MixedReality.Toolkit.UI.TouchEvent Microsoft.MixedReality.Toolkit.Input.TouchHandler::OnTouchUpdated
	TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * ___OnTouchUpdated_6;

public:
	inline static int32_t get_offset_of_OnTouchStarted_4() { return static_cast<int32_t>(offsetof(TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2, ___OnTouchStarted_4)); }
	inline TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * get_OnTouchStarted_4() const { return ___OnTouchStarted_4; }
	inline TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 ** get_address_of_OnTouchStarted_4() { return &___OnTouchStarted_4; }
	inline void set_OnTouchStarted_4(TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * value)
	{
		___OnTouchStarted_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnTouchStarted_4), (void*)value);
	}

	inline static int32_t get_offset_of_OnTouchCompleted_5() { return static_cast<int32_t>(offsetof(TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2, ___OnTouchCompleted_5)); }
	inline TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * get_OnTouchCompleted_5() const { return ___OnTouchCompleted_5; }
	inline TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 ** get_address_of_OnTouchCompleted_5() { return &___OnTouchCompleted_5; }
	inline void set_OnTouchCompleted_5(TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * value)
	{
		___OnTouchCompleted_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnTouchCompleted_5), (void*)value);
	}

	inline static int32_t get_offset_of_OnTouchUpdated_6() { return static_cast<int32_t>(offsetof(TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2, ___OnTouchUpdated_6)); }
	inline TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * get_OnTouchUpdated_6() const { return ___OnTouchUpdated_6; }
	inline TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 ** get_address_of_OnTouchUpdated_6() { return &___OnTouchUpdated_6; }
	inline void set_OnTouchUpdated_6(TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * value)
	{
		___OnTouchUpdated_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnTouchUpdated_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.ToolTip
struct ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ToolTip::showBackground
	bool ___showBackground_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ToolTip::showHighlight
	bool ___showHighlight_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ToolTip::showConnector
	bool ___showConnector_6;
	// Microsoft.MixedReality.Toolkit.UI.DisplayMode Microsoft.MixedReality.Toolkit.UI.ToolTip::tipState
	int32_t ___tipState_7;
	// Microsoft.MixedReality.Toolkit.UI.DisplayMode Microsoft.MixedReality.Toolkit.UI.ToolTip::groupTipState
	int32_t ___groupTipState_8;
	// Microsoft.MixedReality.Toolkit.UI.DisplayMode Microsoft.MixedReality.Toolkit.UI.ToolTip::masterTipState
	int32_t ___masterTipState_9;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.ToolTip::anchor
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___anchor_10;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.ToolTip::pivot
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pivot_11;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.ToolTip::label
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___label_12;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.ToolTip::contentParent
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___contentParent_13;
	// System.String Microsoft.MixedReality.Toolkit.UI.ToolTip::toolTipText
	String_t* ___toolTipText_14;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.UI.ToolTip::backgroundPadding
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___backgroundPadding_15;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ToolTip::backgroundOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backgroundOffset_16;
	// System.Single Microsoft.MixedReality.Toolkit.UI.ToolTip::contentScale
	float ___contentScale_17;
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ToolTip::fontSize
	int32_t ___fontSize_18;
	// Microsoft.MixedReality.Toolkit.UI.ToolTipAttachPoint Microsoft.MixedReality.Toolkit.UI.ToolTip::attachPointType
	int32_t ___attachPointType_19;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ToolTip::attachPointOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___attachPointOffset_20;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.UI.ToolTip::toolTipLine
	BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * ___toolTipLine_21;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.UI.ToolTip::localContentSize
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___localContentSize_22;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ToolTip::pivotPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pivotPosition_23;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ToolTip::attachPointPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___attachPointPosition_24;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ToolTip::anchorPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___anchorPosition_25;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ToolTip::localAttachPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___localAttachPoint_26;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.ToolTip::localAttachPointPositions
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___localAttachPointPositions_27;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.IToolTipBackground> Microsoft.MixedReality.Toolkit.UI.ToolTip::backgrounds
	List_1_t1F7CF4BE5036D18AC61BCD74E7D06CD4CF7872E7 * ___backgrounds_28;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.IToolTipHighlight> Microsoft.MixedReality.Toolkit.UI.ToolTip::highlights
	List_1_t8EF8C6D7F65FD831BF6535C5B2C753BB14EB1427 * ___highlights_29;
	// TMPro.TextMeshPro Microsoft.MixedReality.Toolkit.UI.ToolTip::cachedLabelText
	TextMeshPro_t6FF60D9DCAF295045FE47C014CC855C5784752E2 * ___cachedLabelText_30;
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ToolTip::prevTextLength
	int32_t ___prevTextLength_31;
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ToolTip::prevTextHash
	int32_t ___prevTextHash_32;
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ToolTip::prevFontSize
	int32_t ___prevFontSize_33;

public:
	inline static int32_t get_offset_of_showBackground_4() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___showBackground_4)); }
	inline bool get_showBackground_4() const { return ___showBackground_4; }
	inline bool* get_address_of_showBackground_4() { return &___showBackground_4; }
	inline void set_showBackground_4(bool value)
	{
		___showBackground_4 = value;
	}

	inline static int32_t get_offset_of_showHighlight_5() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___showHighlight_5)); }
	inline bool get_showHighlight_5() const { return ___showHighlight_5; }
	inline bool* get_address_of_showHighlight_5() { return &___showHighlight_5; }
	inline void set_showHighlight_5(bool value)
	{
		___showHighlight_5 = value;
	}

	inline static int32_t get_offset_of_showConnector_6() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___showConnector_6)); }
	inline bool get_showConnector_6() const { return ___showConnector_6; }
	inline bool* get_address_of_showConnector_6() { return &___showConnector_6; }
	inline void set_showConnector_6(bool value)
	{
		___showConnector_6 = value;
	}

	inline static int32_t get_offset_of_tipState_7() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___tipState_7)); }
	inline int32_t get_tipState_7() const { return ___tipState_7; }
	inline int32_t* get_address_of_tipState_7() { return &___tipState_7; }
	inline void set_tipState_7(int32_t value)
	{
		___tipState_7 = value;
	}

	inline static int32_t get_offset_of_groupTipState_8() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___groupTipState_8)); }
	inline int32_t get_groupTipState_8() const { return ___groupTipState_8; }
	inline int32_t* get_address_of_groupTipState_8() { return &___groupTipState_8; }
	inline void set_groupTipState_8(int32_t value)
	{
		___groupTipState_8 = value;
	}

	inline static int32_t get_offset_of_masterTipState_9() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___masterTipState_9)); }
	inline int32_t get_masterTipState_9() const { return ___masterTipState_9; }
	inline int32_t* get_address_of_masterTipState_9() { return &___masterTipState_9; }
	inline void set_masterTipState_9(int32_t value)
	{
		___masterTipState_9 = value;
	}

	inline static int32_t get_offset_of_anchor_10() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___anchor_10)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_anchor_10() const { return ___anchor_10; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_anchor_10() { return &___anchor_10; }
	inline void set_anchor_10(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___anchor_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___anchor_10), (void*)value);
	}

	inline static int32_t get_offset_of_pivot_11() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___pivot_11)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_pivot_11() const { return ___pivot_11; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_pivot_11() { return &___pivot_11; }
	inline void set_pivot_11(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___pivot_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pivot_11), (void*)value);
	}

	inline static int32_t get_offset_of_label_12() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___label_12)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_label_12() const { return ___label_12; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_label_12() { return &___label_12; }
	inline void set_label_12(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___label_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___label_12), (void*)value);
	}

	inline static int32_t get_offset_of_contentParent_13() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___contentParent_13)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_contentParent_13() const { return ___contentParent_13; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_contentParent_13() { return &___contentParent_13; }
	inline void set_contentParent_13(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___contentParent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___contentParent_13), (void*)value);
	}

	inline static int32_t get_offset_of_toolTipText_14() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___toolTipText_14)); }
	inline String_t* get_toolTipText_14() const { return ___toolTipText_14; }
	inline String_t** get_address_of_toolTipText_14() { return &___toolTipText_14; }
	inline void set_toolTipText_14(String_t* value)
	{
		___toolTipText_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___toolTipText_14), (void*)value);
	}

	inline static int32_t get_offset_of_backgroundPadding_15() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___backgroundPadding_15)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_backgroundPadding_15() const { return ___backgroundPadding_15; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_backgroundPadding_15() { return &___backgroundPadding_15; }
	inline void set_backgroundPadding_15(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___backgroundPadding_15 = value;
	}

	inline static int32_t get_offset_of_backgroundOffset_16() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___backgroundOffset_16)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backgroundOffset_16() const { return ___backgroundOffset_16; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backgroundOffset_16() { return &___backgroundOffset_16; }
	inline void set_backgroundOffset_16(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backgroundOffset_16 = value;
	}

	inline static int32_t get_offset_of_contentScale_17() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___contentScale_17)); }
	inline float get_contentScale_17() const { return ___contentScale_17; }
	inline float* get_address_of_contentScale_17() { return &___contentScale_17; }
	inline void set_contentScale_17(float value)
	{
		___contentScale_17 = value;
	}

	inline static int32_t get_offset_of_fontSize_18() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___fontSize_18)); }
	inline int32_t get_fontSize_18() const { return ___fontSize_18; }
	inline int32_t* get_address_of_fontSize_18() { return &___fontSize_18; }
	inline void set_fontSize_18(int32_t value)
	{
		___fontSize_18 = value;
	}

	inline static int32_t get_offset_of_attachPointType_19() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___attachPointType_19)); }
	inline int32_t get_attachPointType_19() const { return ___attachPointType_19; }
	inline int32_t* get_address_of_attachPointType_19() { return &___attachPointType_19; }
	inline void set_attachPointType_19(int32_t value)
	{
		___attachPointType_19 = value;
	}

	inline static int32_t get_offset_of_attachPointOffset_20() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___attachPointOffset_20)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_attachPointOffset_20() const { return ___attachPointOffset_20; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_attachPointOffset_20() { return &___attachPointOffset_20; }
	inline void set_attachPointOffset_20(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___attachPointOffset_20 = value;
	}

	inline static int32_t get_offset_of_toolTipLine_21() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___toolTipLine_21)); }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * get_toolTipLine_21() const { return ___toolTipLine_21; }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 ** get_address_of_toolTipLine_21() { return &___toolTipLine_21; }
	inline void set_toolTipLine_21(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * value)
	{
		___toolTipLine_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___toolTipLine_21), (void*)value);
	}

	inline static int32_t get_offset_of_localContentSize_22() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___localContentSize_22)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_localContentSize_22() const { return ___localContentSize_22; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_localContentSize_22() { return &___localContentSize_22; }
	inline void set_localContentSize_22(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___localContentSize_22 = value;
	}

	inline static int32_t get_offset_of_pivotPosition_23() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___pivotPosition_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pivotPosition_23() const { return ___pivotPosition_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pivotPosition_23() { return &___pivotPosition_23; }
	inline void set_pivotPosition_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pivotPosition_23 = value;
	}

	inline static int32_t get_offset_of_attachPointPosition_24() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___attachPointPosition_24)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_attachPointPosition_24() const { return ___attachPointPosition_24; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_attachPointPosition_24() { return &___attachPointPosition_24; }
	inline void set_attachPointPosition_24(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___attachPointPosition_24 = value;
	}

	inline static int32_t get_offset_of_anchorPosition_25() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___anchorPosition_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_anchorPosition_25() const { return ___anchorPosition_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_anchorPosition_25() { return &___anchorPosition_25; }
	inline void set_anchorPosition_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___anchorPosition_25 = value;
	}

	inline static int32_t get_offset_of_localAttachPoint_26() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___localAttachPoint_26)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_localAttachPoint_26() const { return ___localAttachPoint_26; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_localAttachPoint_26() { return &___localAttachPoint_26; }
	inline void set_localAttachPoint_26(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___localAttachPoint_26 = value;
	}

	inline static int32_t get_offset_of_localAttachPointPositions_27() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___localAttachPointPositions_27)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_localAttachPointPositions_27() const { return ___localAttachPointPositions_27; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_localAttachPointPositions_27() { return &___localAttachPointPositions_27; }
	inline void set_localAttachPointPositions_27(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___localAttachPointPositions_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localAttachPointPositions_27), (void*)value);
	}

	inline static int32_t get_offset_of_backgrounds_28() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___backgrounds_28)); }
	inline List_1_t1F7CF4BE5036D18AC61BCD74E7D06CD4CF7872E7 * get_backgrounds_28() const { return ___backgrounds_28; }
	inline List_1_t1F7CF4BE5036D18AC61BCD74E7D06CD4CF7872E7 ** get_address_of_backgrounds_28() { return &___backgrounds_28; }
	inline void set_backgrounds_28(List_1_t1F7CF4BE5036D18AC61BCD74E7D06CD4CF7872E7 * value)
	{
		___backgrounds_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___backgrounds_28), (void*)value);
	}

	inline static int32_t get_offset_of_highlights_29() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___highlights_29)); }
	inline List_1_t8EF8C6D7F65FD831BF6535C5B2C753BB14EB1427 * get_highlights_29() const { return ___highlights_29; }
	inline List_1_t8EF8C6D7F65FD831BF6535C5B2C753BB14EB1427 ** get_address_of_highlights_29() { return &___highlights_29; }
	inline void set_highlights_29(List_1_t8EF8C6D7F65FD831BF6535C5B2C753BB14EB1427 * value)
	{
		___highlights_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___highlights_29), (void*)value);
	}

	inline static int32_t get_offset_of_cachedLabelText_30() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___cachedLabelText_30)); }
	inline TextMeshPro_t6FF60D9DCAF295045FE47C014CC855C5784752E2 * get_cachedLabelText_30() const { return ___cachedLabelText_30; }
	inline TextMeshPro_t6FF60D9DCAF295045FE47C014CC855C5784752E2 ** get_address_of_cachedLabelText_30() { return &___cachedLabelText_30; }
	inline void set_cachedLabelText_30(TextMeshPro_t6FF60D9DCAF295045FE47C014CC855C5784752E2 * value)
	{
		___cachedLabelText_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedLabelText_30), (void*)value);
	}

	inline static int32_t get_offset_of_prevTextLength_31() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___prevTextLength_31)); }
	inline int32_t get_prevTextLength_31() const { return ___prevTextLength_31; }
	inline int32_t* get_address_of_prevTextLength_31() { return &___prevTextLength_31; }
	inline void set_prevTextLength_31(int32_t value)
	{
		___prevTextLength_31 = value;
	}

	inline static int32_t get_offset_of_prevTextHash_32() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___prevTextHash_32)); }
	inline int32_t get_prevTextHash_32() const { return ___prevTextHash_32; }
	inline int32_t* get_address_of_prevTextHash_32() { return &___prevTextHash_32; }
	inline void set_prevTextHash_32(int32_t value)
	{
		___prevTextHash_32 = value;
	}

	inline static int32_t get_offset_of_prevFontSize_33() { return static_cast<int32_t>(offsetof(ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21, ___prevFontSize_33)); }
	inline int32_t get_prevFontSize_33() const { return ___prevFontSize_33; }
	inline int32_t* get_address_of_prevFontSize_33() { return &___prevFontSize_33; }
	inline void set_prevFontSize_33(int32_t value)
	{
		___prevFontSize_33 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider
struct BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::lineStartClamp
	float ___lineStartClamp_4;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::lineEndClamp
	float ___lineEndClamp_5;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::customLineTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___customLineTransform_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::loops
	bool ___loops_7;
	// Microsoft.MixedReality.Toolkit.LinePointTransformMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::transformMode
	int32_t ___transformMode_8;
	// Microsoft.MixedReality.Toolkit.LineRotationMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::rotationMode
	int32_t ___rotationMode_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::flipUpVector
	bool ___flipUpVector_10;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::originOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___originOffset_11;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::manualUpVectorBlend
	float ___manualUpVectorBlend_12;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::manualUpVectors
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___manualUpVectors_13;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::velocitySearchRange
	float ___velocitySearchRange_14;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Physics.Distorter> Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distorters
	List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 * ___distorters_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distortionEnabled
	bool ___distortionEnabled_16;
	// Microsoft.MixedReality.Toolkit.DistortionMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distortionMode
	int32_t ___distortionMode_17;
	// UnityEngine.AnimationCurve Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::distortionStrength
	AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * ___distortionStrength_18;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::uniformDistortionStrength
	float ___uniformDistortionStrength_19;
	// UnityEngine.Matrix4x4 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::localToWorldMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___localToWorldMatrix_20;
	// UnityEngine.Matrix4x4 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::worldToLocalMatrix
	Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___worldToLocalMatrix_21;

public:
	inline static int32_t get_offset_of_lineStartClamp_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___lineStartClamp_4)); }
	inline float get_lineStartClamp_4() const { return ___lineStartClamp_4; }
	inline float* get_address_of_lineStartClamp_4() { return &___lineStartClamp_4; }
	inline void set_lineStartClamp_4(float value)
	{
		___lineStartClamp_4 = value;
	}

	inline static int32_t get_offset_of_lineEndClamp_5() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___lineEndClamp_5)); }
	inline float get_lineEndClamp_5() const { return ___lineEndClamp_5; }
	inline float* get_address_of_lineEndClamp_5() { return &___lineEndClamp_5; }
	inline void set_lineEndClamp_5(float value)
	{
		___lineEndClamp_5 = value;
	}

	inline static int32_t get_offset_of_customLineTransform_6() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___customLineTransform_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_customLineTransform_6() const { return ___customLineTransform_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_customLineTransform_6() { return &___customLineTransform_6; }
	inline void set_customLineTransform_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___customLineTransform_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___customLineTransform_6), (void*)value);
	}

	inline static int32_t get_offset_of_loops_7() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___loops_7)); }
	inline bool get_loops_7() const { return ___loops_7; }
	inline bool* get_address_of_loops_7() { return &___loops_7; }
	inline void set_loops_7(bool value)
	{
		___loops_7 = value;
	}

	inline static int32_t get_offset_of_transformMode_8() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___transformMode_8)); }
	inline int32_t get_transformMode_8() const { return ___transformMode_8; }
	inline int32_t* get_address_of_transformMode_8() { return &___transformMode_8; }
	inline void set_transformMode_8(int32_t value)
	{
		___transformMode_8 = value;
	}

	inline static int32_t get_offset_of_rotationMode_9() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___rotationMode_9)); }
	inline int32_t get_rotationMode_9() const { return ___rotationMode_9; }
	inline int32_t* get_address_of_rotationMode_9() { return &___rotationMode_9; }
	inline void set_rotationMode_9(int32_t value)
	{
		___rotationMode_9 = value;
	}

	inline static int32_t get_offset_of_flipUpVector_10() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___flipUpVector_10)); }
	inline bool get_flipUpVector_10() const { return ___flipUpVector_10; }
	inline bool* get_address_of_flipUpVector_10() { return &___flipUpVector_10; }
	inline void set_flipUpVector_10(bool value)
	{
		___flipUpVector_10 = value;
	}

	inline static int32_t get_offset_of_originOffset_11() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___originOffset_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_originOffset_11() const { return ___originOffset_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_originOffset_11() { return &___originOffset_11; }
	inline void set_originOffset_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___originOffset_11 = value;
	}

	inline static int32_t get_offset_of_manualUpVectorBlend_12() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___manualUpVectorBlend_12)); }
	inline float get_manualUpVectorBlend_12() const { return ___manualUpVectorBlend_12; }
	inline float* get_address_of_manualUpVectorBlend_12() { return &___manualUpVectorBlend_12; }
	inline void set_manualUpVectorBlend_12(float value)
	{
		___manualUpVectorBlend_12 = value;
	}

	inline static int32_t get_offset_of_manualUpVectors_13() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___manualUpVectors_13)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_manualUpVectors_13() const { return ___manualUpVectors_13; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_manualUpVectors_13() { return &___manualUpVectors_13; }
	inline void set_manualUpVectors_13(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___manualUpVectors_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___manualUpVectors_13), (void*)value);
	}

	inline static int32_t get_offset_of_velocitySearchRange_14() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___velocitySearchRange_14)); }
	inline float get_velocitySearchRange_14() const { return ___velocitySearchRange_14; }
	inline float* get_address_of_velocitySearchRange_14() { return &___velocitySearchRange_14; }
	inline void set_velocitySearchRange_14(float value)
	{
		___velocitySearchRange_14 = value;
	}

	inline static int32_t get_offset_of_distorters_15() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distorters_15)); }
	inline List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 * get_distorters_15() const { return ___distorters_15; }
	inline List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 ** get_address_of_distorters_15() { return &___distorters_15; }
	inline void set_distorters_15(List_1_tB7F7000AF32DF19BAB07518721CB24F557721DE3 * value)
	{
		___distorters_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___distorters_15), (void*)value);
	}

	inline static int32_t get_offset_of_distortionEnabled_16() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distortionEnabled_16)); }
	inline bool get_distortionEnabled_16() const { return ___distortionEnabled_16; }
	inline bool* get_address_of_distortionEnabled_16() { return &___distortionEnabled_16; }
	inline void set_distortionEnabled_16(bool value)
	{
		___distortionEnabled_16 = value;
	}

	inline static int32_t get_offset_of_distortionMode_17() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distortionMode_17)); }
	inline int32_t get_distortionMode_17() const { return ___distortionMode_17; }
	inline int32_t* get_address_of_distortionMode_17() { return &___distortionMode_17; }
	inline void set_distortionMode_17(int32_t value)
	{
		___distortionMode_17 = value;
	}

	inline static int32_t get_offset_of_distortionStrength_18() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___distortionStrength_18)); }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * get_distortionStrength_18() const { return ___distortionStrength_18; }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C ** get_address_of_distortionStrength_18() { return &___distortionStrength_18; }
	inline void set_distortionStrength_18(AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * value)
	{
		___distortionStrength_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___distortionStrength_18), (void*)value);
	}

	inline static int32_t get_offset_of_uniformDistortionStrength_19() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___uniformDistortionStrength_19)); }
	inline float get_uniformDistortionStrength_19() const { return ___uniformDistortionStrength_19; }
	inline float* get_address_of_uniformDistortionStrength_19() { return &___uniformDistortionStrength_19; }
	inline void set_uniformDistortionStrength_19(float value)
	{
		___uniformDistortionStrength_19 = value;
	}

	inline static int32_t get_offset_of_localToWorldMatrix_20() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___localToWorldMatrix_20)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_localToWorldMatrix_20() const { return ___localToWorldMatrix_20; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_localToWorldMatrix_20() { return &___localToWorldMatrix_20; }
	inline void set_localToWorldMatrix_20(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___localToWorldMatrix_20 = value;
	}

	inline static int32_t get_offset_of_worldToLocalMatrix_21() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4, ___worldToLocalMatrix_21)); }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  get_worldToLocalMatrix_21() const { return ___worldToLocalMatrix_21; }
	inline Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA * get_address_of_worldToLocalMatrix_21() { return &___worldToLocalMatrix_21; }
	inline void set_worldToLocalMatrix_21(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  value)
	{
		___worldToLocalMatrix_21 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer
struct BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineDataSource
	BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * ___lineDataSource_4;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineColor
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___lineColor_5;
	// UnityEngine.AnimationCurve Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineWidth
	AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * ___lineWidth_6;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::widthMultiplier
	float ___widthMultiplier_7;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::colorOffset
	float ___colorOffset_8;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::widthOffset
	float ___widthOffset_9;
	// Microsoft.MixedReality.Toolkit.StepMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::stepMode
	int32_t ___stepMode_10;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::lineStepCount
	int32_t ___lineStepCount_11;
	// Microsoft.MixedReality.Toolkit.PointDistributionMode Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::pointDistributionMode
	int32_t ___pointDistributionMode_12;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::customPointDistributionLength
	float ___customPointDistributionLength_13;
	// UnityEngine.AnimationCurve Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer::customPointDistributionCurve
	AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * ___customPointDistributionCurve_14;

public:
	inline static int32_t get_offset_of_lineDataSource_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineDataSource_4)); }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * get_lineDataSource_4() const { return ___lineDataSource_4; }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 ** get_address_of_lineDataSource_4() { return &___lineDataSource_4; }
	inline void set_lineDataSource_4(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * value)
	{
		___lineDataSource_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineDataSource_4), (void*)value);
	}

	inline static int32_t get_offset_of_lineColor_5() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineColor_5)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_lineColor_5() const { return ___lineColor_5; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_lineColor_5() { return &___lineColor_5; }
	inline void set_lineColor_5(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___lineColor_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineColor_5), (void*)value);
	}

	inline static int32_t get_offset_of_lineWidth_6() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineWidth_6)); }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * get_lineWidth_6() const { return ___lineWidth_6; }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C ** get_address_of_lineWidth_6() { return &___lineWidth_6; }
	inline void set_lineWidth_6(AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * value)
	{
		___lineWidth_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineWidth_6), (void*)value);
	}

	inline static int32_t get_offset_of_widthMultiplier_7() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___widthMultiplier_7)); }
	inline float get_widthMultiplier_7() const { return ___widthMultiplier_7; }
	inline float* get_address_of_widthMultiplier_7() { return &___widthMultiplier_7; }
	inline void set_widthMultiplier_7(float value)
	{
		___widthMultiplier_7 = value;
	}

	inline static int32_t get_offset_of_colorOffset_8() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___colorOffset_8)); }
	inline float get_colorOffset_8() const { return ___colorOffset_8; }
	inline float* get_address_of_colorOffset_8() { return &___colorOffset_8; }
	inline void set_colorOffset_8(float value)
	{
		___colorOffset_8 = value;
	}

	inline static int32_t get_offset_of_widthOffset_9() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___widthOffset_9)); }
	inline float get_widthOffset_9() const { return ___widthOffset_9; }
	inline float* get_address_of_widthOffset_9() { return &___widthOffset_9; }
	inline void set_widthOffset_9(float value)
	{
		___widthOffset_9 = value;
	}

	inline static int32_t get_offset_of_stepMode_10() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___stepMode_10)); }
	inline int32_t get_stepMode_10() const { return ___stepMode_10; }
	inline int32_t* get_address_of_stepMode_10() { return &___stepMode_10; }
	inline void set_stepMode_10(int32_t value)
	{
		___stepMode_10 = value;
	}

	inline static int32_t get_offset_of_lineStepCount_11() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___lineStepCount_11)); }
	inline int32_t get_lineStepCount_11() const { return ___lineStepCount_11; }
	inline int32_t* get_address_of_lineStepCount_11() { return &___lineStepCount_11; }
	inline void set_lineStepCount_11(int32_t value)
	{
		___lineStepCount_11 = value;
	}

	inline static int32_t get_offset_of_pointDistributionMode_12() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___pointDistributionMode_12)); }
	inline int32_t get_pointDistributionMode_12() const { return ___pointDistributionMode_12; }
	inline int32_t* get_address_of_pointDistributionMode_12() { return &___pointDistributionMode_12; }
	inline void set_pointDistributionMode_12(int32_t value)
	{
		___pointDistributionMode_12 = value;
	}

	inline static int32_t get_offset_of_customPointDistributionLength_13() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___customPointDistributionLength_13)); }
	inline float get_customPointDistributionLength_13() const { return ___customPointDistributionLength_13; }
	inline float* get_address_of_customPointDistributionLength_13() { return &___customPointDistributionLength_13; }
	inline void set_customPointDistributionLength_13(float value)
	{
		___customPointDistributionLength_13 = value;
	}

	inline static int32_t get_offset_of_customPointDistributionCurve_14() { return static_cast<int32_t>(offsetof(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA, ___customPointDistributionCurve_14)); }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * get_customPointDistributionCurve_14() const { return ___customPointDistributionCurve_14; }
	inline AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C ** get_address_of_customPointDistributionCurve_14() { return &___customPointDistributionCurve_14; }
	inline void set_customPointDistributionCurve_14(AnimationCurve_tD2F265379583AAF1BF8D84F1BB8DB12980FA504C * value)
	{
		___customPointDistributionCurve_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___customPointDistributionCurve_14), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia
struct BezierInertia_t247BB6E8220F78509717A5D550548037C274B166  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.BezierDataProvider Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::bezier
	BezierDataProvider_t437659C918416945599C5DF216E705A48291C685 * ___bezier_4;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::inertia
	float ___inertia_5;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::dampen
	float ___dampen_6;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::seekTargetStrength
	float ___seekTargetStrength_7;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p1Target
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p1Target_8;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p2Target
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p2Target_9;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p1Velocity
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p1Velocity_10;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p1Position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p1Position_11;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p1Offset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p1Offset_12;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p2Velocity
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p2Velocity_13;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p2Position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p2Position_14;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BezierInertia::p2Offset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___p2Offset_15;

public:
	inline static int32_t get_offset_of_bezier_4() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___bezier_4)); }
	inline BezierDataProvider_t437659C918416945599C5DF216E705A48291C685 * get_bezier_4() const { return ___bezier_4; }
	inline BezierDataProvider_t437659C918416945599C5DF216E705A48291C685 ** get_address_of_bezier_4() { return &___bezier_4; }
	inline void set_bezier_4(BezierDataProvider_t437659C918416945599C5DF216E705A48291C685 * value)
	{
		___bezier_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___bezier_4), (void*)value);
	}

	inline static int32_t get_offset_of_inertia_5() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___inertia_5)); }
	inline float get_inertia_5() const { return ___inertia_5; }
	inline float* get_address_of_inertia_5() { return &___inertia_5; }
	inline void set_inertia_5(float value)
	{
		___inertia_5 = value;
	}

	inline static int32_t get_offset_of_dampen_6() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___dampen_6)); }
	inline float get_dampen_6() const { return ___dampen_6; }
	inline float* get_address_of_dampen_6() { return &___dampen_6; }
	inline void set_dampen_6(float value)
	{
		___dampen_6 = value;
	}

	inline static int32_t get_offset_of_seekTargetStrength_7() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___seekTargetStrength_7)); }
	inline float get_seekTargetStrength_7() const { return ___seekTargetStrength_7; }
	inline float* get_address_of_seekTargetStrength_7() { return &___seekTargetStrength_7; }
	inline void set_seekTargetStrength_7(float value)
	{
		___seekTargetStrength_7 = value;
	}

	inline static int32_t get_offset_of_p1Target_8() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p1Target_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p1Target_8() const { return ___p1Target_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p1Target_8() { return &___p1Target_8; }
	inline void set_p1Target_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p1Target_8 = value;
	}

	inline static int32_t get_offset_of_p2Target_9() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p2Target_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p2Target_9() const { return ___p2Target_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p2Target_9() { return &___p2Target_9; }
	inline void set_p2Target_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p2Target_9 = value;
	}

	inline static int32_t get_offset_of_p1Velocity_10() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p1Velocity_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p1Velocity_10() const { return ___p1Velocity_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p1Velocity_10() { return &___p1Velocity_10; }
	inline void set_p1Velocity_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p1Velocity_10 = value;
	}

	inline static int32_t get_offset_of_p1Position_11() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p1Position_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p1Position_11() const { return ___p1Position_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p1Position_11() { return &___p1Position_11; }
	inline void set_p1Position_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p1Position_11 = value;
	}

	inline static int32_t get_offset_of_p1Offset_12() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p1Offset_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p1Offset_12() const { return ___p1Offset_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p1Offset_12() { return &___p1Offset_12; }
	inline void set_p1Offset_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p1Offset_12 = value;
	}

	inline static int32_t get_offset_of_p2Velocity_13() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p2Velocity_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p2Velocity_13() const { return ___p2Velocity_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p2Velocity_13() { return &___p2Velocity_13; }
	inline void set_p2Velocity_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p2Velocity_13 = value;
	}

	inline static int32_t get_offset_of_p2Position_14() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p2Position_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p2Position_14() const { return ___p2Position_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p2Position_14() { return &___p2Position_14; }
	inline void set_p2Position_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p2Position_14 = value;
	}

	inline static int32_t get_offset_of_p2Offset_15() { return static_cast<int32_t>(offsetof(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166, ___p2Offset_15)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_p2Offset_15() const { return ___p2Offset_15; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_p2Offset_15() { return &___p2Offset_15; }
	inline void set_p2Offset_15(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___p2Offset_15 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputHandler
struct BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::isFocusRequired
	bool ___isFocusRequired_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::isFocusRequiredRuntime
	bool ___isFocusRequiredRuntime_6;

public:
	inline static int32_t get_offset_of_isFocusRequired_5() { return static_cast<int32_t>(offsetof(BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35, ___isFocusRequired_5)); }
	inline bool get_isFocusRequired_5() const { return ___isFocusRequired_5; }
	inline bool* get_address_of_isFocusRequired_5() { return &___isFocusRequired_5; }
	inline void set_isFocusRequired_5(bool value)
	{
		___isFocusRequired_5 = value;
	}

	inline static int32_t get_offset_of_isFocusRequiredRuntime_6() { return static_cast<int32_t>(offsetof(BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35, ___isFocusRequiredRuntime_6)); }
	inline bool get_isFocusRequiredRuntime_6() const { return ___isFocusRequiredRuntime_6; }
	inline bool* get_address_of_isFocusRequiredRuntime_6() { return &___isFocusRequiredRuntime_6; }
	inline void set_isFocusRequiredRuntime_6(bool value)
	{
		___isFocusRequiredRuntime_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer
struct ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::destroyOnSourceLost
	bool ___destroyOnSourceLost_5;
	// Microsoft.MixedReality.Toolkit.TrackingState Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::TrackingState
	int32_t ___TrackingState_6;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::controller
	RuntimeObject* ___controller_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::useSourcePoseData
	bool ___useSourcePoseData_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::useSourcePoseAsFallback
	bool ___useSourcePoseAsFallback_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::poseActionDetected
	bool ___poseActionDetected_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::poseAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___poseAction_11;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::handedness
	uint8_t ___handedness_12;

public:
	inline static int32_t get_offset_of_destroyOnSourceLost_5() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___destroyOnSourceLost_5)); }
	inline bool get_destroyOnSourceLost_5() const { return ___destroyOnSourceLost_5; }
	inline bool* get_address_of_destroyOnSourceLost_5() { return &___destroyOnSourceLost_5; }
	inline void set_destroyOnSourceLost_5(bool value)
	{
		___destroyOnSourceLost_5 = value;
	}

	inline static int32_t get_offset_of_TrackingState_6() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___TrackingState_6)); }
	inline int32_t get_TrackingState_6() const { return ___TrackingState_6; }
	inline int32_t* get_address_of_TrackingState_6() { return &___TrackingState_6; }
	inline void set_TrackingState_6(int32_t value)
	{
		___TrackingState_6 = value;
	}

	inline static int32_t get_offset_of_controller_7() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___controller_7)); }
	inline RuntimeObject* get_controller_7() const { return ___controller_7; }
	inline RuntimeObject** get_address_of_controller_7() { return &___controller_7; }
	inline void set_controller_7(RuntimeObject* value)
	{
		___controller_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controller_7), (void*)value);
	}

	inline static int32_t get_offset_of_useSourcePoseData_8() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___useSourcePoseData_8)); }
	inline bool get_useSourcePoseData_8() const { return ___useSourcePoseData_8; }
	inline bool* get_address_of_useSourcePoseData_8() { return &___useSourcePoseData_8; }
	inline void set_useSourcePoseData_8(bool value)
	{
		___useSourcePoseData_8 = value;
	}

	inline static int32_t get_offset_of_useSourcePoseAsFallback_9() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___useSourcePoseAsFallback_9)); }
	inline bool get_useSourcePoseAsFallback_9() const { return ___useSourcePoseAsFallback_9; }
	inline bool* get_address_of_useSourcePoseAsFallback_9() { return &___useSourcePoseAsFallback_9; }
	inline void set_useSourcePoseAsFallback_9(bool value)
	{
		___useSourcePoseAsFallback_9 = value;
	}

	inline static int32_t get_offset_of_poseActionDetected_10() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___poseActionDetected_10)); }
	inline bool get_poseActionDetected_10() const { return ___poseActionDetected_10; }
	inline bool* get_address_of_poseActionDetected_10() { return &___poseActionDetected_10; }
	inline void set_poseActionDetected_10(bool value)
	{
		___poseActionDetected_10 = value;
	}

	inline static int32_t get_offset_of_poseAction_11() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___poseAction_11)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_poseAction_11() const { return ___poseAction_11; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_poseAction_11() { return &___poseAction_11; }
	inline void set_poseAction_11(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___poseAction_11 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___poseAction_11))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_handedness_12() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___handedness_12)); }
	inline uint8_t get_handedness_12() const { return ___handedness_12; }
	inline uint8_t* get_address_of_handedness_12() { return &___handedness_12; }
	inline void set_handedness_12(uint8_t value)
	{
		___handedness_12 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData
struct HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69  : public InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69, ___U3CControllerU3Ek__BackingField_7)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_7() const { return ___U3CControllerU3Ek__BackingField_7; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_7() { return &___U3CControllerU3Ek__BackingField_7; }
	inline void set_U3CControllerU3Ek__BackingField_7(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_7), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableSurface
struct NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0  : public BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableVolume
struct NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5  : public BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03
{
public:
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableVolume::touchableCollider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___touchableCollider_6;

public:
	inline static int32_t get_offset_of_touchableCollider_6() { return static_cast<int32_t>(offsetof(NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5, ___touchableCollider_6)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_touchableCollider_6() const { return ___touchableCollider_6; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_touchableCollider_6() { return &___touchableCollider_6; }
	inline void set_touchableCollider_6(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___touchableCollider_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchableCollider_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.ObjectCursor
struct ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2  : public BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum[] Microsoft.MixedReality.Toolkit.Input.ObjectCursor::CursorStateData
	ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26* ___CursorStateData_25;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.ObjectCursor::ParentTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___ParentTransform_26;

public:
	inline static int32_t get_offset_of_CursorStateData_25() { return static_cast<int32_t>(offsetof(ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2, ___CursorStateData_25)); }
	inline ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26* get_CursorStateData_25() const { return ___CursorStateData_25; }
	inline ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26** get_address_of_CursorStateData_25() { return &___CursorStateData_25; }
	inline void set_CursorStateData_25(ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26* value)
	{
		___CursorStateData_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CursorStateData_25), (void*)value);
	}

	inline static int32_t get_offset_of_ParentTransform_26() { return static_cast<int32_t>(offsetof(ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2, ___ParentTransform_26)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_ParentTransform_26() const { return ___ParentTransform_26; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_ParentTransform_26() { return &___ParentTransform_26; }
	inline void set_ParentTransform_26(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___ParentTransform_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ParentTransform_26), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpriteCursor
struct SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2  : public BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum[] Microsoft.MixedReality.Toolkit.Input.SpriteCursor::CursorStateData
	SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* ___CursorStateData_25;
	// UnityEngine.SpriteRenderer Microsoft.MixedReality.Toolkit.Input.SpriteCursor::TargetRenderer
	SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * ___TargetRenderer_26;

public:
	inline static int32_t get_offset_of_CursorStateData_25() { return static_cast<int32_t>(offsetof(SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2, ___CursorStateData_25)); }
	inline SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* get_CursorStateData_25() const { return ___CursorStateData_25; }
	inline SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C** get_address_of_CursorStateData_25() { return &___CursorStateData_25; }
	inline void set_CursorStateData_25(SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* value)
	{
		___CursorStateData_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CursorStateData_25), (void*)value);
	}

	inline static int32_t get_offset_of_TargetRenderer_26() { return static_cast<int32_t>(offsetof(SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2, ___TargetRenderer_26)); }
	inline SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * get_TargetRenderer_26() const { return ___TargetRenderer_26; }
	inline SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F ** get_address_of_TargetRenderer_26() { return &___TargetRenderer_26; }
	inline void set_TargetRenderer_26(SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * value)
	{
		___TargetRenderer_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TargetRenderer_26), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip
struct SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355  : public ToolTip_tFF0887E1A172A9D99BDE9C3A2EE9DD410081DC21
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer
struct MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE  : public BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA
{
public:
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::lineMaterial
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___lineMaterial_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::roundedEdges
	bool ___roundedEdges_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::roundedCaps
	bool ___roundedCaps_17;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::fadeLineBrightnessOnEnable
	bool ___fadeLineBrightnessOnEnable_18;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::fadeLinePercentage
	float ___fadeLinePercentage_19;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::fadeLineAnimationTime
	float ___fadeLineAnimationTime_20;
	// UnityEngine.LineRenderer Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::lineRenderer
	LineRenderer_tD225C480F28F28A4D737866474F21001B803B7C3 * ___lineRenderer_21;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::tileMaterialByWorldLength
	bool ___tileMaterialByWorldLength_22;
	// UnityEngine.MaterialPropertyBlock Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::tilingPropertyBlock
	MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * ___tilingPropertyBlock_23;
	// UnityEngine.Vector4 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::tilingPropertyVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___tilingPropertyVector_24;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::tileMaterialScale
	float ___tileMaterialScale_25;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::positions
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___positions_26;
	// UnityEngine.Coroutine Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::fadeLine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___fadeLine_27;
	// UnityEngine.GradientAlphaKey[] Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::cachedKeys
	GradientAlphaKeyU5BU5D_t6907BD924111274532A9E85C9426951DF1C6FB4B* ___cachedKeys_28;

public:
	inline static int32_t get_offset_of_lineMaterial_15() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___lineMaterial_15)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_lineMaterial_15() const { return ___lineMaterial_15; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_lineMaterial_15() { return &___lineMaterial_15; }
	inline void set_lineMaterial_15(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___lineMaterial_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineMaterial_15), (void*)value);
	}

	inline static int32_t get_offset_of_roundedEdges_16() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___roundedEdges_16)); }
	inline bool get_roundedEdges_16() const { return ___roundedEdges_16; }
	inline bool* get_address_of_roundedEdges_16() { return &___roundedEdges_16; }
	inline void set_roundedEdges_16(bool value)
	{
		___roundedEdges_16 = value;
	}

	inline static int32_t get_offset_of_roundedCaps_17() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___roundedCaps_17)); }
	inline bool get_roundedCaps_17() const { return ___roundedCaps_17; }
	inline bool* get_address_of_roundedCaps_17() { return &___roundedCaps_17; }
	inline void set_roundedCaps_17(bool value)
	{
		___roundedCaps_17 = value;
	}

	inline static int32_t get_offset_of_fadeLineBrightnessOnEnable_18() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___fadeLineBrightnessOnEnable_18)); }
	inline bool get_fadeLineBrightnessOnEnable_18() const { return ___fadeLineBrightnessOnEnable_18; }
	inline bool* get_address_of_fadeLineBrightnessOnEnable_18() { return &___fadeLineBrightnessOnEnable_18; }
	inline void set_fadeLineBrightnessOnEnable_18(bool value)
	{
		___fadeLineBrightnessOnEnable_18 = value;
	}

	inline static int32_t get_offset_of_fadeLinePercentage_19() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___fadeLinePercentage_19)); }
	inline float get_fadeLinePercentage_19() const { return ___fadeLinePercentage_19; }
	inline float* get_address_of_fadeLinePercentage_19() { return &___fadeLinePercentage_19; }
	inline void set_fadeLinePercentage_19(float value)
	{
		___fadeLinePercentage_19 = value;
	}

	inline static int32_t get_offset_of_fadeLineAnimationTime_20() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___fadeLineAnimationTime_20)); }
	inline float get_fadeLineAnimationTime_20() const { return ___fadeLineAnimationTime_20; }
	inline float* get_address_of_fadeLineAnimationTime_20() { return &___fadeLineAnimationTime_20; }
	inline void set_fadeLineAnimationTime_20(float value)
	{
		___fadeLineAnimationTime_20 = value;
	}

	inline static int32_t get_offset_of_lineRenderer_21() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___lineRenderer_21)); }
	inline LineRenderer_tD225C480F28F28A4D737866474F21001B803B7C3 * get_lineRenderer_21() const { return ___lineRenderer_21; }
	inline LineRenderer_tD225C480F28F28A4D737866474F21001B803B7C3 ** get_address_of_lineRenderer_21() { return &___lineRenderer_21; }
	inline void set_lineRenderer_21(LineRenderer_tD225C480F28F28A4D737866474F21001B803B7C3 * value)
	{
		___lineRenderer_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineRenderer_21), (void*)value);
	}

	inline static int32_t get_offset_of_tileMaterialByWorldLength_22() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___tileMaterialByWorldLength_22)); }
	inline bool get_tileMaterialByWorldLength_22() const { return ___tileMaterialByWorldLength_22; }
	inline bool* get_address_of_tileMaterialByWorldLength_22() { return &___tileMaterialByWorldLength_22; }
	inline void set_tileMaterialByWorldLength_22(bool value)
	{
		___tileMaterialByWorldLength_22 = value;
	}

	inline static int32_t get_offset_of_tilingPropertyBlock_23() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___tilingPropertyBlock_23)); }
	inline MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * get_tilingPropertyBlock_23() const { return ___tilingPropertyBlock_23; }
	inline MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 ** get_address_of_tilingPropertyBlock_23() { return &___tilingPropertyBlock_23; }
	inline void set_tilingPropertyBlock_23(MaterialPropertyBlock_t72A481768111C6F11DCDCD44F0C7F99F1CA79E13 * value)
	{
		___tilingPropertyBlock_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tilingPropertyBlock_23), (void*)value);
	}

	inline static int32_t get_offset_of_tilingPropertyVector_24() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___tilingPropertyVector_24)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_tilingPropertyVector_24() const { return ___tilingPropertyVector_24; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_tilingPropertyVector_24() { return &___tilingPropertyVector_24; }
	inline void set_tilingPropertyVector_24(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___tilingPropertyVector_24 = value;
	}

	inline static int32_t get_offset_of_tileMaterialScale_25() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___tileMaterialScale_25)); }
	inline float get_tileMaterialScale_25() const { return ___tileMaterialScale_25; }
	inline float* get_address_of_tileMaterialScale_25() { return &___tileMaterialScale_25; }
	inline void set_tileMaterialScale_25(float value)
	{
		___tileMaterialScale_25 = value;
	}

	inline static int32_t get_offset_of_positions_26() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___positions_26)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_positions_26() const { return ___positions_26; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_positions_26() { return &___positions_26; }
	inline void set_positions_26(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___positions_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___positions_26), (void*)value);
	}

	inline static int32_t get_offset_of_fadeLine_27() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___fadeLine_27)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_fadeLine_27() const { return ___fadeLine_27; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_fadeLine_27() { return &___fadeLine_27; }
	inline void set_fadeLine_27(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___fadeLine_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___fadeLine_27), (void*)value);
	}

	inline static int32_t get_offset_of_cachedKeys_28() { return static_cast<int32_t>(offsetof(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE, ___cachedKeys_28)); }
	inline GradientAlphaKeyU5BU5D_t6907BD924111274532A9E85C9426951DF1C6FB4B* get_cachedKeys_28() const { return ___cachedKeys_28; }
	inline GradientAlphaKeyU5BU5D_t6907BD924111274532A9E85C9426951DF1C6FB4B** get_address_of_cachedKeys_28() { return &___cachedKeys_28; }
	inline void set_cachedKeys_28(GradientAlphaKeyU5BU5D_t6907BD924111274532A9E85C9426951DF1C6FB4B* value)
	{
		___cachedKeys_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedKeys_28), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer
struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7  : public ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::cursorPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursorPrefab_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::disableCursorOnStart
	bool ___disableCursorOnStart_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::setCursorVisibilityOnSourceDetected
	bool ___setCursorVisibilityOnSourceDetected_15;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::cursorInstance
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursorInstance_16;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::raycastOrigin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___raycastOrigin_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::activeHoldAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___activeHoldAction_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___pointerAction_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::grabAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___grabAction_20;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsGrabPressed
	bool ___IsGrabPressed_21;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::requiresHoldAction
	bool ___requiresHoldAction_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::requiresActionBeforeEnabling
	bool ___requiresActionBeforeEnabling_23;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsSelectPressed
	bool ___IsSelectPressed_24;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::HasSelectPressedOnce
	bool ___HasSelectPressedOnce_25;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsHoldPressed
	bool ___IsHoldPressed_26;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::isCursorInstantiatedFromPrefab
	bool ___isCursorInstantiatedFromPrefab_27;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerId
	uint32_t ___pointerId_29;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::basePointerName
	String_t* ___basePointerName_30;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerName
	String_t* ___pointerName_31;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<InputSourceParent>k__BackingField
	RuntimeObject* ___U3CInputSourceParentU3Ek__BackingField_32;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<BaseCursor>k__BackingField
	RuntimeObject* ___U3CBaseCursorU3Ek__BackingField_33;
	// Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<CursorModifier>k__BackingField
	RuntimeObject* ___U3CCursorModifierU3Ek__BackingField_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsActive>k__BackingField
	bool ___U3CIsActiveU3Ek__BackingField_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsFocusLocked>k__BackingField
	bool ___U3CIsFocusLockedU3Ek__BackingField_36;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsTargetPositionLockedOnFocusLock>k__BackingField
	bool ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::overrideGlobalPointerExtent
	bool ___overrideGlobalPointerExtent_38;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerExtent
	float ___pointerExtent_39;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::defaultPointerExtent
	float ___defaultPointerExtent_40;
	// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<Rays>k__BackingField
	RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___U3CRaysU3Ek__BackingField_41;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<PrioritizedLayerMasksOverride>k__BackingField
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<FocusTarget>k__BackingField
	RuntimeObject* ___U3CFocusTargetU3Ek__BackingField_43;
	// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<Result>k__BackingField
	RuntimeObject* ___U3CResultU3Ek__BackingField_44;
	// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<RayStabilizer>k__BackingField
	RuntimeObject* ___U3CRayStabilizerU3Ek__BackingField_45;
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<SceneQueryType>k__BackingField
	int32_t ___U3CSceneQueryTypeU3Ek__BackingField_46;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::sphereCastRadius
	float ___sphereCastRadius_47;

public:
	inline static int32_t get_offset_of_cursorPrefab_13() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___cursorPrefab_13)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_cursorPrefab_13() const { return ___cursorPrefab_13; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_cursorPrefab_13() { return &___cursorPrefab_13; }
	inline void set_cursorPrefab_13(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___cursorPrefab_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cursorPrefab_13), (void*)value);
	}

	inline static int32_t get_offset_of_disableCursorOnStart_14() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___disableCursorOnStart_14)); }
	inline bool get_disableCursorOnStart_14() const { return ___disableCursorOnStart_14; }
	inline bool* get_address_of_disableCursorOnStart_14() { return &___disableCursorOnStart_14; }
	inline void set_disableCursorOnStart_14(bool value)
	{
		___disableCursorOnStart_14 = value;
	}

	inline static int32_t get_offset_of_setCursorVisibilityOnSourceDetected_15() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___setCursorVisibilityOnSourceDetected_15)); }
	inline bool get_setCursorVisibilityOnSourceDetected_15() const { return ___setCursorVisibilityOnSourceDetected_15; }
	inline bool* get_address_of_setCursorVisibilityOnSourceDetected_15() { return &___setCursorVisibilityOnSourceDetected_15; }
	inline void set_setCursorVisibilityOnSourceDetected_15(bool value)
	{
		___setCursorVisibilityOnSourceDetected_15 = value;
	}

	inline static int32_t get_offset_of_cursorInstance_16() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___cursorInstance_16)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_cursorInstance_16() const { return ___cursorInstance_16; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_cursorInstance_16() { return &___cursorInstance_16; }
	inline void set_cursorInstance_16(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___cursorInstance_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cursorInstance_16), (void*)value);
	}

	inline static int32_t get_offset_of_raycastOrigin_17() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___raycastOrigin_17)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_raycastOrigin_17() const { return ___raycastOrigin_17; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_raycastOrigin_17() { return &___raycastOrigin_17; }
	inline void set_raycastOrigin_17(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___raycastOrigin_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastOrigin_17), (void*)value);
	}

	inline static int32_t get_offset_of_activeHoldAction_18() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___activeHoldAction_18)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_activeHoldAction_18() const { return ___activeHoldAction_18; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_activeHoldAction_18() { return &___activeHoldAction_18; }
	inline void set_activeHoldAction_18(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___activeHoldAction_18 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___activeHoldAction_18))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_pointerAction_19() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerAction_19)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_pointerAction_19() const { return ___pointerAction_19; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_pointerAction_19() { return &___pointerAction_19; }
	inline void set_pointerAction_19(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___pointerAction_19 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___pointerAction_19))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_grabAction_20() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___grabAction_20)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_grabAction_20() const { return ___grabAction_20; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_grabAction_20() { return &___grabAction_20; }
	inline void set_grabAction_20(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___grabAction_20 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___grabAction_20))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_IsGrabPressed_21() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsGrabPressed_21)); }
	inline bool get_IsGrabPressed_21() const { return ___IsGrabPressed_21; }
	inline bool* get_address_of_IsGrabPressed_21() { return &___IsGrabPressed_21; }
	inline void set_IsGrabPressed_21(bool value)
	{
		___IsGrabPressed_21 = value;
	}

	inline static int32_t get_offset_of_requiresHoldAction_22() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___requiresHoldAction_22)); }
	inline bool get_requiresHoldAction_22() const { return ___requiresHoldAction_22; }
	inline bool* get_address_of_requiresHoldAction_22() { return &___requiresHoldAction_22; }
	inline void set_requiresHoldAction_22(bool value)
	{
		___requiresHoldAction_22 = value;
	}

	inline static int32_t get_offset_of_requiresActionBeforeEnabling_23() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___requiresActionBeforeEnabling_23)); }
	inline bool get_requiresActionBeforeEnabling_23() const { return ___requiresActionBeforeEnabling_23; }
	inline bool* get_address_of_requiresActionBeforeEnabling_23() { return &___requiresActionBeforeEnabling_23; }
	inline void set_requiresActionBeforeEnabling_23(bool value)
	{
		___requiresActionBeforeEnabling_23 = value;
	}

	inline static int32_t get_offset_of_IsSelectPressed_24() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsSelectPressed_24)); }
	inline bool get_IsSelectPressed_24() const { return ___IsSelectPressed_24; }
	inline bool* get_address_of_IsSelectPressed_24() { return &___IsSelectPressed_24; }
	inline void set_IsSelectPressed_24(bool value)
	{
		___IsSelectPressed_24 = value;
	}

	inline static int32_t get_offset_of_HasSelectPressedOnce_25() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___HasSelectPressedOnce_25)); }
	inline bool get_HasSelectPressedOnce_25() const { return ___HasSelectPressedOnce_25; }
	inline bool* get_address_of_HasSelectPressedOnce_25() { return &___HasSelectPressedOnce_25; }
	inline void set_HasSelectPressedOnce_25(bool value)
	{
		___HasSelectPressedOnce_25 = value;
	}

	inline static int32_t get_offset_of_IsHoldPressed_26() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsHoldPressed_26)); }
	inline bool get_IsHoldPressed_26() const { return ___IsHoldPressed_26; }
	inline bool* get_address_of_IsHoldPressed_26() { return &___IsHoldPressed_26; }
	inline void set_IsHoldPressed_26(bool value)
	{
		___IsHoldPressed_26 = value;
	}

	inline static int32_t get_offset_of_isCursorInstantiatedFromPrefab_27() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___isCursorInstantiatedFromPrefab_27)); }
	inline bool get_isCursorInstantiatedFromPrefab_27() const { return ___isCursorInstantiatedFromPrefab_27; }
	inline bool* get_address_of_isCursorInstantiatedFromPrefab_27() { return &___isCursorInstantiatedFromPrefab_27; }
	inline void set_isCursorInstantiatedFromPrefab_27(bool value)
	{
		___isCursorInstantiatedFromPrefab_27 = value;
	}

	inline static int32_t get_offset_of_pointerId_29() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerId_29)); }
	inline uint32_t get_pointerId_29() const { return ___pointerId_29; }
	inline uint32_t* get_address_of_pointerId_29() { return &___pointerId_29; }
	inline void set_pointerId_29(uint32_t value)
	{
		___pointerId_29 = value;
	}

	inline static int32_t get_offset_of_basePointerName_30() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___basePointerName_30)); }
	inline String_t* get_basePointerName_30() const { return ___basePointerName_30; }
	inline String_t** get_address_of_basePointerName_30() { return &___basePointerName_30; }
	inline void set_basePointerName_30(String_t* value)
	{
		___basePointerName_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___basePointerName_30), (void*)value);
	}

	inline static int32_t get_offset_of_pointerName_31() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerName_31)); }
	inline String_t* get_pointerName_31() const { return ___pointerName_31; }
	inline String_t** get_address_of_pointerName_31() { return &___pointerName_31; }
	inline void set_pointerName_31(String_t* value)
	{
		___pointerName_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerName_31), (void*)value);
	}

	inline static int32_t get_offset_of_U3CInputSourceParentU3Ek__BackingField_32() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CInputSourceParentU3Ek__BackingField_32)); }
	inline RuntimeObject* get_U3CInputSourceParentU3Ek__BackingField_32() const { return ___U3CInputSourceParentU3Ek__BackingField_32; }
	inline RuntimeObject** get_address_of_U3CInputSourceParentU3Ek__BackingField_32() { return &___U3CInputSourceParentU3Ek__BackingField_32; }
	inline void set_U3CInputSourceParentU3Ek__BackingField_32(RuntimeObject* value)
	{
		___U3CInputSourceParentU3Ek__BackingField_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceParentU3Ek__BackingField_32), (void*)value);
	}

	inline static int32_t get_offset_of_U3CBaseCursorU3Ek__BackingField_33() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CBaseCursorU3Ek__BackingField_33)); }
	inline RuntimeObject* get_U3CBaseCursorU3Ek__BackingField_33() const { return ___U3CBaseCursorU3Ek__BackingField_33; }
	inline RuntimeObject** get_address_of_U3CBaseCursorU3Ek__BackingField_33() { return &___U3CBaseCursorU3Ek__BackingField_33; }
	inline void set_U3CBaseCursorU3Ek__BackingField_33(RuntimeObject* value)
	{
		___U3CBaseCursorU3Ek__BackingField_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CBaseCursorU3Ek__BackingField_33), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCursorModifierU3Ek__BackingField_34() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CCursorModifierU3Ek__BackingField_34)); }
	inline RuntimeObject* get_U3CCursorModifierU3Ek__BackingField_34() const { return ___U3CCursorModifierU3Ek__BackingField_34; }
	inline RuntimeObject** get_address_of_U3CCursorModifierU3Ek__BackingField_34() { return &___U3CCursorModifierU3Ek__BackingField_34; }
	inline void set_U3CCursorModifierU3Ek__BackingField_34(RuntimeObject* value)
	{
		___U3CCursorModifierU3Ek__BackingField_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CCursorModifierU3Ek__BackingField_34), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsActiveU3Ek__BackingField_35() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsActiveU3Ek__BackingField_35)); }
	inline bool get_U3CIsActiveU3Ek__BackingField_35() const { return ___U3CIsActiveU3Ek__BackingField_35; }
	inline bool* get_address_of_U3CIsActiveU3Ek__BackingField_35() { return &___U3CIsActiveU3Ek__BackingField_35; }
	inline void set_U3CIsActiveU3Ek__BackingField_35(bool value)
	{
		___U3CIsActiveU3Ek__BackingField_35 = value;
	}

	inline static int32_t get_offset_of_U3CIsFocusLockedU3Ek__BackingField_36() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsFocusLockedU3Ek__BackingField_36)); }
	inline bool get_U3CIsFocusLockedU3Ek__BackingField_36() const { return ___U3CIsFocusLockedU3Ek__BackingField_36; }
	inline bool* get_address_of_U3CIsFocusLockedU3Ek__BackingField_36() { return &___U3CIsFocusLockedU3Ek__BackingField_36; }
	inline void set_U3CIsFocusLockedU3Ek__BackingField_36(bool value)
	{
		___U3CIsFocusLockedU3Ek__BackingField_36 = value;
	}

	inline static int32_t get_offset_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37)); }
	inline bool get_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() const { return ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37; }
	inline bool* get_address_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() { return &___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37; }
	inline void set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37(bool value)
	{
		___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37 = value;
	}

	inline static int32_t get_offset_of_overrideGlobalPointerExtent_38() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___overrideGlobalPointerExtent_38)); }
	inline bool get_overrideGlobalPointerExtent_38() const { return ___overrideGlobalPointerExtent_38; }
	inline bool* get_address_of_overrideGlobalPointerExtent_38() { return &___overrideGlobalPointerExtent_38; }
	inline void set_overrideGlobalPointerExtent_38(bool value)
	{
		___overrideGlobalPointerExtent_38 = value;
	}

	inline static int32_t get_offset_of_pointerExtent_39() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerExtent_39)); }
	inline float get_pointerExtent_39() const { return ___pointerExtent_39; }
	inline float* get_address_of_pointerExtent_39() { return &___pointerExtent_39; }
	inline void set_pointerExtent_39(float value)
	{
		___pointerExtent_39 = value;
	}

	inline static int32_t get_offset_of_defaultPointerExtent_40() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___defaultPointerExtent_40)); }
	inline float get_defaultPointerExtent_40() const { return ___defaultPointerExtent_40; }
	inline float* get_address_of_defaultPointerExtent_40() { return &___defaultPointerExtent_40; }
	inline void set_defaultPointerExtent_40(float value)
	{
		___defaultPointerExtent_40 = value;
	}

	inline static int32_t get_offset_of_U3CRaysU3Ek__BackingField_41() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CRaysU3Ek__BackingField_41)); }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* get_U3CRaysU3Ek__BackingField_41() const { return ___U3CRaysU3Ek__BackingField_41; }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8** get_address_of_U3CRaysU3Ek__BackingField_41() { return &___U3CRaysU3Ek__BackingField_41; }
	inline void set_U3CRaysU3Ek__BackingField_41(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* value)
	{
		___U3CRaysU3Ek__BackingField_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRaysU3Ek__BackingField_41), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() const { return ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() { return &___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42; }
	inline void set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42), (void*)value);
	}

	inline static int32_t get_offset_of_U3CFocusTargetU3Ek__BackingField_43() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CFocusTargetU3Ek__BackingField_43)); }
	inline RuntimeObject* get_U3CFocusTargetU3Ek__BackingField_43() const { return ___U3CFocusTargetU3Ek__BackingField_43; }
	inline RuntimeObject** get_address_of_U3CFocusTargetU3Ek__BackingField_43() { return &___U3CFocusTargetU3Ek__BackingField_43; }
	inline void set_U3CFocusTargetU3Ek__BackingField_43(RuntimeObject* value)
	{
		___U3CFocusTargetU3Ek__BackingField_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusTargetU3Ek__BackingField_43), (void*)value);
	}

	inline static int32_t get_offset_of_U3CResultU3Ek__BackingField_44() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CResultU3Ek__BackingField_44)); }
	inline RuntimeObject* get_U3CResultU3Ek__BackingField_44() const { return ___U3CResultU3Ek__BackingField_44; }
	inline RuntimeObject** get_address_of_U3CResultU3Ek__BackingField_44() { return &___U3CResultU3Ek__BackingField_44; }
	inline void set_U3CResultU3Ek__BackingField_44(RuntimeObject* value)
	{
		___U3CResultU3Ek__BackingField_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CResultU3Ek__BackingField_44), (void*)value);
	}

	inline static int32_t get_offset_of_U3CRayStabilizerU3Ek__BackingField_45() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CRayStabilizerU3Ek__BackingField_45)); }
	inline RuntimeObject* get_U3CRayStabilizerU3Ek__BackingField_45() const { return ___U3CRayStabilizerU3Ek__BackingField_45; }
	inline RuntimeObject** get_address_of_U3CRayStabilizerU3Ek__BackingField_45() { return &___U3CRayStabilizerU3Ek__BackingField_45; }
	inline void set_U3CRayStabilizerU3Ek__BackingField_45(RuntimeObject* value)
	{
		___U3CRayStabilizerU3Ek__BackingField_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRayStabilizerU3Ek__BackingField_45), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSceneQueryTypeU3Ek__BackingField_46() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CSceneQueryTypeU3Ek__BackingField_46)); }
	inline int32_t get_U3CSceneQueryTypeU3Ek__BackingField_46() const { return ___U3CSceneQueryTypeU3Ek__BackingField_46; }
	inline int32_t* get_address_of_U3CSceneQueryTypeU3Ek__BackingField_46() { return &___U3CSceneQueryTypeU3Ek__BackingField_46; }
	inline void set_U3CSceneQueryTypeU3Ek__BackingField_46(int32_t value)
	{
		___U3CSceneQueryTypeU3Ek__BackingField_46 = value;
	}

	inline static int32_t get_offset_of_sphereCastRadius_47() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___sphereCastRadius_47)); }
	inline float get_sphereCastRadius_47() const { return ___sphereCastRadius_47; }
	inline float* get_address_of_sphereCastRadius_47() { return &___sphereCastRadius_47; }
	inline void set_sphereCastRadius_47(float value)
	{
		___sphereCastRadius_47 = value;
	}
};

struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::SetCursorPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___SetCursorPerfMarker_28;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_48;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_49;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnInputUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputUpPerfMarker_50;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnInputDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputDownPerfMarker_51;

public:
	inline static int32_t get_offset_of_SetCursorPerfMarker_28() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___SetCursorPerfMarker_28)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_SetCursorPerfMarker_28() const { return ___SetCursorPerfMarker_28; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_SetCursorPerfMarker_28() { return &___SetCursorPerfMarker_28; }
	inline void set_SetCursorPerfMarker_28(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___SetCursorPerfMarker_28 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_48() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnPostSceneQueryPerfMarker_48)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_48() const { return ___OnPostSceneQueryPerfMarker_48; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_48() { return &___OnPostSceneQueryPerfMarker_48; }
	inline void set_OnPostSceneQueryPerfMarker_48(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_48 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_49() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnSourceLostPerfMarker_49)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_49() const { return ___OnSourceLostPerfMarker_49; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_49() { return &___OnSourceLostPerfMarker_49; }
	inline void set_OnSourceLostPerfMarker_49(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_49 = value;
	}

	inline static int32_t get_offset_of_OnInputUpPerfMarker_50() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnInputUpPerfMarker_50)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputUpPerfMarker_50() const { return ___OnInputUpPerfMarker_50; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputUpPerfMarker_50() { return &___OnInputUpPerfMarker_50; }
	inline void set_OnInputUpPerfMarker_50(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputUpPerfMarker_50 = value;
	}

	inline static int32_t get_offset_of_OnInputDownPerfMarker_51() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnInputDownPerfMarker_51)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputDownPerfMarker_51() const { return ___OnInputDownPerfMarker_51; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputDownPerfMarker_51() { return &___OnInputDownPerfMarker_51; }
	inline void set_OnInputDownPerfMarker_51(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputDownPerfMarker_51 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI
struct NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC  : public NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0
{
public:
	// System.Lazy`1<UnityEngine.RectTransform> Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI::rectTransform
	Lazy_1_tD2C2BE8F758DC9A6D241E6920D8A6D441B86EDF4 * ___rectTransform_6;

public:
	inline static int32_t get_offset_of_rectTransform_6() { return static_cast<int32_t>(offsetof(NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC, ___rectTransform_6)); }
	inline Lazy_1_tD2C2BE8F758DC9A6D241E6920D8A6D441B86EDF4 * get_rectTransform_6() const { return ___rectTransform_6; }
	inline Lazy_1_tD2C2BE8F758DC9A6D241E6920D8A6D441B86EDF4 ** get_address_of_rectTransform_6() { return &___rectTransform_6; }
	inline void set_rectTransform_6(Lazy_1_tD2C2BE8F758DC9A6D241E6920D8A6D441B86EDF4 * value)
	{
		___rectTransform_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rectTransform_6), (void*)value);
	}
};

struct NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_StaticFields
{
public:
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI> Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI::instances
	List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65 * ___instances_7;

public:
	inline static int32_t get_offset_of_instances_7() { return static_cast<int32_t>(offsetof(NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_StaticFields, ___instances_7)); }
	inline List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65 * get_instances_7() const { return ___instances_7; }
	inline List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65 ** get_address_of_instances_7() { return &___instances_7; }
	inline void set_instances_7(List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65 * value)
	{
		___instances_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___instances_7), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.PointerClickHandler
struct PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50  : public BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35
{
public:
	// Microsoft.MixedReality.Toolkit.Input.InputActionEventPair Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::onPointerUpActionEvent
	InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  ___onPointerUpActionEvent_7;
	// Microsoft.MixedReality.Toolkit.Input.InputActionEventPair Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::onPointerDownActionEvent
	InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  ___onPointerDownActionEvent_8;
	// Microsoft.MixedReality.Toolkit.Input.InputActionEventPair Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::onPointerClickedActionEvent
	InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  ___onPointerClickedActionEvent_9;

public:
	inline static int32_t get_offset_of_onPointerUpActionEvent_7() { return static_cast<int32_t>(offsetof(PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50, ___onPointerUpActionEvent_7)); }
	inline InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  get_onPointerUpActionEvent_7() const { return ___onPointerUpActionEvent_7; }
	inline InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * get_address_of_onPointerUpActionEvent_7() { return &___onPointerUpActionEvent_7; }
	inline void set_onPointerUpActionEvent_7(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  value)
	{
		___onPointerUpActionEvent_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___onPointerUpActionEvent_7))->___inputAction_0))->___description_2), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___onPointerUpActionEvent_7))->___unityEvent_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_onPointerDownActionEvent_8() { return static_cast<int32_t>(offsetof(PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50, ___onPointerDownActionEvent_8)); }
	inline InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  get_onPointerDownActionEvent_8() const { return ___onPointerDownActionEvent_8; }
	inline InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * get_address_of_onPointerDownActionEvent_8() { return &___onPointerDownActionEvent_8; }
	inline void set_onPointerDownActionEvent_8(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  value)
	{
		___onPointerDownActionEvent_8 = value;
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___onPointerDownActionEvent_8))->___inputAction_0))->___description_2), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___onPointerDownActionEvent_8))->___unityEvent_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_onPointerClickedActionEvent_9() { return static_cast<int32_t>(offsetof(PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50, ___onPointerClickedActionEvent_9)); }
	inline InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  get_onPointerClickedActionEvent_9() const { return ___onPointerClickedActionEvent_9; }
	inline InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * get_address_of_onPointerClickedActionEvent_9() { return &___onPointerClickedActionEvent_9; }
	inline void set_onPointerClickedActionEvent_9(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D  value)
	{
		___onPointerClickedActionEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___onPointerClickedActionEvent_9))->___inputAction_0))->___description_2), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___onPointerClickedActionEvent_9))->___unityEvent_1), (void*)NULL);
		#endif
	}
};


// Microsoft.MixedReality.Toolkit.Input.PointerHandler
struct PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C  : public BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerHandler::MarkEventsAsUsed
	bool ___MarkEventsAsUsed_7;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerDown
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerDown_8;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerUp
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerUp_9;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerClicked
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerClicked_10;
	// Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent Microsoft.MixedReality.Toolkit.Input.PointerHandler::OnPointerDragged
	PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * ___OnPointerDragged_11;

public:
	inline static int32_t get_offset_of_MarkEventsAsUsed_7() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___MarkEventsAsUsed_7)); }
	inline bool get_MarkEventsAsUsed_7() const { return ___MarkEventsAsUsed_7; }
	inline bool* get_address_of_MarkEventsAsUsed_7() { return &___MarkEventsAsUsed_7; }
	inline void set_MarkEventsAsUsed_7(bool value)
	{
		___MarkEventsAsUsed_7 = value;
	}

	inline static int32_t get_offset_of_OnPointerDown_8() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerDown_8)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerDown_8() const { return ___OnPointerDown_8; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerDown_8() { return &___OnPointerDown_8; }
	inline void set_OnPointerDown_8(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerDown_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerDown_8), (void*)value);
	}

	inline static int32_t get_offset_of_OnPointerUp_9() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerUp_9)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerUp_9() const { return ___OnPointerUp_9; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerUp_9() { return &___OnPointerUp_9; }
	inline void set_OnPointerUp_9(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerUp_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerUp_9), (void*)value);
	}

	inline static int32_t get_offset_of_OnPointerClicked_10() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerClicked_10)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerClicked_10() const { return ___OnPointerClicked_10; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerClicked_10() { return &___OnPointerClicked_10; }
	inline void set_OnPointerClicked_10(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerClicked_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerClicked_10), (void*)value);
	}

	inline static int32_t get_offset_of_OnPointerDragged_11() { return static_cast<int32_t>(offsetof(PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C, ___OnPointerDragged_11)); }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * get_OnPointerDragged_11() const { return ___OnPointerDragged_11; }
	inline PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 ** get_address_of_OnPointerDragged_11() { return &___OnPointerDragged_11; }
	inline void set_OnPointerDragged_11(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * value)
	{
		___OnPointerDragged_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnPointerDragged_11), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler
struct SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560  : public BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35
{
public:
	// Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse[] Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::keywords
	KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* ___keywords_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::persistentKeywords
	bool ___persistentKeywords_8;
	// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::speechConfirmationTooltipPrefab
	SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * ___speechConfirmationTooltipPrefab_9;
	// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::speechConfirmationTooltipPrefabInstance
	SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * ___speechConfirmationTooltipPrefabInstance_10;
	// System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent> Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::responses
	Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * ___responses_11;

public:
	inline static int32_t get_offset_of_keywords_7() { return static_cast<int32_t>(offsetof(SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560, ___keywords_7)); }
	inline KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* get_keywords_7() const { return ___keywords_7; }
	inline KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75** get_address_of_keywords_7() { return &___keywords_7; }
	inline void set_keywords_7(KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* value)
	{
		___keywords_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keywords_7), (void*)value);
	}

	inline static int32_t get_offset_of_persistentKeywords_8() { return static_cast<int32_t>(offsetof(SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560, ___persistentKeywords_8)); }
	inline bool get_persistentKeywords_8() const { return ___persistentKeywords_8; }
	inline bool* get_address_of_persistentKeywords_8() { return &___persistentKeywords_8; }
	inline void set_persistentKeywords_8(bool value)
	{
		___persistentKeywords_8 = value;
	}

	inline static int32_t get_offset_of_speechConfirmationTooltipPrefab_9() { return static_cast<int32_t>(offsetof(SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560, ___speechConfirmationTooltipPrefab_9)); }
	inline SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * get_speechConfirmationTooltipPrefab_9() const { return ___speechConfirmationTooltipPrefab_9; }
	inline SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 ** get_address_of_speechConfirmationTooltipPrefab_9() { return &___speechConfirmationTooltipPrefab_9; }
	inline void set_speechConfirmationTooltipPrefab_9(SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * value)
	{
		___speechConfirmationTooltipPrefab_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechConfirmationTooltipPrefab_9), (void*)value);
	}

	inline static int32_t get_offset_of_speechConfirmationTooltipPrefabInstance_10() { return static_cast<int32_t>(offsetof(SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560, ___speechConfirmationTooltipPrefabInstance_10)); }
	inline SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * get_speechConfirmationTooltipPrefabInstance_10() const { return ___speechConfirmationTooltipPrefabInstance_10; }
	inline SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 ** get_address_of_speechConfirmationTooltipPrefabInstance_10() { return &___speechConfirmationTooltipPrefabInstance_10; }
	inline void set_speechConfirmationTooltipPrefabInstance_10(SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * value)
	{
		___speechConfirmationTooltipPrefabInstance_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechConfirmationTooltipPrefabInstance_10), (void*)value);
	}

	inline static int32_t get_offset_of_responses_11() { return static_cast<int32_t>(offsetof(SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560, ___responses_11)); }
	inline Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * get_responses_11() const { return ___responses_11; }
	inline Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 ** get_address_of_responses_11() { return &___responses_11; }
	inline void set_responses_11(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * value)
	{
		___responses_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___responses_11), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseMousePointer
struct BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::timeoutTimer
	float ___timeoutTimer_52;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::isInteractionEnabled
	bool ___isInteractionEnabled_53;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::cursorWasDisabledOnDown
	bool ___cursorWasDisabledOnDown_54;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::isDisabled
	bool ___isDisabled_55;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::hideCursorWhenInactive
	bool ___hideCursorWhenInactive_56;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::movementThresholdToUnHide
	float ___movementThresholdToUnHide_57;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::hideTimeout
	float ___hideTimeout_58;

public:
	inline static int32_t get_offset_of_timeoutTimer_52() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___timeoutTimer_52)); }
	inline float get_timeoutTimer_52() const { return ___timeoutTimer_52; }
	inline float* get_address_of_timeoutTimer_52() { return &___timeoutTimer_52; }
	inline void set_timeoutTimer_52(float value)
	{
		___timeoutTimer_52 = value;
	}

	inline static int32_t get_offset_of_isInteractionEnabled_53() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___isInteractionEnabled_53)); }
	inline bool get_isInteractionEnabled_53() const { return ___isInteractionEnabled_53; }
	inline bool* get_address_of_isInteractionEnabled_53() { return &___isInteractionEnabled_53; }
	inline void set_isInteractionEnabled_53(bool value)
	{
		___isInteractionEnabled_53 = value;
	}

	inline static int32_t get_offset_of_cursorWasDisabledOnDown_54() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___cursorWasDisabledOnDown_54)); }
	inline bool get_cursorWasDisabledOnDown_54() const { return ___cursorWasDisabledOnDown_54; }
	inline bool* get_address_of_cursorWasDisabledOnDown_54() { return &___cursorWasDisabledOnDown_54; }
	inline void set_cursorWasDisabledOnDown_54(bool value)
	{
		___cursorWasDisabledOnDown_54 = value;
	}

	inline static int32_t get_offset_of_isDisabled_55() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___isDisabled_55)); }
	inline bool get_isDisabled_55() const { return ___isDisabled_55; }
	inline bool* get_address_of_isDisabled_55() { return &___isDisabled_55; }
	inline void set_isDisabled_55(bool value)
	{
		___isDisabled_55 = value;
	}

	inline static int32_t get_offset_of_hideCursorWhenInactive_56() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___hideCursorWhenInactive_56)); }
	inline bool get_hideCursorWhenInactive_56() const { return ___hideCursorWhenInactive_56; }
	inline bool* get_address_of_hideCursorWhenInactive_56() { return &___hideCursorWhenInactive_56; }
	inline void set_hideCursorWhenInactive_56(bool value)
	{
		___hideCursorWhenInactive_56 = value;
	}

	inline static int32_t get_offset_of_movementThresholdToUnHide_57() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___movementThresholdToUnHide_57)); }
	inline float get_movementThresholdToUnHide_57() const { return ___movementThresholdToUnHide_57; }
	inline float* get_address_of_movementThresholdToUnHide_57() { return &___movementThresholdToUnHide_57; }
	inline void set_movementThresholdToUnHide_57(float value)
	{
		___movementThresholdToUnHide_57 = value;
	}

	inline static int32_t get_offset_of_hideTimeout_58() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99, ___hideTimeout_58)); }
	inline float get_hideTimeout_58() const { return ___hideTimeout_58; }
	inline float* get_address_of_hideTimeout_58() { return &___hideTimeout_58; }
	inline void set_hideTimeout_58(float value)
	{
		___hideTimeout_58 = value;
	}
};

struct BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceDetectedPerfMarker_59;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_60;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnInputDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputDownPerfMarker_61;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::OnInputUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputUpPerfMarker_62;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::ResetCursorPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___ResetCursorPerfMarker_63;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_64;

public:
	inline static int32_t get_offset_of_OnSourceDetectedPerfMarker_59() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnSourceDetectedPerfMarker_59)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceDetectedPerfMarker_59() const { return ___OnSourceDetectedPerfMarker_59; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceDetectedPerfMarker_59() { return &___OnSourceDetectedPerfMarker_59; }
	inline void set_OnSourceDetectedPerfMarker_59(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceDetectedPerfMarker_59 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_60() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnSourceLostPerfMarker_60)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_60() const { return ___OnSourceLostPerfMarker_60; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_60() { return &___OnSourceLostPerfMarker_60; }
	inline void set_OnSourceLostPerfMarker_60(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_60 = value;
	}

	inline static int32_t get_offset_of_OnInputDownPerfMarker_61() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnInputDownPerfMarker_61)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputDownPerfMarker_61() const { return ___OnInputDownPerfMarker_61; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputDownPerfMarker_61() { return &___OnInputDownPerfMarker_61; }
	inline void set_OnInputDownPerfMarker_61(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputDownPerfMarker_61 = value;
	}

	inline static int32_t get_offset_of_OnInputUpPerfMarker_62() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___OnInputUpPerfMarker_62)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputUpPerfMarker_62() const { return ___OnInputUpPerfMarker_62; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputUpPerfMarker_62() { return &___OnInputUpPerfMarker_62; }
	inline void set_OnInputUpPerfMarker_62(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputUpPerfMarker_62 = value;
	}

	inline static int32_t get_offset_of_ResetCursorPerfMarker_63() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___ResetCursorPerfMarker_63)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_ResetCursorPerfMarker_63() const { return ___ResetCursorPerfMarker_63; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_ResetCursorPerfMarker_63() { return &___ResetCursorPerfMarker_63; }
	inline void set_ResetCursorPerfMarker_63(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___ResetCursorPerfMarker_63 = value;
	}

	inline static int32_t get_offset_of_UpdatePerfMarker_64() { return static_cast<int32_t>(offsetof(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_StaticFields, ___UpdatePerfMarker_64)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_64() const { return ___UpdatePerfMarker_64; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_64() { return &___UpdatePerfMarker_64; }
	inline void set_UpdatePerfMarker_64(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_64 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.LinePointer
struct LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorSelected
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorSelected_52;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorValid
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorValid_53;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorInvalid
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorInvalid_54;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorNoTarget
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorNoTarget_55;
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Input.LinePointer::LineColorLockFocus
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___LineColorLockFocus_56;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Input.LinePointer::lineBase
	BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * ___lineBase_57;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[] Microsoft.MixedReality.Toolkit.Input.LinePointer::lineRenderers
	BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* ___lineRenderers_58;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.LinePointer::lineStartPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lineStartPoint_59;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.LinePointer::lineEndPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lineEndPoint_60;

public:
	inline static int32_t get_offset_of_LineColorSelected_52() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorSelected_52)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorSelected_52() const { return ___LineColorSelected_52; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorSelected_52() { return &___LineColorSelected_52; }
	inline void set_LineColorSelected_52(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorSelected_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorSelected_52), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorValid_53() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorValid_53)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorValid_53() const { return ___LineColorValid_53; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorValid_53() { return &___LineColorValid_53; }
	inline void set_LineColorValid_53(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorValid_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorValid_53), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorInvalid_54() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorInvalid_54)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorInvalid_54() const { return ___LineColorInvalid_54; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorInvalid_54() { return &___LineColorInvalid_54; }
	inline void set_LineColorInvalid_54(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorInvalid_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorInvalid_54), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorNoTarget_55() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorNoTarget_55)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorNoTarget_55() const { return ___LineColorNoTarget_55; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorNoTarget_55() { return &___LineColorNoTarget_55; }
	inline void set_LineColorNoTarget_55(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorNoTarget_55 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorNoTarget_55), (void*)value);
	}

	inline static int32_t get_offset_of_LineColorLockFocus_56() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___LineColorLockFocus_56)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_LineColorLockFocus_56() const { return ___LineColorLockFocus_56; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_LineColorLockFocus_56() { return &___LineColorLockFocus_56; }
	inline void set_LineColorLockFocus_56(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___LineColorLockFocus_56 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LineColorLockFocus_56), (void*)value);
	}

	inline static int32_t get_offset_of_lineBase_57() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineBase_57)); }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * get_lineBase_57() const { return ___lineBase_57; }
	inline BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 ** get_address_of_lineBase_57() { return &___lineBase_57; }
	inline void set_lineBase_57(BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * value)
	{
		___lineBase_57 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineBase_57), (void*)value);
	}

	inline static int32_t get_offset_of_lineRenderers_58() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineRenderers_58)); }
	inline BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* get_lineRenderers_58() const { return ___lineRenderers_58; }
	inline BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822** get_address_of_lineRenderers_58() { return &___lineRenderers_58; }
	inline void set_lineRenderers_58(BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* value)
	{
		___lineRenderers_58 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineRenderers_58), (void*)value);
	}

	inline static int32_t get_offset_of_lineStartPoint_59() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineStartPoint_59)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_lineStartPoint_59() const { return ___lineStartPoint_59; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_lineStartPoint_59() { return &___lineStartPoint_59; }
	inline void set_lineStartPoint_59(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___lineStartPoint_59 = value;
	}

	inline static int32_t get_offset_of_lineEndPoint_60() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665, ___lineEndPoint_60)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_lineEndPoint_60() const { return ___lineEndPoint_60; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_lineEndPoint_60() { return &___lineEndPoint_60; }
	inline void set_lineEndPoint_60(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___lineEndPoint_60 = value;
	}
};

struct LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_61;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_62;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::PreUpdateLineRenderersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___PreUpdateLineRenderersPerfMarker_63;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::PostUpdateLineRenderersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___PostUpdateLineRenderersPerfMarker_64;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.LinePointer::UpdateRaysPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateRaysPerfMarker_65;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_61() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___OnPreSceneQueryPerfMarker_61)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_61() const { return ___OnPreSceneQueryPerfMarker_61; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_61() { return &___OnPreSceneQueryPerfMarker_61; }
	inline void set_OnPreSceneQueryPerfMarker_61(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_61 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_62() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___OnPostSceneQueryPerfMarker_62)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_62() const { return ___OnPostSceneQueryPerfMarker_62; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_62() { return &___OnPostSceneQueryPerfMarker_62; }
	inline void set_OnPostSceneQueryPerfMarker_62(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_62 = value;
	}

	inline static int32_t get_offset_of_PreUpdateLineRenderersPerfMarker_63() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___PreUpdateLineRenderersPerfMarker_63)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_PreUpdateLineRenderersPerfMarker_63() const { return ___PreUpdateLineRenderersPerfMarker_63; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_PreUpdateLineRenderersPerfMarker_63() { return &___PreUpdateLineRenderersPerfMarker_63; }
	inline void set_PreUpdateLineRenderersPerfMarker_63(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___PreUpdateLineRenderersPerfMarker_63 = value;
	}

	inline static int32_t get_offset_of_PostUpdateLineRenderersPerfMarker_64() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___PostUpdateLineRenderersPerfMarker_64)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_PostUpdateLineRenderersPerfMarker_64() const { return ___PostUpdateLineRenderersPerfMarker_64; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_PostUpdateLineRenderersPerfMarker_64() { return &___PostUpdateLineRenderersPerfMarker_64; }
	inline void set_PostUpdateLineRenderersPerfMarker_64(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___PostUpdateLineRenderersPerfMarker_64 = value;
	}

	inline static int32_t get_offset_of_UpdateRaysPerfMarker_65() { return static_cast<int32_t>(offsetof(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_StaticFields, ___UpdateRaysPerfMarker_65)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateRaysPerfMarker_65() const { return ___UpdateRaysPerfMarker_65; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateRaysPerfMarker_65() { return &___UpdateRaysPerfMarker_65; }
	inline void set_UpdateRaysPerfMarker_65(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateRaysPerfMarker_65 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.PokePointer
struct PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::touchableDistance
	float ___touchableDistance_53;
	// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::sourcePoseOffset
	float ___sourcePoseOffset_54;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PokePointer::sceneQueryBufferSize
	int32_t ___sceneQueryBufferSize_55;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::ignoreCollidersNotInFOV
	bool ___ignoreCollidersNotInFOV_56;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.PokePointer::pokeLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___pokeLayerMasks_57;
	// UnityEngine.QueryTriggerInteraction Microsoft.MixedReality.Toolkit.Input.PokePointer::triggerInteraction
	int32_t ___triggerInteraction_58;
	// UnityEngine.Collider[] Microsoft.MixedReality.Toolkit.Input.PokePointer::queryBuffer
	ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* ___queryBuffer_59;
	// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::closestDistance
	float ___closestDistance_60;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::closestNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___closestNormal_61;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::endPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___endPoint_62;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::<PreviousPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPreviousPositionU3Ek__BackingField_63;
	// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable Microsoft.MixedReality.Toolkit.Input.PokePointer::closestProximityTouchable
	BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * ___closestProximityTouchable_64;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PokePointer::currentTouchableObjectDown
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___currentTouchableObjectDown_65;

public:
	inline static int32_t get_offset_of_touchableDistance_53() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___touchableDistance_53)); }
	inline float get_touchableDistance_53() const { return ___touchableDistance_53; }
	inline float* get_address_of_touchableDistance_53() { return &___touchableDistance_53; }
	inline void set_touchableDistance_53(float value)
	{
		___touchableDistance_53 = value;
	}

	inline static int32_t get_offset_of_sourcePoseOffset_54() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___sourcePoseOffset_54)); }
	inline float get_sourcePoseOffset_54() const { return ___sourcePoseOffset_54; }
	inline float* get_address_of_sourcePoseOffset_54() { return &___sourcePoseOffset_54; }
	inline void set_sourcePoseOffset_54(float value)
	{
		___sourcePoseOffset_54 = value;
	}

	inline static int32_t get_offset_of_sceneQueryBufferSize_55() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___sceneQueryBufferSize_55)); }
	inline int32_t get_sceneQueryBufferSize_55() const { return ___sceneQueryBufferSize_55; }
	inline int32_t* get_address_of_sceneQueryBufferSize_55() { return &___sceneQueryBufferSize_55; }
	inline void set_sceneQueryBufferSize_55(int32_t value)
	{
		___sceneQueryBufferSize_55 = value;
	}

	inline static int32_t get_offset_of_ignoreCollidersNotInFOV_56() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___ignoreCollidersNotInFOV_56)); }
	inline bool get_ignoreCollidersNotInFOV_56() const { return ___ignoreCollidersNotInFOV_56; }
	inline bool* get_address_of_ignoreCollidersNotInFOV_56() { return &___ignoreCollidersNotInFOV_56; }
	inline void set_ignoreCollidersNotInFOV_56(bool value)
	{
		___ignoreCollidersNotInFOV_56 = value;
	}

	inline static int32_t get_offset_of_pokeLayerMasks_57() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___pokeLayerMasks_57)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_pokeLayerMasks_57() const { return ___pokeLayerMasks_57; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_pokeLayerMasks_57() { return &___pokeLayerMasks_57; }
	inline void set_pokeLayerMasks_57(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___pokeLayerMasks_57 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pokeLayerMasks_57), (void*)value);
	}

	inline static int32_t get_offset_of_triggerInteraction_58() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___triggerInteraction_58)); }
	inline int32_t get_triggerInteraction_58() const { return ___triggerInteraction_58; }
	inline int32_t* get_address_of_triggerInteraction_58() { return &___triggerInteraction_58; }
	inline void set_triggerInteraction_58(int32_t value)
	{
		___triggerInteraction_58 = value;
	}

	inline static int32_t get_offset_of_queryBuffer_59() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___queryBuffer_59)); }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* get_queryBuffer_59() const { return ___queryBuffer_59; }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252** get_address_of_queryBuffer_59() { return &___queryBuffer_59; }
	inline void set_queryBuffer_59(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* value)
	{
		___queryBuffer_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBuffer_59), (void*)value);
	}

	inline static int32_t get_offset_of_closestDistance_60() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___closestDistance_60)); }
	inline float get_closestDistance_60() const { return ___closestDistance_60; }
	inline float* get_address_of_closestDistance_60() { return &___closestDistance_60; }
	inline void set_closestDistance_60(float value)
	{
		___closestDistance_60 = value;
	}

	inline static int32_t get_offset_of_closestNormal_61() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___closestNormal_61)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_closestNormal_61() const { return ___closestNormal_61; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_closestNormal_61() { return &___closestNormal_61; }
	inline void set_closestNormal_61(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___closestNormal_61 = value;
	}

	inline static int32_t get_offset_of_endPoint_62() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___endPoint_62)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_endPoint_62() const { return ___endPoint_62; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_endPoint_62() { return &___endPoint_62; }
	inline void set_endPoint_62(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___endPoint_62 = value;
	}

	inline static int32_t get_offset_of_U3CPreviousPositionU3Ek__BackingField_63() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___U3CPreviousPositionU3Ek__BackingField_63)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPreviousPositionU3Ek__BackingField_63() const { return ___U3CPreviousPositionU3Ek__BackingField_63; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPreviousPositionU3Ek__BackingField_63() { return &___U3CPreviousPositionU3Ek__BackingField_63; }
	inline void set_U3CPreviousPositionU3Ek__BackingField_63(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPreviousPositionU3Ek__BackingField_63 = value;
	}

	inline static int32_t get_offset_of_closestProximityTouchable_64() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___closestProximityTouchable_64)); }
	inline BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * get_closestProximityTouchable_64() const { return ___closestProximityTouchable_64; }
	inline BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** get_address_of_closestProximityTouchable_64() { return &___closestProximityTouchable_64; }
	inline void set_closestProximityTouchable_64(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * value)
	{
		___closestProximityTouchable_64 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___closestProximityTouchable_64), (void*)value);
	}

	inline static int32_t get_offset_of_currentTouchableObjectDown_65() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___currentTouchableObjectDown_65)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_currentTouchableObjectDown_65() const { return ___currentTouchableObjectDown_65; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_currentTouchableObjectDown_65() { return &___currentTouchableObjectDown_65; }
	inline void set_currentTouchableObjectDown_65(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___currentTouchableObjectDown_65 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentTouchableObjectDown_65), (void*)value);
	}
};

struct PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_66;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::FindClosestTouchableForLayerMaskPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___FindClosestTouchableForLayerMaskPerfMarker_67;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_68;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPreCurrentPointerTargetChangePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreCurrentPointerTargetChangePerfMarker_69;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryRaisePokeDownPerfMarker_70;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryRaisePokeUpPerfMarker_71;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::RaiseTouchUpdatedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaiseTouchUpdatedPerfMarker_72;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::IsObjectPartOfTouchablePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___IsObjectPartOfTouchablePerfMarker_73;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_74;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceDetectedPerfMarker_75;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_66() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnPreSceneQueryPerfMarker_66)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_66() const { return ___OnPreSceneQueryPerfMarker_66; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_66() { return &___OnPreSceneQueryPerfMarker_66; }
	inline void set_OnPreSceneQueryPerfMarker_66(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_66 = value;
	}

	inline static int32_t get_offset_of_FindClosestTouchableForLayerMaskPerfMarker_67() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___FindClosestTouchableForLayerMaskPerfMarker_67)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_FindClosestTouchableForLayerMaskPerfMarker_67() const { return ___FindClosestTouchableForLayerMaskPerfMarker_67; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_FindClosestTouchableForLayerMaskPerfMarker_67() { return &___FindClosestTouchableForLayerMaskPerfMarker_67; }
	inline void set_FindClosestTouchableForLayerMaskPerfMarker_67(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___FindClosestTouchableForLayerMaskPerfMarker_67 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_68() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnPostSceneQueryPerfMarker_68)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_68() const { return ___OnPostSceneQueryPerfMarker_68; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_68() { return &___OnPostSceneQueryPerfMarker_68; }
	inline void set_OnPostSceneQueryPerfMarker_68(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_68 = value;
	}

	inline static int32_t get_offset_of_OnPreCurrentPointerTargetChangePerfMarker_69() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnPreCurrentPointerTargetChangePerfMarker_69)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreCurrentPointerTargetChangePerfMarker_69() const { return ___OnPreCurrentPointerTargetChangePerfMarker_69; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreCurrentPointerTargetChangePerfMarker_69() { return &___OnPreCurrentPointerTargetChangePerfMarker_69; }
	inline void set_OnPreCurrentPointerTargetChangePerfMarker_69(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreCurrentPointerTargetChangePerfMarker_69 = value;
	}

	inline static int32_t get_offset_of_TryRaisePokeDownPerfMarker_70() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___TryRaisePokeDownPerfMarker_70)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryRaisePokeDownPerfMarker_70() const { return ___TryRaisePokeDownPerfMarker_70; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryRaisePokeDownPerfMarker_70() { return &___TryRaisePokeDownPerfMarker_70; }
	inline void set_TryRaisePokeDownPerfMarker_70(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryRaisePokeDownPerfMarker_70 = value;
	}

	inline static int32_t get_offset_of_TryRaisePokeUpPerfMarker_71() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___TryRaisePokeUpPerfMarker_71)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryRaisePokeUpPerfMarker_71() const { return ___TryRaisePokeUpPerfMarker_71; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryRaisePokeUpPerfMarker_71() { return &___TryRaisePokeUpPerfMarker_71; }
	inline void set_TryRaisePokeUpPerfMarker_71(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryRaisePokeUpPerfMarker_71 = value;
	}

	inline static int32_t get_offset_of_RaiseTouchUpdatedPerfMarker_72() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___RaiseTouchUpdatedPerfMarker_72)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaiseTouchUpdatedPerfMarker_72() const { return ___RaiseTouchUpdatedPerfMarker_72; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaiseTouchUpdatedPerfMarker_72() { return &___RaiseTouchUpdatedPerfMarker_72; }
	inline void set_RaiseTouchUpdatedPerfMarker_72(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaiseTouchUpdatedPerfMarker_72 = value;
	}

	inline static int32_t get_offset_of_IsObjectPartOfTouchablePerfMarker_73() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___IsObjectPartOfTouchablePerfMarker_73)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_IsObjectPartOfTouchablePerfMarker_73() const { return ___IsObjectPartOfTouchablePerfMarker_73; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_IsObjectPartOfTouchablePerfMarker_73() { return &___IsObjectPartOfTouchablePerfMarker_73; }
	inline void set_IsObjectPartOfTouchablePerfMarker_73(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___IsObjectPartOfTouchablePerfMarker_73 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_74() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnSourceLostPerfMarker_74)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_74() const { return ___OnSourceLostPerfMarker_74; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_74() { return &___OnSourceLostPerfMarker_74; }
	inline void set_OnSourceLostPerfMarker_74(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_74 = value;
	}

	inline static int32_t get_offset_of_OnSourceDetectedPerfMarker_75() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnSourceDetectedPerfMarker_75)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceDetectedPerfMarker_75() const { return ___OnSourceDetectedPerfMarker_75; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceDetectedPerfMarker_75() { return &___OnSourceDetectedPerfMarker_75; }
	inline void set_OnSourceDetectedPerfMarker_75(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceDetectedPerfMarker_75 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpherePointer
struct SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.SpherePointer::raycastMode
	int32_t ___raycastMode_52;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::pullbackDistance
	float ___pullbackDistance_53;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectSectorAngle
	float ___nearObjectSectorAngle_54;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectMargin
	float ___nearObjectMargin_55;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectAxisLerp
	float ___nearObjectAxisLerp_56;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::nearObjectSmoothingFactor
	float ___nearObjectSmoothingFactor_57;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.SpherePointer::grabLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___grabLayerMasks_58;
	// UnityEngine.QueryTriggerInteraction Microsoft.MixedReality.Toolkit.Input.SpherePointer::triggerInteraction
	int32_t ___triggerInteraction_59;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.SpherePointer::sceneQueryBufferSize
	int32_t ___sceneQueryBufferSize_60;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::ignoreCollidersNotInFOV
	bool ___ignoreCollidersNotInFOV_61;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer/GraspPointPlacement Microsoft.MixedReality.Toolkit.Input.SpherePointer::graspPointPlacement
	int32_t ___graspPointPlacement_62;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo Microsoft.MixedReality.Toolkit.Input.SpherePointer::queryBufferNearObjectRadius
	SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * ___queryBufferNearObjectRadius_63;
	// Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo Microsoft.MixedReality.Toolkit.Input.SpherePointer::queryBufferInteractionRadius
	SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * ___queryBufferInteractionRadius_64;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.SpherePointer::hitObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitObject_66;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SpherePointer::hitPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPoint_67;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::hitDistance
	float ___hitDistance_68;

public:
	inline static int32_t get_offset_of_raycastMode_52() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___raycastMode_52)); }
	inline int32_t get_raycastMode_52() const { return ___raycastMode_52; }
	inline int32_t* get_address_of_raycastMode_52() { return &___raycastMode_52; }
	inline void set_raycastMode_52(int32_t value)
	{
		___raycastMode_52 = value;
	}

	inline static int32_t get_offset_of_pullbackDistance_53() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___pullbackDistance_53)); }
	inline float get_pullbackDistance_53() const { return ___pullbackDistance_53; }
	inline float* get_address_of_pullbackDistance_53() { return &___pullbackDistance_53; }
	inline void set_pullbackDistance_53(float value)
	{
		___pullbackDistance_53 = value;
	}

	inline static int32_t get_offset_of_nearObjectSectorAngle_54() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectSectorAngle_54)); }
	inline float get_nearObjectSectorAngle_54() const { return ___nearObjectSectorAngle_54; }
	inline float* get_address_of_nearObjectSectorAngle_54() { return &___nearObjectSectorAngle_54; }
	inline void set_nearObjectSectorAngle_54(float value)
	{
		___nearObjectSectorAngle_54 = value;
	}

	inline static int32_t get_offset_of_nearObjectMargin_55() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectMargin_55)); }
	inline float get_nearObjectMargin_55() const { return ___nearObjectMargin_55; }
	inline float* get_address_of_nearObjectMargin_55() { return &___nearObjectMargin_55; }
	inline void set_nearObjectMargin_55(float value)
	{
		___nearObjectMargin_55 = value;
	}

	inline static int32_t get_offset_of_nearObjectAxisLerp_56() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectAxisLerp_56)); }
	inline float get_nearObjectAxisLerp_56() const { return ___nearObjectAxisLerp_56; }
	inline float* get_address_of_nearObjectAxisLerp_56() { return &___nearObjectAxisLerp_56; }
	inline void set_nearObjectAxisLerp_56(float value)
	{
		___nearObjectAxisLerp_56 = value;
	}

	inline static int32_t get_offset_of_nearObjectSmoothingFactor_57() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___nearObjectSmoothingFactor_57)); }
	inline float get_nearObjectSmoothingFactor_57() const { return ___nearObjectSmoothingFactor_57; }
	inline float* get_address_of_nearObjectSmoothingFactor_57() { return &___nearObjectSmoothingFactor_57; }
	inline void set_nearObjectSmoothingFactor_57(float value)
	{
		___nearObjectSmoothingFactor_57 = value;
	}

	inline static int32_t get_offset_of_grabLayerMasks_58() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___grabLayerMasks_58)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_grabLayerMasks_58() const { return ___grabLayerMasks_58; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_grabLayerMasks_58() { return &___grabLayerMasks_58; }
	inline void set_grabLayerMasks_58(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___grabLayerMasks_58 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___grabLayerMasks_58), (void*)value);
	}

	inline static int32_t get_offset_of_triggerInteraction_59() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___triggerInteraction_59)); }
	inline int32_t get_triggerInteraction_59() const { return ___triggerInteraction_59; }
	inline int32_t* get_address_of_triggerInteraction_59() { return &___triggerInteraction_59; }
	inline void set_triggerInteraction_59(int32_t value)
	{
		___triggerInteraction_59 = value;
	}

	inline static int32_t get_offset_of_sceneQueryBufferSize_60() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___sceneQueryBufferSize_60)); }
	inline int32_t get_sceneQueryBufferSize_60() const { return ___sceneQueryBufferSize_60; }
	inline int32_t* get_address_of_sceneQueryBufferSize_60() { return &___sceneQueryBufferSize_60; }
	inline void set_sceneQueryBufferSize_60(int32_t value)
	{
		___sceneQueryBufferSize_60 = value;
	}

	inline static int32_t get_offset_of_ignoreCollidersNotInFOV_61() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___ignoreCollidersNotInFOV_61)); }
	inline bool get_ignoreCollidersNotInFOV_61() const { return ___ignoreCollidersNotInFOV_61; }
	inline bool* get_address_of_ignoreCollidersNotInFOV_61() { return &___ignoreCollidersNotInFOV_61; }
	inline void set_ignoreCollidersNotInFOV_61(bool value)
	{
		___ignoreCollidersNotInFOV_61 = value;
	}

	inline static int32_t get_offset_of_graspPointPlacement_62() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___graspPointPlacement_62)); }
	inline int32_t get_graspPointPlacement_62() const { return ___graspPointPlacement_62; }
	inline int32_t* get_address_of_graspPointPlacement_62() { return &___graspPointPlacement_62; }
	inline void set_graspPointPlacement_62(int32_t value)
	{
		___graspPointPlacement_62 = value;
	}

	inline static int32_t get_offset_of_queryBufferNearObjectRadius_63() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___queryBufferNearObjectRadius_63)); }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * get_queryBufferNearObjectRadius_63() const { return ___queryBufferNearObjectRadius_63; }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A ** get_address_of_queryBufferNearObjectRadius_63() { return &___queryBufferNearObjectRadius_63; }
	inline void set_queryBufferNearObjectRadius_63(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * value)
	{
		___queryBufferNearObjectRadius_63 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBufferNearObjectRadius_63), (void*)value);
	}

	inline static int32_t get_offset_of_queryBufferInteractionRadius_64() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___queryBufferInteractionRadius_64)); }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * get_queryBufferInteractionRadius_64() const { return ___queryBufferInteractionRadius_64; }
	inline SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A ** get_address_of_queryBufferInteractionRadius_64() { return &___queryBufferInteractionRadius_64; }
	inline void set_queryBufferInteractionRadius_64(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * value)
	{
		___queryBufferInteractionRadius_64 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBufferInteractionRadius_64), (void*)value);
	}

	inline static int32_t get_offset_of_hitObject_66() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___hitObject_66)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_hitObject_66() const { return ___hitObject_66; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_hitObject_66() { return &___hitObject_66; }
	inline void set_hitObject_66(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___hitObject_66 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hitObject_66), (void*)value);
	}

	inline static int32_t get_offset_of_hitPoint_67() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___hitPoint_67)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_hitPoint_67() const { return ___hitPoint_67; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_hitPoint_67() { return &___hitPoint_67; }
	inline void set_hitPoint_67(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___hitPoint_67 = value;
	}

	inline static int32_t get_offset_of_hitDistance_68() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C, ___hitDistance_68)); }
	inline float get_hitDistance_68() const { return ___hitDistance_68; }
	inline float* get_address_of_hitDistance_68() { return &___hitDistance_68; }
	inline void set_hitDistance_68(float value)
	{
		___hitDistance_68 = value;
	}
};

struct SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_65;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspPointPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetNearGraspPointPerfMarker_69;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspAxisPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetNearGraspAxisPerfMarker_70;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetDistanceToNearestSurfacePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetDistanceToNearestSurfacePerfMarker_71;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNormalToNearestSurfacePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetNormalToNearestSurfacePerfMarker_72;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_65() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___OnPreSceneQueryPerfMarker_65)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_65() const { return ___OnPreSceneQueryPerfMarker_65; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_65() { return &___OnPreSceneQueryPerfMarker_65; }
	inline void set_OnPreSceneQueryPerfMarker_65(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_65 = value;
	}

	inline static int32_t get_offset_of_TryGetNearGraspPointPerfMarker_69() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetNearGraspPointPerfMarker_69)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetNearGraspPointPerfMarker_69() const { return ___TryGetNearGraspPointPerfMarker_69; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetNearGraspPointPerfMarker_69() { return &___TryGetNearGraspPointPerfMarker_69; }
	inline void set_TryGetNearGraspPointPerfMarker_69(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetNearGraspPointPerfMarker_69 = value;
	}

	inline static int32_t get_offset_of_TryGetNearGraspAxisPerfMarker_70() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetNearGraspAxisPerfMarker_70)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetNearGraspAxisPerfMarker_70() const { return ___TryGetNearGraspAxisPerfMarker_70; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetNearGraspAxisPerfMarker_70() { return &___TryGetNearGraspAxisPerfMarker_70; }
	inline void set_TryGetNearGraspAxisPerfMarker_70(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetNearGraspAxisPerfMarker_70 = value;
	}

	inline static int32_t get_offset_of_TryGetDistanceToNearestSurfacePerfMarker_71() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetDistanceToNearestSurfacePerfMarker_71)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetDistanceToNearestSurfacePerfMarker_71() const { return ___TryGetDistanceToNearestSurfacePerfMarker_71; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetDistanceToNearestSurfacePerfMarker_71() { return &___TryGetDistanceToNearestSurfacePerfMarker_71; }
	inline void set_TryGetDistanceToNearestSurfacePerfMarker_71(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetDistanceToNearestSurfacePerfMarker_71 = value;
	}

	inline static int32_t get_offset_of_TryGetNormalToNearestSurfacePerfMarker_72() { return static_cast<int32_t>(offsetof(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields, ___TryGetNormalToNearestSurfacePerfMarker_72)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetNormalToNearestSurfacePerfMarker_72() const { return ___TryGetNormalToNearestSurfacePerfMarker_72; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetNormalToNearestSurfacePerfMarker_72() { return &___TryGetNormalToNearestSurfacePerfMarker_72; }
	inline void set_TryGetNormalToNearestSurfacePerfMarker_72(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetNormalToNearestSurfacePerfMarker_72 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.TouchPointer
struct TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.TouchPointer::isInteractionEnabled
	bool ___isInteractionEnabled_52;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.TouchPointer::fingerId
	int32_t ___fingerId_53;
	// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.TouchPointer::<TouchRay>k__BackingField
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___U3CTouchRayU3Ek__BackingField_54;

public:
	inline static int32_t get_offset_of_isInteractionEnabled_52() { return static_cast<int32_t>(offsetof(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F, ___isInteractionEnabled_52)); }
	inline bool get_isInteractionEnabled_52() const { return ___isInteractionEnabled_52; }
	inline bool* get_address_of_isInteractionEnabled_52() { return &___isInteractionEnabled_52; }
	inline void set_isInteractionEnabled_52(bool value)
	{
		___isInteractionEnabled_52 = value;
	}

	inline static int32_t get_offset_of_fingerId_53() { return static_cast<int32_t>(offsetof(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F, ___fingerId_53)); }
	inline int32_t get_fingerId_53() const { return ___fingerId_53; }
	inline int32_t* get_address_of_fingerId_53() { return &___fingerId_53; }
	inline void set_fingerId_53(int32_t value)
	{
		___fingerId_53 = value;
	}

	inline static int32_t get_offset_of_U3CTouchRayU3Ek__BackingField_54() { return static_cast<int32_t>(offsetof(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F, ___U3CTouchRayU3Ek__BackingField_54)); }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  get_U3CTouchRayU3Ek__BackingField_54() const { return ___U3CTouchRayU3Ek__BackingField_54; }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * get_address_of_U3CTouchRayU3Ek__BackingField_54() { return &___U3CTouchRayU3Ek__BackingField_54; }
	inline void set_U3CTouchRayU3Ek__BackingField_54(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  value)
	{
		___U3CTouchRayU3Ek__BackingField_54 = value;
	}
};

struct TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.TouchPointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_55;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.TouchPointer::OnSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceDetectedPerfMarker_56;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.TouchPointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_57;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_55() { return static_cast<int32_t>(offsetof(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields, ___OnPreSceneQueryPerfMarker_55)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_55() const { return ___OnPreSceneQueryPerfMarker_55; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_55() { return &___OnPreSceneQueryPerfMarker_55; }
	inline void set_OnPreSceneQueryPerfMarker_55(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_55 = value;
	}

	inline static int32_t get_offset_of_OnSourceDetectedPerfMarker_56() { return static_cast<int32_t>(offsetof(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields, ___OnSourceDetectedPerfMarker_56)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceDetectedPerfMarker_56() const { return ___OnSourceDetectedPerfMarker_56; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceDetectedPerfMarker_56() { return &___OnSourceDetectedPerfMarker_56; }
	inline void set_OnSourceDetectedPerfMarker_56(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceDetectedPerfMarker_56 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_57() { return static_cast<int32_t>(offsetof(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields, ___OnSourceLostPerfMarker_57)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_57() const { return ___OnSourceLostPerfMarker_57; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_57() { return &___OnSourceLostPerfMarker_57; }
	inline void set_OnSourceLostPerfMarker_57(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_57 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer
struct ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175  : public BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99
{
public:
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::lastMousePosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lastMousePosition_65;

public:
	inline static int32_t get_offset_of_lastMousePosition_65() { return static_cast<int32_t>(offsetof(ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175, ___lastMousePosition_65)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lastMousePosition_65() const { return ___lastMousePosition_65; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lastMousePosition_65() { return &___lastMousePosition_65; }
	inline void set_lastMousePosition_65(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lastMousePosition_65 = value;
	}
};

struct ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_66;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_66() { return static_cast<int32_t>(offsetof(ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_StaticFields, ___OnPreSceneQueryPerfMarker_66)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_66() const { return ___OnPreSceneQueryPerfMarker_66; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_66() { return &___OnPreSceneQueryPerfMarker_66; }
	inline void set_OnPreSceneQueryPerfMarker_66(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_66 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer
struct ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4  : public LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665
{
public:
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::lineMaterialSelected
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___lineMaterialSelected_66;
	// UnityEngine.Material Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::lineMaterialNoTarget
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___lineMaterialNoTarget_67;
	// Microsoft.MixedReality.Toolkit.Utilities.BezierInertia Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::inertia
	BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * ___inertia_68;
	// System.Single Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::startPointLerp
	float ___startPointLerp_69;
	// System.Single Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::endPointLerp
	float ___endPointLerp_70;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::wasSelectPressed
	bool ___wasSelectPressed_71;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::wasGrabPressed
	bool ___wasGrabPressed_72;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::lineRendererSelected
	BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * ___lineRendererSelected_73;
	// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::lineRendererNoTarget
	BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * ___lineRendererNoTarget_74;

public:
	inline static int32_t get_offset_of_lineMaterialSelected_66() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___lineMaterialSelected_66)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_lineMaterialSelected_66() const { return ___lineMaterialSelected_66; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_lineMaterialSelected_66() { return &___lineMaterialSelected_66; }
	inline void set_lineMaterialSelected_66(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___lineMaterialSelected_66 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineMaterialSelected_66), (void*)value);
	}

	inline static int32_t get_offset_of_lineMaterialNoTarget_67() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___lineMaterialNoTarget_67)); }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * get_lineMaterialNoTarget_67() const { return ___lineMaterialNoTarget_67; }
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** get_address_of_lineMaterialNoTarget_67() { return &___lineMaterialNoTarget_67; }
	inline void set_lineMaterialNoTarget_67(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		___lineMaterialNoTarget_67 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineMaterialNoTarget_67), (void*)value);
	}

	inline static int32_t get_offset_of_inertia_68() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___inertia_68)); }
	inline BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * get_inertia_68() const { return ___inertia_68; }
	inline BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 ** get_address_of_inertia_68() { return &___inertia_68; }
	inline void set_inertia_68(BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * value)
	{
		___inertia_68 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inertia_68), (void*)value);
	}

	inline static int32_t get_offset_of_startPointLerp_69() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___startPointLerp_69)); }
	inline float get_startPointLerp_69() const { return ___startPointLerp_69; }
	inline float* get_address_of_startPointLerp_69() { return &___startPointLerp_69; }
	inline void set_startPointLerp_69(float value)
	{
		___startPointLerp_69 = value;
	}

	inline static int32_t get_offset_of_endPointLerp_70() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___endPointLerp_70)); }
	inline float get_endPointLerp_70() const { return ___endPointLerp_70; }
	inline float* get_address_of_endPointLerp_70() { return &___endPointLerp_70; }
	inline void set_endPointLerp_70(float value)
	{
		___endPointLerp_70 = value;
	}

	inline static int32_t get_offset_of_wasSelectPressed_71() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___wasSelectPressed_71)); }
	inline bool get_wasSelectPressed_71() const { return ___wasSelectPressed_71; }
	inline bool* get_address_of_wasSelectPressed_71() { return &___wasSelectPressed_71; }
	inline void set_wasSelectPressed_71(bool value)
	{
		___wasSelectPressed_71 = value;
	}

	inline static int32_t get_offset_of_wasGrabPressed_72() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___wasGrabPressed_72)); }
	inline bool get_wasGrabPressed_72() const { return ___wasGrabPressed_72; }
	inline bool* get_address_of_wasGrabPressed_72() { return &___wasGrabPressed_72; }
	inline void set_wasGrabPressed_72(bool value)
	{
		___wasGrabPressed_72 = value;
	}

	inline static int32_t get_offset_of_lineRendererSelected_73() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___lineRendererSelected_73)); }
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * get_lineRendererSelected_73() const { return ___lineRendererSelected_73; }
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA ** get_address_of_lineRendererSelected_73() { return &___lineRendererSelected_73; }
	inline void set_lineRendererSelected_73(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * value)
	{
		___lineRendererSelected_73 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineRendererSelected_73), (void*)value);
	}

	inline static int32_t get_offset_of_lineRendererNoTarget_74() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4, ___lineRendererNoTarget_74)); }
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * get_lineRendererNoTarget_74() const { return ___lineRendererNoTarget_74; }
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA ** get_address_of_lineRendererNoTarget_74() { return &___lineRendererNoTarget_74; }
	inline void set_lineRendererNoTarget_74(BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * value)
	{
		___lineRendererNoTarget_74 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lineRendererNoTarget_74), (void*)value);
	}
};

struct ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_75;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::PreUpdateLineRenderersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___PreUpdateLineRenderersPerfMarker_76;

public:
	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_75() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields, ___OnPostSceneQueryPerfMarker_75)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_75() const { return ___OnPostSceneQueryPerfMarker_75; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_75() { return &___OnPostSceneQueryPerfMarker_75; }
	inline void set_OnPostSceneQueryPerfMarker_75(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_75 = value;
	}

	inline static int32_t get_offset_of_PreUpdateLineRenderersPerfMarker_76() { return static_cast<int32_t>(offsetof(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields, ___PreUpdateLineRenderersPerfMarker_76)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_PreUpdateLineRenderersPerfMarker_76() const { return ___PreUpdateLineRenderersPerfMarker_76; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_PreUpdateLineRenderersPerfMarker_76() { return &___PreUpdateLineRenderersPerfMarker_76; }
	inline void set_PreUpdateLineRenderersPerfMarker_76(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___PreUpdateLineRenderersPerfMarker_76 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum[]
struct ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4  m_Items[1];

public:
	inline ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___Name_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___CursorObject_2), (void*)NULL);
		#endif
	}
	inline ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___Name_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___CursorObject_2), (void*)NULL);
		#endif
	}
};
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  m_Items[1];

public:
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Collider[]
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * m_Items[1];

public:
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  m_Items[1];

public:
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		m_Items[index] = value;
	}
};
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[]
struct BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * m_Items[1];

public:
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse[]
struct KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  m_Items[1];

public:
	inline KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___keyword_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___response_1), (void*)NULL);
		#endif
	}
	inline KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___keyword_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___response_1), (void*)NULL);
		#endif
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum[]
struct SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  m_Items[1];

public:
	inline SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___Name_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___CursorSprite_2), (void*)NULL);
		#endif
	}
	inline SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___Name_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___CursorSprite_2), (void*)NULL);
		#endif
	}
};


// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::Invoke(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, RuntimeObject * ___arg00, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerUtils::TryGetPointerEndpoint<System.Object>(Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.InputSourceType,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerUtils_TryGetPointerEndpoint_TisRuntimeObject_m7F5A92DE8B77C7544441CA1EAC4883D9E88DE3F4_gshared (uint8_t ___handedness0, int32_t ___inputType1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___endPoint2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetPointerBehavior<System.Object>(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetPointerBehavior_TisRuntimeObject_mC1F196593381DD4B7DE966BD11ACDFAAF60527A0_gshared (int32_t ___pointerBehavior0, int32_t ___sourceType1, uint8_t ___handedness2, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133  HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.HashSet`1/Enumerator<System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.HashSet`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::SourcePoseDataUsable<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ControllerPoseSynchronizer_SourcePoseDataUsable_TisMixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_m64357EB618B8D575F56DFCEB1A24D4AFFD7C77EF_gshared (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * ___eventData0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::set_Item(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_set_Item_m170EE8032F70B49AF488710D5DFFDA72B55D10BE_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, int32_t ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::get_Item(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Dictionary_2_get_Item_m66785B4FC628737C58245AB189E4640B33EE218A_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, int32_t ___key0, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.UInt32>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_gshared (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, uint32_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.UInt32>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.UInt32>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Object>::get_InputData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_gshared_inline (InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_m3EF0DBAF5E4C36146DFEDFA38E652D8C27B7FDF3_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, int32_t ___key0, RuntimeObject ** ___value1, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<System.Object>(!!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared (RuntimeObject * ___original0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mB3D9D66F9CFB6CB7013F547768CAE89834974B8F_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, int32_t ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179  Dictionary_2_GetEnumerator_m5F710C711663AE8E1AE1EEE91E6D46BF979575A1_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.Int32Enum,System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0  Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAE_gshared_inline (Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Int32Enum,System.Object>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7A_gshared_inline (KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.Int32Enum,System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_mBDA3868EB5ADB3E1D9E3D6E1B20C359246A22C50_gshared (Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.Int32Enum,System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m3B65346F0D420DA4518E6D087BE8D996BDBB481E_gshared (Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Clear_mEFB0B6A3ECB40D6D0FE2D65375FD6F31A9443041_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Single>::get_Item(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Dictionary_2_get_Item_m3F73D1BB1092F320697F39300C6998000C4F5EF3_gshared (Dictionary_2_t4EE284C45B1CEC7BE865F08F7BD7C0776765B88B * __this, int32_t ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Single>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_mEF7D2082B443E236BBF17B9EC0944E07B8F7F25B_gshared (Dictionary_2_t4EE284C45B1CEC7BE865F08F7BD7C0776765B88B * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Single>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mA44C83BACDFE9BE40128C19AC85CA48C59C8ADF7_gshared (Dictionary_2_t4EE284C45B1CEC7BE865F08F7BD7C0776765B88B * __this, int32_t ___key0, float ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m80B728B0F4A8176CF1F62C2768D31E6F7838B232_gshared (Dictionary_2_t0D7F3A50EB302696E4E5A19D582D99A8C7F70060 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<System.Object>(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Object>::ContainsKey(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_ContainsKey_m4EBC00E16E83DA33851A551757D2B7332D5756B9_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mC741BBB0A647C814227953DB9B23CB1BDF571C5B_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::set_Item(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_set_Item_m466D001F105E25DEB5C9BCB17837EE92A27FDE93_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.Object,System.Object>::get_Item(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Dictionary_2_get_Item_m6625C3BA931A6EE5D6DB46B9E743B40AAA30010B_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Object>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_m3455807C552312C60038DF52EF328C3687442DE3_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, RuntimeObject ** ___value1, const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse>()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_gshared_inline (const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m2C7E51568033239B506E15E7804A0B8658246498_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum>()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_gshared_inline (const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponentInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponentInChildren_TisRuntimeObject_m2094C39A775FDD39B5FB9B5A77E988F3482DC46B_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);

// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_OnEnable_m99AC865286A0229699D1A68C08F7E49043BB4858 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor_OnCursorStateChange_mB3E67F6CCF7D497558679F79677E809536D27FB4 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, int32_t ___state0, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::GetChild(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_GetChild_mC86B9B61E4EC086A571B09EA7A33FFBF50DF52D3 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, bool ___value0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Transform::get_childCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Transform_get_childCount_m7665D779DCDB6B175FB52A254276CDF0C384A724 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22 (BaseCursor_t52FA3ECFD57A151979D694E8B4AC9C725C8156A8 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51 (RuntimeObject * ___message0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___context1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem Microsoft.MixedReality.Toolkit.CoreServices::get_InputSystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8 (const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.InputActionEventPair::get_InputAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline (InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::op_Equality(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F (MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___left0, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___right1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_MixedRealityInputAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.InputActionEventPair::get_UnityEvent()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_inline (InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59 (BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>::Invoke(!0)
inline void UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39 (UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C *, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 *, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27 (PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData>::.ctor()
inline void UnityEvent_1__ctor_mB363ED1BADDD555B67FB52330A7D2E90801696A7 (UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t9172D3AC0E820F74303644F6903F45EC20B7909C *, const RuntimeMethod*))UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerUtils::TryGetPointerEndpoint<Microsoft.MixedReality.Toolkit.Input.LinePointer>(Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.InputSourceType,UnityEngine.Vector3&)
inline bool PointerUtils_TryGetPointerEndpoint_TisLinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_mF2DA95AABCC4CEA97E82F91EFBDE70B4B681CFDC (uint8_t ___handedness0, int32_t ___inputType1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___endPoint2, const RuntimeMethod* method)
{
	return ((  bool (*) (uint8_t, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *, const RuntimeMethod*))PointerUtils_TryGetPointerEndpoint_TisRuntimeObject_m7F5A92DE8B77C7544441CA1EAC4883D9E88DE3F4_gshared)(___handedness0, ___inputType1, ___endPoint2, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetPointerBehavior<Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer>(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
inline void PointerUtils_SetPointerBehavior_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_m8E1ADBA8CA0E9AA6B4047030A52A1A371AAA0200 (int32_t ___pointerBehavior0, int32_t ___sourceType1, uint8_t ___handedness2, const RuntimeMethod* method)
{
	((  void (*) (int32_t, int32_t, uint8_t, const RuntimeMethod*))PointerUtils_SetPointerBehavior_TisRuntimeObject_mC1F196593381DD4B7DE966BD11ACDFAAF60527A0_gshared)(___pointerBehavior0, ___sourceType1, ___handedness2, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetPointerBehavior<Microsoft.MixedReality.Toolkit.Input.SpherePointer>(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
inline void PointerUtils_SetPointerBehavior_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mD952FCD76DAF0A99AE9108118B23585F64AC25C4 (int32_t ___pointerBehavior0, int32_t ___sourceType1, uint8_t ___handedness2, const RuntimeMethod* method)
{
	((  void (*) (int32_t, int32_t, uint8_t, const RuntimeMethod*))PointerUtils_SetPointerBehavior_TisRuntimeObject_mC1F196593381DD4B7DE966BD11ACDFAAF60527A0_gshared)(___pointerBehavior0, ___sourceType1, ___handedness2, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetPointerBehavior<Microsoft.MixedReality.Toolkit.Input.PokePointer>(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Input.InputSourceType,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
inline void PointerUtils_SetPointerBehavior_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_m0AC3ED302E4AE0A8F9E1B7EE5DACB5C48020E472 (int32_t ___pointerBehavior0, int32_t ___sourceType1, uint8_t ___handedness2, const RuntimeMethod* method)
{
	((  void (*) (int32_t, int32_t, uint8_t, const RuntimeMethod*))PointerUtils_SetPointerBehavior_TisRuntimeObject_mC1F196593381DD4B7DE966BD11ACDFAAF60527A0_gshared)(___pointerBehavior0, ___sourceType1, ___handedness2, method);
}
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// System.Array System.Enum::GetValues(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeArray * Enum_GetValues_m20F5C0B826344A499B1C23BB7A3B532017F0F30C (Type_t * ___enumType0, const RuntimeMethod* method);
// System.Collections.IEnumerator System.Array::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Array_GetEnumerator_m3BD9ACCA9512DA3687C8369BF999BA2916F0EA15 (RuntimeArray * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::WarnAboutSettingCustomPointerBehaviors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7 (const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogWarning(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Int32 System.Environment::get_CurrentManagedThreadId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Environment_get_CurrentManagedThreadId_m0E897C88355903220B1EC214832F5E815D7C13D1 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>m__Finally1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::GetEnumerator()
inline Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE (HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  (*) (HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F *, const RuntimeMethod*))HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared)(__this, method);
}
// !0 System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::get_Current()
inline RuntimeObject* Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_inline (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::MoveNext()
inline bool Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327 (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::Dispose()
inline void Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498 (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared)(__this, method);
}
// System.Void System.NotSupportedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33 (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * __this, const RuntimeMethod* method);
// System.Collections.Generic.IEnumerator`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.Collections.Generic.IEnumerable<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>.GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Max(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65 (float ___a0, float ___b1, const RuntimeMethod* method);
// System.Int32 UnityEngine.Mathf::Max(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Mathf_Max_mBDE4C6F1883EE3215CD7AE62550B2AC90592BC3F (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BaseControllerPointer_get_IsInteractionEnabled_m9F18E5E5A529EC82BA41F7D71E069E96D61F4C21 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// Unity.Profiling.ProfilerMarker/AutoScope Unity.Profiling.ProfilerMarker::Auto()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::set_Rays(Microsoft.MixedReality.Toolkit.Physics.RayStep[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::FindClosestTouchableForLayerMask(UnityEngine.LayerMask,Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable&,System.Single&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___layerMask0, BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** ___closest1, float* ___closestDistance2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___closestNormal3, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839 (float ___d0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.RayStep::UpdateRayStep(UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___terminus1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::IsObjectPartOfTouchable(UnityEngine.GameObject,Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___targetObject0, BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * ___touchable1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::Dispose()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Int32 UnityEngine.LayerMask::op_Implicit(UnityEngine.LayerMask)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t LayerMask_op_Implicit_m2AFFC7F931005437E8F356C953F439829AF4CFA5 (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___mask0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Physics::OverlapSphereNonAlloc(UnityEngine.Vector3,System.Single,UnityEngine.Collider[],System.Int32,UnityEngine.QueryTriggerInteraction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Physics_OverlapSphereNonAlloc_mE01FE11B81FB91430A8A66A60E7CBC1F2B38BD5E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, float ___radius1, ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* ___results2, int32_t ___layerMask3, int32_t ___queryTriggerInteraction4, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA (String_t* ___format0, RuntimeObject * ___arg01, const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Utilities.CameraCache::get_Main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554 (const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable>()
inline BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * Component_GetComponent_TisBaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03_m92609490C15DBE5DF1BF1D874DC3CA4ABFF0BC89 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Boolean UnityEngine.Object::op_Implicit(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___exists0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::get_IgnoreCollidersNotInFOV()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.CameraFOVChecker::IsInFOVCached(UnityEngine.Camera,UnityEngine.Collider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool CameraFOVChecker_IsInFOVCached_m5805DB20DD2C94B684752ADB5ED145262147C795 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * ___cam0, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___myCollider1, const RuntimeMethod* method);
// System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI> Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI::get_Instances()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586_inline (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.GameObjectExtensions::IsInLayerMask(UnityEngine.GameObject,UnityEngine.LayerMask)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GameObjectExtensions_IsInLayerMask_m4C2006CFE6548FEA33CE37F2AFAC1B9CAE861C47 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___layerMask1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_OnPostSceneQuery_m81D5B744DA4836BD0A7476D37141F0F0864C3FBF (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Result()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Point()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::get_DebounceThreshold()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_inline (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::set_PreviousPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.TouchableEventType Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::get_EventsToReceive()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Handedness()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772 (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_InputSourceParent()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::RaiseTouchUpdated(UnityEngine.GameObject,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___targetObject0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___touchPosition1, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC (bool ___condition0, String_t* ___message1, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E (bool ___condition0, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Transform::IsChildOf(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_OnSourceLost_mACE60EBAC1FF6EEC9C6815276505A2F709142395 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer_OnSourceDetected_m19DAD7BE24CF3CE5CEFAF1DC8E039AA09C88C08B (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ControllerPoseSynchronizer_OnSourcePoseChanged_m710987366AD5B3E0C121BD86E0F701A83DE0E548 (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * ___eventData0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::SourcePoseDataUsable<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<T>)
inline bool ControllerPoseSynchronizer_SourcePoseDataUsable_TisMixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_m64357EB618B8D575F56DFCEB1A24D4AFFD7C77EF (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 * __this, SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * ___eventData0, const RuntimeMethod* method)
{
	return ((  bool (*) (ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064 *, SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 *, const RuntimeMethod*))ControllerPoseSynchronizer_SourcePoseDataUsable_TisMixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_m64357EB618B8D575F56DFCEB1A24D4AFFD7C77EF_gshared)(__this, ___eventData0, method);
}
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_OnEnable_m76A38FA289173B6CA59393DB0A8CD8AC2AA5354F (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_green()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0 (const RuntimeMethod* method);
// System.Void UnityEngine.Gizmos::set_color(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Gizmos_set_color_mFA6C199DF05FF557AEF662222CA60EC25DF54F28 (Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Gizmos::DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Gizmos_DrawLine_m9515D59D2536571F4906A3C54E613A3986DFD892 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___from0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___to1, const RuntimeMethod* method);
// UnityEngine.LayerMask UnityEngine.LayerMask::op_Implicit(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300 (int32_t ___intVal0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer__ctor_m8374A8CF3D902194835061AD6EC89AAE3FA48071 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::.ctor(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Equality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_UnaryNegation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::LookRotation(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upwards1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Inverse(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, const RuntimeMethod* method);
// UnityEngine.SkinnedMeshRenderer Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_HandRenderer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_inline (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Renderer::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_set_enabled_m0933766657F2685BAAE3340B0A984C0E63925303 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::set_Item(!0,!1)
inline void Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940 (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, int32_t ___key0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, int32_t, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))Dictionary_2_set_Item_m170EE8032F70B49AF488710D5DFFDA72B55D10BE_gshared)(__this, ___key0, ___value1, method);
}
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::RetrieveChild(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, int32_t ___parentJoint0, const RuntimeMethod* method);
// System.Void UnityEngine.Material::.ctor(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material__ctor_m0171C6D4D3FD04D58C70808F255DBA67D0ED2BDE (Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___source0, const RuntimeMethod* method);
// System.Void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_set_sharedMaterial_mC94A354D9B0FCA081754A7CB51AEE5A9AD3946A3 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::get_Item(!0)
inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205 (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, int32_t ___key0, const RuntimeMethod* method)
{
	return ((  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, int32_t, const RuntimeMethod*))Dictionary_2_get_Item_m66785B4FC628737C58245AB189E4640B33EE218A_gshared)(__this, ___key0, method);
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.UInt32>::.ctor(!0)
inline void Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, uint32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, uint32_t, const RuntimeMethod*))Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_gshared)(__this, ___value0, method);
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_SourceId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<System.UInt32>::GetValueOrDefault()
inline uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	return ((  uint32_t (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline)(__this, method);
}
// System.Boolean System.Nullable`1<System.UInt32>::get_HasValue()
inline bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, const RuntimeMethod*))Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline)(__this, method);
}
// System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___obj0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_InputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::get_Handedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_HandTrackingProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * MixedRealityInputSystemProfile_get_HandTrackingProfile_mEF5113D36A521267A4856F4D18EF4471A739829B (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::get_EnableHandJointVisualization()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityHandTrackingProfile_get_EnableHandJointVisualization_m8DCFBD402AD291564268FA049BD438D45A7D6C0D (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>::get_InputData()
inline RuntimeObject* InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline (InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E *, const RuntimeMethod*))InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_mF8B5C93F97F75DEDAAEE6A102E0E0A4246FCC25E (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, int32_t ___key0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, int32_t, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA **, const RuntimeMethod*))Dictionary_2_TryGetValue_m3EF0DBAF5E4C36146DFEDFA38E652D8C27B7FDF3_gshared)(__this, ___key0, ___value1, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::get_PalmJointPrefab()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DE_inline (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::get_FingerTipPrefab()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3_inline (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::get_JointPrefab()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903_inline (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<UnityEngine.GameObject>(!!0)
inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___original0, const RuntimeMethod* method)
{
	return ((  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared)(___original0, method);
}
// System.Void UnityEngine.GameObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mA4DFA8F4471418C248E95B55070665EF344B4B2D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Void UnityEngine.Object::set_name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_parent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::Add(!0,!1)
inline void Dictionary_2_Add_m4CFA57209EE0914F9303FF47D0B03EA36A906E7C (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, int32_t ___key0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, int32_t, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))Dictionary_2_Add_mB3D9D66F9CFB6CB7013F547768CAE89834974B8F_gshared)(__this, ___key0, ___value1, method);
}
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::GetEnumerator()
inline Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56  Dictionary_2_GetEnumerator_mD7E370735C5EA2BBCF7ACD55D3830E4DE58EB06D (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56  (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, const RuntimeMethod*))Dictionary_2_GetEnumerator_m5F710C711663AE8E1AE1EEE91E6D46BF979575A1_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::get_Current()
inline KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  Enumerator_get_Current_m6AC729407154418031B1B58A3AD5839EBAEB7644_inline (Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  (*) (Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 *, const RuntimeMethod*))Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAE_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::get_Value()
inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * KeyValuePair_2_get_Value_m927BFC1204A89B72DBCB89019A1E7E60B82D3E0F_inline (KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23 * __this, const RuntimeMethod* method)
{
	return ((  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * (*) (KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23 *, const RuntimeMethod*))KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7A_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::MoveNext()
inline bool Enumerator_MoveNext_m195BA60B00623B8FDDF169CC39CF709AE2F3BC84 (Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 *, const RuntimeMethod*))Enumerator_MoveNext_mBDA3868EB5ADB3E1D9E3D6E1B20C359246A22C50_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::Dispose()
inline void Enumerator_Dispose_m01ADE188221C9709AC882B037FF64386273300C6 (Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 *, const RuntimeMethod*))Enumerator_Dispose_m3B65346F0D420DA4518E6D087BE8D996BDBB481E_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::Clear()
inline void Dictionary_2_Clear_mA0003A5CF7470458E93C46F79C1EBF76C20AEBD3 (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, const RuntimeMethod*))Dictionary_2_Clear_mEFB0B6A3ECB40D6D0FE2D65375FD6F31A9443041_gshared)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile::get_EnableHandMeshVisualization()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityHandTrackingProfile_get_EnableHandMeshVisualization_m5E904D4F73F9A4C34984D7A43C06369ECEA3995D (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_userBoneRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Reorientation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ScaleFingerTip(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>,UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * ___eventData0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___jointTransform1, int32_t ___fingerTipJoint2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boneRootPos3, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.HandPoseUtils::CalculateIndexPinch(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandPoseUtils_CalculateIndexPinch_m0843C671C639C5BE20A88B87A258715DED4AC545 (uint8_t ___handedness0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.HandPoseUtils::IndexFingerCurl(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandPoseUtils_IndexFingerCurl_mF1DCA1D1B8FF5E4EE2B4BEEEDE27DBE9FC1DD523 (uint8_t ___handedness0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.HandPoseUtils::MiddleFingerCurl(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandPoseUtils_MiddleFingerCurl_m5AC003AA8738923576D5DAB76303CB98FA868D64 (uint8_t ___handedness0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.HandPoseUtils::RingFingerCurl(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandPoseUtils_RingFingerCurl_mBBF3191936D7F1FC7D78EFC7300DEB4C29E46CFE (uint8_t ___handedness0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.HandPoseUtils::PinkyFingerCurl(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float HandPoseUtils_PinkyFingerCurl_mD2721032EE84E1ED31A8B2705DA519D8D3249992 (uint8_t ___handedness0, const RuntimeMethod* method);
// UnityEngine.Material UnityEngine.Renderer::get_sharedMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * Renderer_get_sharedMaterial_m2BE9FF3D269968F2E323AC60EFBBCC0B26E7E6F9 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Material::HasProperty(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Material_HasProperty_m8611FACA6F9D9B2B5C3E92B6D93D2D514B443512 (Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * __this, String_t* ___name0, const RuntimeMethod* method);
// System.Void UnityEngine.Material::SetFloat(System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material_SetFloat_m4B7D3FAA00D20BCB3C487E72B7E4B2691D5ECAD2 (Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * __this, String_t* ___name0, float ___value1, const RuntimeMethod* method);
// System.Void System.Exception::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Exception__ctor_m89BADFF36C3B170013878726E07729D51AA9FBE0 (Exception_t * __this, String_t* ___message0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_lossyScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Division(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::GetLargestComponentIndex(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointingVector0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>::get_Item(!0)
inline float Dictionary_2_get_Item_m3191532CB4E726DE98C33C4E7FD784203452B539 (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * __this, int32_t ___key0, const RuntimeMethod* method)
{
	return ((  float (*) (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE *, int32_t, const RuntimeMethod*))Dictionary_2_get_Item_m3F73D1BB1092F320697F39300C6998000C4F5EF3_gshared)(__this, ___key0, method);
}
// System.Void UnityEngine.Vector3::set_Item(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3_set_Item_m89FF112CEC0D9ED43F1C4FE01522C75394B30AE6 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, int32_t ___index0, float ___value1, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>::.ctor()
inline void Dictionary_2__ctor_m54B736E0BEA480FA9225CC5AC65BA751B0CB70A7 (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE *, const RuntimeMethod*))Dictionary_2__ctor_mEF7D2082B443E236BBF17B9EC0944E07B8F7F25B_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,System.Single>::Add(!0,!1)
inline void Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3 (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * __this, int32_t ___key0, float ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE *, int32_t, float, const RuntimeMethod*))Dictionary_2_Add_mA44C83BACDFE9BE40128C19AC85CA48C59C8ADF7_gshared)(__this, ___key0, ___value1, method);
}
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Transform>::.ctor()
inline void Dictionary_2__ctor_m344907F6AD8CF77075CF7FB231E09ADDAA4F1E72 (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *, const RuntimeMethod*))Dictionary_2__ctor_m80B728B0F4A8176CF1F62C2768D31E6F7838B232_gshared)(__this, method);
}
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Input::get_mousePosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53 (const RuntimeMethod* method);
// System.Int32 UnityEngine.Screen::get_width()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Screen_get_width_m8ECCEF7FF17395D1237BC0193D7A6640A3FEEAD3 (const RuntimeMethod* method);
// System.Int32 UnityEngine.Screen::get_height()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Screen_get_height_mF5B64EBC4CDE0EAAA5713C1452ED2CE475F25150 (const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___v0, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Subtraction(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Vector2::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::get_MovementThresholdToUnHide()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_inline (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method);
// UnityEngine.Ray UnityEngine.Camera::ScreenPointToRay(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  Camera_ScreenPointToRay_m27638E78502DB6D6D7113F81AF7C210773B828F3 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.RayStep::CopyRay(UnityEngine.Ray,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RayStep_CopyRay_mC78083BBF0A93F22A477DD547E3D552EB9D2FE29 (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___ray0, float ___rayLength1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::LookRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::SetVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMousePointer_SetVisibility_m2C5A3D32733170C1A50630E16E6DB10AA552AA35 (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, bool ___visible0, const RuntimeMethod* method);
// System.Void UnityEngine.Cursor::set_visible(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Cursor_set_visible_mDB51E60B3D7B14873A6F5FBE5E0A432D4A46C431 (bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMousePointer__ctor_m9826535EE189FA825A0267AB8C1757E9B7F809EC (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method);
// UnityEngine.Material Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::get_LineMaterial()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512B_inline (MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseControllerPointer_Start_m6CAD8F22CEB4943D5E996A8730C40DCAF90F9D0F (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<Microsoft.MixedReality.Toolkit.Utilities.BezierInertia>(UnityEngine.GameObject)
inline BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * ComponentExtensions_EnsureComponent_TisBezierInertia_t247BB6E8220F78509717A5D550548037C274B166_m7B6C9D7A0767E1ABC9BF172197761DBA2036190C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method)
{
	return ((  BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared)(___gameObject0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider Microsoft.MixedReality.Toolkit.Input.LinePointer::get_LineBase()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Behaviour::get_enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Behaviour_get_enabled_mAA0C9ED5A3D1589C1C8AA22636543528DB353CFB (Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineRenderer[] Microsoft.MixedReality.Toolkit.Input.LinePointer::get_LineRenderers()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityLineRenderer::set_LineMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42_inline (MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::PreUpdateLineRenderers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsFocusLocked()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Behaviour::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B (Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8 * __this, bool ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_DefaultPointerExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseControllerPointer_get_DefaultPointerExtent_mFEEB522B2CE35341FFBA375F71D8D5D93E42B653 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_RayDistance()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::get_FirstPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BaseMixedRealityLineDataProvider_get_FirstPoint_m54C775438EFAFA94BC0C347262DA3271428F2F8A (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Lerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, float ___t2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::SetPoint(System.Int32,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_SetPoint_m4A11B8D096EA14D61FEC8D7E2768456F463A0480 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, int32_t ___pointIndex0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::get_LastPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BaseMixedRealityLineDataProvider_get_LastPoint_m2EC444A7457AEC7FC55FDEFCE81AA6F3527A171F (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.LinePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8 (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputHandler::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputHandler_Start_mCA77A9C29C7AF11676971F429ABF0E2D3BC04EBE (BaseInputHandler_tEB6EEA998731632BA2DCDE73E49A8C794E99CA35 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Object::DontDestroyOnLoad(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___target0, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse::get_Keyword()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3C_inline (KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A * __this, const RuntimeMethod* method);
// System.String System.String::ToLower()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8 (String_t* __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * __this, String_t* ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *, String_t*, const RuntimeMethod*))Dictionary_2_ContainsKey_m4EBC00E16E83DA33851A551757D2B7332D5756B9_gshared)(__this, ___key0, method);
}
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse::get_Response()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27_inline (KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>::Add(!0,!1)
inline void Dictionary_2_Add_m91224B9F05BAC1F74036CC7C7F410A09B0342571 (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * __this, String_t* ___key0, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *, String_t*, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *, const RuntimeMethod*))Dictionary_2_Add_mC741BBB0A647C814227953DB9B23CB1BDF571C5B_gshared)(__this, ___key0, ___value1, method);
}
// System.Void UnityEngine.Events.UnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>::set_Item(!0,!1)
inline void Dictionary_2_set_Item_mEAF2152A0B717399053421137786D390F421F654 (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * __this, String_t* ___key0, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *, String_t*, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *, const RuntimeMethod*))Dictionary_2_set_Item_m466D001F105E25DEB5C9BCB17837EE92A27FDE93_gshared)(__this, ___key0, ___value1, method);
}
// !1 System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>::get_Item(!0)
inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * Dictionary_2_get_Item_mF33FB01DD22B2BA44D8F916CDE69E5A4813CA434 (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * __this, String_t* ___key0, const RuntimeMethod* method)
{
	return ((  UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * (*) (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *, String_t*, const RuntimeMethod*))Dictionary_2_get_Item_m6625C3BA931A6EE5D6DB46B9E743B40AAA30010B_gshared)(__this, ___key0, method);
}
// System.Void UnityEngine.Events.UnityEvent::AddListener(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_AddListener_m31973FDDC5BB0B2828AB6EF519EC4FD6563499C9 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___call0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::RemoveListener(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_RemoveListener_m26034605306E868B2E332675FCCBDA37CECBBA19 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___call0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_Command()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Keyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_m9851F753DF7DBCCD8B5F5925B2C39ED61B435A35 (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * __this, String_t* ___key0, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *, String_t*, UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F **, const RuntimeMethod*))Dictionary_2_TryGetValue_m3455807C552312C60038DF52EF328C3687442DE3_gshared)(__this, ___key0, ___value1, method);
}
// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::get_SpeechConfirmationTooltipPrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method);
// System.Boolean System.String::Equals(System.String,System.StringComparison)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_Equals_mB42D01789A129C548840C18E9065ACF9412F1F84 (String_t* __this, String_t* ___value0, int32_t ___comparisonType1, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip>(!!0)
inline SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * Object_Instantiate_TisSpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355_mA775CD76A9E97CA381DF830EEC6217DCFE808BC1 (SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * ___original0, const RuntimeMethod* method)
{
	return ((  SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * (*) (SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 *, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared)(___original0, method);
}
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse>()
inline KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_inline (const RuntimeMethod* method)
{
	return ((  KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* (*) (const RuntimeMethod*))Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_gshared_inline)(method);
}
// System.Void System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Events.UnityEvent>::.ctor()
inline void Dictionary_2__ctor_m95D1D183F16D34613D72DF94B2E5EA591AC0DB0B (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *, const RuntimeMethod*))Dictionary_2__ctor_m2C7E51568033239B506E15E7804A0B8658246498_gshared)(__this, method);
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectSectorAngle()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectRadius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_SphereCastRadius()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectMargin()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::get_ContainsGrabbable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::get_NearObjectDetected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_PullbackDistance()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::.ctor(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, int32_t ___bufferSize0, float ___radius1, float ___angle2, float ___minDistance3, float ___smoothingFactor4, bool ___ignoreBoundsHandles5, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspPoint(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___result0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspAxis(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___axis0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::TryUpdateQueryBufferForLayerMask(UnityEngine.LayerMask,UnityEngine.Vector3,UnityEngine.QueryTriggerInteraction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___layerMask0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition1, int32_t ___triggerInteraction2, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::HasValidGrabbable(UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAxis1, bool ___ignoreCollidersNotInFOV2, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_IgnoreCollidersNotInFOV()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::GetClosestValidGrabbable(UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAxis1, bool ___ignoreCollidersNotInFOV2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___hitPosition3, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPose_get_Forward_m8AC3F48E50D7917797E641BD9FBF7FB35074DC0E (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectAxisLerp()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Normal()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::IsColliderValidGrabbable(UnityEngine.Collider,System.Boolean,Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider0, bool ___ignoreCollidersNotInFOV1, NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** ___currentGrabbable2, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::IsColliderPositionValid(UnityEngine.Collider,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAxis2, float ___queryAngle3, float ___queryDistance4, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___closestPointToCollider5, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_sqrMagnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// UnityEngine.Bounds UnityEngine.Collider::get_bounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, const RuntimeMethod* method);
// UnityEngine.Matrix4x4 UnityEngine.Transform::get_localToWorldMatrix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  Transform_get_localToWorldMatrix_mBC86B8C7BA6F53DAB8E0120D77729166399A0EED (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.BoundsExtensions::Transform(UnityEngine.Bounds,UnityEngine.Matrix4x4)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  BoundsExtensions_Transform_mEAF553A8EA0C4D65B01787D819A1DFD6C56F40DC (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___bounds0, Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___transformMatrix1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.BoundsExtensions::Volume(UnityEngine.Bounds)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BoundsExtensions_Volume_m8FACD7D6ECCC2E4EECC04DD923CABE85072766B5 (Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___bounds0, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable>()
inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Boolean UnityEngine.MeshCollider::get_convex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MeshCollider_get_convex_mAA9801A31A512288CE0705E56596D836FC73E64A (MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Collider::ClosestPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Collider_ClosestPoint_mA3CF53B6EE9CEEDB3BF2BCCE19E511CA659672B7 (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Dot(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual>()
inline SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * Component_GetComponent_TisSpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_m2C4023D0F1D82C87B46A6C93FC6672F32B0755C9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::get_TetherVisualsEnabled()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_inline (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method);
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::get_TetherEndPoint()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_inline (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_one()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB (const RuntimeMethod* method);
// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::TRS(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  Matrix4x4_TRS_m5BB2EBA1152301BAC92FDC7F33ECA732BAE57990 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___q1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___s2, const RuntimeMethod* method);
// System.Int32 UnityEngine.GameObject::get_layer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Graphics::DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Graphics_DrawMesh_mC2A810882175BBFBD6984F9C723971E4A2A3271B (Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___mesh0, Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  ___matrix1, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___material2, int32_t ___layer3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::CheckInitialization()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.MixedRealityPlayspace::AddChild(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPlayspace_AddChild_mA137BA9496C5D73FC8DB4F4C2F3E7BD09BAAEBC4 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform0, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.SpherePointer>()
inline SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * Component_GetComponent_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mC2BB6693AFBB586B7F247B2C1B441EAB19060429 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::CheckAsset(System.Object,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, RuntimeObject * ___asset0, String_t* ___fieldname1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::set_TetherVisualsEnabled(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_inline (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, bool ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::GetGrabbedObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::set_FirstPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_set_FirstPoint_mC089D0A2B0C719699AD08F9DDC3D472C099650A8 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Object()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_PointLocalSpace()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseMixedRealityLineDataProvider::set_LastPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityLineDataProvider_set_LastPoint_m743B217D19D640DFEEE1BE06AAF643A0D616B2C9 (BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable>()
inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * GameObject_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m06D77325398A80EE1C356EEC55A0E058313CE2EF (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum>()
inline SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_inline (const RuntimeMethod* method)
{
	return ((  SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* (*) (const RuntimeMethod*))Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_gshared_inline)(method);
}
// !!0 UnityEngine.Component::GetComponentInChildren<UnityEngine.SpriteRenderer>()
inline SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * Component_GetComponentInChildren_TisSpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F_mAD0C39866683E6B19390CF583FDBE270C404CE48 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponentInChildren_TisRuntimeObject_m2094C39A775FDD39B5FB9B5A77E988F3482DC46B_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpriteCursor::SetCursorState(Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB (SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2 * __this, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  ___stateDatum0, const RuntimeMethod* method);
// System.Void UnityEngine.SpriteRenderer::set_sprite(UnityEngine.Sprite)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteRenderer_set_sprite_m9F5C8B2007AA03FAB66F0CB61260349DF1E28611 (SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * __this, Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.SpriteRenderer::set_color(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteRenderer_set_color_m0729526C86891ADD11611CD13A7A18B851355580 (SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * __this, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData>::Invoke(!0)
inline void UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40 (UnityEvent_1_t37F503D98B7CF110A224EE25F9BECB4CAA781E6A * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t37F503D98B7CF110A224EE25F9BECB4CAA781E6A *, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 *, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.TouchEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchEvent__ctor_mC2E786AB1DBA3775B3D14A309E38DAE5D9ACB85D (TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * __this, const RuntimeMethod* method);
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.TouchPointer::get_TouchRay()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PointerExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033 (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_RayStabilizer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Origin()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Direction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_origin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187 (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___start0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dir1, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___color2, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_yellow()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_yellow_mC8BD62CCC364EA5FC4273D4C2E116D0E2DE135AE (const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::.ctor(System.IntPtr)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_End(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A (intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.IntPtr Unity.Profiling.ProfilerMarker::Internal_Create(System.String,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370 (String_t* ___name0, uint16_t ___flags1, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_Begin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5 (intptr_t ___markerPtr0, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.ObjectCursor::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectCursor_OnEnable_mFBF82C88DC6E793B3E99B8766379D2A776CBBAF8 (ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectCursor_OnEnable_mFBF82C88DC6E793B3E99B8766379D2A776CBBAF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectCursor_OnEnable_mFBF82C88DC6E793B3E99B8766379D2A776CBBAF8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12207));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12208));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12209));
		// if (ParentTransform == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12210));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_ParentTransform_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12217));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12217));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12211));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12212));
		// ParentTransform = transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12213));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12218));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12218));
		__this->set_ParentTransform_26(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12214));
	}

IL_001f:
	{
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12215));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12219));
		BaseCursor_OnEnable_m99AC865286A0229699D1A68C08F7E49043BB4858(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12219));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12216));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ObjectCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectCursor_OnCursorStateChange_m36DB8454A4380350696E5641A2A543B26DCE2ED8 (ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2 * __this, int32_t ___state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectCursor_OnCursorStateChange_m36DB8454A4380350696E5641A2A543B26DCE2ED8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	int32_t V_3 = 0;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectCursor_OnCursorStateChange_m36DB8454A4380350696E5641A2A543B26DCE2ED8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12220));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12221));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12222));
		// base.OnCursorStateChange(state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12223));
		int32_t L_0 = ___state0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12249));
		BaseCursor_OnCursorStateChange_mB3E67F6CCF7D497558679F79677E809536D27FB4(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12249));
		// if (state != CursorStateEnum.Contextual)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12224));
		int32_t L_1 = ___state0;
		V_0 = (bool)((((int32_t)((((int32_t)L_1) == ((int32_t)6))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12225));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_009c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12226));
		// for (int i = 0; i < ParentTransform.childCount; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12227));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12228));
		goto IL_003a;
	}

IL_001c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12229));
		// ParentTransform.GetChild(i).gameObject.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12230));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_ParentTransform_26();
		int32_t L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12250));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_GetChild_mC86B9B61E4EC086A571B09EA7A33FFBF50DF52D3(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12250));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12251));
		NullCheck(L_5);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12252));
		NullCheck(L_6);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_6, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12252));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12231));
		// for (int i = 0; i < ParentTransform.childCount; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12232));
		int32_t L_7 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_7, (int32_t)1));
	}

IL_003a:
	{
		// for (int i = 0; i < ParentTransform.childCount; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12233));
		int32_t L_8 = V_1;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = __this->get_ParentTransform_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12253));
		NullCheck(L_9);
		int32_t L_10 = Transform_get_childCount_m7665D779DCDB6B175FB52A254276CDF0C384A724(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12253));
		V_2 = (bool)((((int32_t)L_8) < ((int32_t)L_10))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12234));
		bool L_11 = V_2;
		if (L_11)
		{
			goto IL_001c;
		}
	}
	{
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12235));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12236));
		goto IL_008a;
	}

IL_0050:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12237));
		// if (CursorStateData[i].CursorState == state)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12238));
		ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26* L_12 = __this->get_CursorStateData_25();
		int32_t L_13 = V_3;
		NullCheck(L_12);
		int32_t L_14 = ((L_12)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_13)))->get_CursorState_1();
		int32_t L_15 = ___state0;
		V_4 = (bool)((((int32_t)L_14) == ((int32_t)L_15))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12239));
		bool L_16 = V_4;
		if (!L_16)
		{
			goto IL_0085;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12240));
		// CursorStateData[i].CursorObject.SetActive(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12241));
		ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26* L_17 = __this->get_CursorStateData_25();
		int32_t L_18 = V_3;
		NullCheck(L_17);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = ((L_17)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_18)))->get_CursorObject_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12254));
		NullCheck(L_19);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_19, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12254));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12242));
	}

IL_0085:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12243));
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12244));
		int32_t L_20 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_20, (int32_t)1));
	}

IL_008a:
	{
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12245));
		int32_t L_21 = V_3;
		ObjectCursorDatumU5BU5D_tF9A3A51E5A4AA65BB2E851EFF265A4279431BC26* L_22 = __this->get_CursorStateData_25();
		NullCheck(L_22);
		V_5 = (bool)((((int32_t)L_21) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_22)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12246));
		bool L_23 = V_5;
		if (L_23)
		{
			goto IL_0050;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12247));
	}

IL_009c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12248));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ObjectCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectCursor__ctor_mE367EC2A75CEEA901AE35E56E82EBFE4D6522A48 (ObjectCursor_tBE79A93BDF6CFF9447055A6989A493FDFC6654C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectCursor__ctor_mE367EC2A75CEEA901AE35E56E82EBFE4D6522A48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectCursor__ctor_mE367EC2A75CEEA901AE35E56E82EBFE4D6522A48_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
IL2CPP_EXTERN_C void ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshal_pinvoke(const ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4& unmarshaled, ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_pinvoke& marshaled)
{
	Exception_t* ___CursorObject_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorObject' of type 'ObjectCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorObject_2Exception, NULL);
}
IL2CPP_EXTERN_C void ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshal_pinvoke_back(const ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_pinvoke& marshaled, ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4& unmarshaled)
{
	Exception_t* ___CursorObject_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorObject' of type 'ObjectCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorObject_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
IL2CPP_EXTERN_C void ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshal_pinvoke_cleanup(ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
IL2CPP_EXTERN_C void ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshal_com(const ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4& unmarshaled, ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_com& marshaled)
{
	Exception_t* ___CursorObject_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorObject' of type 'ObjectCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorObject_2Exception, NULL);
}
IL2CPP_EXTERN_C void ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshal_com_back(const ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_com& marshaled, ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4& unmarshaled)
{
	Exception_t* ___CursorObject_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorObject' of type 'ObjectCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorObject_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.ObjectCursor/ObjectCursorDatum
IL2CPP_EXTERN_C void ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshal_com_cleanup(ObjectCursorDatum_tF08FDD6DDDE37F58B529A36F1B866417796307D4_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_Awake_m27E00864520007608015CA366EAD482A3AB63D49 (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_Awake_m27E00864520007608015CA366EAD482A3AB63D49_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_Awake_m27E00864520007608015CA366EAD482A3AB63D49_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9567));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9568));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9569));
		// Debug.LogError("PointerClickHandler is deprecated. Use PointerHandler instead", this.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9570));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9572));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9572));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9573));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteral0724F0AFCBC3D048BEE26BA863183A81AD44E932, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9573));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9571));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_RegisterHandlers_m0398C36F72149FE1001F08B5F41F4C09743AA2D4 (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_RegisterHandlers_m0398C36F72149FE1001F08B5F41F4C09743AA2D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_RegisterHandlers_m0398C36F72149FE1001F08B5F41F4C09743AA2D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9574));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9575));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9576));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9577));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9579));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9579));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9580));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m8045547AED9E0A33D8E70DE66F076E2EE6E206DC_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9580));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9578));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_UnregisterHandlers_mEE8C80BE5BA0194C9C6BACBA8C73747F3501E72F (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_UnregisterHandlers_mEE8C80BE5BA0194C9C6BACBA8C73747F3501E72F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_UnregisterHandlers_mEE8C80BE5BA0194C9C6BACBA8C73747F3501E72F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9581));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9582));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9583));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9584));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9586));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9586));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9587));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m7DF6B444D35B11AACB65301352ED33F3F466774D_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9587));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9585));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_OnPointerUp_m787653E2F8C70E3057F447D5246867CA36C685AF (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_OnPointerUp_m787653E2F8C70E3057F447D5246867CA36C685AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_OnPointerUp_m787653E2F8C70E3057F447D5246867CA36C685AF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9588));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9589));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9590));
		// if (onPointerUpActionEvent.InputAction == MixedRealityInputAction.None) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9591));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_0 = __this->get_address_of_onPointerUpActionEvent_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9601));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9601));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9602));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9602));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9603));
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9603));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9592));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_001d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9593));
		// if (onPointerUpActionEvent.InputAction == MixedRealityInputAction.None) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9594));
		goto IL_004a;
	}

IL_001d:
	{
		// if (onPointerUpActionEvent.InputAction == eventData.MixedRealityInputAction)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9595));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_5 = __this->get_address_of_onPointerUpActionEvent_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9604));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_6 = InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9604));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9605));
		NullCheck(L_7);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9605));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9606));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_9 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_6, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9606));
		V_1 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9596));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9597));
		// onPointerUpActionEvent.UnityEvent.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9598));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_11 = __this->get_address_of_onPointerUpActionEvent_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9607));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_12 = InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9607));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9608));
		NullCheck(L_12);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9608));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9599));
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9600));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_OnPointerDown_m91AFE966B8EE3A3758368F53BF7C83CC4A21B792 (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_OnPointerDown_m91AFE966B8EE3A3758368F53BF7C83CC4A21B792_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_OnPointerDown_m91AFE966B8EE3A3758368F53BF7C83CC4A21B792_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9609));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9610));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9611));
		// if (onPointerDownActionEvent.InputAction == MixedRealityInputAction.None) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9612));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_0 = __this->get_address_of_onPointerDownActionEvent_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9622));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9622));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9623));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9623));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9624));
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9624));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9613));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_001d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9614));
		// if (onPointerDownActionEvent.InputAction == MixedRealityInputAction.None) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9615));
		goto IL_004a;
	}

IL_001d:
	{
		// if (onPointerDownActionEvent.InputAction == eventData.MixedRealityInputAction)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9616));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_5 = __this->get_address_of_onPointerDownActionEvent_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9625));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_6 = InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9625));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9626));
		NullCheck(L_7);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9626));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9627));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_9 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_6, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9627));
		V_1 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9617));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9618));
		// onPointerDownActionEvent.UnityEvent.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9619));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_11 = __this->get_address_of_onPointerDownActionEvent_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9628));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_12 = InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9628));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9629));
		NullCheck(L_12);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9629));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9620));
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9621));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_OnPointerDragged_m6575D136D65CAFBF543D238C5626410994D047DE (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_OnPointerDragged_m6575D136D65CAFBF543D238C5626410994D047DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_OnPointerDragged_m6575D136D65CAFBF543D238C5626410994D047DE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9630));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9631));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9632));
		// public void OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9633));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler_OnPointerClicked_m2CAAEB770DBBA0F723EFCA78B86BB4964DF907B1 (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler_OnPointerClicked_m2CAAEB770DBBA0F723EFCA78B86BB4964DF907B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler_OnPointerClicked_m2CAAEB770DBBA0F723EFCA78B86BB4964DF907B1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9634));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9635));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9636));
		// if (onPointerClickedActionEvent.InputAction == MixedRealityInputAction.None) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9637));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_0 = __this->get_address_of_onPointerClickedActionEvent_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9647));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9647));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9648));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9649));
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9649));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9638));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_001d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9639));
		// if (onPointerClickedActionEvent.InputAction == MixedRealityInputAction.None) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9640));
		goto IL_004a;
	}

IL_001d:
	{
		// if (onPointerClickedActionEvent.InputAction == eventData.MixedRealityInputAction)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9641));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_5 = __this->get_address_of_onPointerClickedActionEvent_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9650));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_6 = InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9650));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9651));
		NullCheck(L_7);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9651));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9652));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_9 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_6, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9652));
		V_1 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9642));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9643));
		// onPointerClickedActionEvent.UnityEvent.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9644));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_11 = __this->get_address_of_onPointerClickedActionEvent_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9653));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_12 = InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_inline((InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D *)L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9653));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9654));
		NullCheck(L_12);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9654));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9645));
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9646));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerClickHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerClickHandler__ctor_m4925D933547404B84E4C39D01D3DB4D49125007D (PointerClickHandler_tF71F4DF7A623AA01FC7CF2E811256F4C714BDA50 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerClickHandler__ctor_m4925D933547404B84E4C39D01D3DB4D49125007D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerClickHandler__ctor_m4925D933547404B84E4C39D01D3DB4D49125007D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9655));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9656));
	{
		// private InputActionEventPair onPointerUpActionEvent = default(InputActionEventPair);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9657));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_0 = __this->get_address_of_onPointerUpActionEvent_7();
		il2cpp_codegen_initobj(L_0, sizeof(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D ));
		// private InputActionEventPair onPointerDownActionEvent = default(InputActionEventPair);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9658));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_1 = __this->get_address_of_onPointerDownActionEvent_8();
		il2cpp_codegen_initobj(L_1, sizeof(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D ));
		// private InputActionEventPair onPointerClickedActionEvent = default(InputActionEventPair);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9659));
		InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * L_2 = __this->get_address_of_onPointerClickedActionEvent_9();
		il2cpp_codegen_initobj(L_2, sizeof(InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9660));
		BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9660));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler_RegisterHandlers_m9611572A5FA7B8114182ED802295765EA1F15849 (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler_RegisterHandlers_m9611572A5FA7B8114182ED802295765EA1F15849_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler_RegisterHandlers_m9611572A5FA7B8114182ED802295765EA1F15849_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9661));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9662));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9663));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9664));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9666));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9666));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9667));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m8045547AED9E0A33D8E70DE66F076E2EE6E206DC_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9667));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9665));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler_UnregisterHandlers_mF1A6E8A4E9F47F1D7366E528DDE4BA96CBA4C235 (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler_UnregisterHandlers_mF1A6E8A4E9F47F1D7366E528DDE4BA96CBA4C235_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler_UnregisterHandlers_mF1A6E8A4E9F47F1D7366E528DDE4BA96CBA4C235_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9668));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9669));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9670));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityPointerHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9673));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9673));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9674));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityPointerHandler_t70E571F1DF049C95E73AE735E719C5FEDAF920D1_m7DF6B444D35B11AACB65301352ED33F3F466774D_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9674));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9672));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m0FF5CC03B138696A0ADB94A4C353EA3CC764597C (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m0FF5CC03B138696A0ADB94A4C353EA3CC764597C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m0FF5CC03B138696A0ADB94A4C353EA3CC764597C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9675));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9676));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9677));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9678));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9689));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9689));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9679));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9680));
		// OnPointerDown.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9681));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_3 = __this->get_OnPointerDown_8();
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9690));
		NullCheck(L_3);
		UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39(L_3, L_4, /*hidden argument*/UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9690));
		// if (MarkEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9682));
		bool L_5 = __this->get_MarkEventsAsUsed_7();
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9683));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9684));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9685));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9691));
		NullCheck(L_7);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9691));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9686));
	}

IL_002f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9687));
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9688));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF466C2A845DAC98E384A25DBE7D043F043C912A1 (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF466C2A845DAC98E384A25DBE7D043F043C912A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF466C2A845DAC98E384A25DBE7D043F043C912A1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9692));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9693));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9694));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9695));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9706));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9706));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9696));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9697));
		// OnPointerUp.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9698));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_3 = __this->get_OnPointerUp_9();
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9707));
		NullCheck(L_3);
		UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39(L_3, L_4, /*hidden argument*/UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9707));
		// if (MarkEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9699));
		bool L_5 = __this->get_MarkEventsAsUsed_7();
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9700));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9701));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9702));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9708));
		NullCheck(L_7);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9708));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9703));
	}

IL_002f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9704));
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9705));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m0DDB6A4CBA60692E51E2A860BE2AEC93153DDFC5 (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m0DDB6A4CBA60692E51E2A860BE2AEC93153DDFC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m0DDB6A4CBA60692E51E2A860BE2AEC93153DDFC5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9709));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9710));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9711));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9712));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9723));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9723));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9713));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9714));
		// OnPointerClicked.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9715));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_3 = __this->get_OnPointerClicked_10();
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9724));
		NullCheck(L_3);
		UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39(L_3, L_4, /*hidden argument*/UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9724));
		// if (MarkEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9716));
		bool L_5 = __this->get_MarkEventsAsUsed_7();
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9717));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9718));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9719));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9725));
		NullCheck(L_7);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9725));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9720));
	}

IL_002f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9721));
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9722));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m2AB54EB8C563159690814A9F26158F81E66383A8 (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m2AB54EB8C563159690814A9F26158F81E66383A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m2AB54EB8C563159690814A9F26158F81E66383A8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9726));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9727));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9728));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9729));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9740));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9740));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9730));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9731));
		// OnPointerDragged.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9732));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_3 = __this->get_OnPointerDragged_11();
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9741));
		NullCheck(L_3);
		UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39(L_3, L_4, /*hidden argument*/UnityEvent_1_Invoke_mB1F2307A1506C2A2A81EEBE885DE5E49E9BCFD39_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9741));
		// if (MarkEventsAsUsed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9733));
		bool L_5 = __this->get_MarkEventsAsUsed_7();
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9734));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9735));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9736));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_7 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9742));
		NullCheck(L_7);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9742));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9737));
	}

IL_002f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9738));
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9739));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHandler__ctor_m2B00E8A24A2D5340A8FB66E23553044A090586C3 (PointerHandler_t6FC1A1FC699315B0756A9B4CBC471A5177B51E1C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHandler__ctor_m2B00E8A24A2D5340A8FB66E23553044A090586C3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHandler__ctor_m2B00E8A24A2D5340A8FB66E23553044A090586C3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9743));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9744));
	{
		// private bool MarkEventsAsUsed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9745));
		__this->set_MarkEventsAsUsed_7((bool)0);
		// public PointerUnityEvent OnPointerDown = new PointerUnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9746));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9750));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_0 = (PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 *)il2cpp_codegen_object_new(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7_il2cpp_TypeInfo_var);
		PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9750));
		__this->set_OnPointerDown_8(L_0);
		// public PointerUnityEvent OnPointerUp = new PointerUnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9751));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_1 = (PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 *)il2cpp_codegen_object_new(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7_il2cpp_TypeInfo_var);
		PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9751));
		__this->set_OnPointerUp_9(L_1);
		// public PointerUnityEvent OnPointerClicked = new PointerUnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9748));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9752));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_2 = (PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 *)il2cpp_codegen_object_new(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7_il2cpp_TypeInfo_var);
		PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9752));
		__this->set_OnPointerClicked_10(L_2);
		// public PointerUnityEvent OnPointerDragged = new PointerUnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9749));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9753));
		PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * L_3 = (PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 *)il2cpp_codegen_object_new(PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7_il2cpp_TypeInfo_var);
		PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9753));
		__this->set_OnPointerDragged_11(L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9754));
		BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9754));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27 (PointerUnityEvent_t296872DA72C32A2F6EB169F219AB69E46E1D4CB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUnityEvent__ctor_m8F5611BDCDC1EE4FCB718F97E4A16A9475D7AC27_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_1__ctor_mB363ED1BADDD555B67FB52330A7D2E90801696A7(__this, /*hidden argument*/UnityEvent_1__ctor_mB363ED1BADDD555B67FB52330A7D2E90801696A7_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerUtils::TryGetHandRayEndPoint(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerUtils_TryGetHandRayEndPoint_mA978AE6BD31C67CEB217DCDF0532860A08AF14B1 (uint8_t ___handedness0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___endPoint1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_TryGetHandRayEndPoint_mA978AE6BD31C67CEB217DCDF0532860A08AF14B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0), (&___endPoint1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_TryGetHandRayEndPoint_mA978AE6BD31C67CEB217DCDF0532860A08AF14B1_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17703));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17704));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17705));
		// return TryGetPointerEndpoint<LinePointer>(handedness, InputSourceType.Hand, out endPoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17706));
		uint8_t L_0 = ___handedness0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_1 = ___endPoint1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17708));
		bool L_2 = PointerUtils_TryGetPointerEndpoint_TisLinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_mF2DA95AABCC4CEA97E82F91EFBDE70B4B681CFDC(L_0, 1, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_1, /*hidden argument*/PointerUtils_TryGetPointerEndpoint_TisLinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_mF2DA95AABCC4CEA97E82F91EFBDE70B4B681CFDC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17708));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17707));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerUtils::TryGetMotionControllerEndPoint(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerUtils_TryGetMotionControllerEndPoint_m2103E98E4B04C0383EAD7E7B0BD4C373405A6BF9 (uint8_t ___handedness0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___endPoint1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_TryGetMotionControllerEndPoint_m2103E98E4B04C0383EAD7E7B0BD4C373405A6BF9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0), (&___endPoint1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_TryGetMotionControllerEndPoint_m2103E98E4B04C0383EAD7E7B0BD4C373405A6BF9_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17709));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17710));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17711));
		// return TryGetPointerEndpoint<LinePointer>(handedness, InputSourceType.Controller, out endPoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17712));
		uint8_t L_0 = ___handedness0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_1 = ___endPoint1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17714));
		bool L_2 = PointerUtils_TryGetPointerEndpoint_TisLinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_mF2DA95AABCC4CEA97E82F91EFBDE70B4B681CFDC(L_0, 2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_1, /*hidden argument*/PointerUtils_TryGetPointerEndpoint_TisLinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_mF2DA95AABCC4CEA97E82F91EFBDE70B4B681CFDC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17714));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17713));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.Input.PointerUtils::GetPointers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PointerUtils_GetPointers_m954A57F013E7DFF288BAE39EEE83938911B3E02C (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_GetPointers_m954A57F013E7DFF288BAE39EEE83938911B3E02C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_GetPointers_m954A57F013E7DFF288BAE39EEE83938911B3E02C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * L_0 = (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 *)il2cpp_codegen_object_new(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816_il2cpp_TypeInfo_var);
		U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30(L_0, ((int32_t)-2), /*hidden argument*/NULL);
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetHandRayPointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6 (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerBehavior0), (&___handedness1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17820));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17821));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17822));
		// SetPointerBehavior<ShellHandRayPointer>(pointerBehavior, InputSourceType.Hand, handedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17823));
		int32_t L_0 = ___pointerBehavior0;
		uint8_t L_1 = ___handedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17825));
		PointerUtils_SetPointerBehavior_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_m8E1ADBA8CA0E9AA6B4047030A52A1A371AAA0200(L_0, 1, L_1, /*hidden argument*/PointerUtils_SetPointerBehavior_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_m8E1ADBA8CA0E9AA6B4047030A52A1A371AAA0200_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17825));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17824));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetMotionControllerRayPointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80 (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerBehavior0), (&___handedness1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17826));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17827));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17828));
		// SetPointerBehavior<ShellHandRayPointer>(pointerBehavior, InputSourceType.Controller, handedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17829));
		int32_t L_0 = ___pointerBehavior0;
		uint8_t L_1 = ___handedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17831));
		PointerUtils_SetPointerBehavior_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_m8E1ADBA8CA0E9AA6B4047030A52A1A371AAA0200(L_0, 2, L_1, /*hidden argument*/PointerUtils_SetPointerBehavior_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_m8E1ADBA8CA0E9AA6B4047030A52A1A371AAA0200_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17831));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17830));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetHandGrabPointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6 (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerBehavior0), (&___handedness1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17833));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17834));
		// SetPointerBehavior<SpherePointer>(pointerBehavior, InputSourceType.Hand, handedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17835));
		int32_t L_0 = ___pointerBehavior0;
		uint8_t L_1 = ___handedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17837));
		PointerUtils_SetPointerBehavior_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mD952FCD76DAF0A99AE9108118B23585F64AC25C4(L_0, 1, L_1, /*hidden argument*/PointerUtils_SetPointerBehavior_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mD952FCD76DAF0A99AE9108118B23585F64AC25C4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17837));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17836));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetHandPokePointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerBehavior0), (&___handedness1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17838));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17839));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17840));
		// SetPointerBehavior<PokePointer>(pointerBehavior, InputSourceType.Hand, handedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17841));
		int32_t L_0 = ___pointerBehavior0;
		uint8_t L_1 = ___handedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17843));
		PointerUtils_SetPointerBehavior_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_m0AC3ED302E4AE0A8F9E1B7EE5DACB5C48020E472(L_0, 1, L_1, /*hidden argument*/PointerUtils_SetPointerBehavior_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_m0AC3ED302E4AE0A8F9E1B7EE5DACB5C48020E472_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17843));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17842));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetGazePointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5 (int32_t ___pointerBehavior0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	bool V_1 = false;
	RuntimeObject* V_2 = NULL;
	int32_t V_3 = 0;
	RuntimeObject* V_4 = NULL;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerBehavior0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17844));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17845));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17846));
		// if (CoreServices.InputSystem.FocusProvider is IPointerPreferences pointerPreferences)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17847));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17866));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17866));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17867));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(7 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_FocusProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17867));
		RuntimeObject* L_2 = ((RuntimeObject*)IsInst((RuntimeObject*)L_1, IPointerPreferences_t81DF64613E85FE457EDCD0CCAAF5A84ACAFBD33E_il2cpp_TypeInfo_var));
		V_0 = L_2;
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17848));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0074;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17849));
		// pointerPreferences.GazePointerBehavior = pointerBehavior;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17850));
		RuntimeObject* L_4 = V_0;
		int32_t L_5 = ___pointerBehavior0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17868));
		NullCheck(L_4);
		InterfaceActionInvoker1< int32_t >::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Input.IPointerPreferences::set_GazePointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior) */, IPointerPreferences_t81DF64613E85FE457EDCD0CCAAF5A84ACAFBD33E_il2cpp_TypeInfo_var, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17868));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17851));
		// foreach (InputSourceType sourceType in Enum.GetValues(typeof(InputSourceType)))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17852));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_6 = { reinterpret_cast<intptr_t> (InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17869));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_7 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17869));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17870));
		IL2CPP_RUNTIME_CLASS_INIT(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_il2cpp_TypeInfo_var);
		RuntimeArray * L_8 = Enum_GetValues_m20F5C0B826344A499B1C23BB7A3B532017F0F30C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17870));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17871));
		NullCheck(L_8);
		RuntimeObject* L_9 = Array_GetEnumerator_m3BD9ACCA9512DA3687C8369BF999BA2916F0EA15(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17871));
		V_2 = L_9;
	}

IL_0038:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17853));
			goto IL_0052;
		}

IL_003a:
		{
			// foreach (InputSourceType sourceType in Enum.GetValues(typeof(InputSourceType)))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17854));
			RuntimeObject* L_10 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17872));
			NullCheck(L_10);
			RuntimeObject * L_11 = InterfaceFuncInvoker0< RuntimeObject * >::Invoke(1 /* System.Object System.Collections.IEnumerator::get_Current() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17872));
			V_3 = ((*(int32_t*)((int32_t*)UnBox(L_11, InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A_il2cpp_TypeInfo_var))));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17855));
			// pointerPreferences.SetPointerBehavior<GGVPointer>(Handedness.Any, sourceType, pointerBehavior);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17856));
			RuntimeObject* L_12 = V_0;
			int32_t L_13 = V_3;
			int32_t L_14 = ___pointerBehavior0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17873));
			NullCheck(L_12);
			GenericInterfaceActionInvoker3< uint8_t, int32_t, int32_t >::Invoke(IPointerPreferences_SetPointerBehavior_TisGGVPointer_tC95BBA97593470FF2DF3112B6FCBD7F24A94C073_m450BAACB61EC8D0A6E10A160C4272475CC25B131_RuntimeMethod_var, L_12, 7, L_13, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17873));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17857));
		}

IL_0052:
		{
			// foreach (InputSourceType sourceType in Enum.GetValues(typeof(InputSourceType)))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17858));
			RuntimeObject* L_15 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17874));
			NullCheck(L_15);
			bool L_16 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean System.Collections.IEnumerator::MoveNext() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_15);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17874));
			if (L_16)
			{
				goto IL_003a;
			}
		}

IL_005a:
		{
			IL2CPP_LEAVE(0x71, FINALLY_005c);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_005c;
	}

FINALLY_005c:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17859));
			RuntimeObject* L_17 = V_2;
			V_4 = ((RuntimeObject*)IsInst((RuntimeObject*)L_17, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var));
			RuntimeObject* L_18 = V_4;
			if (!L_18)
			{
				goto IL_0070;
			}
		}

IL_0068:
		{
			RuntimeObject* L_19 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17875));
			NullCheck(L_19);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_19);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17875));
		}

IL_0070:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17860));
			IL2CPP_END_FINALLY(92)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(92)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x71, IL_0071)
	}

IL_0071:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17861));
		goto IL_007c;
	}

IL_0074:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17862));
		// WarnAboutSettingCustomPointerBehaviors();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17863));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17876));
		PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17876));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17864));
	}

IL_007c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17865));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::WarnAboutSettingCustomPointerBehaviors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerUtils_WarnAboutSettingCustomPointerBehaviors_mFCC530F031AD97ED0617216B51A1EA187936FEB7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17914));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17915));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17916));
		// Debug.LogWarning("Setting custom pointer behaviors only works if the input system is using the default MRTK focus provider. " +
		//     "Are you using a custom Focus Provider that doesn't implement IPointerPreferences?");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17917));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17919));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral1DC1BD0DB1B180ABEA454C213634ACB9943B6932, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17919));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17918));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		int32_t L_1 = Environment_get_CurrentManagedThreadId_m0E897C88355903220B1EC214832F5E815D7C13D1(/*hidden argument*/NULL);
		__this->set_U3CU3El__initialThreadId_2(L_1);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		int32_t L_1 = V_0;
		if ((((int32_t)L_1) == ((int32_t)((int32_t)-3))))
		{
			goto IL_0014;
		}
	}
	{
		goto IL_000e;
	}

IL_000e:
	{
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)1)))
		{
			goto IL_0014;
		}
	}
	{
		goto IL_0020;
	}

IL_0014:
	{
	}

IL_0015:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		IL2CPP_LEAVE(0x1E, FINALLY_0017);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0017;
	}

FINALLY_0017:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F(__this, /*hidden argument*/NULL);
		IL2CPP_END_FINALLY(23)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(23)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1E, IL_001e)
	}

IL_001e:
	{
		goto IL_0020;
	}

IL_0020:
	{
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CGetPointersU3Ed__7_MoveNext_mBF3912770E78181A97A21C6FAAB8DBC7C3989E2F (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_MoveNext_mBF3912770E78181A97A21C6FAAB8DBC7C3989E2F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_MoveNext_mBF3912770E78181A97A21C6FAAB8DBC7C3989E2F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17979));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 4);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B9_0 = NULL;
	U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * G_B9_1 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * G_B8_1 = NULL;
	HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * G_B10_0 = NULL;
	U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * G_B10_1 = NULL;

IL_0000:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17980));
			int32_t L_0 = __this->get_U3CU3E1__state_0();
			V_1 = L_0;
			int32_t L_1 = V_1;
			if (!L_1)
			{
				goto IL_0012;
			}
		}

IL_000a:
		{
			goto IL_000c;
		}

IL_000c:
		{
			int32_t L_2 = V_1;
			if ((((int32_t)L_2) == ((int32_t)1)))
			{
				goto IL_0014;
			}
		}

IL_0010:
		{
			goto IL_0019;
		}

IL_0012:
		{
			goto IL_0020;
		}

IL_0014:
		{
			goto IL_00cb;
		}

IL_0019:
		{
			V_0 = (bool)0;
			goto IL_0137;
		}

IL_0020:
		{
			__this->set_U3CU3E1__state_0((-1));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17981));
			// HashSet<IMixedRealityInputSource> inputSources = CoreServices.InputSystem?.DetectedInputSources;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17982));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18006));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18006));
			RuntimeObject* L_4 = L_3;
			G_B8_0 = L_4;
			G_B8_1 = __this;
			if (L_4)
			{
				G_B9_0 = L_4;
				G_B9_1 = __this;
				goto IL_0035;
			}
		}

IL_0031:
		{
			G_B10_0 = ((HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F *)(NULL));
			G_B10_1 = G_B8_1;
			goto IL_003a;
		}

IL_0035:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18007));
			NullCheck(G_B9_0);
			HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * L_5 = InterfaceFuncInvoker0< HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * >::Invoke(4 /* System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_DetectedInputSources() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B9_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18007));
			G_B10_0 = L_5;
			G_B10_1 = G_B9_1;
		}

IL_003a:
		{
			NullCheck(G_B10_1);
			G_B10_1->set_U3CinputSourcesU3E5__1_3(G_B10_0);
			// if (inputSources == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17983));
			HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * L_6 = __this->get_U3CinputSourcesU3E5__1_3();
			V_2 = (bool)((((RuntimeObject*)(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F *)L_6) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17984));
			bool L_7 = V_2;
			if (!L_7)
			{
				goto IL_0054;
			}
		}

IL_004c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17985));
			// yield break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17986));
			V_0 = (bool)0;
			goto IL_0137;
		}

IL_0054:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17987));
			// foreach (IMixedRealityInputSource inputSource in inputSources)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17988));
			HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * L_8 = __this->get_U3CinputSourcesU3E5__1_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18008));
			NullCheck(L_8);
			Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  L_9 = HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE(L_8, /*hidden argument*/HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18008));
			__this->set_U3CU3Es__2_4(L_9);
			__this->set_U3CU3E1__state_0(((int32_t)-3));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17989));
			goto IL_0108;
		}

IL_0073:
		{
			// foreach (IMixedRealityInputSource inputSource in inputSources)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17990));
			Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * L_10 = __this->get_address_of_U3CU3Es__2_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18009));
			RuntimeObject* L_11 = Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_inline((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)L_10, /*hidden argument*/Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18009));
			__this->set_U3CinputSourceU3E5__3_5(L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17991));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17992));
			// foreach (IMixedRealityPointer pointer in inputSource.Pointers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17993));
			RuntimeObject* L_12 = __this->get_U3CinputSourceU3E5__3_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18010));
			NullCheck(L_12);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_13 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18010));
			__this->set_U3CU3Es__4_6(L_13);
			__this->set_U3CU3Es__5_7(0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17994));
			goto IL_00e9;
		}

IL_00a0:
		{
			// foreach (IMixedRealityPointer pointer in inputSource.Pointers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17995));
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_14 = __this->get_U3CU3Es__4_6();
			int32_t L_15 = __this->get_U3CU3Es__5_7();
			NullCheck(L_14);
			int32_t L_16 = L_15;
			RuntimeObject* L_17 = (L_14)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
			__this->set_U3CpointerU3E5__6_8(L_17);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17996));
			// yield return pointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17997));
			RuntimeObject* L_18 = __this->get_U3CpointerU3E5__6_8();
			__this->set_U3CU3E2__current_1(L_18);
			__this->set_U3CU3E1__state_0(1);
			V_0 = (bool)1;
			goto IL_0137;
		}

IL_00cb:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17998));
			__this->set_U3CU3E1__state_0(((int32_t)-3));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17999));
			__this->set_U3CpointerU3E5__6_8((RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18000));
			int32_t L_19 = __this->get_U3CU3Es__5_7();
			__this->set_U3CU3Es__5_7(((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1)));
		}

IL_00e9:
		{
			// foreach (IMixedRealityPointer pointer in inputSource.Pointers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18001));
			int32_t L_20 = __this->get_U3CU3Es__5_7();
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = __this->get_U3CU3Es__4_6();
			NullCheck(L_21);
			if ((((int32_t)L_20) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length)))))))
			{
				goto IL_00a0;
			}
		}

IL_00f9:
		{
			__this->set_U3CU3Es__4_6((IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18002));
			__this->set_U3CinputSourceU3E5__3_5((RuntimeObject*)NULL);
		}

IL_0108:
		{
			// foreach (IMixedRealityInputSource inputSource in inputSources)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18003));
			Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * L_22 = __this->get_address_of_U3CU3Es__2_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18011));
			bool L_23 = Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)L_22, /*hidden argument*/Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18011));
			if (L_23)
			{
				goto IL_0073;
			}
		}

IL_0118:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18012));
			U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18012));
			Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * L_24 = __this->get_address_of_U3CU3Es__2_4();
			il2cpp_codegen_initobj(L_24, sizeof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE ));
			// }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18004));
			V_0 = (bool)0;
			goto IL_0137;
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FAULT_012f;
	}

FAULT_012f:
	{ // begin fault (depth: 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18005));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18013));
		U3CGetPointersU3Ed__7_System_IDisposable_Dispose_mFC40DB108D752B3B6E88845E1E0394E3F21D0281(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18013));
		IL2CPP_END_FINALLY(303)
	} // end fault
	IL2CPP_CLEANUP(303)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
	}

IL_0137:
	{
		bool L_25 = V_0;
		return L_25;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::<>m__Finally1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_U3CU3Em__Finally1_mA316FCE35E9B1C04E265895215F20FABD398D39F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		__this->set_U3CU3E1__state_0((-1));
		Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * L_0 = __this->get_address_of_U3CU3Es__2_4();
		Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)L_0, /*hidden argument*/Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498_RuntimeMethod_var);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.Collections.Generic.IEnumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumeratorU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_get_Current_mBA8C02CBE9B3E7C3607CE61D1EAC4B939BA0D127 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumeratorU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_get_Current_mBA8C02CBE9B3E7C3607CE61D1EAC4B939BA0D127_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumeratorU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_get_Current_mBA8C02CBE9B3E7C3607CE61D1EAC4B939BA0D127_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject* L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CGetPointersU3Ed__7_System_Collections_IEnumerator_Reset_m3B8BCC1D6AC73B44E2ADD184AC2604EF2E71BFE7 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_System_Collections_IEnumerator_Reset_m3B8BCC1D6AC73B44E2ADD184AC2604EF2E71BFE7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_System_Collections_IEnumerator_Reset_m3B8BCC1D6AC73B44E2ADD184AC2604EF2E71BFE7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CGetPointersU3Ed__7_System_Collections_IEnumerator_Reset_m3B8BCC1D6AC73B44E2ADD184AC2604EF2E71BFE7_RuntimeMethod_var);
	}
}
// System.Object Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CGetPointersU3Ed__7_System_Collections_IEnumerator_get_Current_mB8C0846179405165761A9E2B699EFAB053318AA9 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_System_Collections_IEnumerator_get_Current_mB8C0846179405165761A9E2B699EFAB053318AA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_System_Collections_IEnumerator_get_Current_mB8C0846179405165761A9E2B699EFAB053318AA9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject* L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Collections.Generic.IEnumerator`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.Collections.Generic.IEnumerable<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>.GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02 (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * V_0 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		if ((!(((uint32_t)L_0) == ((uint32_t)((int32_t)-2)))))
		{
			goto IL_0022;
		}
	}
	{
		int32_t L_1 = __this->get_U3CU3El__initialThreadId_2();
		int32_t L_2 = Environment_get_CurrentManagedThreadId_m0E897C88355903220B1EC214832F5E815D7C13D1(/*hidden argument*/NULL);
		if ((!(((uint32_t)L_1) == ((uint32_t)L_2))))
		{
			goto IL_0022;
		}
	}
	{
		__this->set_U3CU3E1__state_0(0);
		V_0 = __this;
		goto IL_0029;
	}

IL_0022:
	{
		U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * L_3 = (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 *)il2cpp_codegen_object_new(U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816_il2cpp_TypeInfo_var);
		U3CGetPointersU3Ed__7__ctor_m571FA22B9818AE12A1A24D8B8E29FD2C0CBA7C30(L_3, 0, /*hidden argument*/NULL);
		V_0 = L_3;
	}

IL_0029:
	{
		U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * L_4 = V_0;
		return L_4;
	}
}
// System.Collections.IEnumerator Microsoft.MixedReality.Toolkit.Input.PointerUtils/<GetPointers>d__7::System.Collections.IEnumerable.GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CGetPointersU3Ed__7_System_Collections_IEnumerable_GetEnumerator_mE6664A63E4537DD6358917B5632863D58BD321EA (U3CGetPointersU3Ed__7_t61BC51C23525C1F9D72AD968B8BC0B4D0C1EC816 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CGetPointersU3Ed__7_System_Collections_IEnumerable_GetEnumerator_mE6664A63E4537DD6358917B5632863D58BD321EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CGetPointersU3Ed__7_System_Collections_IEnumerable_GetEnumerator_mE6664A63E4537DD6358917B5632863D58BD321EA_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject* L_0 = U3CGetPointersU3Ed__7_System_Collections_Generic_IEnumerableU3CMicrosoft_MixedReality_Toolkit_Input_IMixedRealityPointerU3E_GetEnumerator_m9644B5C85DB6966B9C3FC8961D11D75F612F1F02(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::get_TouchableDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PokePointer_get_TouchableDistance_m3CAFAD7A2FA0837FE0CAED48668962CAA9F62E3D (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_TouchableDistance_m3CAFAD7A2FA0837FE0CAED48668962CAA9F62E3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_TouchableDistance_m3CAFAD7A2FA0837FE0CAED48668962CAA9F62E3D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15154));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15155));
	{
		// public float TouchableDistance => touchableDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15156));
		float L_0 = __this->get_touchableDistance_53();
		return L_0;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::get_SourcePoseOffset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PokePointer_get_SourcePoseOffset_mBAE04FF8A8E93CF46321D76A33D15DB4DBE93A66 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_SourcePoseOffset_mBAE04FF8A8E93CF46321D76A33D15DB4DBE93A66_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_SourcePoseOffset_mBAE04FF8A8E93CF46321D76A33D15DB4DBE93A66_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15157));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15158));
	{
		// public float SourcePoseOffset => sourcePoseOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15159));
		float L_0 = __this->get_sourcePoseOffset_54();
		return L_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.PokePointer::get_SceneQueryBufferSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PokePointer_get_SceneQueryBufferSize_m9FDED9A2418FE9AD708C2D1D0D8BD94FC6BF79E5 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_SceneQueryBufferSize_m9FDED9A2418FE9AD708C2D1D0D8BD94FC6BF79E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_SceneQueryBufferSize_m9FDED9A2418FE9AD708C2D1D0D8BD94FC6BF79E5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15160));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15161));
	{
		// public int SceneQueryBufferSize => sceneQueryBufferSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15162));
		int32_t L_0 = __this->get_sceneQueryBufferSize_55();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::get_IgnoreCollidersNotInFOV()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15163));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15164));
	{
		// get => ignoreCollidersNotInFOV;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15165));
		bool L_0 = __this->get_ignoreCollidersNotInFOV_56();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::set_IgnoreCollidersNotInFOV(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_set_IgnoreCollidersNotInFOV_m2730C1BA0C9486C761E3A8EE72942C174378A9B2 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_set_IgnoreCollidersNotInFOV_m2730C1BA0C9486C761E3A8EE72942C174378A9B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_set_IgnoreCollidersNotInFOV_m2730C1BA0C9486C761E3A8EE72942C174378A9B2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15166));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15167));
	{
		// set => ignoreCollidersNotInFOV = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15168));
		bool L_0 = ___value0;
		__this->set_ignoreCollidersNotInFOV_56(L_0);
		return;
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.PokePointer::get_PokeLayerMasks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* PokePointer_get_PokeLayerMasks_mEB8C2A9809C8A07D14A95021F16BF1F26D8147FF (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_PokeLayerMasks_mEB8C2A9809C8A07D14A95021F16BF1F26D8147FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_PokeLayerMasks_mEB8C2A9809C8A07D14A95021F16BF1F26D8147FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15169));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15170));
	{
		// public LayerMask[] PokeLayerMasks => pokeLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15171));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_pokeLayerMasks_57();
		return L_0;
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.PokePointer::get_PrioritizedLayerMasksOverride()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* PokePointer_get_PrioritizedLayerMasksOverride_m70BF462D9192E78897DE8B8E754F39F976C400F9 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_PrioritizedLayerMasksOverride_m70BF462D9192E78897DE8B8E754F39F976C400F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_PrioritizedLayerMasksOverride_m70BF462D9192E78897DE8B8E754F39F976C400F9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15172));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15173));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15174));
		// get { return pokeLayerMasks; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15175));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_pokeLayerMasks_57();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return pokeLayerMasks; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15176));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::set_PrioritizedLayerMasksOverride(UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_set_PrioritizedLayerMasksOverride_mBDD7F58A2AF741BE8AA6531B50F1C813790CF84F (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_set_PrioritizedLayerMasksOverride_mBDD7F58A2AF741BE8AA6531B50F1C813790CF84F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_set_PrioritizedLayerMasksOverride_mBDD7F58A2AF741BE8AA6531B50F1C813790CF84F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15177));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15178));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15179));
		// set { pokeLayerMasks = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15180));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___value0;
		__this->set_pokeLayerMasks_57(L_0);
		// set { pokeLayerMasks = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15181));
		return;
	}
}
// UnityEngine.QueryTriggerInteraction Microsoft.MixedReality.Toolkit.Input.PokePointer::get_TriggerInteraction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PokePointer_get_TriggerInteraction_m42DB94F9EFF78CE33CFF2BBD11F18F2F14617061 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_TriggerInteraction_m42DB94F9EFF78CE33CFF2BBD11F18F2F14617061_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_TriggerInteraction_m42DB94F9EFF78CE33CFF2BBD11F18F2F14617061_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15182));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15183));
	{
		// public QueryTriggerInteraction TriggerInteraction => triggerInteraction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15184));
		int32_t L_0 = __this->get_triggerInteraction_58();
		return L_0;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::get_PreviousPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15185));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15186));
	{
		// public Vector3 PreviousPosition { get; private set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15187));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPreviousPositionU3Ek__BackingField_63();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::set_PreviousPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15188));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15189));
	{
		// public Vector3 PreviousPosition { get; private set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15190));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPreviousPositionU3Ek__BackingField_63(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable Microsoft.MixedReality.Toolkit.Input.PokePointer::get_ClosestProximityTouchable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * PokePointer_get_ClosestProximityTouchable_m311A15C3FE7778851F015E024FC7BD11310698AE (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_ClosestProximityTouchable_m311A15C3FE7778851F015E024FC7BD11310698AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_ClosestProximityTouchable_m311A15C3FE7778851F015E024FC7BD11310698AE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15191));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15192));
	{
		// public BaseNearInteractionTouchable ClosestProximityTouchable => closestProximityTouchable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15193));
		BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_0 = __this->get_closestProximityTouchable_64();
		return L_0;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PokePointer::get_CurrentTouchableObjectDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15194));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15195));
	{
		// public GameObject CurrentTouchableObjectDown => currentTouchableObjectDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15196));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_currentTouchableObjectDown_65();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_Awake_mB8C3FAC8E340D3FCB10FB11BEC5942DB61DEB6DE (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_Awake_mB8C3FAC8E340D3FCB10FB11BEC5942DB61DEB6DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_Awake_mB8C3FAC8E340D3FCB10FB11BEC5942DB61DEB6DE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15198));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15199));
		// queryBuffer = new Collider[sceneQueryBufferSize];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15200));
		int32_t L_0 = __this->get_sceneQueryBufferSize_55();
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_1 = (ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)SZArrayNew(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252_il2cpp_TypeInfo_var, (uint32_t)L_0);
		__this->set_queryBuffer_59(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15201));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnValidate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnValidate_mC766A07AC99A0F37D0CCD5F4917F61F3DA358ED2 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnValidate_mC766A07AC99A0F37D0CCD5F4917F61F3DA358ED2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnValidate_mC766A07AC99A0F37D0CCD5F4917F61F3DA358ED2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15202));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15203));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15204));
		// touchableDistance = Mathf.Max(touchableDistance, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15205));
		float L_0 = __this->get_touchableDistance_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15208));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_1 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_0, (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15208));
		__this->set_touchableDistance_53(L_1);
		// sceneQueryBufferSize = Mathf.Max(sceneQueryBufferSize, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15206));
		int32_t L_2 = __this->get_sceneQueryBufferSize_55();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15209));
		int32_t L_3 = Mathf_Max_mBDE4C6F1883EE3215CD7AE62550B2AC90592BC3F(L_2, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15209));
		__this->set_sceneQueryBufferSize_55(L_3);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15207));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::get_IsNearObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_get_IsNearObject_m12DDAEE378400EE012F4BE3EA9E650484F957528 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_IsNearObject_m12DDAEE378400EE012F4BE3EA9E650484F957528_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_IsNearObject_m12DDAEE378400EE012F4BE3EA9E650484F957528_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15210));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15211));
	{
		// get => closestProximityTouchable != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15212));
		BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_0 = __this->get_closestProximityTouchable_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15213));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15213));
		return L_1;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_get_IsInteractionEnabled_m673EDEF09003D610A4B9AD3EEACE1FD5BA234B86 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_IsInteractionEnabled_m673EDEF09003D610A4B9AD3EEACE1FD5BA234B86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_IsInteractionEnabled_m673EDEF09003D610A4B9AD3EEACE1FD5BA234B86_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15214));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15215));
	int32_t G_B3_0 = 0;
	{
		// public override bool IsInteractionEnabled => base.IsInteractionEnabled && IsNearObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15216));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15217));
		bool L_0 = BaseControllerPointer_get_IsInteractionEnabled_m9F18E5E5A529EC82BA41F7D71E069E96D61F4C21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15217));
		if (!L_0)
		{
			goto IL_0010;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15218));
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(108 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::get_IsNearObject() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15218));
		G_B3_0 = ((int32_t)(L_1));
		goto IL_0011;
	}

IL_0010:
	{
		G_B3_0 = 0;
	}

IL_0011:
	{
		return (bool)G_B3_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnPreSceneQuery_m22BBAA6DABEB910AD8AEC776B82FA35260C531AC (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnPreSceneQuery_m22BBAA6DABEB910AD8AEC776B82FA35260C531AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * V_2 = NULL;
	bool V_3 = false;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_4 = NULL;
	int32_t V_5 = 0;
	LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	bool V_8 = false;
	float V_9 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_10;
	memset((&V_10), 0, sizeof(V_10));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	bool V_13 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_6), (&V_9), (&V_10), (&V_11));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnPreSceneQuery_m22BBAA6DABEB910AD8AEC776B82FA35260C531AC_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15219));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15220));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	float G_B12_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15221));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15222));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_66();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15264));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15264));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15223));
			// if (Rays == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15224));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15265));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_2 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15265));
			V_3 = (bool)((((RuntimeObject*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)L_2) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15225));
			bool L_3 = V_3;
			if (!L_3)
			{
				goto IL_002c;
			}
		}

IL_001d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15226));
			// Rays = new RayStep[1];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15227));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = (RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)SZArrayNew(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_il2cpp_TypeInfo_var, (uint32_t)1);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15266));
			BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline(__this, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15266));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15228));
		}

IL_002c:
		{
			// closestNormal = Rotation * Vector3.forward;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15229));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15267));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = VirtFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(97 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rotation() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15267));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15268));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15268));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15269));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_5, L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15269));
			__this->set_closestNormal_61(L_7);
			// BaseNearInteractionTouchable newClosestTouchable = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15230));
			V_2 = (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 *)NULL;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15231));
			// foreach (var layerMask in PrioritizedLayerMasksOverride)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15232));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15270));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_8 = VirtFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(92 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PrioritizedLayerMasksOverride() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15270));
			V_4 = L_8;
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15233));
			goto IL_0084;
		}

IL_0052:
		{
			// foreach (var layerMask in PrioritizedLayerMasksOverride)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15234));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_9 = V_4;
			int32_t L_10 = V_5;
			NullCheck(L_9);
			int32_t L_11 = L_10;
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_12 = (L_9)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
			V_6 = L_12;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15235));
			// if (FindClosestTouchableForLayerMask(layerMask, out newClosestTouchable, out closestDistance, out closestNormal))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15236));
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_13 = V_6;
			float* L_14 = __this->get_address_of_closestDistance_60();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_15 = __this->get_address_of_closestNormal_61();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15271));
			bool L_16 = PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C(__this, L_13, (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 **)(&V_2), (float*)L_14, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15271));
			V_7 = L_16;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15237));
			bool L_17 = V_7;
			if (!L_17)
			{
				goto IL_007d;
			}
		}

IL_007a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15238));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15239));
			goto IL_008c;
		}

IL_007d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15240));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15241));
			int32_t L_18 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_18, (int32_t)1));
		}

IL_0084:
		{
			// foreach (var layerMask in PrioritizedLayerMasksOverride)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15242));
			int32_t L_19 = V_5;
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_20 = V_4;
			NullCheck(L_20);
			if ((((int32_t)L_19) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_20)->max_length)))))))
			{
				goto IL_0052;
			}
		}

IL_008c:
		{
			// if (newClosestTouchable != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15243));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_21 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15272));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_22 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_21, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15272));
			V_8 = L_22;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15244));
			bool L_23 = V_8;
			if (!L_23)
			{
				goto IL_00fc;
			}
		}

IL_0099:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15245));
			// var lengthOfPointerRay = newClosestTouchable is NearInteractionTouchableVolume ?
			//     maximumTouchableVolumeSize : touchableDistance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15246));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_24 = V_2;
			if (((NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5 *)IsInstClass((RuntimeObject*)L_24, NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5_il2cpp_TypeInfo_var)))
			{
				goto IL_00aa;
			}
		}

IL_00a2:
		{
			float L_25 = __this->get_touchableDistance_53();
			G_B12_0 = L_25;
			goto IL_00af;
		}

IL_00aa:
		{
			G_B12_0 = (1000.0f);
		}

IL_00af:
		{
			V_9 = G_B12_0;
			// Vector3 start = Position + lengthOfPointerRay * closestNormal;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15247));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15273));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15273));
			float L_27 = V_9;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = __this->get_closestNormal_61();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15274));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(L_27, L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15274));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15275));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_26, L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15275));
			V_10 = L_30;
			// Vector3 end = Position - lengthOfPointerRay * closestNormal;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15248));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15276));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15276));
			float L_32 = V_9;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = __this->get_closestNormal_61();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15277));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(L_32, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15277));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15278));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_31, L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15278));
			V_11 = L_35;
			// Rays[0].UpdateRayStep(ref start, ref end);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15249));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15279));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_36 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15279));
			NullCheck(L_36);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15280));
			RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_36)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_10), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15280));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15250));
		}

IL_00fc:
		{
			// if (currentTouchableObjectDown != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15251));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_37 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15281));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_38 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_37, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15281));
			V_12 = L_38;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15252));
			bool L_39 = V_12;
			if (!L_39)
			{
				goto IL_012e;
			}
		}

IL_010e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15253));
			// if (!IsObjectPartOfTouchable(currentTouchableObjectDown, newClosestTouchable))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15254));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_40 = __this->get_currentTouchableObjectDown_65();
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_41 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15282));
			IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
			bool L_42 = PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED(L_40, L_41, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15282));
			V_13 = (bool)((((int32_t)L_42) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15255));
			bool L_43 = V_13;
			if (!L_43)
			{
				goto IL_012d;
			}
		}

IL_0124:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15256));
			// TryRaisePokeUp();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15257));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15283));
			PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15283));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15258));
		}

IL_012d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15259));
		}

IL_012e:
		{
			// closestProximityTouchable = newClosestTouchable;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15260));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_44 = V_2;
			__this->set_closestProximityTouchable_64(L_44);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15261));
			IL2CPP_LEAVE(0x147, FINALLY_0138);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0138;
	}

FINALLY_0138:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15262));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15284));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15284));
		IL2CPP_END_FINALLY(312)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(312)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x147, IL_0147)
	}

IL_0147:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15263));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::FindClosestTouchableForLayerMask(UnityEngine.LayerMask,Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable&,System.Single&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___layerMask0, BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** ___closest1, float* ___closestDistance2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___closestNormal3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * V_3 = NULL;
	bool V_4 = false;
	int32_t V_5 = 0;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_6 = NULL;
	BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * V_7 = NULL;
	bool V_8 = false;
	float V_9 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_10;
	memset((&V_10), 0, sizeof(V_10));
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	int32_t V_14 = 0;
	NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC * V_15 = NULL;
	bool V_16 = false;
	float V_17 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_18;
	memset((&V_18), 0, sizeof(V_18));
	bool V_19 = false;
	bool V_20 = false;
	bool V_21 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___layerMask0), (&___closest1), (&___closestDistance2), (&___closestNormal3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_5), (&V_6), (&V_7), (&V_9), (&V_10), (&V_14), (&V_15), (&V_17), (&V_18));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_FindClosestTouchableForLayerMask_mA66F0FF4DA392E5F42AC0BC54126D71A3BE6D45C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15285));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15286));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B8_0 = 0;
	int32_t G_B21_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15287));
		// using (FindClosestTouchableForLayerMaskPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15288));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_FindClosestTouchableForLayerMaskPerfMarker_67();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15348));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15348));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15289));
			// closest = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15290));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** L_2 = ___closest1;
			*((RuntimeObject **)L_2) = (RuntimeObject *)NULL;
			Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_2, (void*)(RuntimeObject *)NULL);
			// closestDistance = float.PositiveInfinity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15291));
			float* L_3 = ___closestDistance2;
			*((float*)L_3) = (float)(std::numeric_limits<float>::infinity());
			// closestNormal = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15292));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___closestNormal3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15349));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15349));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4 = L_5;
			// int numColliders = UnityEngine.Physics.OverlapSphereNonAlloc(Position, touchableDistance, queryBuffer, layerMask, triggerInteraction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15293));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15350));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15350));
			float L_7 = __this->get_touchableDistance_53();
			ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_8 = __this->get_queryBuffer_59();
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_9 = ___layerMask0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15351));
			int32_t L_10 = LayerMask_op_Implicit_m2AFFC7F931005437E8F356C953F439829AF4CFA5(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15351));
			int32_t L_11 = __this->get_triggerInteraction_58();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15352));
			int32_t L_12 = Physics_OverlapSphereNonAlloc_mE01FE11B81FB91430A8A66A60E7CBC1F2B38BD5E(L_6, L_7, L_8, L_10, L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15352));
			V_2 = L_12;
			// if (numColliders == queryBuffer.Length)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15294));
			int32_t L_13 = V_2;
			ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_14 = __this->get_queryBuffer_59();
			NullCheck(L_14);
			V_4 = (bool)((((int32_t)L_13) == ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15295));
			bool L_15 = V_4;
			if (!L_15)
			{
				goto IL_0073;
			}
		}

IL_005b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15296));
			// Debug.LogWarning($"Maximum number of {numColliders} colliders found in PokePointer overlap query. Consider increasing the query buffer size in the input system settings.");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15297));
			int32_t L_16 = V_2;
			int32_t L_17 = L_16;
			RuntimeObject * L_18 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_17);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15353));
			String_t* L_19 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral36A3B7184BD46EBB0AF6EF70549452E3DE0EF62B, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15353));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15354));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15354));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15298));
		}

IL_0073:
		{
			// Camera mainCam = CameraCache.Main;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15299));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15355));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_20 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15355));
			V_3 = L_20;
			// for (int i = 0; i < numColliders; ++i)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15300));
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15301));
			goto IL_00f8;
		}

IL_007e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15302));
			// var collider = queryBuffer[i];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15303));
			ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_21 = __this->get_queryBuffer_59();
			int32_t L_22 = V_5;
			NullCheck(L_21);
			int32_t L_23 = L_22;
			Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_24 = (L_21)->GetAt(static_cast<il2cpp_array_size_t>(L_23));
			V_6 = L_24;
			// var touchable = collider.GetComponent<BaseNearInteractionTouchable>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15304));
			Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_25 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15356));
			NullCheck(L_25);
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_26 = Component_GetComponent_TisBaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03_m92609490C15DBE5DF1BF1D874DC3CA4ABFF0BC89(L_25, /*hidden argument*/Component_GetComponent_TisBaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03_m92609490C15DBE5DF1BF1D874DC3CA4ABFF0BC89_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15356));
			V_7 = L_26;
			// if (touchable)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15305));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_27 = V_7;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15357));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_28 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_27, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15357));
			V_8 = L_28;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15306));
			bool L_29 = V_8;
			if (!L_29)
			{
				goto IL_00f1;
			}
		}

IL_00a0:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15307));
			// if (IgnoreCollidersNotInFOV && !mainCam.IsInFOVCached(collider))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15308));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15358));
			bool L_30 = PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15358));
			if (!L_30)
			{
				goto IL_00b6;
			}
		}

IL_00a9:
		{
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_31 = V_3;
			Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_32 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15359));
			IL2CPP_RUNTIME_CLASS_INIT(CameraFOVChecker_tB0E867F4D4A49EC7C4CDDF0DC4878BE3CC75A4C4_il2cpp_TypeInfo_var);
			bool L_33 = CameraFOVChecker_IsInFOVCached_m5805DB20DD2C94B684752ADB5ED145262147C795(L_31, L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15359));
			G_B8_0 = ((((int32_t)L_33) == ((int32_t)0))? 1 : 0);
			goto IL_00b7;
		}

IL_00b6:
		{
			G_B8_0 = 0;
		}

IL_00b7:
		{
			V_11 = (bool)G_B8_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15309));
			bool L_34 = V_11;
			if (!L_34)
			{
				goto IL_00c0;
			}
		}

IL_00bd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15310));
			// continue;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15311));
			goto IL_00f2;
		}

IL_00c0:
		{
			// float distance = touchable.DistanceToTouchable(Position, out Vector3 normal);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15312));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_35 = V_7;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15360));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15360));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15361));
			NullCheck(L_35);
			float L_37 = VirtFuncInvoker2< float, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * >::Invoke(5 /* System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::DistanceToTouchable(UnityEngine.Vector3,UnityEngine.Vector3&) */, L_35, L_36, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_10));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15361));
			V_9 = L_37;
			// if (distance < closestDistance)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15313));
			float L_38 = V_9;
			float* L_39 = ___closestDistance2;
			float L_40 = *((float*)L_39);
			V_12 = (bool)((((float)L_38) < ((float)L_40))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15314));
			bool L_41 = V_12;
			if (!L_41)
			{
				goto IL_00f0;
			}
		}

IL_00dd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15315));
			// closest = touchable;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15316));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** L_42 = ___closest1;
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_43 = V_7;
			*((RuntimeObject **)L_42) = (RuntimeObject *)L_43;
			Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_42, (void*)(RuntimeObject *)L_43);
			// closestDistance = distance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15317));
			float* L_44 = ___closestDistance2;
			float L_45 = V_9;
			*((float*)L_44) = (float)L_45;
			// closestNormal = normal;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15318));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_46 = ___closestNormal3;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = V_10;
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_46 = L_47;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15319));
		}

IL_00f0:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15320));
		}

IL_00f1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15321));
		}

IL_00f2:
		{
			// for (int i = 0; i < numColliders; ++i)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15322));
			int32_t L_48 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_48, (int32_t)1));
		}

IL_00f8:
		{
			// for (int i = 0; i < numColliders; ++i)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15323));
			int32_t L_49 = V_5;
			int32_t L_50 = V_2;
			V_13 = (bool)((((int32_t)L_49) < ((int32_t)L_50))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15324));
			bool L_51 = V_13;
			if (L_51)
			{
				goto IL_007e;
			}
		}

IL_0106:
		{
			// for (int i = 0; i < NearInteractionTouchableUnityUI.Instances.Count; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15325));
			V_14 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15326));
			goto IL_0173;
		}

IL_010b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15327));
			// NearInteractionTouchableUnityUI touchable = NearInteractionTouchableUnityUI.Instances[i];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15328));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15362));
			IL2CPP_RUNTIME_CLASS_INIT(NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_il2cpp_TypeInfo_var);
			RuntimeObject* L_52 = NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586_inline(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15362));
			int32_t L_53 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15363));
			NullCheck(L_52);
			NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC * L_54 = InterfaceFuncInvoker1< NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC *, int32_t >::Invoke(0 /* !0 System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI>::get_Item(System.Int32) */, IReadOnlyList_1_tDC67F606C39A8C34254D870959C6C18CF0B50D68_il2cpp_TypeInfo_var, L_52, L_53);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15363));
			V_15 = L_54;
			// if (touchable.gameObject.IsInLayerMask(layerMask))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15329));
			NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC * L_55 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15364));
			NullCheck(L_55);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_56 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15364));
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_57 = ___layerMask0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15365));
			bool L_58 = GameObjectExtensions_IsInLayerMask_m4C2006CFE6548FEA33CE37F2AFAC1B9CAE861C47(L_56, L_57, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15365));
			V_16 = L_58;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15330));
			bool L_59 = V_16;
			if (!L_59)
			{
				goto IL_016c;
			}
		}

IL_012d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15331));
			// float distance = touchable.DistanceToTouchable(Position, out Vector3 normal);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15332));
			NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC * L_60 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15366));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15366));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15367));
			NullCheck(L_60);
			float L_62 = VirtFuncInvoker2< float, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * >::Invoke(5 /* System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::DistanceToTouchable(UnityEngine.Vector3,UnityEngine.Vector3&) */, L_60, L_61, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_18));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15367));
			V_17 = L_62;
			// if (distance <= touchableDistance && distance < closestDistance)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15333));
			float L_63 = V_17;
			float L_64 = __this->get_touchableDistance_53();
			if ((!(((float)L_63) <= ((float)L_64))))
			{
				goto IL_0151;
			}
		}

IL_0149:
		{
			float L_65 = V_17;
			float* L_66 = ___closestDistance2;
			float L_67 = *((float*)L_66);
			G_B21_0 = ((((float)L_65) < ((float)L_67))? 1 : 0);
			goto IL_0152;
		}

IL_0151:
		{
			G_B21_0 = 0;
		}

IL_0152:
		{
			V_19 = (bool)G_B21_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15334));
			bool L_68 = V_19;
			if (!L_68)
			{
				goto IL_016b;
			}
		}

IL_0158:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15335));
			// closest = touchable;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15336));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** L_69 = ___closest1;
			NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC * L_70 = V_15;
			*((RuntimeObject **)L_69) = (RuntimeObject *)L_70;
			Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_69, (void*)(RuntimeObject *)L_70);
			// closestDistance = distance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15337));
			float* L_71 = ___closestDistance2;
			float L_72 = V_17;
			*((float*)L_71) = (float)L_72;
			// closestNormal = normal;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15338));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_73 = ___closestNormal3;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_74 = V_18;
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_73 = L_74;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15339));
		}

IL_016b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15340));
		}

IL_016c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15341));
			// for (int i = 0; i < NearInteractionTouchableUnityUI.Instances.Count; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15342));
			int32_t L_75 = V_14;
			V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_75, (int32_t)1));
		}

IL_0173:
		{
			// for (int i = 0; i < NearInteractionTouchableUnityUI.Instances.Count; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15343));
			int32_t L_76 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15368));
			IL2CPP_RUNTIME_CLASS_INIT(NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_il2cpp_TypeInfo_var);
			RuntimeObject* L_77 = NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586_inline(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15368));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15369));
			NullCheck(L_77);
			int32_t L_78 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableUnityUI>::get_Count() */, IReadOnlyCollection_1_t76FAFA7A34215C680E1D2FEDC953AA1FB9BCBB7C_il2cpp_TypeInfo_var, L_77);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15369));
			V_20 = (bool)((((int32_t)L_76) < ((int32_t)L_78))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15344));
			bool L_79 = V_20;
			if (L_79)
			{
				goto IL_010b;
			}
		}

IL_0187:
		{
			// return closest != null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15345));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** L_80 = ___closest1;
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_81 = *((BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 **)L_80);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15370));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_82 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_81, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15370));
			V_21 = L_82;
			IL2CPP_LEAVE(0x1A2, FINALLY_0193);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0193;
	}

FINALLY_0193:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15346));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15371));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15371));
		IL2CPP_END_FINALLY(403)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(403)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1A2, IL_01a2)
	}

IL_01a2:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15347));
		bool L_83 = V_21;
		return L_83;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnPostSceneQuery_mBA7A83C26A3AE691426681029620B791D9CACFB8 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnPostSceneQuery_mBA7A83C26A3AE691426681029620B791D9CACFB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	float V_4 = 0.0f;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_8;
	memset((&V_8), 0, sizeof(V_8));
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnPostSceneQuery_mBA7A83C26A3AE691426681029620B791D9CACFB8_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15372));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15373));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B6_0 = NULL;
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15374));
		// using (OnPostSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15375));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_OnPostSceneQueryPerfMarker_68();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15417));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15417));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15376));
			// base.OnPostSceneQuery();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15377));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15418));
			BaseControllerPointer_OnPostSceneQuery_m81D5B744DA4836BD0A7476D37141F0F0864C3FBF(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15418));
			// if (!IsActive)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15378));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15419));
			bool L_2 = VirtFuncInvoker0< bool >::Invoke(88 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsActive() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15419));
			V_2 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15379));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_002a;
			}
		}

IL_0024:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15380));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15381));
			IL2CPP_LEAVE(0x136, FINALLY_0127);
		}

IL_002a:
		{
			// if (Result?.CurrentPointerTarget != null && closestProximityTouchable != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15382));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15420));
			RuntimeObject* L_4 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15420));
			RuntimeObject* L_5 = L_4;
			G_B4_0 = L_5;
			if (L_5)
			{
				G_B5_0 = L_5;
				goto IL_0037;
			}
		}

IL_0033:
		{
			G_B6_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			goto IL_003c;
		}

IL_0037:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15421));
			NullCheck(G_B5_0);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, G_B5_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15421));
			G_B6_0 = L_6;
		}

IL_003c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15422));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B6_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15422));
			if (!L_7)
			{
				goto IL_0052;
			}
		}

IL_0044:
		{
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_8 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15423));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_9 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_8, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15423));
			G_B9_0 = ((int32_t)(L_9));
			goto IL_0053;
		}

IL_0052:
		{
			G_B9_0 = 0;
		}

IL_0053:
		{
			V_3 = (bool)G_B9_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15383));
			bool L_10 = V_3;
			if (!L_10)
			{
				goto IL_0117;
			}
		}

IL_005a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15384));
			// if (closestProximityTouchable is NearInteractionTouchableVolume)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15385));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_11 = __this->get_closestProximityTouchable_64();
			V_7 = (bool)((!(((RuntimeObject*)(NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5 *)((NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5 *)IsInstClass((RuntimeObject*)L_11, NearInteractionTouchableVolume_t6923B73C2309B1AE7D7CFF3C8D673B00606205B5_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15386));
			bool L_12 = V_7;
			if (!L_12)
			{
				goto IL_0088;
			}
		}

IL_006f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15387));
			// distToTouchable = closestProximityTouchable.DistanceToTouchable(Position, out _);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15388));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_13 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15424));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15424));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15425));
			NullCheck(L_13);
			float L_15 = VirtFuncInvoker2< float, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * >::Invoke(5 /* System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::DistanceToTouchable(UnityEngine.Vector3,UnityEngine.Vector3&) */, L_13, L_14, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_8));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15425));
			V_4 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15389));
			goto IL_00b7;
		}

IL_0088:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15390));
			// distToTouchable = Vector3.Distance(Result.StartPoint, Result.Details.Point) - touchableDistance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15391));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15426));
			RuntimeObject* L_16 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15426));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15427));
			NullCheck(L_16);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(0 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_StartPoint() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_16);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15427));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15428));
			RuntimeObject* L_18 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15428));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15429));
			NullCheck(L_18);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_19 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15429));
			V_9 = L_19;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15430));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15430));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15431));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			float L_21 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_17, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15431));
			float L_22 = __this->get_touchableDistance_53();
			V_4 = ((float)il2cpp_codegen_subtract((float)L_21, (float)L_22));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15392));
		}

IL_00b7:
		{
			// bool newIsDown = (distToTouchable < 0.0f);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15393));
			float L_23 = V_4;
			V_5 = (bool)((((float)L_23) < ((float)(0.0f)))? 1 : 0);
			// bool newIsUp = (distToTouchable > closestProximityTouchable.DebounceThreshold);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15394));
			float L_24 = V_4;
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_25 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15432));
			NullCheck(L_25);
			float L_26 = BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_inline(L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15432));
			V_6 = (bool)((((float)L_24) > ((float)L_26))? 1 : 0);
			// if (newIsDown)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15395));
			bool L_27 = V_5;
			V_10 = L_27;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15396));
			bool L_28 = V_10;
			if (!L_28)
			{
				goto IL_00e6;
			}
		}

IL_00db:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15397));
			// TryRaisePokeDown();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15398));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15433));
			PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15433));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15399));
			goto IL_0116;
		}

IL_00e6:
		{
			// else if (currentTouchableObjectDown != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15400));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_29 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15434));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_30 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_29, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15434));
			V_11 = L_30;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15401));
			bool L_31 = V_11;
			if (!L_31)
			{
				goto IL_0116;
			}
		}

IL_00f8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15402));
			// if (newIsUp)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15403));
			bool L_32 = V_6;
			V_12 = L_32;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15404));
			bool L_33 = V_12;
			if (!L_33)
			{
				goto IL_010c;
			}
		}

IL_0101:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15405));
			// TryRaisePokeUp();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15406));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15435));
			PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15435));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15407));
			goto IL_0115;
		}

IL_010c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15408));
			// TryRaisePokeDown();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15409));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15436));
			PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15436));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15410));
		}

IL_0115:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15411));
		}

IL_0116:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15412));
		}

IL_0117:
		{
			// PreviousPosition = Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15413));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15437));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15437));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15438));
			PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_inline(__this, L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15438));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15414));
			IL2CPP_LEAVE(0x136, FINALLY_0127);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0127;
	}

FINALLY_0127:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15415));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15439));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15439));
		IL2CPP_END_FINALLY(295)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(295)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x136, IL_0136)
	}

IL_0136:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15416));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPreCurrentPointerTargetChange()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnPreCurrentPointerTargetChange_m795EDADD45029177EBAACAB96CD7FEE642F3307D (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnPreCurrentPointerTargetChange_m795EDADD45029177EBAACAB96CD7FEE642F3307D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnPreCurrentPointerTargetChange_m795EDADD45029177EBAACAB96CD7FEE642F3307D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15440));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15441));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15442));
		// using (OnPreCurrentPointerTargetChangePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15443));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_OnPreCurrentPointerTargetChangePerfMarker_69();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15449));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15449));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15444));
		// TryRaisePokeUp();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15445));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15450));
		PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15450));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15446));
		IL2CPP_LEAVE(0x29, FINALLY_001a);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_001a;
	}

FINALLY_001a:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15447));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15451));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15451));
		IL2CPP_END_FINALLY(26)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(26)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x29, IL_0029)
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15448));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_TryRaisePokeDown_mFCBBB2759324C11A03FACEFCA441B928BEE4486A_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15452));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15453));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B6_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B11_0 = NULL;
	RuntimeObject* G_B10_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15454));
		// using (TryRaisePokeDownPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15455));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_TryRaisePokeDownPerfMarker_70();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15483));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15483));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15456));
			// GameObject targetObject = Result.CurrentPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15457));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15484));
			RuntimeObject* L_2 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15484));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15485));
			NullCheck(L_2);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15485));
			V_2 = L_3;
			// if (currentTouchableObjectDown == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15458));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15486));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15486));
			V_3 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15459));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_00c4;
			}
		}

IL_002f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15460));
			// if (IsObjectPartOfTouchable(targetObject, closestProximityTouchable))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15461));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = V_2;
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_8 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15487));
			IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
			bool L_9 = PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED(L_7, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15487));
			V_4 = L_9;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15462));
			bool L_10 = V_4;
			if (!L_10)
			{
				goto IL_00c1;
			}
		}

IL_0042:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15463));
			// currentTouchableObjectDown = targetObject;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15464));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = V_2;
			__this->set_currentTouchableObjectDown_65(L_11);
			// if (closestProximityTouchable.EventsToReceive == TouchableEventType.Pointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15465));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_12 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15488));
			NullCheck(L_12);
			int32_t L_13 = BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline(L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15488));
			V_5 = (bool)((((int32_t)L_13) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15466));
			bool L_14 = V_5;
			if (!L_14)
			{
				goto IL_0081;
			}
		}

IL_005e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15467));
			// CoreServices.InputSystem?.RaisePointerDown(this, pointerAction, Handedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15468));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15489));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_15 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15489));
			RuntimeObject* L_16 = L_15;
			G_B5_0 = L_16;
			if (L_16)
			{
				G_B6_0 = L_16;
				goto IL_006a;
			}
		}

IL_0067:
		{
			goto IL_007e;
		}

IL_006a:
		{
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_17 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_pointerAction_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15490));
			uint8_t L_18 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15490));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15491));
			NullCheck(G_B6_0);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(35 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B6_0, __this, L_17, L_18, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15491));
		}

IL_007e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15469));
			goto IL_00c0;
		}

IL_0081:
		{
			// else if (closestProximityTouchable.EventsToReceive == TouchableEventType.Touch)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15470));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_19 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15492));
			NullCheck(L_19);
			int32_t L_20 = BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15492));
			V_6 = (bool)((((int32_t)L_20) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15471));
			bool L_21 = V_6;
			if (!L_21)
			{
				goto IL_00c0;
			}
		}

IL_0095:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15472));
			// CoreServices.InputSystem?.RaiseOnTouchStarted(InputSourceParent, Controller, Handedness, Position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15473));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15493));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_22 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15493));
			RuntimeObject* L_23 = L_22;
			G_B10_0 = L_23;
			if (L_23)
			{
				G_B11_0 = L_23;
				goto IL_00a1;
			}
		}

IL_009e:
		{
			goto IL_00bf;
		}

IL_00a1:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15494));
			RuntimeObject* L_24 = BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15494));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15495));
			RuntimeObject* L_25 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15495));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15496));
			uint8_t L_26 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15496));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15497));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15497));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15498));
			NullCheck(G_B11_0);
			InterfaceActionInvoker4< RuntimeObject*, RuntimeObject*, uint8_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(65 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnTouchStarted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B11_0, L_24, L_25, L_26, L_27);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15498));
		}

IL_00bf:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15474));
		}

IL_00c0:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15475));
		}

IL_00c1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15476));
			goto IL_00d4;
		}

IL_00c4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15477));
			// RaiseTouchUpdated(targetObject, Position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15478));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_28 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15499));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15499));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15500));
			PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692(__this, L_28, L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15500));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15479));
		}

IL_00d4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15480));
			IL2CPP_LEAVE(0xE6, FINALLY_00d7);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00d7;
	}

FINALLY_00d7:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15481));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15501));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15501));
		IL2CPP_END_FINALLY(215)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(215)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xE6, IL_00e6)
	}

IL_00e6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15482));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15503));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B10_0 = NULL;
	RuntimeObject* G_B9_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15504));
		// using (TryRaisePokeUpPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15505));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_TryRaisePokeUpPerfMarker_71();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15527));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15527));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15506));
			// if (currentTouchableObjectDown != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15507));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15528));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15528));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15508));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_00db;
			}
		}

IL_0023:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15509));
			// Debug.Assert(Result.CurrentPointerTarget == currentTouchableObjectDown, "PokeUp will not be raised for correct object.");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15510));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15529));
			RuntimeObject* L_5 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15529));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15530));
			NullCheck(L_5);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_5);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15530));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15531));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_8 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_6, L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15531));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15532));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_8, _stringLiteral085002B3B7EB25B824CBDB37C210BCCDABA1415B, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15532));
			// if (closestProximityTouchable.EventsToReceive == TouchableEventType.Pointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15511));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_9 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15533));
			NullCheck(L_9);
			int32_t L_10 = BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15533));
			V_3 = (bool)((((int32_t)L_10) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15512));
			bool L_11 = V_3;
			if (!L_11)
			{
				goto IL_0094;
			}
		}

IL_0057:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15513));
			// CoreServices.InputSystem.RaisePointerClicked(this, pointerAction, 0, Handedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15514));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15534));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_12 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15534));
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_13 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_pointerAction_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15535));
			uint8_t L_14 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15535));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15536));
			NullCheck(L_12);
			InterfaceActionInvoker5< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , int32_t, uint8_t, RuntimeObject* >::Invoke(37 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerClicked(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Int32,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_12, __this, L_13, 0, L_14, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15536));
			// CoreServices.InputSystem?.RaisePointerUp(this, pointerAction, Handedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15515));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15537));
			RuntimeObject* L_15 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15537));
			RuntimeObject* L_16 = L_15;
			G_B4_0 = L_16;
			if (L_16)
			{
				G_B5_0 = L_16;
				goto IL_007d;
			}
		}

IL_007a:
		{
			goto IL_0091;
		}

IL_007d:
		{
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_17 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_pointerAction_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15538));
			uint8_t L_18 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15538));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15539));
			NullCheck(G_B5_0);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(38 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B5_0, __this, L_17, L_18, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15539));
		}

IL_0091:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15516));
			goto IL_00d3;
		}

IL_0094:
		{
			// else if (closestProximityTouchable.EventsToReceive == TouchableEventType.Touch)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15517));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_19 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15540));
			NullCheck(L_19);
			int32_t L_20 = BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15540));
			V_4 = (bool)((((int32_t)L_20) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15518));
			bool L_21 = V_4;
			if (!L_21)
			{
				goto IL_00d3;
			}
		}

IL_00a8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15519));
			// CoreServices.InputSystem?.RaiseOnTouchCompleted(InputSourceParent, Controller, Handedness, Position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15520));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15541));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_22 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15541));
			RuntimeObject* L_23 = L_22;
			G_B9_0 = L_23;
			if (L_23)
			{
				G_B10_0 = L_23;
				goto IL_00b4;
			}
		}

IL_00b1:
		{
			goto IL_00d2;
		}

IL_00b4:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15542));
			RuntimeObject* L_24 = BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15542));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15543));
			RuntimeObject* L_25 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15543));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15544));
			uint8_t L_26 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15544));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15545));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15545));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15546));
			NullCheck(G_B10_0);
			InterfaceActionInvoker4< RuntimeObject*, RuntimeObject*, uint8_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(67 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnTouchCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B10_0, L_24, L_25, L_26, L_27);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15546));
		}

IL_00d2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15521));
		}

IL_00d3:
		{
			// currentTouchableObjectDown = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15522));
			__this->set_currentTouchableObjectDown_65((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15523));
		}

IL_00db:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15524));
			IL2CPP_LEAVE(0xED, FINALLY_00de);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00de;
	}

FINALLY_00de:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15525));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15547));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15547));
		IL2CPP_END_FINALLY(222)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(222)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xED, IL_00ed)
	}

IL_00ed:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15526));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::RaiseTouchUpdated(UnityEngine.GameObject,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___targetObject0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___touchPosition1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___targetObject0), (&___touchPosition1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_RaiseTouchUpdated_mEC178BF7FCA2FDEEA7C03BF0254C959D0858F692_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15548));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15549));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B5_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	RuntimeObject* G_B13_0 = NULL;
	RuntimeObject* G_B12_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15550));
		// using (RaiseTouchUpdatedPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15551));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_RaiseTouchUpdatedPerfMarker_72();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15571));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15571));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15552));
			// if (currentTouchableObjectDown != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15553));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15572));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15572));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15554));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_00bc;
			}
		}

IL_0023:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15555));
			// Debug.Assert(Result?.CurrentPointerTarget == currentTouchableObjectDown);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15556));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15573));
			RuntimeObject* L_5 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15573));
			RuntimeObject* L_6 = L_5;
			G_B3_0 = L_6;
			if (L_6)
			{
				G_B4_0 = L_6;
				goto IL_0031;
			}
		}

IL_002d:
		{
			G_B5_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			goto IL_0036;
		}

IL_0031:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15574));
			NullCheck(G_B4_0);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, G_B4_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15574));
			G_B5_0 = L_7;
		}

IL_0036:
		{
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_currentTouchableObjectDown_65();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15575));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_9 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(G_B5_0, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15575));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15576));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15576));
			// if (closestProximityTouchable.EventsToReceive == TouchableEventType.Touch)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15557));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_10 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15577));
			NullCheck(L_10);
			int32_t L_11 = BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15577));
			V_3 = (bool)((((int32_t)L_11) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15558));
			bool L_12 = V_3;
			if (!L_12)
			{
				goto IL_0081;
			}
		}

IL_0059:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15559));
			// CoreServices.InputSystem?.RaiseOnTouchUpdated(InputSourceParent, Controller, Handedness, touchPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15560));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15578));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_13 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15578));
			RuntimeObject* L_14 = L_13;
			G_B7_0 = L_14;
			if (L_14)
			{
				G_B8_0 = L_14;
				goto IL_0065;
			}
		}

IL_0062:
		{
			goto IL_007e;
		}

IL_0065:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15579));
			RuntimeObject* L_15 = BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15579));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15580));
			RuntimeObject* L_16 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15580));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15581));
			uint8_t L_17 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15581));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = ___touchPosition1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15582));
			NullCheck(G_B8_0);
			InterfaceActionInvoker4< RuntimeObject*, RuntimeObject*, uint8_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(66 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnTouchUpdated(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B8_0, L_15, L_16, L_17, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15582));
		}

IL_007e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15561));
			goto IL_00bb;
		}

IL_0081:
		{
			// else if (closestProximityTouchable.EventsToReceive == TouchableEventType.Pointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15562));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_19 = __this->get_closestProximityTouchable_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15583));
			NullCheck(L_19);
			int32_t L_20 = BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15583));
			V_4 = (bool)((((int32_t)L_20) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15563));
			bool L_21 = V_4;
			if (!L_21)
			{
				goto IL_00bb;
			}
		}

IL_0095:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15564));
			// CoreServices.InputSystem?.RaisePointerDragged(this, pointerAction, Handedness, InputSourceParent);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15565));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15584));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_22 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15584));
			RuntimeObject* L_23 = L_22;
			G_B12_0 = L_23;
			if (L_23)
			{
				G_B13_0 = L_23;
				goto IL_00a1;
			}
		}

IL_009e:
		{
			goto IL_00ba;
		}

IL_00a1:
		{
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_24 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_pointerAction_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15585));
			uint8_t L_25 = ControllerPoseSynchronizer_get_Handedness_mB15CD9183C30F6FE9613600C344FEBE7430EB772(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15585));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15586));
			RuntimeObject* L_26 = BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15586));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15587));
			NullCheck(G_B13_0);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(36 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDragged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B13_0, __this, L_24, L_25, L_26);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15587));
		}

IL_00ba:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15566));
		}

IL_00bb:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15567));
		}

IL_00bc:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15568));
			IL2CPP_LEAVE(0xCE, FINALLY_00bf);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00bf;
	}

FINALLY_00bf:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15569));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15588));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15588));
		IL2CPP_END_FINALLY(191)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(191)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xCE, IL_00ce)
	}

IL_00ce:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15570));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::IsObjectPartOfTouchable(UnityEngine.GameObject,Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___targetObject0, BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * ___touchable1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___targetObject0), (&___touchable1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_IsObjectPartOfTouchable_m3AE423DC906E25D13907A6EE71CB9188382332ED_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15589));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15590));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B8_0 = 0;
	int32_t G_B10_0 = 0;
	int32_t G_B12_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15591));
		// using (IsObjectPartOfTouchablePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15592));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_IsObjectPartOfTouchablePerfMarker_73();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15597));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15597));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15593));
			// return targetObject != null && touchable != null &&
			//     (targetObject == touchable.gameObject ||
			//     // Descendant game objects are touchable as well. In particular, this is needed to be able to send
			//     // touch events to Unity UI control elements.
			//     (targetObject.transform != null && touchable.gameObject.transform != null &&
			//     targetObject.transform.IsChildOf(touchable.gameObject.transform)));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15594));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = ___targetObject0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15598));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15598));
			if (!L_3)
			{
				goto IL_006f;
			}
		}

IL_0019:
		{
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_4 = ___touchable1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15599));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15599));
			if (!L_5)
			{
				goto IL_006f;
			}
		}

IL_0022:
		{
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = ___targetObject0;
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_7 = ___touchable1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15600));
			NullCheck(L_7);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15600));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15601));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_9 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_6, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15601));
			if (L_9)
			{
				goto IL_006c;
			}
		}

IL_0030:
		{
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = ___targetObject0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15602));
			NullCheck(L_10);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15602));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15603));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_12 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_11, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15603));
			if (!L_12)
			{
				goto IL_0069;
			}
		}

IL_003e:
		{
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_13 = ___touchable1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15604));
			NullCheck(L_13);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15604));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15605));
			NullCheck(L_14);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15605));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15606));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_16 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_15, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15606));
			if (!L_16)
			{
				goto IL_0069;
			}
		}

IL_0051:
		{
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = ___targetObject0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15607));
			NullCheck(L_17);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15607));
			BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_19 = ___touchable1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15608));
			NullCheck(L_19);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15608));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15609));
			NullCheck(L_20);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15609));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15610));
			NullCheck(L_18);
			bool L_22 = Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80(L_18, L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15610));
			G_B8_0 = ((int32_t)(L_22));
			goto IL_006a;
		}

IL_0069:
		{
			G_B8_0 = 0;
		}

IL_006a:
		{
			G_B10_0 = G_B8_0;
			goto IL_006d;
		}

IL_006c:
		{
			G_B10_0 = 1;
		}

IL_006d:
		{
			G_B12_0 = G_B10_0;
			goto IL_0070;
		}

IL_006f:
		{
			G_B12_0 = 0;
		}

IL_0070:
		{
			V_2 = (bool)G_B12_0;
			IL2CPP_LEAVE(0x82, FINALLY_0073);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0073;
	}

FINALLY_0073:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15595));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15611));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15611));
		IL2CPP_END_FINALLY(115)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(115)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x82, IL_0082)
	}

IL_0082:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15596));
		bool L_23 = V_2;
		return L_23;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer.TryGetNearGraspPoint(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNearGraspPoint_m7BB85E6D6B6302A73D714F3ED373470ADD4253BC (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___position0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNearGraspPoint_m7BB85E6D6B6302A73D714F3ED373470ADD4253BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___position0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNearGraspPoint_m7BB85E6D6B6302A73D714F3ED373470ADD4253BC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15612));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15613));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15614));
		// position = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15615));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = ___position0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15618));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15618));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_0 = L_1;
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15616));
		V_0 = (bool)0;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15617));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer.TryGetDistanceToNearestSurface(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetDistanceToNearestSurface_m072861A03E945D89342B457DE8A11455511562BD (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, float* ___distance0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetDistanceToNearestSurface_m072861A03E945D89342B457DE8A11455511562BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___distance0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetDistanceToNearestSurface_m072861A03E945D89342B457DE8A11455511562BD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15619));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15620));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15621));
		// distance = closestDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15622));
		float* L_0 = ___distance0;
		float L_1 = __this->get_closestDistance_60();
		*((float*)L_0) = (float)L_1;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15623));
		V_0 = (bool)1;
		goto IL_000d;
	}

IL_000d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15624));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer.TryGetNormalToNearestSurface(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNormalToNearestSurface_m467676018B03FEFA353A631EA37D1878D8020D96 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___normal0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNormalToNearestSurface_m467676018B03FEFA353A631EA37D1878D8020D96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___normal0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityNearPointer_TryGetNormalToNearestSurface_m467676018B03FEFA353A631EA37D1878D8020D96_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15625));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15626));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15627));
		// normal = closestNormal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15628));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = ___normal0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = __this->get_closestNormal_61();
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_0 = L_1;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15629));
		V_0 = (bool)1;
		goto IL_0011;
	}

IL_0011:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15630));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnSourceLost_mE53476A6663B3CA38F7446A7C37EBA4495156269 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnSourceLost_mE53476A6663B3CA38F7446A7C37EBA4495156269_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnSourceLost_mE53476A6663B3CA38F7446A7C37EBA4495156269_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15631));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15632));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15633));
		// using (OnSourceLostPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15634));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_OnSourceLostPerfMarker_74();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15641));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15641));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15635));
		// TryRaisePokeUp();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15636));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15642));
		PokePointer_TryRaisePokeUp_m90FEF6FE11E00FAF240EE3BBDA00BE230ACAD2BE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15642));
		// base.OnSourceLost(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15637));
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15643));
		BaseControllerPointer_OnSourceLost_mACE60EBAC1FF6EEC9C6815276505A2F709142395(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15643));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15638));
		IL2CPP_LEAVE(0x31, FINALLY_0022);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0022;
	}

FINALLY_0022:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15639));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15644));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15644));
		IL2CPP_END_FINALLY(34)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(34)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x31, IL_0031)
	}

IL_0031:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15640));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnSourceDetected_mD73D4A279A5F3B4B1758DD6ABC3B6913CB5F4131 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnSourceDetected_mD73D4A279A5F3B4B1758DD6ABC3B6913CB5F4131_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnSourceDetected_mD73D4A279A5F3B4B1758DD6ABC3B6913CB5F4131_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15645));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15646));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15647));
		// using (OnSourceDetectedPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15648));
		IL2CPP_RUNTIME_CLASS_INIT(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->get_OnSourceDetectedPerfMarker_75();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15655));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15655));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15649));
		// base.OnSourceDetected(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15650));
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15656));
		ControllerPoseSynchronizer_OnSourceDetected_m19DAD7BE24CF3CE5CEFAF1DC8E039AA09C88C08B(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15656));
		// PreviousPosition = Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15651));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15657));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15657));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15658));
		PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15658));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15652));
		IL2CPP_LEAVE(0x37, FINALLY_0028);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0028;
	}

FINALLY_0028:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15653));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15659));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15659));
		IL2CPP_END_FINALLY(40)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(40)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x37, IL_0037)
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15654));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnSourcePoseChanged_mC9549C992330095FBD4B2F8406CA42BE5EBE5640 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnSourcePoseChanged_mC9549C992330095FBD4B2F8406CA42BE5EBE5640_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnSourcePoseChanged_mC9549C992330095FBD4B2F8406CA42BE5EBE5640_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15660));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15661));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15662));
		// base.OnSourcePoseChanged(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15663));
		SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15670));
		ControllerPoseSynchronizer_OnSourcePoseChanged_m710987366AD5B3E0C121BD86E0F701A83DE0E548(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15670));
		// if (SourcePoseDataUsable(eventData))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15664));
		SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15671));
		bool L_2 = ControllerPoseSynchronizer_SourcePoseDataUsable_TisMixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_m64357EB618B8D575F56DFCEB1A24D4AFFD7C77EF(__this, L_1, /*hidden argument*/ControllerPoseSynchronizer_SourcePoseDataUsable_TisMixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_m64357EB618B8D575F56DFCEB1A24D4AFFD7C77EF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15671));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15665));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15666));
		// transform.position += sourcePoseOffset * transform.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15672));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15672));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = L_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15673));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15673));
		float L_7 = __this->get_sourcePoseOffset_54();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15674));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15674));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15675));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15675));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15676));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(L_7, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15676));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15677));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_6, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15677));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15678));
		NullCheck(L_5);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_5, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15678));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15668));
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15669));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnInputDown_m87E9D1699C6400984D13B2DADBE10D538383E103 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnInputDown_m87E9D1699C6400984D13B2DADBE10D538383E103_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnInputDown_m87E9D1699C6400984D13B2DADBE10D538383E103_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15680));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15681));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15682));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnInputUp_mF04BB0584833FF22F9B03B112D3E42D820125ED8 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnInputUp_mF04BB0584833FF22F9B03B112D3E42D820125ED8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnInputUp_mF04BB0584833FF22F9B03B112D3E42D820125ED8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15683));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15684));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15685));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15686));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnEnable_m0C9E0360659942D8C09658DF0452C54582781B57 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnEnable_m0C9E0360659942D8C09658DF0452C54582781B57_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnEnable_m0C9E0360659942D8C09658DF0452C54582781B57_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15687));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15688));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15689));
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15690));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15693));
		BaseControllerPointer_OnEnable_m76A38FA289173B6CA59393DB0A8CD8AC2AA5354F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15693));
		// IsTargetPositionLockedOnFocusLock = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15691));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15694));
		VirtActionInvoker1< bool >::Invoke(91 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::set_IsTargetPositionLockedOnFocusLock(System.Boolean) */, __this, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15694));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15692));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::OnDrawGizmos()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer_OnDrawGizmos_m5130C0B3D4A008B0A37689573B6B10259F9911D3 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_OnDrawGizmos_m5130C0B3D4A008B0A37689573B6B10259F9911D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_OnDrawGizmos_m5130C0B3D4A008B0A37689573B6B10259F9911D3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15695));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15696));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15697));
		// if (!IsNearObject)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15711));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(108 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::get_IsNearObject() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15711));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15699));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15700));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15701));
		goto IL_004c;
	}

IL_0011:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15702));
		// Gizmos.color = Color.green;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15703));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15712));
		Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_2 = Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15712));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15713));
		Gizmos_set_color_mFA6C199DF05FF557AEF662222CA60EC25DF54F28(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15713));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15704));
		// if (closestProximityTouchable != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15705));
		BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_3 = __this->get_closestProximityTouchable_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15714));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15714));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15706));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_004c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15707));
		// Gizmos.DrawLine(Position, closestProximityTouchable.transform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15708));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15715));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15715));
		BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * L_7 = __this->get_closestProximityTouchable_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15716));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15716));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15717));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15717));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15718));
		Gizmos_DrawLine_m9515D59D2536571F4906A3C54E613A3986DFD892(L_6, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15718));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15709));
	}

IL_004c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15710));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer__ctor_mBDAAEE8253CE042E4862C43781639271B1F5A353 (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer__ctor_mBDAAEE8253CE042E4862C43781639271B1F5A353_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer__ctor_mBDAAEE8253CE042E4862C43781639271B1F5A353_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15719));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15720));
	{
		// protected float touchableDistance = 0.2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15721));
		__this->set_touchableDistance_53((0.2f));
		// protected float sourcePoseOffset = 0.075f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15722));
		__this->set_sourcePoseOffset_54((0.075f));
		// private int sceneQueryBufferSize = 64;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15723));
		__this->set_sceneQueryBufferSize_55(((int32_t)64));
		// private bool ignoreCollidersNotInFOV = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15724));
		__this->set_ignoreCollidersNotInFOV_56((bool)1);
		// private LayerMask[] pokeLayerMasks = { UnityEngine.Physics.DefaultRaycastLayers };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15725));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = (LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)SZArrayNew(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var, (uint32_t)1);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15732));
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_2 = LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300(((int32_t)-5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15732));
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 )L_2);
		__this->set_pokeLayerMasks_57(L_1);
		// protected QueryTriggerInteraction triggerInteraction = QueryTriggerInteraction.UseGlobal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15726));
		__this->set_triggerInteraction_58(0);
		// private float closestDistance = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15727));
		__this->set_closestDistance_60((0.0f));
		// private Vector3 closestNormal = Vector3.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15728));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15733));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15733));
		__this->set_closestNormal_61(L_3);
		// public Vector3 PreviousPosition { get; private set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15734));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15734));
		__this->set_U3CPreviousPositionU3Ek__BackingField_63(L_4);
		// private BaseNearInteractionTouchable closestProximityTouchable = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15730));
		__this->set_closestProximityTouchable_64((BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 *)NULL);
		// private GameObject currentTouchableObjectDown = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15731));
		__this->set_currentTouchableObjectDown_65((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15735));
		IL2CPP_RUNTIME_CLASS_INIT(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_il2cpp_TypeInfo_var);
		BaseControllerPointer__ctor_m8374A8CF3D902194835061AD6EC89AAE3FA48071(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15735));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PokePointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PokePointer__cctor_mF0A0A6F42666213601017ED723A2E97B27ADBD9D (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer__cctor_mF0A0A6F42666213601017ED723A2E97B27ADBD9D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer__cctor_mF0A0A6F42666213601017ED723A2E97B27ADBD9D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15737));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] PokePointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15738));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15748));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral46EFC595CFB8E0F246662AB7EECB2F2681F98B1E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15748));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_66(L_0);
		// private static readonly ProfilerMarker FindClosestTouchableForLayerMaskPerfMarker = new ProfilerMarker("[MRTK] PokePointer.FindClosestTouchableForLayerMask");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15739));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15749));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteralC47A905AD1548A7299898CC00AB606DF10E8699A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15749));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_FindClosestTouchableForLayerMaskPerfMarker_67(L_1);
		// private static readonly ProfilerMarker OnPostSceneQueryPerfMarker = new ProfilerMarker("[MRTK] PokePointer.OnPostSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15740));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15750));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral44742D336E587EC2128A3E569629C97928489B24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15750));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_OnPostSceneQueryPerfMarker_68(L_2);
		// private static readonly ProfilerMarker OnPreCurrentPointerTargetChangePerfMarker = new ProfilerMarker("[MRTK] PokePointer.OnPreCurrentPointerTargetChange");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15741));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15751));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteralDFFC0E4522726B468881CAFB7963FCDD1F40F452, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15751));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_OnPreCurrentPointerTargetChangePerfMarker_69(L_3);
		// private static readonly ProfilerMarker TryRaisePokeDownPerfMarker = new ProfilerMarker("[MRTK] PokePointer.TryRaisePokeDown");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15742));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15752));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral8951363A979607739364D55730A9537579E964A3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15752));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_TryRaisePokeDownPerfMarker_70(L_4);
		// private static readonly ProfilerMarker TryRaisePokeUpPerfMarker = new ProfilerMarker("[MRTK] PokePointer.TryRaisePokeUp");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15743));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15753));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_5;
		memset((&L_5), 0, sizeof(L_5));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_5), _stringLiteral846456EB030EBDA42854E8FEF8AC6BE7B6DB6313, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15753));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_TryRaisePokeUpPerfMarker_71(L_5);
		// private static readonly ProfilerMarker RaiseTouchUpdatedPerfMarker = new ProfilerMarker("[MRTK] PokePointer.RaiseTouchUpdated");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15744));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15754));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_6;
		memset((&L_6), 0, sizeof(L_6));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_6), _stringLiteralB869932F03E15335DFA1FCEECABFFB873C6F21C8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15754));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_RaiseTouchUpdatedPerfMarker_72(L_6);
		// private static readonly ProfilerMarker IsObjectPartOfTouchablePerfMarker = new ProfilerMarker("[MRTK] PokePointer.IsObjectPartOfTouchable");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15745));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15755));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_7;
		memset((&L_7), 0, sizeof(L_7));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_7), _stringLiteralFDCC443041D00DF5E1AA6E470DF4A8EF991509E1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15755));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_IsObjectPartOfTouchablePerfMarker_73(L_7);
		// private static readonly ProfilerMarker OnSourceLostPerfMarker = new ProfilerMarker("[MRTK] PokePointer.OnSourceLost");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15746));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15756));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_8;
		memset((&L_8), 0, sizeof(L_8));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_8), _stringLiteralC692260D69D220BDFCA074467A934176DB0EE83D, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15756));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_OnSourceLostPerfMarker_74(L_8);
		// private static readonly ProfilerMarker OnSourceDetectedPerfMarker = new ProfilerMarker("[MRTK] PokePointer.OnSourceDetected");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15757));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_9;
		memset((&L_9), 0, sizeof(L_9));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_9), _stringLiteral35063E09E652F9038C1CAA6BABF2534984630749, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15757));
		((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields*)il2cpp_codegen_static_fields_for(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var))->set_OnSourceDetectedPerfMarker_75(L_9);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_GameObjectProxy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * RiggedHandVisualizer_get_GameObjectProxy_m424F0E776CFAC56EF5D4ADB6D94AD9EF27560D48 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_GameObjectProxy_m424F0E776CFAC56EF5D4ADB6D94AD9EF27560D48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_GameObjectProxy_m424F0E776CFAC56EF5D4ADB6D94AD9EF27560D48_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16908));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16909));
	{
		// public GameObject GameObjectProxy => gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16910));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16911));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16911));
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_Controller()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16912));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16913));
	{
		// public IMixedRealityController Controller { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16914));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_4();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_set_Controller_m727630D5A11D16D42CCEDD9275C922C144967B2F (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_set_Controller_m727630D5A11D16D42CCEDD9275C922C144967B2F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_set_Controller_m727630D5A11D16D42CCEDD9275C922C144967B2F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16915));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16916));
	{
		// public IMixedRealityController Controller { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16917));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CControllerU3Ek__BackingField_4(L_0);
		return;
	}
}
// UnityEngine.SkinnedMeshRenderer Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_HandRenderer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16918));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16919));
	{
		// public SkinnedMeshRenderer HandRenderer => handRenderer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16920));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_0 = __this->get_handRenderer_22();
		return L_0;
	}
}
// UnityEngine.Material Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_HandMaterial()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * RiggedHandVisualizer_get_HandMaterial_mE7FAF6048E31A6EC54A26ECC2D975D126B2DBAD4 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_HandMaterial_mE7FAF6048E31A6EC54A26ECC2D975D126B2DBAD4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_HandMaterial_mE7FAF6048E31A6EC54A26ECC2D975D126B2DBAD4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16921));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16922));
	{
		// public Material HandMaterial => handMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16923));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_handMaterial_24();
		return L_0;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_PinchStrengthMaterialProperty()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* RiggedHandVisualizer_get_PinchStrengthMaterialProperty_m2DDAB8EF7050F93E38D5666F75BC5B80C21DA6DB (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_PinchStrengthMaterialProperty_m2DDAB8EF7050F93E38D5666F75BC5B80C21DA6DB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_PinchStrengthMaterialProperty_m2DDAB8EF7050F93E38D5666F75BC5B80C21DA6DB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16924));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16925));
	{
		// public string PinchStrengthMaterialProperty => pinchStrengthMaterialProperty;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16926));
		return _stringLiteralE5A37A156725ACBF18488A7BEDF3E9C5231AF5AE;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::get_userBoneRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16927));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16928));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16929));
		// if (ModelFingerPointing == Vector3.zero || ModelPalmFacing == Vector3.zero)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16930));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_ModelFingerPointing_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16936));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16936));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16937));
		bool L_2 = Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16937));
		if (L_2)
		{
			goto IL_0025;
		}
	}
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = __this->get_ModelPalmFacing_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16938));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16939));
		bool L_5 = Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16939));
		G_B3_0 = ((int32_t)(L_5));
		goto IL_0026;
	}

IL_0025:
	{
		G_B3_0 = 1;
	}

IL_0026:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16931));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16932));
		// return Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16933));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16940));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16940));
		V_1 = L_7;
		goto IL_0051;
	}

IL_0033:
	{
		// return Quaternion.Inverse(Quaternion.LookRotation(ModelFingerPointing, -ModelPalmFacing));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16934));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = __this->get_ModelFingerPointing_20();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = __this->get_ModelPalmFacing_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16941));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16941));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16942));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672(L_8, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16942));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16943));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16943));
		V_1 = L_12;
		goto IL_0051;
	}

IL_0051:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16935));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = V_1;
		return L_13;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Reorientation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16944));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16945));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16946));
		// return Quaternion.Inverse(Quaternion.LookRotation(ModelFingerPointing, -ModelPalmFacing));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16947));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_ModelFingerPointing_20();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = __this->get_ModelPalmFacing_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16949));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16949));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16950));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672(L_0, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16951));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_4 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16951));
		V_0 = L_4;
		goto IL_001f;
	}

IL_001f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16948));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = V_0;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_Start_m34414F3689FD5D392B99002BB50014FC9230908E (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_Start_m34414F3689FD5D392B99002BB50014FC9230908E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_Start_m34414F3689FD5D392B99002BB50014FC9230908E_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16953));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16954));
		// HandRenderer.enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16955));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17041));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_0 = RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17042));
		NullCheck(L_0);
		Renderer_set_enabled_m0933766657F2685BAAE3340B0A984C0E63925303(L_0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17042));
		// joints[TrackedHandJoint.Wrist] = Wrist;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16956));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_1 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_Wrist_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17043));
		NullCheck(L_1);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_1, 1, L_2, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17043));
		// joints[TrackedHandJoint.Palm] = Palm;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16957));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_3 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = __this->get_Palm_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17044));
		NullCheck(L_3);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_3, 2, L_4, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17044));
		// if (ThumbRoot)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16958));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = __this->get_ThumbRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17045));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17045));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16959));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_00b7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16960));
		// if (ThumbRootIsMetacarpal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16961));
		bool L_8 = __this->get_ThumbRootIsMetacarpal_8();
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16962));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0079;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16963));
		// joints[TrackedHandJoint.ThumbMetacarpalJoint] = ThumbRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16964));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_10 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_ThumbRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17046));
		NullCheck(L_10);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_10, 3, L_11, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17046));
		// joints[TrackedHandJoint.ThumbProximalJoint] = RetrieveChild(TrackedHandJoint.ThumbMetacarpalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16965));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_12 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17047));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17047));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17048));
		NullCheck(L_12);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_12, 4, L_13, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17048));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16966));
		goto IL_008e;
	}

IL_0079:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16967));
		// joints[TrackedHandJoint.ThumbProximalJoint] = ThumbRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16968));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_14 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = __this->get_ThumbRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17049));
		NullCheck(L_14);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_14, 4, L_15, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17049));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16969));
	}

IL_008e:
	{
		// joints[TrackedHandJoint.ThumbDistalJoint] = RetrieveChild(TrackedHandJoint.ThumbProximalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16970));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_16 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17050));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_17 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17050));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17051));
		NullCheck(L_16);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_16, 5, L_17, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17051));
		// joints[TrackedHandJoint.ThumbTip] = RetrieveChild(TrackedHandJoint.ThumbDistalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16971));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_18 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17052));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, 5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17052));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17053));
		NullCheck(L_18);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_18, 6, L_19, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17053));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16972));
	}

IL_00b7:
	{
		// if (IndexRoot)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16973));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = __this->get_IndexRoot_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17054));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_21 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17054));
		V_3 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16974));
		bool L_22 = V_3;
		if (!L_22)
		{
			goto IL_0158;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16975));
		// if (IndexRootIsMetacarpal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16976));
		bool L_23 = __this->get_IndexRootIsMetacarpal_10();
		V_4 = L_23;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16977));
		bool L_24 = V_4;
		if (!L_24)
		{
			goto IL_0101;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16978));
		// joints[TrackedHandJoint.IndexMetacarpal] = IndexRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16979));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_25 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = __this->get_IndexRoot_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17055));
		NullCheck(L_25);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_25, 7, L_26, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17055));
		// joints[TrackedHandJoint.IndexKnuckle] = RetrieveChild(TrackedHandJoint.IndexMetacarpal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16980));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_27 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17056));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17056));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17057));
		NullCheck(L_27);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_27, 8, L_28, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17057));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16981));
		goto IL_0116;
	}

IL_0101:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16982));
		// joints[TrackedHandJoint.IndexKnuckle] = IndexRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16983));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_29 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = __this->get_IndexRoot_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17058));
		NullCheck(L_29);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_29, 8, L_30, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17058));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16984));
	}

IL_0116:
	{
		// joints[TrackedHandJoint.IndexMiddleJoint] = RetrieveChild(TrackedHandJoint.IndexKnuckle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16985));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_31 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17059));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, 8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17059));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17060));
		NullCheck(L_31);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_31, ((int32_t)9), L_32, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17060));
		// joints[TrackedHandJoint.IndexDistalJoint] = RetrieveChild(TrackedHandJoint.IndexMiddleJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16986));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_33 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17061));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_34 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)9), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17061));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17062));
		NullCheck(L_33);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_33, ((int32_t)10), L_34, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17062));
		// joints[TrackedHandJoint.IndexTip] = RetrieveChild(TrackedHandJoint.IndexDistalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16987));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_35 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17063));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)10), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17063));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17064));
		NullCheck(L_35);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_35, ((int32_t)11), L_36, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17064));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16988));
	}

IL_0158:
	{
		// if (MiddleRoot)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16989));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = __this->get_MiddleRoot_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17065));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_38 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17065));
		V_5 = L_38;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16990));
		bool L_39 = V_5;
		if (!L_39)
		{
			goto IL_0200;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16991));
		// if (MiddleRootIsMetacarpal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16992));
		bool L_40 = __this->get_MiddleRootIsMetacarpal_12();
		V_6 = L_40;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16993));
		bool L_41 = V_6;
		if (!L_41)
		{
			goto IL_01a7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16994));
		// joints[TrackedHandJoint.MiddleMetacarpal] = MiddleRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16995));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_42 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = __this->get_MiddleRoot_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17066));
		NullCheck(L_42);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_42, ((int32_t)12), L_43, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17066));
		// joints[TrackedHandJoint.MiddleKnuckle] = RetrieveChild(TrackedHandJoint.MiddleMetacarpal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16996));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_44 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17067));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_45 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)12), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17067));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17068));
		NullCheck(L_44);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_44, ((int32_t)13), L_45, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17068));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16997));
		goto IL_01bd;
	}

IL_01a7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16998));
		// joints[TrackedHandJoint.MiddleKnuckle] = MiddleRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16999));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_46 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = __this->get_MiddleRoot_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17069));
		NullCheck(L_46);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_46, ((int32_t)13), L_47, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17069));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17000));
	}

IL_01bd:
	{
		// joints[TrackedHandJoint.MiddleMiddleJoint] = RetrieveChild(TrackedHandJoint.MiddleKnuckle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17001));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_48 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17070));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_49 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)13), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17070));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17071));
		NullCheck(L_48);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_48, ((int32_t)14), L_49, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17071));
		// joints[TrackedHandJoint.MiddleDistalJoint] = RetrieveChild(TrackedHandJoint.MiddleMiddleJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17002));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_50 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17072));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_51 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)14), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17072));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17073));
		NullCheck(L_50);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_50, ((int32_t)15), L_51, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17073));
		// joints[TrackedHandJoint.MiddleTip] = RetrieveChild(TrackedHandJoint.MiddleDistalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17003));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_52 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17074));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_53 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)15), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17075));
		NullCheck(L_52);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_52, ((int32_t)16), L_53, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17075));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17004));
	}

IL_0200:
	{
		// if (RingRoot)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17005));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_54 = __this->get_RingRoot_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17076));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_55 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17076));
		V_7 = L_55;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17006));
		bool L_56 = V_7;
		if (!L_56)
		{
			goto IL_02a8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17007));
		// if (RingRootIsMetacarpal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17008));
		bool L_57 = __this->get_RingRootIsMetacarpal_14();
		V_8 = L_57;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17009));
		bool L_58 = V_8;
		if (!L_58)
		{
			goto IL_024f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17010));
		// joints[TrackedHandJoint.RingMetacarpal] = RingRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17011));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_59 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_60 = __this->get_RingRoot_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17077));
		NullCheck(L_59);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_59, ((int32_t)17), L_60, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17077));
		// joints[TrackedHandJoint.RingKnuckle] = RetrieveChild(TrackedHandJoint.RingMetacarpal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17012));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_61 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17078));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_62 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)17), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17078));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17079));
		NullCheck(L_61);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_61, ((int32_t)18), L_62, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17079));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17013));
		goto IL_0265;
	}

IL_024f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17014));
		// joints[TrackedHandJoint.RingKnuckle] = RingRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17015));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_63 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_64 = __this->get_RingRoot_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17080));
		NullCheck(L_63);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_63, ((int32_t)18), L_64, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17080));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17016));
	}

IL_0265:
	{
		// joints[TrackedHandJoint.RingMiddleJoint] = RetrieveChild(TrackedHandJoint.RingKnuckle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17017));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_65 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17081));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_66 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)18), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17082));
		NullCheck(L_65);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_65, ((int32_t)19), L_66, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17082));
		// joints[TrackedHandJoint.RingDistalJoint] = RetrieveChild(TrackedHandJoint.RingMiddleJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17018));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_67 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17083));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_68 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)19), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17083));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17084));
		NullCheck(L_67);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_67, ((int32_t)20), L_68, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17084));
		// joints[TrackedHandJoint.RingTip] = RetrieveChild(TrackedHandJoint.RingDistalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17019));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_69 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17085));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_70 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)20), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17085));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17086));
		NullCheck(L_69);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_69, ((int32_t)21), L_70, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17086));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17020));
	}

IL_02a8:
	{
		// if (PinkyRoot)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17021));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_71 = __this->get_PinkyRoot_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17087));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_72 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_71, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17087));
		V_9 = L_72;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17022));
		bool L_73 = V_9;
		if (!L_73)
		{
			goto IL_0350;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17023));
		// if (PinkyRootIsMetacarpal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17024));
		bool L_74 = __this->get_PinkyRootIsMetacarpal_16();
		V_10 = L_74;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17025));
		bool L_75 = V_10;
		if (!L_75)
		{
			goto IL_02f7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17026));
		// joints[TrackedHandJoint.PinkyMetacarpal] = PinkyRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17027));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_76 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_77 = __this->get_PinkyRoot_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17088));
		NullCheck(L_76);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_76, ((int32_t)22), L_77, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17088));
		// joints[TrackedHandJoint.PinkyKnuckle] = RetrieveChild(TrackedHandJoint.PinkyMetacarpal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17028));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_78 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17089));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_79 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)22), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17089));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17090));
		NullCheck(L_78);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_78, ((int32_t)23), L_79, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17090));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17029));
		goto IL_030d;
	}

IL_02f7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17030));
		// joints[TrackedHandJoint.PinkyKnuckle] = PinkyRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17031));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_80 = __this->get_joints_32();
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_81 = __this->get_PinkyRoot_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17091));
		NullCheck(L_80);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_80, ((int32_t)23), L_81, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17091));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17032));
	}

IL_030d:
	{
		// joints[TrackedHandJoint.PinkyMiddleJoint] = RetrieveChild(TrackedHandJoint.PinkyKnuckle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17033));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_82 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17092));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_83 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)23), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17093));
		NullCheck(L_82);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_82, ((int32_t)24), L_83, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17093));
		// joints[TrackedHandJoint.PinkyDistalJoint] = RetrieveChild(TrackedHandJoint.PinkyMiddleJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17034));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_84 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17094));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_85 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)24), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17095));
		NullCheck(L_84);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_84, ((int32_t)25), L_85, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17095));
		// joints[TrackedHandJoint.PinkyTip] = RetrieveChild(TrackedHandJoint.PinkyDistalJoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17035));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_86 = __this->get_joints_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17096));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_87 = RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0(__this, ((int32_t)25), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17096));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17097));
		NullCheck(L_86);
		Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940(L_86, ((int32_t)26), L_87, /*hidden argument*/Dictionary_2_set_Item_m0C08668D7AA0C20EFEC2EFDF8A29D2EA69346940_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17097));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17036));
	}

IL_0350:
	{
		// var handMaterialInstance = new Material(handMaterial);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17037));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_88 = __this->get_handMaterial_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17098));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_89 = (Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)il2cpp_codegen_object_new(Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598_il2cpp_TypeInfo_var);
		Material__ctor_m0171C6D4D3FD04D58C70808F255DBA67D0ED2BDE(L_89, L_88, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17098));
		V_0 = L_89;
		// handRenderer.sharedMaterial = handMaterialInstance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17038));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_90 = __this->get_handRenderer_22();
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_91 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17099));
		NullCheck(L_90);
		Renderer_set_sharedMaterial_mC94A354D9B0FCA081754A7CB51AEE5A9AD3946A3(L_90, L_91, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17099));
		// handRendererInitialized = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17039));
		__this->set_handRendererInitialized_23((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17040));
		return;
	}
}
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::RetrieveChild(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, int32_t ___parentJoint0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___parentJoint0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_RetrieveChild_mB84A7EBC60BE20FCBF58BF33E74430A45FECA6A0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17100));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17101));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17102));
		// if (joints[parentJoint] != null && joints[parentJoint].childCount > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17103));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_0 = __this->get_joints_32();
		int32_t L_1 = ___parentJoint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17109));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_0, L_1, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17109));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17110));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17110));
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_4 = __this->get_joints_32();
		int32_t L_5 = ___parentJoint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17111));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_4, L_5, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17111));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17112));
		NullCheck(L_6);
		int32_t L_7 = Transform_get_childCount_m7665D779DCDB6B175FB52A254276CDF0C384A724(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17112));
		G_B3_0 = ((((int32_t)L_7) > ((int32_t)0))? 1 : 0);
		goto IL_002c;
	}

IL_002b:
	{
		G_B3_0 = 0;
	}

IL_002c:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17104));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17105));
		// return joints[parentJoint].GetChild(0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17106));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_9 = __this->get_joints_32();
		int32_t L_10 = ___parentJoint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17113));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_9, L_10, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17113));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17114));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = Transform_GetChild_mC86B9B61E4EC086A571B09EA7A33FFBF50DF52D3(L_11, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17114));
		V_1 = L_12;
		goto IL_004a;
	}

IL_0046:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17107));
		V_1 = (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL;
		goto IL_004a;
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17108));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = V_1;
		return L_13;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Distance(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float RiggedHandVisualizer_Distance_m07CEDFDCFF5B58A75EE344A7E1D4BAB92B0FBF2A (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, int32_t ___joint10, int32_t ___joint21, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_Distance_m07CEDFDCFF5B58A75EE344A7E1D4BAB92B0FBF2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joint10), (&___joint21));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_Distance_m07CEDFDCFF5B58A75EE344A7E1D4BAB92B0FBF2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17115));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17116));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17117));
		// if (joints[joint1] != null && joints[joint2] != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17118));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_0 = __this->get_joints_32();
		int32_t L_1 = ___joint10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17124));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_0, L_1, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17124));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17125));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17125));
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_4 = __this->get_joints_32();
		int32_t L_5 = ___joint21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17126));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_4, L_5, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17126));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17127));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17127));
		G_B3_0 = ((int32_t)(L_7));
		goto IL_002a;
	}

IL_0029:
	{
		G_B3_0 = 0;
	}

IL_002a:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17119));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0059;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17120));
		// return Vector3.Distance(joints[joint1].position, joints[joint2].position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17121));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_9 = __this->get_joints_32();
		int32_t L_10 = ___joint10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17128));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_9, L_10, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17129));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17129));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_13 = __this->get_joints_32();
		int32_t L_14 = ___joint21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17130));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205(L_13, L_14, /*hidden argument*/Dictionary_2_get_Item_m7C59795F6C072062ECA362E8583899B478E01205_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17130));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17131));
		NullCheck(L_15);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17131));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17132));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_17 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_12, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17132));
		V_1 = L_17;
		goto IL_0061;
	}

IL_0059:
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17122));
		V_1 = (0.0f);
		goto IL_0061;
	}

IL_0061:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17123));
		float L_18 = V_1;
		return L_18;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_OnEnable_m42AD1945AFF57A21B1BA5F48FF2F7873345CB869 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_OnEnable_m42AD1945AFF57A21B1BA5F48FF2F7873345CB869_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_OnEnable_m42AD1945AFF57A21B1BA5F48FF2F7873345CB869_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17133));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17134));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17135));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealitySourceStateHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17136));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17139));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17139));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17140));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_m47B07025FD5C8A66BA152D91C274B257BC986164_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17140));
	}

IL_0013:
	{
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityHandJointHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17137));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17141));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17141));
		RuntimeObject* L_3 = L_2;
		G_B4_0 = L_3;
		if (L_3)
		{
			G_B5_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0025;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17142));
		NullCheck(G_B5_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityHandJointHandler_t77C089DB868FC835FEFEF29811BEABBAC3FD3B31_m3DF506523059306D61105F9CE235BD0FF198B98F_RuntimeMethod_var, G_B5_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17142));
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17138));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_OnDisable_m6D8A3F5F4795014C9CB7CE63999951E3F4C844FF (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_OnDisable_m6D8A3F5F4795014C9CB7CE63999951E3F4C844FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_OnDisable_m6D8A3F5F4795014C9CB7CE63999951E3F4C844FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17143));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17144));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17145));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealitySourceStateHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17149));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17149));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17150));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySourceStateHandler_tB51E20DDBCE630C7ABE435D0F71416CC2D628870_mF0FE6BDF3711F115C265014A0CB44A0F61EAF864_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17150));
	}

IL_0013:
	{
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityHandJointHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17147));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17151));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17151));
		RuntimeObject* L_3 = L_2;
		G_B4_0 = L_3;
		if (L_3)
		{
			G_B5_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0025;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17152));
		NullCheck(G_B5_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityHandJointHandler_t77C089DB868FC835FEFEF29811BEABBAC3FD3B31_m675989B7D28DE0A7AB269882E140696E8DD5F923_RuntimeMethod_var, G_B5_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17152));
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17148));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySourceStateHandler.OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m5225D4F741620AEDB153C142A6C8C29A97AEF2BD (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m5225D4F741620AEDB153C142A6C8C29A97AEF2BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m5225D4F741620AEDB153C142A6C8C29A97AEF2BD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17153));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17154));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17155));
		// void IMixedRealitySourceStateHandler.OnSourceDetected(SourceStateEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17156));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySourceStateHandler.OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mDBE1C00920F5E8FDF0DB8EFDCEFE6A223BCDEB1F (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mDBE1C00920F5E8FDF0DB8EFDCEFE6A223BCDEB1F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_1;
	memset((&V_1), 0, sizeof(V_1));
	uint32_t V_2 = 0;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mDBE1C00920F5E8FDF0DB8EFDCEFE6A223BCDEB1F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17157));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17158));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17159));
		// if (Controller?.InputSource.SourceId == eventData.SourceId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17160));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17166));
		RuntimeObject* L_0 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17166));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_0016;
		}
	}
	{
		il2cpp_codegen_initobj((&V_3), sizeof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 ));
		Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_2 = V_3;
		G_B3_0 = L_2;
		goto IL_0025;
	}

IL_0016:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17167));
		NullCheck(G_B2_0);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17167));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17168));
		NullCheck(L_3);
		uint32_t L_4 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17169));
		Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_5;
		memset((&L_5), 0, sizeof(L_5));
		Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B((&L_5), L_4, /*hidden argument*/Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17169));
		G_B3_0 = L_5;
	}

IL_0025:
	{
		V_1 = G_B3_0;
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17170));
		NullCheck(L_6);
		uint32_t L_7 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17170));
		V_2 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17171));
		uint32_t L_8 = Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_1), /*hidden argument*/Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17171));
		uint32_t L_9 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17172));
		bool L_10 = Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_1), /*hidden argument*/Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17172));
		V_0 = (bool)((int32_t)((int32_t)((((int32_t)L_8) == ((int32_t)L_9))? 1 : 0)&(int32_t)L_10));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17161));
		bool L_11 = V_0;
		if (!L_11)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17162));
		// Destroy(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17173));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17173));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17174));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17174));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17164));
	}

IL_0051:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17165));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::Microsoft.MixedReality.Toolkit.Input.IMixedRealityHandJointHandler.OnHandJointsUpdated(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m971EC8D6B1F6018DB2DF757C6F420C34F4CC5FEF (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m971EC8D6B1F6018DB2DF757C6F420C34F4CC5FEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	RuntimeObject* V_5 = NULL;
	int32_t V_6 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_7 = NULL;
	bool V_8 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_9;
	memset((&V_9), 0, sizeof(V_9));
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_10 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_11 = NULL;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56  V_16;
	memset((&V_16), 0, sizeof(V_16));
	KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  V_17;
	memset((&V_17), 0, sizeof(V_17));
	bool V_18 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_19 = NULL;
	float V_20 = 0.0f;
	float V_21 = 0.0f;
	float V_22 = 0.0f;
	float V_23 = 0.0f;
	float V_24 = 0.0f;
	RuntimeObject* V_25 = NULL;
	int32_t V_26 = 0;
	bool V_27 = false;
	bool V_28 = false;
	bool V_29 = false;
	bool V_30 = false;
	bool V_31 = false;
	bool V_32 = false;
	bool V_33 = false;
	bool V_34 = false;
	bool V_35 = false;
	float V_36 = 0.0f;
	bool V_37 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_6), (&V_7), (&V_10), (&V_11), (&V_17), (&V_19), (&V_20), (&V_21), (&V_22), (&V_23), (&V_24), (&V_26), (&V_36));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m971EC8D6B1F6018DB2DF757C6F420C34F4CC5FEF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17175));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17176));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * G_B5_0 = NULL;
	int32_t G_B8_0 = 0;
	int32_t G_B41_0 = 0;
	int32_t G_B64_0 = 0;
	int32_t G_B66_0 = 0;
	int32_t G_B80_0 = 0;
	float G_B84_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17177));
		// var inputSystem = CoreServices.InputSystem;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17328));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17328));
		V_0 = L_0;
		// if (eventData.InputSource.SourceId != Controller.InputSource.SourceId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17179));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17329));
		NullCheck(L_1);
		RuntimeObject* L_2 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17329));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17330));
		NullCheck(L_2);
		uint32_t L_3 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17330));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17331));
		RuntimeObject* L_4 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17332));
		NullCheck(L_4);
		RuntimeObject* L_5 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17332));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17333));
		NullCheck(L_5);
		uint32_t L_6 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17333));
		V_3 = (bool)((((int32_t)((((int32_t)L_3) == ((int32_t)L_6))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17180));
		bool L_7 = V_3;
		if (!L_7)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17181));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17182));
		goto IL_059a;
	}

IL_0031:
	{
		// Debug.Assert(eventData.Handedness == Controller.ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17183));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17334));
		NullCheck(L_8);
		uint8_t L_9 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17334));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17335));
		RuntimeObject* L_10 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17335));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17336));
		NullCheck(L_10);
		uint8_t L_11 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17336));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17337));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_9) == ((int32_t)L_11))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17337));
		// MixedRealityHandTrackingProfile handTrackingProfile = inputSystem?.InputSystemProfile.HandTrackingProfile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17184));
		RuntimeObject* L_12 = V_0;
		if (L_12)
		{
			goto IL_0050;
		}
	}
	{
		G_B5_0 = ((MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 *)(NULL));
		goto IL_005b;
	}

IL_0050:
	{
		RuntimeObject* L_13 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17338));
		NullCheck(L_13);
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_14 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17338));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17339));
		NullCheck(L_14);
		MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_15 = MixedRealityInputSystemProfile_get_HandTrackingProfile_mEF5113D36A521267A4856F4D18EF4471A739829B(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17339));
		G_B5_0 = L_15;
	}

IL_005b:
	{
		V_1 = G_B5_0;
		// if (handTrackingProfile != null && handTrackingProfile.EnableHandJointVisualization)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17185));
		MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_16 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17340));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_17 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_16, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17340));
		if (!L_17)
		{
			goto IL_006d;
		}
	}
	{
		MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_18 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17341));
		NullCheck(L_18);
		bool L_19 = MixedRealityHandTrackingProfile_get_EnableHandJointVisualization_m8DCFBD402AD291564268FA049BD438D45A7D6C0D(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17341));
		G_B8_0 = ((int32_t)(L_19));
		goto IL_006e;
	}

IL_006d:
	{
		G_B8_0 = 0;
	}

IL_006e:
	{
		V_4 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17186));
		bool L_20 = V_4;
		if (!L_20)
		{
			goto IL_022d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17187));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17188));
		// foreach (TrackedHandJoint handJoint in eventData.InputData.Keys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17189));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_21 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17342));
		NullCheck(L_21);
		RuntimeObject* L_22 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_21, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17342));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17343));
		NullCheck(L_22);
		RuntimeObject* L_23 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(2 /* System.Collections.Generic.ICollection`1<!0> System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Keys() */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17343));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17344));
		NullCheck(L_23);
		RuntimeObject* L_24 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* System.Collections.Generic.IEnumerator`1<!0> System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint>::GetEnumerator() */, IEnumerable_1_t385ABBCB0D9D1F8F1B9626A031BA17632B70A41C_il2cpp_TypeInfo_var, L_23);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17344));
		V_5 = L_24;
	}

IL_008b:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17190));
			goto IL_020f;
		}

IL_0090:
		{
			// foreach (TrackedHandJoint handJoint in eventData.InputData.Keys)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17191));
			RuntimeObject* L_25 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17345));
			NullCheck(L_25);
			int32_t L_26 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* !0 System.Collections.Generic.IEnumerator`1<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint>::get_Current() */, IEnumerator_1_t572D4256F69C72A02F1854B1B8A482AB0E38B072_il2cpp_TypeInfo_var, L_25);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17345));
			V_6 = L_26;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17192));
			// if (skeletonJoints.TryGetValue(handJoint, out skeletonJointTransform))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17193));
			Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_27 = __this->get_skeletonJoints_33();
			int32_t L_28 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17346));
			NullCheck(L_27);
			bool L_29 = Dictionary_2_TryGetValue_mF8B5C93F97F75DEDAAEE6A102E0E0A4246FCC25E(L_27, L_28, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA **)(&V_7), /*hidden argument*/Dictionary_2_TryGetValue_mF8B5C93F97F75DEDAAEE6A102E0E0A4246FCC25E_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17346));
			V_8 = L_29;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17194));
			bool L_30 = V_8;
			if (!L_30)
			{
				goto IL_00f2;
			}
		}

IL_00af:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17195));
			// skeletonJointTransform.position = eventData.InputData[handJoint].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17196));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = V_7;
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_32 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17347));
			NullCheck(L_32);
			RuntimeObject* L_33 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_32, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17347));
			int32_t L_34 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17348));
			NullCheck(L_33);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_35 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_33, L_34);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17348));
			V_9 = L_35;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17349));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17349));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17350));
			NullCheck(L_31);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_31, L_36, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17350));
			// skeletonJointTransform.rotation = eventData.InputData[handJoint].Rotation;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17197));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = V_7;
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_38 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17351));
			NullCheck(L_38);
			RuntimeObject* L_39 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_38, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17351));
			int32_t L_40 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17352));
			NullCheck(L_39);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_41 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_39, L_40);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17352));
			V_9 = L_41;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17353));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_42 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17353));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17354));
			NullCheck(L_37);
			Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_37, L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17354));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17198));
			goto IL_020e;
		}

IL_00f2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17199));
			// if (handJoint == TrackedHandJoint.None)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17200));
			int32_t L_43 = V_6;
			V_12 = (bool)((((int32_t)L_43) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17201));
			bool L_44 = V_12;
			if (!L_44)
			{
				goto IL_0105;
			}
		}

IL_00fe:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17202));
			// prefab = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17203));
			V_10 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17204));
			goto IL_015c;
		}

IL_0105:
		{
			// else if (handJoint == TrackedHandJoint.Palm)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17205));
			int32_t L_45 = V_6;
			V_13 = (bool)((((int32_t)L_45) == ((int32_t)2))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17206));
			bool L_46 = V_13;
			if (!L_46)
			{
				goto IL_0126;
			}
		}

IL_0110:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17207));
			// prefab = inputSystem.InputSystemProfile.HandTrackingProfile.PalmJointPrefab;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17208));
			RuntimeObject* L_47 = V_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17355));
			NullCheck(L_47);
			MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_48 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_47);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17355));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17356));
			NullCheck(L_48);
			MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_49 = MixedRealityInputSystemProfile_get_HandTrackingProfile_mEF5113D36A521267A4856F4D18EF4471A739829B(L_48, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17356));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17357));
			NullCheck(L_49);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_50 = MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DE_inline(L_49, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17357));
			V_10 = L_50;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17209));
			goto IL_015c;
		}

IL_0126:
		{
			// else if (handJoint == TrackedHandJoint.IndexTip)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17210));
			int32_t L_51 = V_6;
			V_14 = (bool)((((int32_t)L_51) == ((int32_t)((int32_t)11)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17211));
			bool L_52 = V_14;
			if (!L_52)
			{
				goto IL_0148;
			}
		}

IL_0132:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17212));
			// prefab = inputSystem.InputSystemProfile.HandTrackingProfile.FingerTipPrefab;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17213));
			RuntimeObject* L_53 = V_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17358));
			NullCheck(L_53);
			MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_54 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_53);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17358));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17359));
			NullCheck(L_54);
			MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_55 = MixedRealityInputSystemProfile_get_HandTrackingProfile_mEF5113D36A521267A4856F4D18EF4471A739829B(L_54, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17359));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17360));
			NullCheck(L_55);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_56 = MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3_inline(L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17360));
			V_10 = L_56;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17214));
			goto IL_015c;
		}

IL_0148:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17215));
			// prefab = inputSystem.InputSystemProfile.HandTrackingProfile.JointPrefab;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17216));
			RuntimeObject* L_57 = V_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17361));
			NullCheck(L_57);
			MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_58 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_57);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17361));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17362));
			NullCheck(L_58);
			MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_59 = MixedRealityInputSystemProfile_get_HandTrackingProfile_mEF5113D36A521267A4856F4D18EF4471A739829B(L_58, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17362));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17363));
			NullCheck(L_59);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_60 = MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903_inline(L_59, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17363));
			V_10 = L_60;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17217));
		}

IL_015c:
		{
			// if (prefab != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17218));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_61 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17364));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_62 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_61, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17364));
			V_15 = L_62;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17219));
			bool L_63 = V_15;
			if (!L_63)
			{
				goto IL_0177;
			}
		}

IL_016a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17220));
			// jointObject = Instantiate(prefab);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17221));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_64 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17365));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_65 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_64, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17365));
			V_11 = L_65;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17222));
			goto IL_0180;
		}

IL_0177:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17223));
			// jointObject = new GameObject();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17224));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17366));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_66 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
			GameObject__ctor_mA4DFA8F4471418C248E95B55070665EF344B4B2D(L_66, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17366));
			V_11 = L_66;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17225));
		}

IL_0180:
		{
			// jointObject.name = handJoint.ToString() + " Proxy Transform";
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17226));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_67 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17367));
			RuntimeObject * L_68 = Box(TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22_il2cpp_TypeInfo_var, (&V_6));
			NullCheck(L_68);
			String_t* L_69 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_68);
			V_6 = *(int32_t*)UnBox(L_68);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17367));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17368));
			String_t* L_70 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_69, _stringLiteralBE8ADD7943C507E20F6E892B05E7A4D36C452A16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17368));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17369));
			NullCheck(L_67);
			Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_67, L_70, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17369));
			// jointObject.transform.position = eventData.InputData[handJoint].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17227));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_71 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17370));
			NullCheck(L_71);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_72 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_71, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17370));
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_73 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17371));
			NullCheck(L_73);
			RuntimeObject* L_74 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_73, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17371));
			int32_t L_75 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17372));
			NullCheck(L_74);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_76 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_74, L_75);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17372));
			V_9 = L_76;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17373));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_77 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17373));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17374));
			NullCheck(L_72);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_72, L_77, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17374));
			// jointObject.transform.rotation = eventData.InputData[handJoint].Rotation;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17228));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_78 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17375));
			NullCheck(L_78);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_79 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_78, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17375));
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_80 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17376));
			NullCheck(L_80);
			RuntimeObject* L_81 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_80, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17376));
			int32_t L_82 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17377));
			NullCheck(L_81);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_83 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_81, L_82);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17377));
			V_9 = L_83;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17378));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_84 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17378));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17379));
			NullCheck(L_79);
			Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_79, L_84, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17379));
			// jointObject.transform.parent = transform;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17229));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_85 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17380));
			NullCheck(L_85);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_86 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_85, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17380));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17381));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_87 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17381));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17382));
			NullCheck(L_86);
			Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_86, L_87, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17382));
			// skeletonJoints.Add(handJoint, jointObject.transform);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17230));
			Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_88 = __this->get_skeletonJoints_33();
			int32_t L_89 = V_6;
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_90 = V_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17383));
			NullCheck(L_90);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_91 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_90, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17383));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17384));
			NullCheck(L_88);
			Dictionary_2_Add_m4CFA57209EE0914F9303FF47D0B03EA36A906E7C(L_88, L_89, L_91, /*hidden argument*/Dictionary_2_Add_m4CFA57209EE0914F9303FF47D0B03EA36A906E7C_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17384));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17231));
		}

IL_020e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17232));
		}

IL_020f:
		{
			// foreach (TrackedHandJoint handJoint in eventData.InputData.Keys)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17233));
			RuntimeObject* L_92 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17385));
			NullCheck(L_92);
			bool L_93 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean System.Collections.IEnumerator::MoveNext() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_92);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17385));
			if (L_93)
			{
				goto IL_0090;
			}
		}

IL_021b:
		{
			IL2CPP_LEAVE(0x22A, FINALLY_021d);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_021d;
	}

FINALLY_021d:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17234));
			RuntimeObject* L_94 = V_5;
			if (!L_94)
			{
				goto IL_0229;
			}
		}

IL_0221:
		{
			RuntimeObject* L_95 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17386));
			NullCheck(L_95);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_95);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17386));
		}

IL_0229:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17235));
			IL2CPP_END_FINALLY(541)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(541)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x22A, IL_022a)
	}

IL_022a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17236));
		goto IL_0282;
	}

IL_022d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17237));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17238));
		// foreach (var joint in skeletonJoints)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17239));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_96 = __this->get_skeletonJoints_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17387));
		NullCheck(L_96);
		Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56  L_97 = Dictionary_2_GetEnumerator_mD7E370735C5EA2BBCF7ACD55D3830E4DE58EB06D(L_96, /*hidden argument*/Dictionary_2_GetEnumerator_mD7E370735C5EA2BBCF7ACD55D3830E4DE58EB06D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17387));
		V_16 = L_97;
	}

IL_023c:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17240));
			goto IL_025b;
		}

IL_023e:
		{
			// foreach (var joint in skeletonJoints)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17241));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17388));
			KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23  L_98 = Enumerator_get_Current_m6AC729407154418031B1B58A3AD5839EBAEB7644_inline((Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 *)(&V_16), /*hidden argument*/Enumerator_get_Current_m6AC729407154418031B1B58A3AD5839EBAEB7644_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17388));
			V_17 = L_98;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17242));
			// Destroy(joint.Value.gameObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17243));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17389));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_99 = KeyValuePair_2_get_Value_m927BFC1204A89B72DBCB89019A1E7E60B82D3E0F_inline((KeyValuePair_2_t1F21F47B48A1E34CB85DDBCA7C1D000419B83B23 *)(&V_17), /*hidden argument*/KeyValuePair_2_get_Value_m927BFC1204A89B72DBCB89019A1E7E60B82D3E0F_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17389));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17390));
			NullCheck(L_99);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_100 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_99, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17390));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17391));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_100, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17391));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17244));
		}

IL_025b:
		{
			// foreach (var joint in skeletonJoints)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17245));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17392));
			bool L_101 = Enumerator_MoveNext_m195BA60B00623B8FDDF169CC39CF709AE2F3BC84((Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 *)(&V_16), /*hidden argument*/Enumerator_MoveNext_m195BA60B00623B8FDDF169CC39CF709AE2F3BC84_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17392));
			if (L_101)
			{
				goto IL_023e;
			}
		}

IL_0264:
		{
			IL2CPP_LEAVE(0x275, FINALLY_0266);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0266;
	}

FINALLY_0266:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17246));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17393));
		Enumerator_Dispose_m01ADE188221C9709AC882B037FF64386273300C6((Enumerator_t3590A0BAA74BFEF25ABF98FF35BD363A1651BD56 *)(&V_16), /*hidden argument*/Enumerator_Dispose_m01ADE188221C9709AC882B037FF64386273300C6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17393));
		IL2CPP_END_FINALLY(614)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(614)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x275, IL_0275)
	}

IL_0275:
	{
		// skeletonJoints.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17247));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_102 = __this->get_skeletonJoints_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17394));
		NullCheck(L_102);
		Dictionary_2_Clear_mA0003A5CF7470458E93C46F79C1EBF76C20AEBD3(L_102, /*hidden argument*/Dictionary_2_Clear_mA0003A5CF7470458E93C46F79C1EBF76C20AEBD3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17394));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17248));
	}

IL_0282:
	{
		// bool renderHandmesh = handTrackingProfile != null && handTrackingProfile.EnableHandMeshVisualization;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17249));
		MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_103 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17395));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_104 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_103, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17395));
		if (!L_104)
		{
			goto IL_0293;
		}
	}
	{
		MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * L_105 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17396));
		NullCheck(L_105);
		bool L_106 = MixedRealityHandTrackingProfile_get_EnableHandMeshVisualization_m5E904D4F73F9A4C34984D7A43C06369ECEA3995D(L_105, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17396));
		G_B41_0 = ((int32_t)(L_106));
		goto IL_0294;
	}

IL_0293:
	{
		G_B41_0 = 0;
	}

IL_0294:
	{
		V_2 = (bool)G_B41_0;
		// HandRenderer.enabled = renderHandmesh;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17250));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17397));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_107 = RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17397));
		bool L_108 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17398));
		NullCheck(L_107);
		Renderer_set_enabled_m0933766657F2685BAAE3340B0A984C0E63925303(L_107, L_108, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17398));
		// if (renderHandmesh)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17251));
		bool L_109 = V_2;
		V_18 = L_109;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17252));
		bool L_110 = V_18;
		if (!L_110)
		{
			goto IL_059a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17253));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17254));
		// foreach (TrackedHandJoint handJoint in eventData.InputData.Keys)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17255));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_111 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17399));
		NullCheck(L_111);
		RuntimeObject* L_112 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_111, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17399));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17400));
		NullCheck(L_112);
		RuntimeObject* L_113 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(2 /* System.Collections.Generic.ICollection`1<!0> System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Keys() */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_112);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17400));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17401));
		NullCheck(L_113);
		RuntimeObject* L_114 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* System.Collections.Generic.IEnumerator`1<!0> System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint>::GetEnumerator() */, IEnumerable_1_t385ABBCB0D9D1F8F1B9626A031BA17632B70A41C_il2cpp_TypeInfo_var, L_113);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17401));
		V_25 = L_114;
	}

IL_02c0:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 2);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17256));
			goto IL_0475;
		}

IL_02c5:
		{
			// foreach (TrackedHandJoint handJoint in eventData.InputData.Keys)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17257));
			RuntimeObject* L_115 = V_25;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17402));
			NullCheck(L_115);
			int32_t L_116 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* !0 System.Collections.Generic.IEnumerator`1<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint>::get_Current() */, IEnumerator_1_t572D4256F69C72A02F1854B1B8A482AB0E38B072_il2cpp_TypeInfo_var, L_115);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17402));
			V_26 = L_116;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17258));
			// if (joints.TryGetValue(handJoint, out jointTransform))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17259));
			Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_117 = __this->get_joints_32();
			int32_t L_118 = V_26;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17403));
			NullCheck(L_117);
			bool L_119 = Dictionary_2_TryGetValue_mF8B5C93F97F75DEDAAEE6A102E0E0A4246FCC25E(L_117, L_118, (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA **)(&V_19), /*hidden argument*/Dictionary_2_TryGetValue_mF8B5C93F97F75DEDAAEE6A102E0E0A4246FCC25E_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17403));
			V_27 = L_119;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17260));
			bool L_120 = V_27;
			if (!L_120)
			{
				goto IL_0474;
			}
		}

IL_02e7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17261));
			// if (jointTransform != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17262));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_121 = V_19;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17404));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_122 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_121, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17404));
			V_28 = L_122;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17263));
			bool L_123 = V_28;
			if (!L_123)
			{
				goto IL_0473;
			}
		}

IL_02f9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17264));
			// if (handJoint == TrackedHandJoint.Palm)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17265));
			int32_t L_124 = V_26;
			V_29 = (bool)((((int32_t)L_124) == ((int32_t)2))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17266));
			bool L_125 = V_29;
			if (!L_125)
			{
				goto IL_038f;
			}
		}

IL_0308:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17267));
			// if (ModelPalmAtLeapWrist)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17268));
			bool L_126 = __this->get_ModelPalmAtLeapWrist_17();
			V_30 = L_126;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17269));
			bool L_127 = V_30;
			if (!L_127)
			{
				goto IL_033a;
			}
		}

IL_0315:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17270));
			// Palm.position = eventData.InputData[TrackedHandJoint.Wrist].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17271));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_128 = __this->get_Palm_6();
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_129 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17405));
			NullCheck(L_129);
			RuntimeObject* L_130 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_129, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17405));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17406));
			NullCheck(L_130);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_131 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_130, 1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17406));
			V_9 = L_131;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17407));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_132 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17407));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17408));
			NullCheck(L_128);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_128, L_132, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17408));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17272));
			goto IL_035d;
		}

IL_033a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17273));
			// Palm.position = eventData.InputData[TrackedHandJoint.Palm].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17274));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_133 = __this->get_Palm_6();
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_134 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17409));
			NullCheck(L_134);
			RuntimeObject* L_135 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_134, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17409));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17410));
			NullCheck(L_135);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_136 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_135, 2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17410));
			V_9 = L_136;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17411));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_137 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17411));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17412));
			NullCheck(L_133);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_133, L_137, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17412));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17275));
		}

IL_035d:
		{
			// Palm.rotation = eventData.InputData[TrackedHandJoint.Palm].Rotation * userBoneRotation;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17276));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_138 = __this->get_Palm_6();
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_139 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17413));
			NullCheck(L_139);
			RuntimeObject* L_140 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_139, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17413));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17414));
			NullCheck(L_140);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_141 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_140, 2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17414));
			V_9 = L_141;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17415));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_142 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17415));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17416));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_143 = RiggedHandVisualizer_get_userBoneRotation_mEADDE7147E2DACE241EF07C9DD203C3B9C6C761C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17416));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17417));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_144 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_142, L_143, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17417));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17418));
			NullCheck(L_138);
			Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_138, L_144, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17418));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17277));
			goto IL_0472;
		}

IL_038f:
		{
			// else if (handJoint == TrackedHandJoint.Wrist)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17278));
			int32_t L_145 = V_26;
			V_31 = (bool)((((int32_t)L_145) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17279));
			bool L_146 = V_31;
			if (!L_146)
			{
				goto IL_03d3;
			}
		}

IL_039a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17280));
			// if (!ModelPalmAtLeapWrist)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17281));
			bool L_147 = __this->get_ModelPalmAtLeapWrist_17();
			V_32 = (bool)((((int32_t)L_147) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17282));
			bool L_148 = V_32;
			if (!L_148)
			{
				goto IL_03cd;
			}
		}

IL_03aa:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17283));
			// Wrist.position = eventData.InputData[TrackedHandJoint.Wrist].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17284));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_149 = __this->get_Wrist_5();
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_150 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17419));
			NullCheck(L_150);
			RuntimeObject* L_151 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_150, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17419));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17420));
			NullCheck(L_151);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_152 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_151, 1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17420));
			V_9 = L_152;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17421));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_153 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17421));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17422));
			NullCheck(L_149);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_149, L_153, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17422));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17285));
		}

IL_03cd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17286));
			goto IL_0472;
		}

IL_03d3:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17287));
			// jointTransform.rotation = eventData.InputData[handJoint].Rotation * Reorientation();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17288));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_154 = V_19;
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_155 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17423));
			NullCheck(L_155);
			RuntimeObject* L_156 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_155, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17423));
			int32_t L_157 = V_26;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17424));
			NullCheck(L_156);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_158 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_156, L_157);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17424));
			V_9 = L_158;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17425));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_159 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17425));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17426));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_160 = RiggedHandVisualizer_Reorientation_m4C71E4A1FED2B385FF4EFA76D18AABA9408B7EF5(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17426));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17427));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_161 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_159, L_160, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17427));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17428));
			NullCheck(L_154);
			Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_154, L_161, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17428));
			// if (DeformPosition)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17289));
			bool L_162 = __this->get_DeformPosition_18();
			V_33 = L_162;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17290));
			bool L_163 = V_33;
			if (!L_163)
			{
				goto IL_0429;
			}
		}

IL_0409:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17291));
			// jointTransform.position = eventData.InputData[handJoint].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17292));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_164 = V_19;
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_165 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17429));
			NullCheck(L_165);
			RuntimeObject* L_166 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_165, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17429));
			int32_t L_167 = V_26;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17430));
			NullCheck(L_166);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_168 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_166, L_167);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17430));
			V_9 = L_168;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17431));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_169 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17431));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17432));
			NullCheck(L_164);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_164, L_169, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17432));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17293));
		}

IL_0429:
		{
			// if (ScaleLastFingerBone &&
			//         (handJoint == TrackedHandJoint.ThumbDistalJoint ||
			//         handJoint == TrackedHandJoint.IndexDistalJoint ||
			//         handJoint == TrackedHandJoint.MiddleDistalJoint ||
			//         handJoint == TrackedHandJoint.RingDistalJoint ||
			//         handJoint == TrackedHandJoint.PinkyDistalJoint))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17294));
			bool L_170 = __this->get_ScaleLastFingerBone_19();
			if (!L_170)
			{
				goto IL_0453;
			}
		}

IL_0431:
		{
			int32_t L_171 = V_26;
			if ((((int32_t)L_171) == ((int32_t)5)))
			{
				goto IL_0450;
			}
		}

IL_0436:
		{
			int32_t L_172 = V_26;
			if ((((int32_t)L_172) == ((int32_t)((int32_t)10))))
			{
				goto IL_0450;
			}
		}

IL_043c:
		{
			int32_t L_173 = V_26;
			if ((((int32_t)L_173) == ((int32_t)((int32_t)15))))
			{
				goto IL_0450;
			}
		}

IL_0442:
		{
			int32_t L_174 = V_26;
			if ((((int32_t)L_174) == ((int32_t)((int32_t)20))))
			{
				goto IL_0450;
			}
		}

IL_0448:
		{
			int32_t L_175 = V_26;
			G_B64_0 = ((((int32_t)L_175) == ((int32_t)((int32_t)25)))? 1 : 0);
			goto IL_0451;
		}

IL_0450:
		{
			G_B64_0 = 1;
		}

IL_0451:
		{
			G_B66_0 = G_B64_0;
			goto IL_0454;
		}

IL_0453:
		{
			G_B66_0 = 0;
		}

IL_0454:
		{
			V_34 = (bool)G_B66_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17295));
			bool L_176 = V_34;
			if (!L_176)
			{
				goto IL_0471;
			}
		}

IL_045a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17296));
			// ScaleFingerTip(eventData, jointTransform, handJoint + 1, jointTransform.position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17297));
			InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_177 = ___eventData0;
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_178 = V_19;
			int32_t L_179 = V_26;
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_180 = V_19;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17433));
			NullCheck(L_180);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_181 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_180, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17433));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17434));
			RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA(__this, L_177, L_178, ((int32_t)il2cpp_codegen_add((int32_t)L_179, (int32_t)1)), L_181, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17434));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17298));
		}

IL_0471:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17299));
		}

IL_0472:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17300));
		}

IL_0473:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17301));
		}

IL_0474:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17302));
		}

IL_0475:
		{
			// foreach (TrackedHandJoint handJoint in eventData.InputData.Keys)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17303));
			RuntimeObject* L_182 = V_25;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17435));
			NullCheck(L_182);
			bool L_183 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean System.Collections.IEnumerator::MoveNext() */, IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A_il2cpp_TypeInfo_var, L_182);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17435));
			if (L_183)
			{
				goto IL_02c5;
			}
		}

IL_0481:
		{
			IL2CPP_LEAVE(0x490, FINALLY_0483);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0483;
	}

FINALLY_0483:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17304));
			RuntimeObject* L_184 = V_25;
			if (!L_184)
			{
				goto IL_048f;
			}
		}

IL_0487:
		{
			RuntimeObject* L_185 = V_25;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17436));
			NullCheck(L_185);
			InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t7218B22548186B208D65EA5B7870503810A2D15A_il2cpp_TypeInfo_var, L_185);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17436));
		}

IL_048f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17305));
			IL2CPP_END_FINALLY(1155)
		}
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(1155)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x490, IL_0490)
	}

IL_0490:
	{
		// float pinchStrength = HandPoseUtils.CalculateIndexPinch(Controller.ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17306));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17437));
		RuntimeObject* L_186 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17437));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17438));
		NullCheck(L_186);
		uint8_t L_187 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_186);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17438));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17439));
		float L_188 = HandPoseUtils_CalculateIndexPinch_m0843C671C639C5BE20A88B87A258715DED4AC545(L_187, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17439));
		V_20 = L_188;
		// float indexFingerCurl = HandPoseUtils.IndexFingerCurl(Controller.ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17307));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17440));
		RuntimeObject* L_189 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17440));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17441));
		NullCheck(L_189);
		uint8_t L_190 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_189);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17442));
		float L_191 = HandPoseUtils_IndexFingerCurl_mF1DCA1D1B8FF5E4EE2B4BEEEDE27DBE9FC1DD523(L_190, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17442));
		V_21 = L_191;
		// float middleFingerCurl = HandPoseUtils.MiddleFingerCurl(Controller.ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17308));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17443));
		RuntimeObject* L_192 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17443));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17444));
		NullCheck(L_192);
		uint8_t L_193 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_192);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17444));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17445));
		float L_194 = HandPoseUtils_MiddleFingerCurl_m5AC003AA8738923576D5DAB76303CB98FA868D64(L_193, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17445));
		V_22 = L_194;
		// float ringFingerCurl = HandPoseUtils.RingFingerCurl(Controller.ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17309));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17446));
		RuntimeObject* L_195 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17446));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17447));
		NullCheck(L_195);
		uint8_t L_196 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_195);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17447));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17448));
		float L_197 = HandPoseUtils_RingFingerCurl_mBBF3191936D7F1FC7D78EFC7300DEB4C29E46CFE(L_196, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17448));
		V_23 = L_197;
		// float pinkyFingerCurl = HandPoseUtils.PinkyFingerCurl(Controller.ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17310));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17449));
		RuntimeObject* L_198 = RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17449));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17450));
		NullCheck(L_198);
		uint8_t L_199 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_198);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17451));
		float L_200 = HandPoseUtils_PinkyFingerCurl_mD2721032EE84E1ED31A8B2705DA519D8D3249992(L_199, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17451));
		V_24 = L_200;
		// if (handMaterial != null && handRendererInitialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17311));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_201 = __this->get_handMaterial_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17452));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_202 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_201, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17452));
		if (!L_202)
		{
			goto IL_0500;
		}
	}
	{
		bool L_203 = __this->get_handRendererInitialized_23();
		G_B80_0 = ((int32_t)(L_203));
		goto IL_0501;
	}

IL_0500:
	{
		G_B80_0 = 0;
	}

IL_0501:
	{
		V_35 = (bool)G_B80_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17312));
		bool L_204 = V_35;
		if (!L_204)
		{
			goto IL_0599;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17313));
		// float gripStrength = indexFingerCurl + middleFingerCurl + ringFingerCurl + pinkyFingerCurl;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17314));
		float L_205 = V_21;
		float L_206 = V_22;
		float L_207 = V_23;
		float L_208 = V_24;
		V_36 = ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_add((float)L_205, (float)L_206)), (float)L_207)), (float)L_208));
		// gripStrength /= 4.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17315));
		float L_209 = V_36;
		V_36 = ((float)((float)L_209/(float)(4.0f)));
		// gripStrength = gripStrength > 0.8f ? 1.0f : gripStrength;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17316));
		float L_210 = V_36;
		if ((((float)L_210) > ((float)(0.8f))))
		{
			goto IL_052f;
		}
	}
	{
		float L_211 = V_36;
		G_B84_0 = L_211;
		goto IL_0534;
	}

IL_052f:
	{
		G_B84_0 = (1.0f);
	}

IL_0534:
	{
		V_36 = G_B84_0;
		// pinchStrength = Mathf.Pow(Mathf.Max(pinchStrength, gripStrength), 2.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17317));
		float L_212 = V_20;
		float L_213 = V_36;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17453));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_214 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_212, L_213, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17454));
		float L_215 = powf(L_214, (2.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17454));
		V_20 = L_215;
		// if (handRenderer.sharedMaterial.HasProperty(pinchStrengthMaterialProperty))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17318));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_216 = __this->get_handRenderer_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17455));
		NullCheck(L_216);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_217 = Renderer_get_sharedMaterial_m2BE9FF3D269968F2E323AC60EFBBCC0B26E7E6F9(L_216, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17455));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17456));
		NullCheck(L_217);
		bool L_218 = Material_HasProperty_m8611FACA6F9D9B2B5C3E92B6D93D2D514B443512(L_217, _stringLiteralE5A37A156725ACBF18488A7BEDF3E9C5231AF5AE, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17456));
		V_37 = L_218;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17319));
		bool L_219 = V_37;
		if (!L_219)
		{
			goto IL_0582;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17320));
		// handRenderer.sharedMaterial.SetFloat(pinchStrengthMaterialProperty, pinchStrength);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17321));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_220 = __this->get_handRenderer_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17457));
		NullCheck(L_220);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_221 = Renderer_get_sharedMaterial_m2BE9FF3D269968F2E323AC60EFBBCC0B26E7E6F9(L_220, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17457));
		float L_222 = V_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17458));
		NullCheck(L_221);
		Material_SetFloat_m4B7D3FAA00D20BCB3C487E72B7E4B2691D5ECAD2(L_221, _stringLiteralE5A37A156725ACBF18488A7BEDF3E9C5231AF5AE, L_222, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17458));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17322));
		goto IL_0598;
	}

IL_0582:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17323));
		// throw new Exception(String.Format("The property {0} for reacting to pinch strength was not found please provide a valid material property name", pinchStrengthMaterialProperty));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17459));
		String_t* L_223 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralE411DE2CBF1416C179FCCB015C2EF784A31774C0, _stringLiteralE5A37A156725ACBF18488A7BEDF3E9C5231AF5AE, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17459));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17460));
		Exception_t * L_224 = (Exception_t *)il2cpp_codegen_object_new(Exception_t_il2cpp_TypeInfo_var);
		Exception__ctor_m89BADFF36C3B170013878726E07729D51AA9FBE0(L_224, L_223, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17460));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_224, RiggedHandVisualizer_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m971EC8D6B1F6018DB2DF757C6F420C34F4CC5FEF_RuntimeMethod_var);
	}

IL_0598:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17325));
	}

IL_0599:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17326));
	}

IL_059a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17327));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::ScaleFingerTip(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>,UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * ___eventData0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___jointTransform1, int32_t ___fingerTipJoint2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___boneRootPos3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0), (&___jointTransform1), (&___fingerTipJoint2), (&___boneRootPos3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_ScaleFingerTip_m9EA7F22DDBB332F682963EC114DA60F7D5C2FEDA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17461));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17462));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17463));
		// var boneTipPos = eventData.InputData[fingerTipJoint].Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17464));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17476));
		NullCheck(L_0);
		RuntimeObject* L_1 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_0, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17476));
		int32_t L_2 = ___fingerTipJoint2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17477));
		NullCheck(L_1);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_3 = InterfaceFuncInvoker1< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , int32_t >::Invoke(0 /* !1 System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_1, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17477));
		V_4 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17478));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17478));
		V_0 = L_4;
		// var boneVec = boneTipPos - boneRootPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17465));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = ___boneRootPos3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17479));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17479));
		V_1 = L_7;
		// if (transform.lossyScale.x != 0f && transform.lossyScale.x != 1f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17466));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17480));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17480));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17481));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17481));
		float L_10 = L_9.get_x_2();
		if ((((float)L_10) == ((float)(0.0f))))
		{
			goto IL_0053;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17482));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17482));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17483));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17483));
		float L_13 = L_12.get_x_2();
		G_B3_0 = ((((int32_t)((((float)L_13) == ((float)(1.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0054;
	}

IL_0053:
	{
		G_B3_0 = 0;
	}

IL_0054:
	{
		V_5 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17467));
		bool L_14 = V_5;
		if (!L_14)
		{
			goto IL_0073;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17468));
		// boneVec /= transform.lossyScale.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17469));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17484));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_16 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17484));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17485));
		NullCheck(L_16);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17485));
		float L_18 = L_17.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17486));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_15, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17486));
		V_1 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17470));
	}

IL_0073:
	{
		// var newScale = jointTransform.transform.localScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17471));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_20 = ___jointTransform1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17487));
		NullCheck(L_20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17487));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17488));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17488));
		V_2 = L_22;
		// var lengthComponentIdx = GetLargestComponentIndex(ModelFingerPointing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17472));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = __this->get_ModelFingerPointing_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17489));
		int32_t L_24 = RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30(__this, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17489));
		V_3 = L_24;
		// newScale[lengthComponentIdx] = boneVec.magnitude / fingerTipLengths[fingerTipJoint];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17473));
		int32_t L_25 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17490));
		float L_26 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17490));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_27 = __this->get_fingerTipLengths_31();
		int32_t L_28 = ___fingerTipJoint2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17491));
		NullCheck(L_27);
		float L_29 = Dictionary_2_get_Item_m3191532CB4E726DE98C33C4E7FD784203452B539(L_27, L_28, /*hidden argument*/Dictionary_2_get_Item_m3191532CB4E726DE98C33C4E7FD784203452B539_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17491));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17492));
		Vector3_set_Item_m89FF112CEC0D9ED43F1C4FE01522C75394B30AE6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), L_25, ((float)((float)L_26/(float)L_29)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17492));
		// jointTransform.transform.localScale = newScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17474));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = ___jointTransform1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17493));
		NullCheck(L_30);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17493));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17494));
		NullCheck(L_31);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_31, L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17494));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17475));
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::GetLargestComponentIndex(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointingVector0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	float V_3 = 0.0f;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointingVector0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_GetLargestComponentIndex_mDC1A8C26230C2AAADF5E0EF8A5A72FB0E68AED30_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17495));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17496));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17497));
		// var largestValue = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17498));
		V_0 = (0.0f);
		// var largestIdx = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17499));
		V_1 = 0;
		// for (int i = 0; i < 3; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17500));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17501));
		goto IL_0036;
	}

IL_000d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17502));
		// var testValue = pointingVector[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17503));
		int32_t L_0 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17516));
		float L_1 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&___pointingVector0), L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17516));
		V_3 = L_1;
		// if (Mathf.Abs(testValue) > largestValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17504));
		float L_2 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17517));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_3 = fabsf(L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17517));
		float L_4 = V_0;
		V_4 = (bool)((((float)L_3) > ((float)L_4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17505));
		bool L_5 = V_4;
		if (!L_5)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17506));
		// largestIdx = i;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17507));
		int32_t L_6 = V_2;
		V_1 = L_6;
		// largestValue = Mathf.Abs(testValue);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17508));
		float L_7 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17518));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_8 = fabsf(L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17518));
		V_0 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17509));
	}

IL_0031:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17510));
		// for (int i = 0; i < 3; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17511));
		int32_t L_9 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_9, (int32_t)1));
	}

IL_0036:
	{
		// for (int i = 0; i < 3; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17512));
		int32_t L_10 = V_2;
		V_5 = (bool)((((int32_t)L_10) < ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17513));
		bool L_11 = V_5;
		if (L_11)
		{
			goto IL_000d;
		}
	}
	{
		// return largestIdx;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17514));
		int32_t L_12 = V_1;
		V_6 = L_12;
		goto IL_0045;
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17515));
		int32_t L_13 = V_6;
		return L_13;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.RiggedHandVisualizer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RiggedHandVisualizer__ctor_m88DE2F61B99E1EF8FAFF79B5EB8290FC3BFAAC63 (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer__ctor_m88DE2F61B99E1EF8FAFF79B5EB8290FC3BFAAC63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer__ctor_m88DE2F61B99E1EF8FAFF79B5EB8290FC3BFAAC63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17519));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17520));
	{
		// public bool ThumbRootIsMetacarpal = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17521));
		__this->set_ThumbRootIsMetacarpal_8((bool)1);
		// public bool IndexRootIsMetacarpal = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17522));
		__this->set_IndexRootIsMetacarpal_10((bool)1);
		// public bool MiddleRootIsMetacarpal = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17523));
		__this->set_MiddleRootIsMetacarpal_12((bool)1);
		// public bool RingRootIsMetacarpal = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17524));
		__this->set_RingRootIsMetacarpal_14((bool)1);
		// public bool PinkyRootIsMetacarpal = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17525));
		__this->set_PinkyRootIsMetacarpal_16((bool)1);
		// public bool ModelPalmAtLeapWrist = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17526));
		__this->set_ModelPalmAtLeapWrist_17((bool)1);
		// public bool DeformPosition = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17527));
		__this->set_DeformPosition_18((bool)1);
		// public bool ScaleLastFingerBone = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17528));
		__this->set_ScaleLastFingerBone_19((bool)1);
		// public Vector3 ModelFingerPointing = new Vector3(0, 0, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17529));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17537));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_0), (0.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17537));
		__this->set_ModelFingerPointing_20(L_0);
		// public Vector3 ModelPalmFacing = new Vector3(0, 0, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17530));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17538));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_1), (0.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17538));
		__this->set_ModelPalmFacing_21(L_1);
		// private SkinnedMeshRenderer handRenderer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17531));
		__this->set_handRenderer_22((SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 *)NULL);
		// private bool handRendererInitialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17532));
		__this->set_handRendererInitialized_23((bool)0);
		// private Material handMaterial = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17533));
		__this->set_handMaterial_24((Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)NULL);
		// private Dictionary<TrackedHandJoint, float> fingerTipLengths = new Dictionary<TrackedHandJoint, float>()
		// {
		//     {TrackedHandJoint.ThumbTip, thumbFingerTipLength },
		//     {TrackedHandJoint.IndexTip, indexingerTipLength },
		//     {TrackedHandJoint.MiddleTip, middleFingerTipLength },
		//     {TrackedHandJoint.RingTip, ringFingerTipLength },
		//     {TrackedHandJoint.PinkyTip, pinkyFingerTipLength }
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17534));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17539));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_2 = (Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE *)il2cpp_codegen_object_new(Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m54B736E0BEA480FA9225CC5AC65BA751B0CB70A7(L_2, /*hidden argument*/Dictionary_2__ctor_m54B736E0BEA480FA9225CC5AC65BA751B0CB70A7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17539));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_3 = L_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17540));
		NullCheck(L_3);
		Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3(L_3, 6, (0.02167f), /*hidden argument*/Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17540));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_4 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17541));
		NullCheck(L_4);
		Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3(L_4, ((int32_t)11), (0.01582f), /*hidden argument*/Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17541));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_5 = L_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17542));
		NullCheck(L_5);
		Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3(L_5, ((int32_t)16), (0.0174f), /*hidden argument*/Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17542));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_6 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17543));
		NullCheck(L_6);
		Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3(L_6, ((int32_t)21), (0.0173f), /*hidden argument*/Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17543));
		Dictionary_2_tBA8265DC5ED9D26C64A36026B02096B2D4355BFE * L_7 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17544));
		NullCheck(L_7);
		Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3(L_7, ((int32_t)26), (0.01596f), /*hidden argument*/Dictionary_2_Add_m102B49B068D07DE366512F0754345719BD5329B3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17544));
		__this->set_fingerTipLengths_31(L_7);
		// private Dictionary<TrackedHandJoint, Transform> joints = new Dictionary<TrackedHandJoint, Transform>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17535));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17545));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_8 = (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *)il2cpp_codegen_object_new(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m344907F6AD8CF77075CF7FB231E09ADDAA4F1E72(L_8, /*hidden argument*/Dictionary_2__ctor_m344907F6AD8CF77075CF7FB231E09ADDAA4F1E72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17545));
		__this->set_joints_32(L_8);
		// private Dictionary<TrackedHandJoint, Transform> skeletonJoints = new Dictionary<TrackedHandJoint, Transform>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17536));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17546));
		Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC * L_9 = (Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC *)il2cpp_codegen_object_new(Dictionary_2_t372DBC856E412D07DAF6683A019BE43F059611FC_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m344907F6AD8CF77075CF7FB231E09ADDAA4F1E72(L_9, /*hidden argument*/Dictionary_2__ctor_m344907F6AD8CF77075CF7FB231E09ADDAA4F1E72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17546));
		__this->set_skeletonJoints_33(L_9);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17547));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 17547));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::get_ControllerName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* ScreenSpaceMousePointer_get_ControllerName_m1D7C321D2714931AAFE342E2F39D28151F9006FF (ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScreenSpaceMousePointer_get_ControllerName_m1D7C321D2714931AAFE342E2F39D28151F9006FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScreenSpaceMousePointer_get_ControllerName_m1D7C321D2714931AAFE342E2F39D28151F9006FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15758));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15759));
	{
		// protected override string ControllerName => "ScreenSpace Mouse Pointer";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15760));
		return _stringLiteralD175759664151F85FCF8CA05CE1509910E87223F;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScreenSpaceMousePointer_OnPreSceneQuery_m3AEA1A536A866D838B02061D693553538BEDAF11 (ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScreenSpaceMousePointer_OnPreSceneQuery_m3AEA1A536A866D838B02061D693553538BEDAF11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * V_3 = NULL;
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	bool V_6 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScreenSpaceMousePointer_OnPreSceneQuery_m3AEA1A536A866D838B02061D693553538BEDAF11_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15761));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15762));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15763));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15764));
		IL2CPP_RUNTIME_CLASS_INIT(ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_StaticFields*)il2cpp_codegen_static_fields_for(ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_66();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15785));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15785));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15765));
			// if (UInput.mousePosition.x < 0 ||
			//     UInput.mousePosition.y < 0 ||
			//     UInput.mousePosition.x > Screen.width ||
			//     UInput.mousePosition.y > Screen.height)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15766));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15786));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15786));
			float L_3 = L_2.get_x_2();
			if ((((float)L_3) < ((float)(0.0f))))
			{
				goto IL_0058;
			}
		}

IL_0021:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15787));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15787));
			float L_5 = L_4.get_y_3();
			if ((((float)L_5) < ((float)(0.0f))))
			{
				goto IL_0058;
			}
		}

IL_0032:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15788));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15788));
			float L_7 = L_6.get_x_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15789));
			int32_t L_8 = Screen_get_width_m8ECCEF7FF17395D1237BC0193D7A6640A3FEEAD3(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15789));
			if ((((float)L_7) > ((float)(((float)((float)L_8))))))
			{
				goto IL_0058;
			}
		}

IL_0044:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15790));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15790));
			float L_10 = L_9.get_y_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15791));
			int32_t L_11 = Screen_get_height_mF5B64EBC4CDE0EAAA5713C1452ED2CE475F25150(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15791));
			G_B6_0 = ((((float)L_10) > ((float)(((float)((float)L_11)))))? 1 : 0);
			goto IL_0059;
		}

IL_0058:
		{
			G_B6_0 = 1;
		}

IL_0059:
		{
			V_5 = (bool)G_B6_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15767));
			bool L_12 = V_5;
			if (!L_12)
			{
				goto IL_0065;
			}
		}

IL_005f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15768));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15769));
			IL2CPP_LEAVE(0x115, FINALLY_0106);
		}

IL_0065:
		{
			// Vector3 currentMousePosition = UInput.mousePosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15770));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15792));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15792));
			V_2 = L_13;
			// if ((lastMousePosition - (Vector2)currentMousePosition).magnitude >= MovementThresholdToUnHide)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15771));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14 = __this->get_lastMousePosition_65();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15793));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_16 = Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28(L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15793));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15794));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_17 = Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0(L_14, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15794));
			V_7 = L_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15795));
			float L_18 = Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15795));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15796));
			float L_19 = BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15796));
			V_6 = (bool)((((int32_t)((!(((float)L_18) >= ((float)L_19)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15772));
			bool L_20 = V_6;
			if (!L_20)
			{
				goto IL_00a0;
			}
		}

IL_0096:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15773));
			// SetVisibility(true);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15774));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15797));
			VirtActionInvoker1< bool >::Invoke(108 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseMousePointer::SetVisibility(System.Boolean) */, __this, (bool)1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15797));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15775));
		}

IL_00a0:
		{
			// lastMousePosition = currentMousePosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15776));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15798));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_22 = Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15798));
			__this->set_lastMousePosition_65(L_22);
			// Camera mainCamera = CameraCache.Main;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15777));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15799));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_23 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15799));
			V_3 = L_23;
			// Ray ray = mainCamera.ScreenPointToRay(currentMousePosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15778));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_24 = V_3;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15800));
			NullCheck(L_24);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_26 = Camera_ScreenPointToRay_m27638E78502DB6D6D7113F81AF7C210773B828F3(L_24, L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15800));
			V_4 = L_26;
			// Rays[0].CopyRay(ray, float.MaxValue);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15779));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15801));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_27 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15801));
			NullCheck(L_27);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_28 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15802));
			RayStep_CopyRay_mC78083BBF0A93F22A477DD547E3D552EB9D2FE29((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_27)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), L_28, ((std::numeric_limits<float>::max)()), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15802));
			// transform.position = mainCamera.transform.position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15780));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15803));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15803));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_30 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15804));
			NullCheck(L_30);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15804));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15805));
			NullCheck(L_31);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15805));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15806));
			NullCheck(L_29);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_29, L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15806));
			// transform.rotation = Quaternion.LookRotation(ray.direction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15781));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15807));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_33 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15807));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15808));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15808));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15809));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_35 = Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15809));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15810));
			NullCheck(L_33);
			Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_33, L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15810));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15782));
			IL2CPP_LEAVE(0x115, FINALLY_0106);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0106;
	}

FINALLY_0106:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15811));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15811));
		IL2CPP_END_FINALLY(262)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(262)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x115, IL_0115)
	}

IL_0115:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15784));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::SetVisibility(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScreenSpaceMousePointer_SetVisibility_mAC377CC459D8CC673B818525A740686AFAAB110A (ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175 * __this, bool ___visible0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScreenSpaceMousePointer_SetVisibility_mAC377CC459D8CC673B818525A740686AFAAB110A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___visible0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScreenSpaceMousePointer_SetVisibility_mAC377CC459D8CC673B818525A740686AFAAB110A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15812));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15813));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15814));
		// base.SetVisibility(visible);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15815));
		bool L_0 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15818));
		BaseMousePointer_SetVisibility_m2C5A3D32733170C1A50630E16E6DB10AA552AA35(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15818));
		// Cursor.visible = visible;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15816));
		bool L_1 = ___visible0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15819));
		Cursor_set_visible_mDB51E60B3D7B14873A6F5FBE5E0A432D4A46C431(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15819));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15817));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScreenSpaceMousePointer__ctor_mEC1E94D96A2AD6B762E2E4F068EC361F87B98C8A (ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScreenSpaceMousePointer__ctor_mEC1E94D96A2AD6B762E2E4F068EC361F87B98C8A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScreenSpaceMousePointer__ctor_mEC1E94D96A2AD6B762E2E4F068EC361F87B98C8A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99_il2cpp_TypeInfo_var);
		BaseMousePointer__ctor_m9826535EE189FA825A0267AB8C1757E9B7F809EC(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ScreenSpaceMousePointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScreenSpaceMousePointer__cctor_m86525A897FB504D5E4CC3FDF0072D137D696EDEE (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScreenSpaceMousePointer__cctor_m86525A897FB504D5E4CC3FDF0072D137D696EDEE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScreenSpaceMousePointer__cctor_m86525A897FB504D5E4CC3FDF0072D137D696EDEE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15820));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15821));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] ScreenSpaceMousePointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15822));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15823));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral0A9C57CEA2317CAC7695315327EED57E4485CDEE, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15823));
		((ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_StaticFields*)il2cpp_codegen_static_fields_for(ScreenSpaceMousePointer_t34A2D61BE273B03E819A9CB819EE3860647B1175_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_66(L_0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShellHandRayPointer_Start_mDAC37A103F98F48CCAEB2C048D8471F6B1250208 (ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ShellHandRayPointer_Start_mDAC37A103F98F48CCAEB2C048D8471F6B1250208_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * V_4 = NULL;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ShellHandRayPointer_Start_mDAC37A103F98F48CCAEB2C048D8471F6B1250208_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15824));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15825));
	int32_t G_B3_0 = 0;
	int32_t G_B10_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15826));
		// if (lineRendererSelected != null && lineMaterialSelected == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15827));
		BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_0 = __this->get_lineRendererSelected_73();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15849));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15849));
		if (!L_1)
		{
			goto IL_001d;
		}
	}
	{
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_2 = __this->get_lineMaterialSelected_66();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15850));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15850));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001e;
	}

IL_001d:
	{
		G_B3_0 = 0;
	}

IL_001e:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15828));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15829));
		// Debug.LogWarning("Property lineRendererSelected is obsolete. Use lineMaterialSelected instead.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15830));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15851));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral3A074CF0B8B6E70909485C4A6867804D1AE3BB16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15851));
		// if (lineRendererSelected is MixedRealityLineRenderer lineRenderer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15831));
		BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_5 = __this->get_lineRendererSelected_73();
		MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * L_6 = ((MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE *)IsInstClass((RuntimeObject*)L_5, MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE_il2cpp_TypeInfo_var));
		V_1 = L_6;
		V_2 = (bool)((!(((RuntimeObject*)(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15832));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0050;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15833));
		// lineMaterialSelected = lineRenderer.LineMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15834));
		MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * L_8 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15852));
		NullCheck(L_8);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_9 = MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512B_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15852));
		__this->set_lineMaterialSelected_66(L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15835));
	}

IL_0050:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15836));
	}

IL_0051:
	{
		// if (lineRendererNoTarget != null && lineMaterialNoTarget == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15837));
		BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_10 = __this->get_lineRendererNoTarget_74();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15853));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15853));
		if (!L_11)
		{
			goto IL_006d;
		}
	}
	{
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_12 = __this->get_lineMaterialNoTarget_67();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15854));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_13 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_12, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15854));
		G_B10_0 = ((int32_t)(L_13));
		goto IL_006e;
	}

IL_006d:
	{
		G_B10_0 = 0;
	}

IL_006e:
	{
		V_3 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15838));
		bool L_14 = V_3;
		if (!L_14)
		{
			goto IL_00a5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15839));
		// Debug.LogWarning("Property lineRendererNoTarget is obsolete. Use lineMaterialNoTarget instead.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15840));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15855));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteralDFF7CB3801443D7B10EF2A6B8EC490CBBF8E65B5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15855));
		// if (lineRendererNoTarget is MixedRealityLineRenderer lineRenderer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15841));
		BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_15 = __this->get_lineRendererNoTarget_74();
		MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * L_16 = ((MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE *)IsInstClass((RuntimeObject*)L_15, MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE_il2cpp_TypeInfo_var));
		V_4 = L_16;
		V_5 = (bool)((!(((RuntimeObject*)(MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE *)L_16) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15842));
		bool L_17 = V_5;
		if (!L_17)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15843));
		// lineMaterialNoTarget = lineRenderer.LineMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15844));
		MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * L_18 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15856));
		NullCheck(L_18);
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_19 = MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512B_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15856));
		__this->set_lineMaterialNoTarget_67(L_19);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15845));
	}

IL_00a4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15846));
	}

IL_00a5:
	{
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15847));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15857));
		BaseControllerPointer_Start_m6CAD8F22CEB4943D5E996A8730C40DCAF90F9D0F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15857));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15848));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShellHandRayPointer_OnEnable_m29D7260FA43FB8D09F141C27C04057182507B044 (ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ShellHandRayPointer_OnEnable_m29D7260FA43FB8D09F141C27C04057182507B044_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ShellHandRayPointer_OnEnable_m29D7260FA43FB8D09F141C27C04057182507B044_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15858));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15859));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15860));
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15861));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15864));
		LinePointer_OnEnable_m18EFF94CFFD043D9AA9FC093C0753C47A34F156A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15864));
		// inertia = gameObject.EnsureComponent<BezierInertia>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15862));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15865));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15865));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15866));
		BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * L_1 = ComponentExtensions_EnsureComponent_TisBezierInertia_t247BB6E8220F78509717A5D550548037C274B166_m7B6C9D7A0767E1ABC9BF172197761DBA2036190C(L_0, /*hidden argument*/ComponentExtensions_EnsureComponent_TisBezierInertia_t247BB6E8220F78509717A5D550548037C274B166_m7B6C9D7A0767E1ABC9BF172197761DBA2036190C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15866));
		__this->set_inertia_68(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15863));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShellHandRayPointer_OnPostSceneQuery_m5CE6E678C4DBF25591E59815BD6F766F223102E5 (ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ShellHandRayPointer_OnPostSceneQuery_m5CE6E678C4DBF25591E59815BD6F766F223102E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * V_4 = NULL;
	int32_t V_5 = 0;
	MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * V_6 = NULL;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ShellHandRayPointer_OnPostSceneQuery_m5CE6E678C4DBF25591E59815BD6F766F223102E5_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15867));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15868));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B6_0 = 0;
	Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * G_B11_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15869));
		// using (OnPostSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15870));
		IL2CPP_RUNTIME_CLASS_INIT(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields*)il2cpp_codegen_static_fields_for(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var))->get_OnPostSceneQueryPerfMarker_75();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15896));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15896));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15871));
			// base.OnPostSceneQuery();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15872));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15897));
			LinePointer_OnPostSceneQuery_mC401D3E387E2D442CED8A885178BA461DB879578(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15897));
			// if (!LineBase.enabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15873));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15898));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_2 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15898));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15899));
			NullCheck(L_2);
			bool L_3 = Behaviour_get_enabled_mAA0C9ED5A3D1589C1C8AA22636543528DB353CFB(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15899));
			V_2 = (bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15874));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_002f;
			}
		}

IL_0029:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15875));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15876));
			IL2CPP_LEAVE(0xDA, FINALLY_00cb);
		}

IL_002f:
		{
			// if (wasSelectPressed != IsSelectPressed || wasGrabPressed != IsGrabPressed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15877));
			bool L_5 = __this->get_wasSelectPressed_71();
			bool L_6 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsSelectPressed_24();
			if ((!(((uint32_t)L_5) == ((uint32_t)L_6))))
			{
				goto IL_0050;
			}
		}

IL_003d:
		{
			bool L_7 = __this->get_wasGrabPressed_72();
			bool L_8 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsGrabPressed_21();
			G_B6_0 = ((((int32_t)((((int32_t)L_7) == ((int32_t)L_8))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			goto IL_0051;
		}

IL_0050:
		{
			G_B6_0 = 1;
		}

IL_0051:
		{
			V_3 = (bool)G_B6_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15878));
			bool L_9 = V_3;
			if (!L_9)
			{
				goto IL_00c8;
			}
		}

IL_0055:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15879));
			// wasSelectPressed = IsSelectPressed;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15880));
			bool L_10 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsSelectPressed_24();
			__this->set_wasSelectPressed_71(L_10);
			// wasGrabPressed = IsGrabPressed;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15881));
			bool L_11 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsGrabPressed_21();
			__this->set_wasGrabPressed_72(L_11);
			// var currentMaterial = IsSelectPressed || IsGrabPressed ? lineMaterialSelected : lineMaterialNoTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15882));
			bool L_12 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsSelectPressed_24();
			if (L_12)
			{
				goto IL_0086;
			}
		}

IL_0076:
		{
			bool L_13 = ((BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 *)__this)->get_IsGrabPressed_21();
			if (L_13)
			{
				goto IL_0086;
			}
		}

IL_007e:
		{
			Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_14 = __this->get_lineMaterialNoTarget_67();
			G_B11_0 = L_14;
			goto IL_008c;
		}

IL_0086:
		{
			Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_15 = __this->get_lineMaterialSelected_66();
			G_B11_0 = L_15;
		}

IL_008c:
		{
			V_4 = G_B11_0;
			// for (int i = 0; i < LineRenderers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15883));
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15884));
			goto IL_00b5;
		}

IL_0093:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15885));
			// var lineRenderer = LineRenderers[i] as MixedRealityLineRenderer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15886));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15900));
			BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_16 = LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15900));
			int32_t L_17 = V_5;
			NullCheck(L_16);
			int32_t L_18 = L_17;
			BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA * L_19 = (L_16)->GetAt(static_cast<il2cpp_array_size_t>(L_18));
			V_6 = ((MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE *)IsInstClass((RuntimeObject*)L_19, MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE_il2cpp_TypeInfo_var));
			// lineRenderer.LineMaterial = currentMaterial;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15887));
			MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * L_20 = V_6;
			Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_21 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15901));
			NullCheck(L_20);
			MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42_inline(L_20, L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15901));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15888));
			// for (int i = 0; i < LineRenderers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15889));
			int32_t L_22 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_22, (int32_t)1));
		}

IL_00b5:
		{
			// for (int i = 0; i < LineRenderers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15890));
			int32_t L_23 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15902));
			BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_24 = LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15902));
			NullCheck(L_24);
			V_7 = (bool)((((int32_t)L_23) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_24)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15891));
			bool L_25 = V_7;
			if (L_25)
			{
				goto IL_0093;
			}
		}

IL_00c7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15892));
		}

IL_00c8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15893));
			IL2CPP_LEAVE(0xDA, FINALLY_00cb);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00cb;
	}

FINALLY_00cb:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15903));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15903));
		IL2CPP_END_FINALLY(203)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(203)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xDA, IL_00da)
	}

IL_00da:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15895));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::PreUpdateLineRenderers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShellHandRayPointer_PreUpdateLineRenderers_mD1B784157E29224FCE29F5059A8AE46B096AD5F2 (ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ShellHandRayPointer_PreUpdateLineRenderers_mD1B784157E29224FCE29F5059A8AE46B096AD5F2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	float V_4 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ShellHandRayPointer_PreUpdateLineRenderers_mD1B784157E29224FCE29F5059A8AE46B096AD5F2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15904));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15905));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	float G_B8_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15906));
		// using (PreUpdateLineRenderersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15907));
		IL2CPP_RUNTIME_CLASS_INIT(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields*)il2cpp_codegen_static_fields_for(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var))->get_PreUpdateLineRenderersPerfMarker_76();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15925));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15925));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15908));
			// base.PreUpdateLineRenderers();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15909));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15926));
			LinePointer_PreUpdateLineRenderers_mD27304BF162FE9BB5625D4FF7EDB6E857C541D31(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15926));
			// bool isFocusedLock = IsFocusLocked && IsTargetPositionLockedOnFocusLock;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15910));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15927));
			bool L_2 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15927));
			if (!L_2)
			{
				goto IL_0027;
			}
		}

IL_001f:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15928));
			bool L_3 = VirtFuncInvoker0< bool >::Invoke(90 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsTargetPositionLockedOnFocusLock() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15928));
			G_B4_0 = ((int32_t)(L_3));
			goto IL_0028;
		}

IL_0027:
		{
			G_B4_0 = 0;
		}

IL_0028:
		{
			V_2 = (bool)G_B4_0;
			// inertia.enabled = !isFocusedLock;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15911));
			BezierInertia_t247BB6E8220F78509717A5D550548037C274B166 * L_4 = __this->get_inertia_68();
			bool L_5 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15929));
			NullCheck(L_4);
			Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(L_4, (bool)((((int32_t)L_5) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15929));
			// if (isFocusedLock)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15912));
			bool L_6 = V_2;
			V_3 = L_6;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15913));
			bool L_7 = V_3;
			if (!L_7)
			{
				goto IL_00e8;
			}
		}

IL_0041:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15914));
			// float distance = Result != null ? Result.Details.RayDistance : DefaultPointerExtent;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15915));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15930));
			RuntimeObject* L_8 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15930));
			if (L_8)
			{
				goto IL_0052;
			}
		}

IL_004a:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15931));
			float L_9 = BaseControllerPointer_get_DefaultPointerExtent_mFEEB522B2CE35341FFBA375F71D8D5D93E42B653(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15931));
			G_B8_0 = L_9;
			goto IL_0066;
		}

IL_0052:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15932));
			RuntimeObject* L_10 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15932));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15933));
			NullCheck(L_10);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_11 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15933));
			V_7 = L_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15934));
			float L_12 = FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15934));
			G_B8_0 = L_12;
		}

IL_0066:
		{
			V_4 = G_B8_0;
			// Vector3 startPoint = LineBase.FirstPoint;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15916));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15935));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_13 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15935));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15936));
			NullCheck(L_13);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = BaseMixedRealityLineDataProvider_get_FirstPoint_m54C775438EFAFA94BC0C347262DA3271428F2F8A(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15936));
			V_5 = L_14;
			// Vector3 expectedPoint = startPoint + Rotation * Vector3.forward * distance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15917));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15937));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = VirtFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(97 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rotation() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15937));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15938));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15938));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15939));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_16, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15939));
			float L_19 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15940));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_18, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15940));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15941));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_15, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15941));
			V_6 = L_21;
			// LineBase.SetPoint(1, Vector3.Lerp(startPoint, expectedPoint, startPointLerp));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15918));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15942));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_22 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15942));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = V_5;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = V_6;
			float L_25 = __this->get_startPointLerp_69();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15943));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_23, L_24, L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15943));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15944));
			NullCheck(L_22);
			BaseMixedRealityLineDataProvider_SetPoint_m4A11B8D096EA14D61FEC8D7E2768456F463A0480(L_22, 1, L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15944));
			// expectedPoint = Vector3.Lerp(expectedPoint, LineBase.LastPoint, endPointLerp);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15919));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15945));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_28 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15945));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15946));
			NullCheck(L_28);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = BaseMixedRealityLineDataProvider_get_LastPoint_m2EC444A7457AEC7FC55FDEFCE81AA6F3527A171F(L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15946));
			float L_30 = __this->get_endPointLerp_70();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15947));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_27, L_29, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15947));
			V_6 = L_31;
			// LineBase.SetPoint(2, Vector3.Lerp(startPoint, expectedPoint, endPointLerp));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15920));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15948));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_32 = LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15948));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = V_5;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = V_6;
			float L_35 = __this->get_endPointLerp_70();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15949));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_33, L_34, L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15949));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15950));
			NullCheck(L_32);
			BaseMixedRealityLineDataProvider_SetPoint_m4A11B8D096EA14D61FEC8D7E2768456F463A0480(L_32, 2, L_36, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15950));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15921));
		}

IL_00e8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15922));
			IL2CPP_LEAVE(0xFA, FINALLY_00eb);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00eb;
	}

FINALLY_00eb:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15923));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15951));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15951));
		IL2CPP_END_FINALLY(235)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(235)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xFA, IL_00fa)
	}

IL_00fa:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15924));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShellHandRayPointer__ctor_m83ACCCB76B0BDBEE5BE7858DD36C7AE88BF16EBB (ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ShellHandRayPointer__ctor_m83ACCCB76B0BDBEE5BE7858DD36C7AE88BF16EBB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ShellHandRayPointer__ctor_m83ACCCB76B0BDBEE5BE7858DD36C7AE88BF16EBB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15953));
	{
		// private Material lineMaterialSelected = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15954));
		__this->set_lineMaterialSelected_66((Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)NULL);
		// private Material lineMaterialNoTarget = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15955));
		__this->set_lineMaterialNoTarget_67((Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)NULL);
		// private float startPointLerp = 0.33f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15956));
		__this->set_startPointLerp_69((0.33f));
		// private float endPointLerp = 0.66f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15957));
		__this->set_endPointLerp_70((0.66f));
		// private bool wasSelectPressed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15958));
		__this->set_wasSelectPressed_71((bool)0);
		// private bool wasGrabPressed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15959));
		__this->set_wasGrabPressed_72((bool)0);
		// private BaseMixedRealityLineRenderer lineRendererSelected = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15960));
		__this->set_lineRendererSelected_73((BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA *)NULL);
		// private BaseMixedRealityLineRenderer lineRendererNoTarget = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15961));
		__this->set_lineRendererNoTarget_74((BaseMixedRealityLineRenderer_tB8BED16FAC047C462B580C8B5532155CF07728FA *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15962));
		IL2CPP_RUNTIME_CLASS_INIT(LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665_il2cpp_TypeInfo_var);
		LinePointer__ctor_mE5DC519053E2CE470C3B409DD2B018E447FA9EB8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15962));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShellHandRayPointer__cctor_m95BC5BCFE3013E281592436CE651F0F6182EA95C (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ShellHandRayPointer__cctor_m95BC5BCFE3013E281592436CE651F0F6182EA95C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ShellHandRayPointer__cctor_m95BC5BCFE3013E281592436CE651F0F6182EA95C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15963));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15964));
	{
		// private static readonly ProfilerMarker OnPostSceneQueryPerfMarker = new ProfilerMarker("[MRTK] ShellHandRayPointer.OnPostSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15965));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15967));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral5DC4C4759AC19DD1F022757CF88BCC8AF51B12A5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15967));
		((ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields*)il2cpp_codegen_static_fields_for(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var))->set_OnPostSceneQueryPerfMarker_75(L_0);
		// private static readonly ProfilerMarker PreUpdateLineRenderersPerfMarker = new ProfilerMarker("[MRTK] ShellHandRayPointer.PreUpdateLineRenderers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15966));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15968));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral81798B408B677F364F56B2C7054C660112F3974E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15968));
		((ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_StaticFields*)il2cpp_codegen_static_fields_for(ShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_il2cpp_TypeInfo_var))->set_PreUpdateLineRenderersPerfMarker_76(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.KeywordAndResponse[] Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::get_Keywords()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* SpeechInputHandler_get_Keywords_m44BD2AE1F849903DAF3D7EC32DD52ADC6C42A74B (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_get_Keywords_m44BD2AE1F849903DAF3D7EC32DD52ADC6C42A74B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_get_Keywords_m44BD2AE1F849903DAF3D7EC32DD52ADC6C42A74B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9755));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9756));
	{
		// public KeywordAndResponse[] Keywords => keywords;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9757));
		KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* L_0 = __this->get_keywords_7();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::get_SpeechConfirmationTooltipPrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9758));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9759));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9760));
		// get { return speechConfirmationTooltipPrefab; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9761));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_0 = __this->get_speechConfirmationTooltipPrefab_9();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return speechConfirmationTooltipPrefab; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9762));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::set_SpeechConfirmationTooltipPrefab(Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_set_SpeechConfirmationTooltipPrefab_m6CCA5DEBD91E88B208A364EE117D009CA10CD867 (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_set_SpeechConfirmationTooltipPrefab_m6CCA5DEBD91E88B208A364EE117D009CA10CD867_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_set_SpeechConfirmationTooltipPrefab_m6CCA5DEBD91E88B208A364EE117D009CA10CD867_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9763));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9764));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9765));
		// set { speechConfirmationTooltipPrefab = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9766));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_0 = ___value0;
		__this->set_speechConfirmationTooltipPrefab_9(L_0);
		// set { speechConfirmationTooltipPrefab = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9767));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_Start_mBD389786A7D85570F4E2F6A7C79DA69AC23DEDF0 (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_Start_mBD389786A7D85570F4E2F6A7C79DA69AC23DEDF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  V_3;
	memset((&V_3), 0, sizeof(V_3));
	String_t* V_4 = NULL;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_Start_mBD389786A7D85570F4E2F6A7C79DA69AC23DEDF0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9768));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9769));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9770));
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9771));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9797));
		BaseInputHandler_Start_mCA77A9C29C7AF11676971F429ABF0E2D3BC04EBE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9797));
		// if (persistentKeywords)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9772));
		bool L_0 = __this->get_persistentKeywords_8();
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9773));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0041;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9774));
		// Debug.Assert(gameObject.transform.parent == null, "Persistent keyword GameObject must be at the root level of the scene hierarchy.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9798));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9798));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9799));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9799));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9800));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9801));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9801));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9802));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_5, _stringLiteralEB1A12EF0A7A41B583E885757EB879E8C46613BB, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9802));
		// DontDestroyOnLoad(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9776));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9803));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9803));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9804));
		Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9804));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9777));
	}

IL_0041:
	{
		// int keywordCount = keywords.Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9778));
		KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* L_7 = __this->get_keywords_7();
		NullCheck(L_7);
		V_0 = (((int32_t)((int32_t)(((RuntimeArray*)L_7)->max_length))));
		// for (int index = 0; index < keywordCount; index++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9779));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9780));
		goto IL_00dc;
	}

IL_0051:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9781));
		// KeywordAndResponse keywordAndResponse = keywords[index];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9782));
		KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* L_8 = __this->get_keywords_7();
		int32_t L_9 = V_2;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A  L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		V_3 = L_11;
		// string keyword = keywordAndResponse.Keyword.ToLower();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9805));
		String_t* L_12 = KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3C_inline((KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9805));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9806));
		NullCheck(L_12);
		String_t* L_13 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9806));
		V_4 = L_13;
		// if (responses.ContainsKey(keyword))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9784));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_14 = __this->get_responses_11();
		String_t* L_15 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9807));
		NullCheck(L_14);
		bool L_16 = Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C(L_14, L_15, /*hidden argument*/Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9807));
		V_5 = L_16;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9785));
		bool L_17 = V_5;
		if (!L_17)
		{
			goto IL_00c0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9786));
		// Debug.LogError($"Duplicate keyword \'{keyword}\' specified in \'{gameObject.name}\'.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9787));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)5);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteralAC01D46412374306E79D795674795C0728373A60);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC01D46412374306E79D795674795C0728373A60);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		String_t* L_21 = V_4;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_21);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_21);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_22 = L_20;
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, _stringLiteralE8FF914E7B9841E14CC22FA57CF16605FF5A575B);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE8FF914E7B9841E14CC22FA57CF16605FF5A575B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_23 = L_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9808));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9808));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9809));
		NullCheck(L_24);
		String_t* L_25 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9809));
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_25);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_25);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_26 = L_23;
		NullCheck(L_26);
		ArrayElementTypeCheck (L_26, _stringLiteralFAFBA073700296227A7D1B4785C63F0194C967FA);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteralFAFBA073700296227A7D1B4785C63F0194C967FA);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9810));
		String_t* L_27 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9810));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9811));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9811));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9788));
		goto IL_00d7;
	}

IL_00c0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9789));
		// responses.Add(keyword, keywordAndResponse.Response);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9790));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_28 = __this->get_responses_11();
		String_t* L_29 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9812));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_30 = KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27_inline((KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9812));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9813));
		NullCheck(L_28);
		Dictionary_2_Add_m91224B9F05BAC1F74036CC7C7F410A09B0342571(L_28, L_29, L_30, /*hidden argument*/Dictionary_2_Add_m91224B9F05BAC1F74036CC7C7F410A09B0342571_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9813));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9791));
	}

IL_00d7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9792));
		// for (int index = 0; index < keywordCount; index++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9793));
		int32_t L_31 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_31, (int32_t)1));
	}

IL_00dc:
	{
		// for (int index = 0; index < keywordCount; index++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9794));
		int32_t L_32 = V_2;
		int32_t L_33 = V_0;
		V_6 = (bool)((((int32_t)L_32) < ((int32_t)L_33))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9795));
		bool L_34 = V_6;
		if (L_34)
		{
			goto IL_0051;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9796));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_RegisterHandlers_mA2845F50E7F07687F83A872EB8758536A195BCFA (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_RegisterHandlers_mA2845F50E7F07687F83A872EB8758536A195BCFA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_RegisterHandlers_mA2845F50E7F07687F83A872EB8758536A195BCFA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9814));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9815));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9816));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealitySpeechHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9817));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9819));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9819));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9820));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m15D9DD6955A5C09C418FC0763139AC5CF0BF02DB_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9820));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9818));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_UnregisterHandlers_m143999F76AA865C77568BCD9DFE5A53003AA5DF2 (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_UnregisterHandlers_m143999F76AA865C77568BCD9DFE5A53003AA5DF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_UnregisterHandlers_m143999F76AA865C77568BCD9DFE5A53003AA5DF2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9821));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9822));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9823));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealitySpeechHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9824));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9826));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9826));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9827));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealitySpeechHandler_t190E4EA662D4338667D08EE6FD4D2E133A786742_m8A7D870AD5804E1F3F2B85756B79AD5736774C41_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9827));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9825));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::AddResponse(System.String,UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_AddResponse_mBD66F1FA467E80B710E78F8001970558661ABFD9 (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, String_t* ___keyword0, UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___action1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_AddResponse_mBD66F1FA467E80B710E78F8001970558661ABFD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___keyword0), (&___action1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_AddResponse_mBD66F1FA467E80B710E78F8001970558661ABFD9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9828));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9829));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9830));
		// string lowerKeyword = keyword.ToLower();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9831));
		String_t* L_0 = ___keyword0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9839));
		NullCheck(L_0);
		String_t* L_1 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9839));
		V_0 = L_1;
		// if (!responses.ContainsKey(lowerKeyword))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9832));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_2 = __this->get_responses_11();
		String_t* L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9840));
		NullCheck(L_2);
		bool L_4 = Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C(L_2, L_3, /*hidden argument*/Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9840));
		V_1 = (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9833));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9834));
		// responses[lowerKeyword] = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9835));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_6 = __this->get_responses_11();
		String_t* L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9841));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_8 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9841));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9842));
		NullCheck(L_6);
		Dictionary_2_set_Item_mEAF2152A0B717399053421137786D390F421F654(L_6, L_7, L_8, /*hidden argument*/Dictionary_2_set_Item_mEAF2152A0B717399053421137786D390F421F654_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9842));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9836));
	}

IL_002f:
	{
		// responses[lowerKeyword].AddListener(action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9837));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_9 = __this->get_responses_11();
		String_t* L_10 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9843));
		NullCheck(L_9);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_11 = Dictionary_2_get_Item_mF33FB01DD22B2BA44D8F916CDE69E5A4813CA434(L_9, L_10, /*hidden argument*/Dictionary_2_get_Item_mF33FB01DD22B2BA44D8F916CDE69E5A4813CA434_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9843));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_12 = ___action1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9844));
		NullCheck(L_11);
		UnityEvent_AddListener_m31973FDDC5BB0B2828AB6EF519EC4FD6563499C9(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9844));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9838));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::RemoveResponse(System.String,UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_RemoveResponse_mFC15F1872DAF0FDB27D14DE74BE164EC7498058A (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, String_t* ___keyword0, UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___action1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_RemoveResponse_mFC15F1872DAF0FDB27D14DE74BE164EC7498058A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___keyword0), (&___action1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_RemoveResponse_mFC15F1872DAF0FDB27D14DE74BE164EC7498058A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9845));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9846));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9847));
		// string lowerKeyword = keyword.ToLower();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9848));
		String_t* L_0 = ___keyword0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9855));
		NullCheck(L_0);
		String_t* L_1 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9855));
		V_0 = L_1;
		// if (responses.ContainsKey(lowerKeyword))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9849));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_2 = __this->get_responses_11();
		String_t* L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9856));
		NullCheck(L_2);
		bool L_4 = Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C(L_2, L_3, /*hidden argument*/Dictionary_2_ContainsKey_mE74812C323841792BFAC9E2253FEE43D2A63195C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9856));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9850));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_002d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9851));
		// responses[lowerKeyword].RemoveListener(action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9852));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_6 = __this->get_responses_11();
		String_t* L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9857));
		NullCheck(L_6);
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_8 = Dictionary_2_get_Item_mF33FB01DD22B2BA44D8F916CDE69E5A4813CA434(L_6, L_7, /*hidden argument*/Dictionary_2_get_Item_mF33FB01DD22B2BA44D8F916CDE69E5A4813CA434_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9857));
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_9 = ___action1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9858));
		NullCheck(L_8);
		UnityEvent_RemoveListener_m26034605306E868B2E332675FCCBDA37CECBBA19(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9858));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9853));
	}

IL_002d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9854));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySpeechHandler.OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m4EEBC821A3654708802B991DF0E9F7EB736109A0 (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m4EEBC821A3654708802B991DF0E9F7EB736109A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * V_0 = NULL;
	bool V_1 = false;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_m4EEBC821A3654708802B991DF0E9F7EB736109A0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9859));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9860));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9861));
		// if (enabled && responses.TryGetValue(eventData.Command.Keyword.ToLower(), out keywordResponse))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9862));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9876));
		bool L_0 = Behaviour_get_enabled_mAA0C9ED5A3D1589C1C8AA22636543528DB353CFB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9876));
		if (!L_0)
		{
			goto IL_002b;
		}
	}
	{
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_1 = __this->get_responses_11();
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9877));
		NullCheck(L_2);
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_3 = SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9877));
		V_2 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9878));
		String_t* L_4 = SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53((SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9878));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9879));
		NullCheck(L_4);
		String_t* L_5 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9879));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9880));
		NullCheck(L_1);
		bool L_6 = Dictionary_2_TryGetValue_m9851F753DF7DBCCD8B5F5925B2C39ED61B435A35(L_1, L_5, (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F **)(&V_0), /*hidden argument*/Dictionary_2_TryGetValue_m9851F753DF7DBCCD8B5F5925B2C39ED61B435A35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9880));
		G_B3_0 = ((int32_t)(L_6));
		goto IL_002c;
	}

IL_002b:
	{
		G_B3_0 = 0;
	}

IL_002c:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9863));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_00bb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9864));
		// keywordResponse.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9865));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9881));
		NullCheck(L_8);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9881));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9866));
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_9 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9882));
		NullCheck(L_9);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9882));
		// if (SpeechConfirmationTooltipPrefab != null
		//     && speechConfirmationTooltipPrefabInstance == null
		//     && !eventData.Command.Keyword.Equals("select", StringComparison.CurrentCultureIgnoreCase))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9867));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9883));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_10 = SpeechInputHandler_get_SpeechConfirmationTooltipPrefab_m36FA597659E4E846D6F5FCC587A0B4540453661B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9883));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9884));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9884));
		if (!L_11)
		{
			goto IL_007c;
		}
	}
	{
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_12 = __this->get_speechConfirmationTooltipPrefabInstance_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9885));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_13 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_12, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9885));
		if (!L_13)
		{
			goto IL_007c;
		}
	}
	{
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_14 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9886));
		NullCheck(L_14);
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_15 = SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9886));
		V_2 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9887));
		String_t* L_16 = SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53((SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9887));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9888));
		NullCheck(L_16);
		bool L_17 = String_Equals_mB42D01789A129C548840C18E9065ACF9412F1F84(L_16, _stringLiteral81448FE273247B533B9F018E96C158CAB7901247, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9888));
		G_B8_0 = ((((int32_t)L_17) == ((int32_t)0))? 1 : 0);
		goto IL_007d;
	}

IL_007c:
	{
		G_B8_0 = 0;
	}

IL_007d:
	{
		V_3 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9868));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_00ba;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9869));
		// speechConfirmationTooltipPrefabInstance = Instantiate(speechConfirmationTooltipPrefab);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9870));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_19 = __this->get_speechConfirmationTooltipPrefab_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9889));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_20 = Object_Instantiate_TisSpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355_mA775CD76A9E97CA381DF830EEC6217DCFE808BC1(L_19, /*hidden argument*/Object_Instantiate_TisSpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355_mA775CD76A9E97CA381DF830EEC6217DCFE808BC1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9889));
		__this->set_speechConfirmationTooltipPrefabInstance_10(L_20);
		// speechConfirmationTooltipPrefabInstance.SetText(eventData.Command.Keyword);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9871));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_21 = __this->get_speechConfirmationTooltipPrefabInstance_10();
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_22 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9890));
		NullCheck(L_22);
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_23 = SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9890));
		V_2 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9891));
		String_t* L_24 = SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53((SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9891));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9892));
		NullCheck(L_21);
		VirtActionInvoker1< String_t* >::Invoke(9 /* System.Void Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip::SetText(System.String) */, L_21, L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9892));
		// speechConfirmationTooltipPrefabInstance.TriggerConfirmedAnimation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9872));
		SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 * L_25 = __this->get_speechConfirmationTooltipPrefabInstance_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9893));
		NullCheck(L_25);
		VirtActionInvoker0::Invoke(10 /* System.Void Microsoft.MixedReality.Toolkit.UI.SpeechConfirmationTooltip::TriggerConfirmedAnimation() */, L_25);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9893));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9873));
	}

IL_00ba:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9874));
	}

IL_00bb:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9875));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechInputHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechInputHandler__ctor_m61BA4B1A4B78584514DF98BDABD37AC00C86BE83 (SpeechInputHandler_t4DCDD2C47EA33EC6093BC75F7D78AF06480E4560 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechInputHandler__ctor_m61BA4B1A4B78584514DF98BDABD37AC00C86BE83_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechInputHandler__ctor_m61BA4B1A4B78584514DF98BDABD37AC00C86BE83_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9894));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9895));
	{
		// private KeywordAndResponse[] keywords = Array.Empty<KeywordAndResponse>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9896));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9901));
		KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* L_0 = Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_inline(/*hidden argument*/Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9901));
		__this->set_keywords_7(L_0);
		// private bool persistentKeywords = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9897));
		__this->set_persistentKeywords_8((bool)0);
		// private SpeechConfirmationTooltip speechConfirmationTooltipPrefab = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9898));
		__this->set_speechConfirmationTooltipPrefab_9((SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 *)NULL);
		// private SpeechConfirmationTooltip speechConfirmationTooltipPrefabInstance = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9899));
		__this->set_speechConfirmationTooltipPrefabInstance_10((SpeechConfirmationTooltip_tBBFFDB1DFD57EC8107DF7DB597688B3D0016B355 *)NULL);
		// private readonly Dictionary<string, UnityEvent> responses = new Dictionary<string, UnityEvent>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9900));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9902));
		Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 * L_1 = (Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545 *)il2cpp_codegen_object_new(Dictionary_2_t4E4953B226060F79300E2BBA4C6906DF3577C545_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m95D1D183F16D34613D72DF94B2E5EA591AC0DB0B(L_1, /*hidden argument*/Dictionary_2__ctor_m95D1D183F16D34613D72DF94B2E5EA591AC0DB0B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9902));
		__this->set_responses_11(L_1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9903));
		BaseInputHandler__ctor_mC9DD64EF57F2D5FAD096FB424B02574C5B406D59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9903));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_SceneQueryType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SpherePointer_get_SceneQueryType_m76E735348279BBAAA846C2C56DB60C7A590BD2B8 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_SceneQueryType_m76E735348279BBAAA846C2C56DB60C7A590BD2B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_SceneQueryType_m76E735348279BBAAA846C2C56DB60C7A590BD2B8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15969));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15970));
	{
		// get => raycastMode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15971));
		int32_t L_0 = __this->get_raycastMode_52();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_SceneQueryType(Microsoft.MixedReality.Toolkit.Physics.SceneQueryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_SceneQueryType_mF4D39B2B6644840C652710C09DFE9E85D13368FB (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_SceneQueryType_mF4D39B2B6644840C652710C09DFE9E85D13368FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_SceneQueryType_mF4D39B2B6644840C652710C09DFE9E85D13368FB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15973));
	{
		// set => raycastMode = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15974));
		int32_t L_0 = ___value0;
		__this->set_raycastMode_52(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_PullbackDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15975));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15976));
	{
		// get => pullbackDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15977));
		float L_0 = __this->get_pullbackDistance_53();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_PullbackDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_PullbackDistance_m4DCCFB52358D261E9E3C2541A8137718B9134F88 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_PullbackDistance_m4DCCFB52358D261E9E3C2541A8137718B9134F88_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_PullbackDistance_m4DCCFB52358D261E9E3C2541A8137718B9134F88_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15979));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15980));
		// pullbackDistance = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15981));
		float L_0 = ___value0;
		__this->set_pullbackDistance_53(L_0);
		// queryBufferNearObjectRadius.queryMinDistance = pullbackDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15982));
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_1 = __this->get_queryBufferNearObjectRadius_63();
		float L_2 = __this->get_pullbackDistance_53();
		NullCheck(L_1);
		L_1->set_queryMinDistance_3(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15983));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectSectorAngle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15984));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15985));
	{
		// get => nearObjectSectorAngle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15986));
		float L_0 = __this->get_nearObjectSectorAngle_54();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_NearObjectSectorAngle(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_NearObjectSectorAngle_mE268817A65CB902C82C943D3D0086C9D455012F3 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_NearObjectSectorAngle_mE268817A65CB902C82C943D3D0086C9D455012F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_NearObjectSectorAngle_mE268817A65CB902C82C943D3D0086C9D455012F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15987));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15988));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15989));
		// nearObjectSectorAngle = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15990));
		float L_0 = ___value0;
		__this->set_nearObjectSectorAngle_54(L_0);
		// queryBufferNearObjectRadius.queryAngle = NearObjectSectorAngle * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15991));
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_1 = __this->get_queryBufferNearObjectRadius_63();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15993));
		float L_2 = SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15993));
		NullCheck(L_1);
		L_1->set_queryAngle_4(((float)il2cpp_codegen_multiply((float)L_2, (float)(0.5f))));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15992));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectMargin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15994));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15995));
	{
		// get => nearObjectMargin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15996));
		float L_0 = __this->get_nearObjectMargin_55();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_NearObjectMargin(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_NearObjectMargin_mE4D088EA4329EDCA83936EBC4465313A0BC23945 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_NearObjectMargin_mE4D088EA4329EDCA83936EBC4465313A0BC23945_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_NearObjectMargin_mE4D088EA4329EDCA83936EBC4465313A0BC23945_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15997));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15998));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15999));
		// nearObjectMargin = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16000));
		float L_0 = ___value0;
		__this->set_nearObjectMargin_55(L_0);
		// queryBufferNearObjectRadius.queryRadius = NearObjectRadius;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16001));
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_1 = __this->get_queryBufferNearObjectRadius_63();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16003));
		float L_2 = SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16003));
		NullCheck(L_1);
		L_1->set_queryRadius_2(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16002));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectAxisLerp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16004));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16005));
	{
		// get => nearObjectAxisLerp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16006));
		float L_0 = __this->get_nearObjectAxisLerp_56();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_NearObjectAxisLerp(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_NearObjectAxisLerp_m5D71466C34B7AF5005DD54F5EE4ED54583FFCF07 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_NearObjectAxisLerp_m5D71466C34B7AF5005DD54F5EE4ED54583FFCF07_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_NearObjectAxisLerp_m5D71466C34B7AF5005DD54F5EE4ED54583FFCF07_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16007));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16008));
	{
		// set => nearObjectAxisLerp = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16009));
		float L_0 = ___value0;
		__this->set_nearObjectAxisLerp_56(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectSmoothingFactor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectSmoothingFactor_mD9E4D620B4A9B2C9352AEAF3F3BB9C09B6424E07 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectSmoothingFactor_mD9E4D620B4A9B2C9352AEAF3F3BB9C09B6424E07_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectSmoothingFactor_mD9E4D620B4A9B2C9352AEAF3F3BB9C09B6424E07_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16010));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16011));
	{
		// get => nearObjectSmoothingFactor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16012));
		float L_0 = __this->get_nearObjectSmoothingFactor_57();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_NearObjectSmoothingFactor(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_NearObjectSmoothingFactor_m84694DFEC173B2A282ED5E7BEDC7BE2C17E30519 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_NearObjectSmoothingFactor_m84694DFEC173B2A282ED5E7BEDC7BE2C17E30519_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_NearObjectSmoothingFactor_m84694DFEC173B2A282ED5E7BEDC7BE2C17E30519_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16013));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16014));
	{
		// set => nearObjectSmoothingFactor = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16015));
		float L_0 = ___value0;
		__this->set_nearObjectSmoothingFactor_57(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_NearObjectRadius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16016));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16017));
	{
		// public float NearObjectRadius => SphereCastRadius + NearObjectMargin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16019));
		float L_0 = BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16019));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16020));
		float L_1 = SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16020));
		return ((float)il2cpp_codegen_add((float)L_0, (float)L_1));
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_GrabLayerMasks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* SpherePointer_get_GrabLayerMasks_m0F4201E3D85DF84491684FCFB64D0F2E3F8B3D45 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_GrabLayerMasks_m0F4201E3D85DF84491684FCFB64D0F2E3F8B3D45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_GrabLayerMasks_m0F4201E3D85DF84491684FCFB64D0F2E3F8B3D45_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16021));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16022));
	{
		// public LayerMask[] GrabLayerMasks => grabLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16023));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_grabLayerMasks_58();
		return L_0;
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_PrioritizedLayerMasksOverride()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* SpherePointer_get_PrioritizedLayerMasksOverride_m223A7A40B76537A05B4F594B352DA5B7157497BC (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_PrioritizedLayerMasksOverride_m223A7A40B76537A05B4F594B352DA5B7157497BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_PrioritizedLayerMasksOverride_m223A7A40B76537A05B4F594B352DA5B7157497BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16024));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16025));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16026));
		// get { return grabLayerMasks; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16027));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_grabLayerMasks_58();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return grabLayerMasks; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16028));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_PrioritizedLayerMasksOverride(UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_PrioritizedLayerMasksOverride_m5653F6393533F32BE6DEDC6D86023955257EE6B7 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_PrioritizedLayerMasksOverride_m5653F6393533F32BE6DEDC6D86023955257EE6B7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_PrioritizedLayerMasksOverride_m5653F6393533F32BE6DEDC6D86023955257EE6B7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16029));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16030));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16031));
		// set { grabLayerMasks = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16032));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___value0;
		__this->set_grabLayerMasks_58(L_0);
		// set { grabLayerMasks = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16033));
		return;
	}
}
// UnityEngine.QueryTriggerInteraction Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_TriggerInteraction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SpherePointer_get_TriggerInteraction_m5961AA072C445130A86D95898336B830E3A21111 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_TriggerInteraction_m5961AA072C445130A86D95898336B830E3A21111_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_TriggerInteraction_m5961AA072C445130A86D95898336B830E3A21111_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16034));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16035));
	{
		// public QueryTriggerInteraction TriggerInteraction => triggerInteraction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16036));
		int32_t L_0 = __this->get_triggerInteraction_59();
		return L_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_SceneQueryBufferSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SpherePointer_get_SceneQueryBufferSize_m10C1D90A8E15689572FD7B7C3B18D82646D701B7 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_SceneQueryBufferSize_m10C1D90A8E15689572FD7B7C3B18D82646D701B7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_SceneQueryBufferSize_m10C1D90A8E15689572FD7B7C3B18D82646D701B7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16037));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16038));
	{
		// public int SceneQueryBufferSize => sceneQueryBufferSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16039));
		int32_t L_0 = __this->get_sceneQueryBufferSize_60();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_IgnoreCollidersNotInFOV()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16041));
	{
		// get => ignoreCollidersNotInFOV;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16042));
		bool L_0 = __this->get_ignoreCollidersNotInFOV_61();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::set_IgnoreCollidersNotInFOV(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_set_IgnoreCollidersNotInFOV_m08EBF442F4854FFF13F0DAB376C1C4BEE9EA8919 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_set_IgnoreCollidersNotInFOV_m08EBF442F4854FFF13F0DAB376C1C4BEE9EA8919_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_set_IgnoreCollidersNotInFOV_m08EBF442F4854FFF13F0DAB376C1C4BEE9EA8919_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16043));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16044));
	{
		// set => ignoreCollidersNotInFOV = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16045));
		bool L_0 = ___value0;
		__this->set_ignoreCollidersNotInFOV_61(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_IsNearObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_get_IsNearObject_m95E75966E2272EC9EFD8C4A66781DE7AE2667573 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_IsNearObject_m95E75966E2272EC9EFD8C4A66781DE7AE2667573_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_IsNearObject_m95E75966E2272EC9EFD8C4A66781DE7AE2667573_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16046));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16047));
	int32_t G_B3_0 = 0;
	{
		// public virtual bool IsNearObject => queryBufferNearObjectRadius.ContainsGrabbable || queryBufferInteractionRadius.NearObjectDetected;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16048));
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_0 = __this->get_queryBufferNearObjectRadius_63();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16049));
		NullCheck(L_0);
		bool L_1 = SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16049));
		if (L_1)
		{
			goto IL_001a;
		}
	}
	{
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_2 = __this->get_queryBufferInteractionRadius_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16050));
		NullCheck(L_2);
		bool L_3 = SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16050));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 1;
	}

IL_001b:
	{
		return (bool)G_B3_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_get_IsInteractionEnabled_m3C8A83EA3303972636AB0E3D028596F1A3771734 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_IsInteractionEnabled_m3C8A83EA3303972636AB0E3D028596F1A3771734_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_IsInteractionEnabled_m3C8A83EA3303972636AB0E3D028596F1A3771734_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16052));
	int32_t G_B4_0 = 0;
	int32_t G_B6_0 = 0;
	{
		// public override bool IsInteractionEnabled => IsFocusLocked || (base.IsInteractionEnabled && queryBufferInteractionRadius.ContainsGrabbable);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16053));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16054));
		bool L_0 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16054));
		if (L_0)
		{
			goto IL_0020;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16055));
		bool L_1 = BaseControllerPointer_get_IsInteractionEnabled_m9F18E5E5A529EC82BA41F7D71E069E96D61F4C21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16055));
		if (!L_1)
		{
			goto IL_001d;
		}
	}
	{
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_2 = __this->get_queryBufferInteractionRadius_64();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16056));
		NullCheck(L_2);
		bool L_3 = SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16056));
		G_B4_0 = ((int32_t)(L_3));
		goto IL_001e;
	}

IL_001d:
	{
		G_B4_0 = 0;
	}

IL_001e:
	{
		G_B6_0 = G_B4_0;
		goto IL_0021;
	}

IL_0020:
	{
		G_B6_0 = 1;
	}

IL_0021:
	{
		return (bool)G_B6_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_Awake_m1B3331909318911303A86C64F36D3D3ABECFF1EF (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_Awake_m1B3331909318911303A86C64F36D3D3ABECFF1EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_Awake_m1B3331909318911303A86C64F36D3D3ABECFF1EF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16058));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16059));
		// queryBufferNearObjectRadius = new SpherePointerQueryInfo(sceneQueryBufferSize, Mathf.Max(NearObjectRadius, SphereCastRadius), NearObjectSectorAngle, PullbackDistance, nearObjectSmoothingFactor, true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16060));
		int32_t L_0 = __this->get_sceneQueryBufferSize_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16063));
		float L_1 = SpherePointer_get_NearObjectRadius_mCB679F32CE7F5CC3B2AE89F557D476348B3DAD59(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16063));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16064));
		float L_2 = BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16064));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16065));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_3 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16066));
		float L_4 = SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16067));
		float L_5 = SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16067));
		float L_6 = __this->get_nearObjectSmoothingFactor_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16068));
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_7 = (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A *)il2cpp_codegen_object_new(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_il2cpp_TypeInfo_var);
		SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA(L_7, L_0, L_3, L_4, L_5, L_6, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16068));
		__this->set_queryBufferNearObjectRadius_63(L_7);
		// queryBufferInteractionRadius = new SpherePointerQueryInfo(sceneQueryBufferSize, SphereCastRadius, 360.0f, 0.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16061));
		int32_t L_8 = __this->get_sceneQueryBufferSize_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16069));
		float L_9 = BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16069));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16070));
		SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_10 = (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A *)il2cpp_codegen_object_new(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_il2cpp_TypeInfo_var);
		SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA(L_10, L_8, L_9, (360.0f), (0.0f), (0.0f), (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16070));
		__this->set_queryBufferInteractionRadius_64(L_10);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16062));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer_OnPreSceneQuery_m1A400F413230CABB39180E16A2E92A99B0E8B376 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_OnPreSceneQuery_m1A400F413230CABB39180E16A2E92A99B0E8B376_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	bool V_5 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	int32_t V_7 = 0;
	bool V_8 = false;
	bool V_9 = false;
	int32_t V_10 = 0;
	bool V_11 = false;
	bool V_12 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_13;
	memset((&V_13), 0, sizeof(V_13));
	bool V_14 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_6), (&V_7), (&V_10));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_OnPreSceneQuery_m1A400F413230CABB39180E16A2E92A99B0E8B376_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16071));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16072));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16073));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16074));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_65();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16123));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16123));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16075));
			// if (Rays == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16076));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16124));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_2 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16124));
			V_4 = (bool)((((RuntimeObject*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)L_2) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16077));
			bool L_3 = V_4;
			if (!L_3)
			{
				goto IL_002e;
			}
		}

IL_001f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16078));
			// Rays = new RayStep[1];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16079));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = (RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)SZArrayNew(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_il2cpp_TypeInfo_var, (uint32_t)1);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16125));
			BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline(__this, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16125));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16080));
		}

IL_002e:
		{
			// if (TryGetNearGraspPoint(out pointerPosition) && TryGetNearGraspAxis(out pointerAxis))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16081));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16126));
			bool L_5 = SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40(__this, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16126));
			if (!L_5)
			{
				goto IL_0042;
			}
		}

IL_0038:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16127));
			bool L_6 = SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594(__this, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16127));
			G_B6_0 = ((int32_t)(L_6));
			goto IL_0043;
		}

IL_0042:
		{
			G_B6_0 = 0;
		}

IL_0043:
		{
			V_5 = (bool)G_B6_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16082));
			bool L_7 = V_5;
			if (!L_7)
			{
				goto IL_01bf;
			}
		}

IL_004c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16083));
			// Vector3 endPoint = Vector3.forward * SphereCastRadius;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16084));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16128));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16128));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16129));
			float L_9 = BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16129));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16130));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_8, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16130));
			V_6 = L_10;
			// Rays[0].UpdateRayStep(ref pointerPosition, ref endPoint);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16085));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16131));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_11 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16131));
			NullCheck(L_11);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16132));
			RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_11)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16132));
			// for (int i = 0; i < PrioritizedLayerMasksOverride.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16086));
			V_7 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16087));
			goto IL_00e0;
		}

IL_007a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16088));
			// queryBufferNearObjectRadius.TryUpdateQueryBufferForLayerMask(PrioritizedLayerMasksOverride[i], pointerPosition - pointerAxis * PullbackDistance, triggerInteraction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16089));
			SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_12 = __this->get_queryBufferNearObjectRadius_63();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16133));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_13 = VirtFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(92 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PrioritizedLayerMasksOverride() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16133));
			int32_t L_14 = V_7;
			NullCheck(L_13);
			int32_t L_15 = L_14;
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_16 = (L_13)->GetAt(static_cast<il2cpp_array_size_t>(L_15));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16134));
			float L_19 = SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16134));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16135));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_18, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16135));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16136));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_17, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16136));
			int32_t L_22 = __this->get_triggerInteraction_59();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16137));
			NullCheck(L_12);
			SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891(L_12, L_16, L_21, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16137));
			// if (queryBufferNearObjectRadius.HasValidGrabbable(pointerPosition - pointerAxis * PullbackDistance, pointerAxis, ignoreCollidersNotInFOV))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16090));
			SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_23 = __this->get_queryBufferNearObjectRadius_63();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16138));
			float L_26 = SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16138));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16139));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_25, L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16139));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16140));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_24, L_27, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16140));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_3;
			bool L_30 = __this->get_ignoreCollidersNotInFOV_61();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16141));
			NullCheck(L_23);
			bool L_31 = SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3(L_23, L_28, L_29, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16141));
			V_8 = L_31;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16091));
			bool L_32 = V_8;
			if (!L_32)
			{
				goto IL_00d9;
			}
		}

IL_00d6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16092));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16093));
			goto IL_00f2;
		}

IL_00d9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16094));
			// for (int i = 0; i < PrioritizedLayerMasksOverride.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16095));
			int32_t L_33 = V_7;
			V_7 = ((int32_t)il2cpp_codegen_add((int32_t)L_33, (int32_t)1));
		}

IL_00e0:
		{
			// for (int i = 0; i < PrioritizedLayerMasksOverride.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16096));
			int32_t L_34 = V_7;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16142));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_35 = VirtFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(92 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PrioritizedLayerMasksOverride() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16142));
			NullCheck(L_35);
			V_9 = (bool)((((int32_t)L_34) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_35)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16097));
			bool L_36 = V_9;
			if (L_36)
			{
				goto IL_007a;
			}
		}

IL_00f2:
		{
			// hitObject = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16098));
			__this->set_hitObject_66((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
			// hitPoint = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16099));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16143));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16143));
			__this->set_hitPoint_67(L_37);
			// hitDistance = Mathf.Infinity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16100));
			__this->set_hitDistance_68((std::numeric_limits<float>::infinity()));
			// for (int i = 0; i < PrioritizedLayerMasksOverride.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16101));
			V_10 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16102));
			goto IL_01a9;
		}

IL_0117:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16103));
			// queryBufferInteractionRadius.TryUpdateQueryBufferForLayerMask(PrioritizedLayerMasksOverride[i], pointerPosition, triggerInteraction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16104));
			SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_38 = __this->get_queryBufferInteractionRadius_64();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16144));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_39 = VirtFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(92 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PrioritizedLayerMasksOverride() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16144));
			int32_t L_40 = V_10;
			NullCheck(L_39);
			int32_t L_41 = L_40;
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_42 = (L_39)->GetAt(static_cast<il2cpp_array_size_t>(L_41));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_43 = V_2;
			int32_t L_44 = __this->get_triggerInteraction_59();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16145));
			NullCheck(L_38);
			SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891(L_38, L_42, L_43, L_44, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16145));
			// if (queryBufferInteractionRadius.HasValidGrabbable(pointerPosition, pointerAxis, ignoreCollidersNotInFOV))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16105));
			SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_45 = __this->get_queryBufferInteractionRadius_64();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_46 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = V_3;
			bool L_48 = __this->get_ignoreCollidersNotInFOV_61();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16146));
			NullCheck(L_45);
			bool L_49 = SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3(L_45, L_46, L_47, L_48, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16146));
			V_11 = L_49;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16106));
			bool L_50 = V_11;
			if (!L_50)
			{
				goto IL_01a2;
			}
		}

IL_0151:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16107));
			// hitObject = queryBufferInteractionRadius.GetClosestValidGrabbable(pointerPosition, pointerAxis, IgnoreCollidersNotInFOV, out hitPoint);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16108));
			SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * L_51 = __this->get_queryBufferInteractionRadius_64();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16147));
			bool L_54 = SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16147));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_55 = __this->get_address_of_hitPoint_67();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16148));
			NullCheck(L_51);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_56 = SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229(L_51, L_52, L_53, L_54, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16148));
			__this->set_hitObject_66(L_56);
			// if (hitObject != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16109));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_57 = __this->get_hitObject_66();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16149));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_58 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_57, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16149));
			V_12 = L_58;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16110));
			bool L_59 = V_12;
			if (!L_59)
			{
				goto IL_01a1;
			}
		}

IL_0183:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16111));
			// hitDistance = (pointerPosition - hitPoint).magnitude;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16112));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = __this->get_hitPoint_67();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16150));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_62 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_60, L_61, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16150));
			V_13 = L_62;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16151));
			float L_63 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_13), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16151));
			__this->set_hitDistance_68(L_63);
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16113));
			goto IL_01be;
		}

IL_01a1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16114));
		}

IL_01a2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16115));
			// for (int i = 0; i < PrioritizedLayerMasksOverride.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16116));
			int32_t L_64 = V_10;
			V_10 = ((int32_t)il2cpp_codegen_add((int32_t)L_64, (int32_t)1));
		}

IL_01a9:
		{
			// for (int i = 0; i < PrioritizedLayerMasksOverride.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16117));
			int32_t L_65 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16152));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_66 = VirtFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(92 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_PrioritizedLayerMasksOverride() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16152));
			NullCheck(L_66);
			V_14 = (bool)((((int32_t)L_65) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_66)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16118));
			bool L_67 = V_14;
			if (L_67)
			{
				goto IL_0117;
			}
		}

IL_01be:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16119));
		}

IL_01bf:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16120));
			IL2CPP_LEAVE(0x1D1, FINALLY_01c2);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01c2;
	}

FINALLY_01c2:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16121));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16153));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16153));
		IL2CPP_END_FINALLY(450)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(450)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1D1, IL_01d1)
	}

IL_01d1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16122));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,UnityEngine.GameObject&,UnityEngine.Vector3&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_OnSceneQuery_m7477C67B2623AB7029C2396952B6314E9320F45E (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks0, bool ___focusIndividualCompoundCollider1, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** ___hitObject2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___hitPoint3, float* ___hitDistance4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_OnSceneQuery_m7477C67B2623AB7029C2396952B6314E9320F45E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___prioritizedLayerMasks0), (&___focusIndividualCompoundCollider1), (&___hitObject2), (&___hitPoint3), (&___hitDistance4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_OnSceneQuery_m7477C67B2623AB7029C2396952B6314E9320F45E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16154));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16155));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16156));
		// PrioritizedLayerMasksOverride = prioritizedLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16157));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___prioritizedLayerMasks0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16163));
		VirtActionInvoker1< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(93 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::set_PrioritizedLayerMasksOverride(UnityEngine.LayerMask[]) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16163));
		// hitObject = this.hitObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16158));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_1 = ___hitObject2;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = __this->get_hitObject_66();
		*((RuntimeObject **)L_1) = (RuntimeObject *)L_2;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_1, (void*)(RuntimeObject *)L_2);
		// hitPoint = this.hitPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16159));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___hitPoint3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = __this->get_hitPoint_67();
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3 = L_4;
		// hitDistance = this.hitDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16160));
		float* L_5 = ___hitDistance4;
		float L_6 = __this->get_hitDistance_68();
		*((float*)L_5) = (float)L_6;
		// return hitObject != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16161));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_7 = ___hitObject2;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = *((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F **)L_7);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16164));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_9 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_8, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16164));
		V_0 = L_9;
		goto IL_0032;
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16162));
		bool L_10 = V_0;
		return L_10;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspPoint(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___result0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	RuntimeObject* V_3 = NULL;
	bool V_4 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	int32_t V_7 = 0;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___result0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_5), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16165));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16166));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 4);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16167));
		// using (TryGetNearGraspPointPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16168));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->get_TryGetNearGraspPointPerfMarker_69();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16201));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16201));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16169));
			// if (Controller != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16170));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16202));
			RuntimeObject* L_2 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16202));
			V_2 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16171));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_00d0;
			}
		}

IL_0020:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16172));
			// if (Controller is IMixedRealityHand hand)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16173));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16203));
			RuntimeObject* L_4 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16203));
			RuntimeObject* L_5 = ((RuntimeObject*)IsInst((RuntimeObject*)L_4, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var));
			V_3 = L_5;
			V_4 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16174));
			bool L_6 = V_4;
			if (!L_6)
			{
				goto IL_00ac;
			}
		}

IL_0037:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16175));
			// if (hand.TryGetJoint(TrackedHandJoint.IndexTip, out MixedRealityPose index) && index != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16176));
			RuntimeObject* L_7 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16204));
			NullCheck(L_7);
			bool L_8 = InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose&) */, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var, L_7, ((int32_t)11), (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16204));
			V_6 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16177));
			bool L_9 = V_6;
			if (!L_9)
			{
				goto IL_00ab;
			}
		}

IL_0048:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16178));
			// switch (graspPointPlacement)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16179));
			int32_t L_10 = __this->get_graspPointPlacement_62();
			V_7 = L_10;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16180));
			int32_t L_11 = V_7;
			if (!L_11)
			{
				goto IL_005e;
			}
		}

IL_0055:
		{
			goto IL_0057;
		}

IL_0057:
		{
			int32_t L_12 = V_7;
			if ((((int32_t)L_12) == ((int32_t)1)))
			{
				goto IL_0098;
			}
		}

IL_005c:
		{
			goto IL_00aa;
		}

IL_005e:
		{
			// if (hand.TryGetJoint(TrackedHandJoint.ThumbTip, out MixedRealityPose thumb) && thumb != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16181));
			RuntimeObject* L_13 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16205));
			NullCheck(L_13);
			bool L_14 = InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose&) */, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var, L_13, 6, (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_8));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16205));
			V_9 = L_14;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16182));
			bool L_15 = V_9;
			if (!L_15)
			{
				goto IL_0096;
			}
		}

IL_006d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16183));
			// result = 0.5f * (index.Position + thumb.Position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16184));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_16 = ___result0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16206));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16206));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16207));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16207));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16208));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_17, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16208));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16209));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839((0.5f), L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16209));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_16 = L_20;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16185));
			V_10 = (bool)1;
			IL2CPP_LEAVE(0xEF, FINALLY_00e0);
		}

IL_0096:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16186));
			goto IL_00aa;
		}

IL_0098:
		{
			// result = index.Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16187));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_21 = ___result0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16210));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16210));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_21 = L_22;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16188));
			V_10 = (bool)1;
			IL2CPP_LEAVE(0xEF, FINALLY_00e0);
		}

IL_00aa:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16189));
		}

IL_00ab:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16190));
		}

IL_00ac:
		{
			// if (Controller.IsPositionAvailable)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16191));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16211));
			RuntimeObject* L_23 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16211));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16212));
			NullCheck(L_23);
			bool L_24 = InterfaceFuncInvoker0< bool >::Invoke(6 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_IsPositionAvailable() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_23);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16212));
			V_11 = L_24;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16192));
			bool L_25 = V_11;
			if (!L_25)
			{
				goto IL_00cf;
			}
		}

IL_00bd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16193));
			// result = Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16194));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_26 = ___result0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16213));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(96 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Position() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16213));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_26 = L_27;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16195));
			V_10 = (bool)1;
			IL2CPP_LEAVE(0xEF, FINALLY_00e0);
		}

IL_00cf:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16196));
		}

IL_00d0:
		{
			// result = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16197));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_28 = ___result0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16214));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16214));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_28 = L_29;
			// return false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16198));
			V_10 = (bool)0;
			IL2CPP_LEAVE(0xEF, FINALLY_00e0);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00e0;
	}

FINALLY_00e0:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16199));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16215));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16215));
		IL2CPP_END_FINALLY(224)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(224)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xEF, IL_00ef)
	}

IL_00ef:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16200));
		bool L_30 = V_10;
		return L_30;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNearGraspAxis(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___axis0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	bool V_3 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_8;
	memset((&V_8), 0, sizeof(V_8));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___axis0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_4), (&V_6), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_TryGetNearGraspAxis_m06D5732A7CB8AFBAFE7D9246E5C82B5103548594_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16216));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16217));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16218));
		// using (TryGetNearGraspAxisPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16219));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->get_TryGetNearGraspAxisPerfMarker_70();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16239));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16239));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16220));
			// if (Controller is IMixedRealityHand hand)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16221));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16240));
			RuntimeObject* L_2 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16240));
			RuntimeObject* L_3 = ((RuntimeObject*)IsInst((RuntimeObject*)L_2, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var));
			V_2 = L_3;
			V_3 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_3) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16222));
			bool L_4 = V_3;
			if (!L_4)
			{
				goto IL_008a;
			}
		}

IL_0024:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16223));
			// if (hand.TryGetJoint(TrackedHandJoint.IndexTip, out MixedRealityPose index) && index != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16224));
			RuntimeObject* L_5 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16241));
			NullCheck(L_5);
			bool L_6 = InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose&) */, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var, L_5, ((int32_t)11), (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16241));
			V_5 = L_6;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16225));
			bool L_7 = V_5;
			if (!L_7)
			{
				goto IL_0089;
			}
		}

IL_0035:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16226));
			// if (hand.TryGetJoint(TrackedHandJoint.Palm, out MixedRealityPose palm) && palm != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16227));
			RuntimeObject* L_8 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16242));
			NullCheck(L_8);
			bool L_9 = InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityHand::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose&) */, IMixedRealityHand_t5D2E2914E93365AF052B9DE664513E720951514C_il2cpp_TypeInfo_var, L_8, 2, (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_6));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16242));
			V_7 = L_9;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16228));
			bool L_10 = V_7;
			if (!L_10)
			{
				goto IL_0088;
			}
		}

IL_0045:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16229));
			// Vector3 palmToIndex = index.Position - palm.Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16230));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16243));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16243));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16244));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16244));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16245));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_11, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16245));
			V_8 = L_13;
			// axis = Vector3.Lerp(palm.Forward, palmToIndex.normalized, NearObjectAxisLerp).normalized;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16231));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_14 = ___axis0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16246));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = MixedRealityPose_get_Forward_m8AC3F48E50D7917797E641BD9FBF7FB35074DC0E((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16246));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16247));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16247));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16248));
			float L_17 = SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16248));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16249));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_15, L_16, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16249));
			V_9 = L_18;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16250));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_9), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16250));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_14 = L_19;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16232));
			V_10 = (bool)1;
			IL2CPP_LEAVE(0xAF, FINALLY_00a0);
		}

IL_0088:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16233));
		}

IL_0089:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16234));
		}

IL_008a:
		{
			// axis = transform.forward;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16235));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_20 = ___axis0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16251));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16251));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16252));
			NullCheck(L_21);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16252));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_20 = L_22;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16236));
			V_10 = (bool)1;
			IL2CPP_LEAVE(0xAF, FINALLY_00a0);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00a0;
	}

FINALLY_00a0:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16237));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16253));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16253));
		IL2CPP_END_FINALLY(160)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(160)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xAF, IL_00af)
	}

IL_00af:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16238));
		bool L_23 = V_10;
		return L_23;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetDistanceToNearestSurface(System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_TryGetDistanceToNearestSurface_m79287D47DD54CCBD1E6D7665F0662CD8CE61DDE7 (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, float* ___distance0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_TryGetDistanceToNearestSurface_m79287D47DD54CCBD1E6D7665F0662CD8CE61DDE7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	bool V_3 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___distance0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_TryGetDistanceToNearestSurface_m79287D47DD54CCBD1E6D7665F0662CD8CE61DDE7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16254));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16255));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16256));
		// using (TryGetNormalToNearestSurfacePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16257));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->get_TryGetNormalToNearestSurfacePerfMarker_72();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16273));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16273));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16258));
			// var focusProvider = CoreServices.InputSystem?.FocusProvider;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16259));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16274));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16274));
			RuntimeObject* L_3 = L_2;
			G_B2_0 = L_3;
			if (L_3)
			{
				G_B3_0 = L_3;
				goto IL_001c;
			}
		}

IL_0018:
		{
			G_B4_0 = ((RuntimeObject*)(NULL));
			goto IL_0021;
		}

IL_001c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16275));
			NullCheck(G_B3_0);
			RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(7 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_FocusProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16275));
			G_B4_0 = L_4;
		}

IL_0021:
		{
			V_2 = G_B4_0;
			// if (focusProvider != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16260));
			RuntimeObject* L_5 = V_2;
			V_3 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16261));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_004a;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16262));
			// if (focusProvider.TryGetFocusDetails(this, out focusDetails))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16263));
			RuntimeObject* L_7 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16276));
			NullCheck(L_7);
			bool L_8 = InterfaceFuncInvoker2< bool, RuntimeObject*, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * >::Invoke(5 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider::TryGetFocusDetails(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.FocusDetails&) */, IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_il2cpp_TypeInfo_var, L_7, __this, (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_4));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16276));
			V_5 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16264));
			bool L_9 = V_5;
			if (!L_9)
			{
				goto IL_0049;
			}
		}

IL_003a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16265));
			// distance = focusDetails.RayDistance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16266));
			float* L_10 = ___distance0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16277));
			float L_11 = FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16277));
			*((float*)L_10) = (float)L_11;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16267));
			V_6 = (bool)1;
			IL2CPP_LEAVE(0x65, FINALLY_0056);
		}

IL_0049:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16268));
		}

IL_004a:
		{
			// distance = 0.0f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16269));
			float* L_12 = ___distance0;
			*((float*)L_12) = (float)(0.0f);
			// return false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16270));
			V_6 = (bool)0;
			IL2CPP_LEAVE(0x65, FINALLY_0056);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0056;
	}

FINALLY_0056:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16271));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16278));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16278));
		IL2CPP_END_FINALLY(86)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(86)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x65, IL_0065)
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16272));
		bool L_13 = V_6;
		return L_13;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer::TryGetNormalToNearestSurface(UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointer_TryGetNormalToNearestSurface_m646754A57E28101F63810F55FFA893266471806C (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___normal0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_TryGetNormalToNearestSurface_m646754A57E28101F63810F55FFA893266471806C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	bool V_3 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___normal0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_TryGetNormalToNearestSurface_m646754A57E28101F63810F55FFA893266471806C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16279));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16280));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16281));
		// using (TryGetNormalToNearestSurfacePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16282));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->get_TryGetNormalToNearestSurfacePerfMarker_72();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16298));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16298));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16283));
			// var focusProvider = CoreServices.InputSystem?.FocusProvider;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16284));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16299));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16299));
			RuntimeObject* L_3 = L_2;
			G_B2_0 = L_3;
			if (L_3)
			{
				G_B3_0 = L_3;
				goto IL_001c;
			}
		}

IL_0018:
		{
			G_B4_0 = ((RuntimeObject*)(NULL));
			goto IL_0021;
		}

IL_001c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16300));
			NullCheck(G_B3_0);
			RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(7 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_FocusProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16300));
			G_B4_0 = L_4;
		}

IL_0021:
		{
			V_2 = G_B4_0;
			// if (focusProvider != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16285));
			RuntimeObject* L_5 = V_2;
			V_3 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16286));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_004e;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16287));
			// if (focusProvider.TryGetFocusDetails(this, out focusDetails))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16288));
			RuntimeObject* L_7 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16301));
			NullCheck(L_7);
			bool L_8 = InterfaceFuncInvoker2< bool, RuntimeObject*, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * >::Invoke(5 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider::TryGetFocusDetails(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.FocusDetails&) */, IMixedRealityFocusProvider_tA3B4653F1F307662FC5F7A5C53C358CF0987C328_il2cpp_TypeInfo_var, L_7, __this, (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_4));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16301));
			V_5 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16289));
			bool L_9 = V_5;
			if (!L_9)
			{
				goto IL_004d;
			}
		}

IL_003a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16290));
			// normal = focusDetails.Normal;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16291));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_10 = ___normal0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16302));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16302));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_10 = L_11;
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16292));
			V_6 = (bool)1;
			IL2CPP_LEAVE(0x78, FINALLY_0069);
		}

IL_004d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16293));
		}

IL_004e:
		{
			// normal = Rotation * Vector3.forward;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16294));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_12 = ___normal0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16303));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = VirtFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(97 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_Rotation() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16303));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16304));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16304));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16305));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_13, L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16305));
			*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_12 = L_15;
			// return false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16295));
			V_6 = (bool)0;
			IL2CPP_LEAVE(0x78, FINALLY_0069);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0069;
	}

FINALLY_0069:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16296));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16306));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16306));
		IL2CPP_END_FINALLY(105)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(105)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x78, IL_0078)
	}

IL_0078:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16297));
		bool L_16 = V_6;
		return L_16;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer__ctor_mB4ED4DFB8EAA0D510CC6023ED0FDBADE1ABA71FF (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer__ctor_mB4ED4DFB8EAA0D510CC6023ED0FDBADE1ABA71FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer__ctor_mB4ED4DFB8EAA0D510CC6023ED0FDBADE1ABA71FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16307));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16308));
	{
		// private SceneQueryType raycastMode = SceneQueryType.SphereOverlap;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16309));
		__this->set_raycastMode_52(3);
		// private float pullbackDistance = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16310));
		__this->set_pullbackDistance_53((0.0f));
		// private float nearObjectSectorAngle = 360.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16311));
		__this->set_nearObjectSectorAngle_54((360.0f));
		// private float nearObjectMargin = 0.2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16312));
		__this->set_nearObjectMargin_55((0.2f));
		// private float nearObjectAxisLerp = 0.9f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16313));
		__this->set_nearObjectAxisLerp_56((0.9f));
		// private float nearObjectSmoothingFactor = 0.4f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16314));
		__this->set_nearObjectSmoothingFactor_57((0.4f));
		// private LayerMask[] grabLayerMasks = { UnityEngine.Physics.DefaultRaycastLayers };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16315));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = (LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)SZArrayNew(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var, (uint32_t)1);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16320));
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_2 = LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300(((int32_t)-5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16320));
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 )L_2);
		__this->set_grabLayerMasks_58(L_1);
		// protected QueryTriggerInteraction triggerInteraction = QueryTriggerInteraction.UseGlobal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16316));
		__this->set_triggerInteraction_59(0);
		// private int sceneQueryBufferSize = 64;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16317));
		__this->set_sceneQueryBufferSize_60(((int32_t)64));
		// private bool ignoreCollidersNotInFOV = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16318));
		__this->set_ignoreCollidersNotInFOV_61((bool)1);
		// private GraspPointPlacement graspPointPlacement = GraspPointPlacement.BetweenIndexFingerAndThumb;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16319));
		__this->set_graspPointPlacement_62(0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16321));
		IL2CPP_RUNTIME_CLASS_INIT(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_il2cpp_TypeInfo_var);
		BaseControllerPointer__ctor_m8374A8CF3D902194835061AD6EC89AAE3FA48071(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16321));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointer__cctor_mB90A449CCEBE3FA35F3BD76BFE303F953B68D974 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer__cctor_mB90A449CCEBE3FA35F3BD76BFE303F953B68D974_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer__cctor_mB90A449CCEBE3FA35F3BD76BFE303F953B68D974_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16322));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16323));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] SpherePointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16329));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralA01F23363E2CF795D01D6628C7A12ED43F4F80C1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16329));
		((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_65(L_0);
		// private static readonly ProfilerMarker TryGetNearGraspPointPerfMarker = new ProfilerMarker("[MRTK] SpherePointer.TryGetNearGraspPoint");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16325));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16330));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteralA664038B5DD5E9F959CE40D88E844FEDDEE164CB, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16330));
		((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->set_TryGetNearGraspPointPerfMarker_69(L_1);
		// private static readonly ProfilerMarker TryGetNearGraspAxisPerfMarker = new ProfilerMarker("[MRTK] ConePointer.TryGetNearGraspAxis");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16326));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16331));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral7A47472A1120F3DE60FF125D012BB8161B64BDC5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16331));
		((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->set_TryGetNearGraspAxisPerfMarker_70(L_2);
		// private static readonly ProfilerMarker TryGetDistanceToNearestSurfacePerfMarker = new ProfilerMarker("[MRTK] SpherePointer.TryGetDistanceToNearestSurface");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16327));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16332));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteralFC1A14A78841EC880532BAB180A62D341E29A2C9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16332));
		((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->set_TryGetDistanceToNearestSurfacePerfMarker_71(L_3);
		// private static readonly ProfilerMarker TryGetNormalToNearestSurfacePerfMarker = new ProfilerMarker("[MRTK] SpherePointer.TryGetNormalToNearestSurface");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16328));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16333));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral6A7F61D8C9ED50B1B29F67B489C9F2C8B389B0A9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16333));
		((SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_il2cpp_TypeInfo_var))->set_TryGetNormalToNearestSurfacePerfMarker_72(L_4);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::.ctor(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, int32_t ___bufferSize0, float ___radius1, float ___angle2, float ___minDistance3, float ___smoothingFactor4, bool ___ignoreBoundsHandles5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___bufferSize0), (&___radius1), (&___angle2), (&___minDistance3), (&___smoothingFactor4), (&___ignoreBoundsHandles5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo__ctor_mC874DEB5F1B2F8DCDC718537FCF66E42975396CA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16334));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16335));
	{
		// public bool ignoreBoundsHandlesForQuery = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16336));
		__this->set_ignoreBoundsHandlesForQuery_6((bool)0);
		// public SpherePointerQueryInfo(int bufferSize, float radius, float angle, float minDistance, float smoothingFactor, bool ignoreBoundsHandles = false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16337));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16347));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16347));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16338));
		// numColliders = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16339));
		__this->set_numColliders_0(0);
		// queryBuffer = new Collider[bufferSize];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16340));
		int32_t L_0 = ___bufferSize0;
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_1 = (ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)SZArrayNew(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252_il2cpp_TypeInfo_var, (uint32_t)L_0);
		__this->set_queryBuffer_1(L_1);
		// queryRadius = radius;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16341));
		float L_2 = ___radius1;
		__this->set_queryRadius_2(L_2);
		// queryMinDistance = minDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16342));
		float L_3 = ___minDistance3;
		__this->set_queryMinDistance_3(L_3);
		// queryAngle = angle * 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16343));
		float L_4 = ___angle2;
		__this->set_queryAngle_4(((float)il2cpp_codegen_multiply((float)L_4, (float)(0.5f))));
		// querySmoothingFactor = smoothingFactor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16344));
		float L_5 = ___smoothingFactor4;
		__this->set_querySmoothingFactor_5(L_5);
		// ignoreBoundsHandlesForQuery = ignoreBoundsHandles;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16345));
		bool L_6 = ___ignoreBoundsHandles5;
		__this->set_ignoreBoundsHandlesForQuery_6(L_6);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16346));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::HasValidGrabbable(UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAxis1, bool ___ignoreCollidersNotInFOV2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * V_1 = NULL;
	int32_t V_2 = 0;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerPosition0), (&___pointerAxis1), (&___ignoreCollidersNotInFOV2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_HasValidGrabbable_mE584F776F3202A34040E56481667212DD42608D3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16348));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16349));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16350));
		// Vector3 grabbablePosition = pointerPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16351));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___pointerPosition0;
		V_0 = L_0;
		// NearInteractionGrabbable currentGrabbable = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16352));
		V_1 = (NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E *)NULL;
		// for (int i = 0; i < numColliders; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16353));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16354));
		goto IL_0060;
	}

IL_0009:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16355));
		// Collider collider = queryBuffer[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16356));
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_1 = __this->get_queryBuffer_1();
		int32_t L_2 = V_2;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_3 = L_4;
		// if (IsColliderValidGrabbable(collider, ignoreCollidersNotInFOV, out currentGrabbable)
		//     && IsColliderPositionValid(collider, pointerPosition, pointerAxis, queryAngle, queryMinDistance, out grabbablePosition))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16357));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_5 = V_3;
		bool L_6 = ___ignoreCollidersNotInFOV2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16372));
		bool L_7 = SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE(__this, L_5, L_6, (NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E **)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16372));
		if (!L_7)
		{
			goto IL_0038;
		}
	}
	{
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_8 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = ___pointerPosition0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = ___pointerAxis1;
		float L_11 = __this->get_queryAngle_4();
		float L_12 = __this->get_queryMinDistance_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16373));
		bool L_13 = SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF(__this, L_8, L_9, L_10, L_11, L_12, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16373));
		G_B4_0 = ((int32_t)(L_13));
		goto IL_0039;
	}

IL_0038:
	{
		G_B4_0 = 0;
	}

IL_0039:
	{
		V_4 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16358));
		bool L_14 = V_4;
		if (!L_14)
		{
			goto IL_005b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16359));
		// if (currentGrabbable != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16360));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16374));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_16 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_15, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16374));
		V_5 = L_16;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16361));
		bool L_17 = V_5;
		if (!L_17)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16362));
		// grabbable = currentGrabbable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16363));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_18 = V_1;
		__this->set_grabbable_7(L_18);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16364));
		V_6 = (bool)1;
		goto IL_0074;
	}

IL_005a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16365));
	}

IL_005b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16366));
		// for (int i = 0; i < numColliders; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16367));
		int32_t L_19 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1));
	}

IL_0060:
	{
		// for (int i = 0; i < numColliders; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16368));
		int32_t L_20 = V_2;
		int32_t L_21 = __this->get_numColliders_0();
		V_7 = (bool)((((int32_t)L_20) < ((int32_t)L_21))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16369));
		bool L_22 = V_7;
		if (L_22)
		{
			goto IL_0009;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16370));
		V_6 = (bool)0;
		goto IL_0074;
	}

IL_0074:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16371));
		bool L_23 = V_6;
		return L_23;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::GetClosestValidGrabbable(UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAxis1, bool ___ignoreCollidersNotInFOV2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___hitPosition3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * V_1 = NULL;
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * V_2 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	float V_4 = 0.0f;
	float V_5 = 0.0f;
	int32_t V_6 = 0;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_7 = NULL;
	bool V_8 = false;
	float V_9 = 0.0f;
	float V_10 = 0.0f;
	float V_11 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_12;
	memset((&V_12), 0, sizeof(V_12));
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_16 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerPosition0), (&___pointerAxis1), (&___ignoreCollidersNotInFOV2), (&___hitPosition3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6), (&V_7), (&V_9), (&V_10), (&V_11));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_GetClosestValidGrabbable_mC98EAF4C244AFB3C3F09A6BAFA45483336E79229_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16375));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16376));
	int32_t G_B4_0 = 0;
	int32_t G_B9_0 = 0;
	int32_t G_B11_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16377));
		// Vector3 colliderHitPoint = pointerPosition; ;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16378));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___pointerPosition0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16379));
		// NearInteractionGrabbable currentGrabbable = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16380));
		V_1 = (NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E *)NULL;
		// NearInteractionGrabbable closestGrabbable = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16381));
		V_2 = (NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E *)NULL;
		// Vector3 closestColliderHitPosition = pointerPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16382));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___pointerPosition0;
		V_3 = L_1;
		// float closestDistance = Mathf.Infinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16383));
		V_4 = (std::numeric_limits<float>::infinity());
		// float closestVolume = Mathf.Infinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16384));
		V_5 = (std::numeric_limits<float>::infinity());
		// for (int i = 0; i < numColliders; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16385));
		V_6 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16386));
		goto IL_00d2;
	}

IL_0020:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16387));
		// Collider collider = queryBuffer[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16388));
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_2 = __this->get_queryBuffer_1();
		int32_t L_3 = V_6;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_7 = L_5;
		// if (IsColliderValidGrabbable(collider, ignoreCollidersNotInFOV, out currentGrabbable)
		//     && IsColliderPositionValid(collider, pointerPosition, pointerAxis, queryAngle, queryMinDistance, out colliderHitPoint))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16389));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_6 = V_7;
		bool L_7 = ___ignoreCollidersNotInFOV2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16417));
		bool L_8 = SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE(__this, L_6, L_7, (NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E **)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16417));
		if (!L_8)
		{
			goto IL_0053;
		}
	}
	{
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_9 = V_7;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = ___pointerPosition0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = ___pointerAxis1;
		float L_12 = __this->get_queryAngle_4();
		float L_13 = __this->get_queryMinDistance_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16418));
		bool L_14 = SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF(__this, L_9, L_10, L_11, L_12, L_13, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16418));
		G_B4_0 = ((int32_t)(L_14));
		goto IL_0054;
	}

IL_0053:
	{
		G_B4_0 = 0;
	}

IL_0054:
	{
		V_8 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16390));
		bool L_15 = V_8;
		if (!L_15)
		{
			goto IL_00cb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16391));
		// float currentDistance = (pointerPosition - colliderHitPoint).sqrMagnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16392));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = ___pointerPosition0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16419));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16419));
		V_12 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16420));
		float L_19 = Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_12), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16420));
		V_9 = L_19;
		// float currentVolume = collider.bounds.Transform(collider.transform.localToWorldMatrix).Volume();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16393));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_20 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16421));
		NullCheck(L_20);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_21 = Collider_get_bounds_mD3CB68E38FB998406193A88D18C01F510272058A(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16421));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_22 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16422));
		NullCheck(L_22);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16422));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16423));
		NullCheck(L_23);
		Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  L_24 = Transform_get_localToWorldMatrix_mBC86B8C7BA6F53DAB8E0120D77729166399A0EED(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16423));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16424));
		IL2CPP_RUNTIME_CLASS_INIT(BoundsExtensions_t65D5B81F0B4D8D20A4798B651AD4C93A9A761859_il2cpp_TypeInfo_var);
		Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  L_25 = BoundsExtensions_Transform_mEAF553A8EA0C4D65B01787D819A1DFD6C56F40DC(L_21, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16424));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16425));
		float L_26 = BoundsExtensions_Volume_m8FACD7D6ECCC2E4EECC04DD923CABE85072766B5(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16425));
		V_10 = L_26;
		// float distanceDiff = closestDistance - currentDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16394));
		float L_27 = V_4;
		float L_28 = V_9;
		V_11 = ((float)il2cpp_codegen_subtract((float)L_27, (float)L_28));
		// if (distanceDiff > MIN_DIST_DIFF || (Mathf.Abs(distanceDiff) < MIN_DIST_DIFF && currentVolume < closestVolume))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16395));
		float L_29 = V_11;
		if ((((float)L_29) > ((float)(1.0E-05f))))
		{
			goto IL_00b5;
		}
	}
	{
		float L_30 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16426));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_31 = fabsf(L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16426));
		if ((!(((float)L_31) < ((float)(1.0E-05f)))))
		{
			goto IL_00b2;
		}
	}
	{
		float L_32 = V_10;
		float L_33 = V_5;
		G_B9_0 = ((((float)L_32) < ((float)L_33))? 1 : 0);
		goto IL_00b3;
	}

IL_00b2:
	{
		G_B9_0 = 0;
	}

IL_00b3:
	{
		G_B11_0 = G_B9_0;
		goto IL_00b6;
	}

IL_00b5:
	{
		G_B11_0 = 1;
	}

IL_00b6:
	{
		V_13 = (bool)G_B11_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16396));
		bool L_34 = V_13;
		if (!L_34)
		{
			goto IL_00ca;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16397));
		// closestDistance = currentDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16398));
		float L_35 = V_9;
		V_4 = L_35;
		// closestVolume = currentVolume;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16399));
		float L_36 = V_10;
		V_5 = L_36;
		// closestGrabbable = currentGrabbable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16400));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_37 = V_1;
		V_2 = L_37;
		// closestColliderHitPosition = colliderHitPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16401));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_38 = V_0;
		V_3 = L_38;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16402));
	}

IL_00ca:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16403));
	}

IL_00cb:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16404));
		// for (int i = 0; i < numColliders; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16405));
		int32_t L_39 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_39, (int32_t)1));
	}

IL_00d2:
	{
		// for (int i = 0; i < numColliders; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16406));
		int32_t L_40 = V_6;
		int32_t L_41 = __this->get_numColliders_0();
		V_14 = (bool)((((int32_t)L_40) < ((int32_t)L_41))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16407));
		bool L_42 = V_14;
		if (L_42)
		{
			goto IL_0020;
		}
	}
	{
		// hitPosition = closestColliderHitPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16408));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_43 = ___hitPosition3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_44 = V_3;
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_43 = L_44;
		// if(closestGrabbable != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16409));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_45 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16427));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_46 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_45, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16427));
		V_15 = L_46;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16410));
		bool L_47 = V_15;
		if (!L_47)
		{
			goto IL_010c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16411));
		// grabbable = closestGrabbable;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16412));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_48 = V_2;
		__this->set_grabbable_7(L_48);
		// return closestGrabbable.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16413));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_49 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16428));
		NullCheck(L_49);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_50 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16428));
		V_16 = L_50;
		goto IL_0112;
	}

IL_010c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16414));
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16415));
		V_16 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		goto IL_0112;
	}

IL_0112:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16416));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_51 = V_16;
		return L_51;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::TryUpdateQueryBufferForLayerMask(UnityEngine.LayerMask,UnityEngine.Vector3,UnityEngine.QueryTriggerInteraction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___layerMask0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition1, int32_t ___triggerInteraction2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___layerMask0), (&___pointerPosition1), (&___triggerInteraction2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_TryUpdateQueryBufferForLayerMask_mA16B276C97B33A0EC7C5CCF719C83CA899E0A891_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16429));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16430));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16431));
		// using (TryUpdateQueryBufferForLayerMaskPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16432));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_il2cpp_TypeInfo_var))->get_TryUpdateQueryBufferForLayerMaskPerfMarker_9();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16452));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16452));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16433));
			// if (ContainsGrabbable)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16434));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16453));
			bool L_2 = SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16453));
			V_3 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16435));
			bool L_3 = V_3;
			if (!L_3)
			{
				goto IL_0032;
			}
		}

IL_001a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16436));
			// radius = queryRadius * (1 + querySmoothingFactor);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16437));
			float L_4 = __this->get_queryRadius_2();
			float L_5 = __this->get_querySmoothingFactor_5();
			V_2 = ((float)il2cpp_codegen_multiply((float)L_4, (float)((float)il2cpp_codegen_add((float)(1.0f), (float)L_5))));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16438));
			goto IL_003b;
		}

IL_0032:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16439));
			// radius = queryRadius;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16440));
			float L_6 = __this->get_queryRadius_2();
			V_2 = L_6;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16441));
		}

IL_003b:
		{
			// grabbable = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16442));
			__this->set_grabbable_7((NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E *)NULL);
			// numColliders = UnityEngine.Physics.OverlapSphereNonAlloc(
			//     pointerPosition,
			//     radius,
			//     queryBuffer,
			//     layerMask,
			//     triggerInteraction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16443));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = ___pointerPosition1;
			float L_8 = V_2;
			ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_9 = __this->get_queryBuffer_1();
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_10 = ___layerMask0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16454));
			int32_t L_11 = LayerMask_op_Implicit_m2AFFC7F931005437E8F356C953F439829AF4CFA5(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16454));
			int32_t L_12 = ___triggerInteraction2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16455));
			int32_t L_13 = Physics_OverlapSphereNonAlloc_mE01FE11B81FB91430A8A66A60E7CBC1F2B38BD5E(L_7, L_8, L_9, L_11, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16455));
			__this->set_numColliders_0(L_13);
			// if (numColliders == queryBuffer.Length)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16444));
			int32_t L_14 = __this->get_numColliders_0();
			ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_15 = __this->get_queryBuffer_1();
			NullCheck(L_15);
			V_4 = (bool)((((int32_t)L_14) == ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_15)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16445));
			bool L_16 = V_4;
			if (!L_16)
			{
				goto IL_008f;
			}
		}

IL_0072:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16446));
			// Debug.LogWarning($"Maximum number of {numColliders} colliders found in SpherePointer overlap query. Consider increasing the query buffer size in the pointer profile.");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16447));
			int32_t L_17 = __this->get_numColliders_0();
			int32_t L_18 = L_17;
			RuntimeObject * L_19 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_18);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16456));
			String_t* L_20 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral21FD6EB453B2B988D22B805FF3B86D6A9E06EC97, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16456));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16457));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16457));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16448));
		}

IL_008f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16449));
			IL2CPP_LEAVE(0xA1, FINALLY_0092);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0092;
	}

FINALLY_0092:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16458));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16458));
		IL2CPP_END_FINALLY(146)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(146)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xA1, IL_00a1)
	}

IL_00a1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16451));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::IsColliderValidGrabbable(UnityEngine.Collider,System.Boolean,Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider0, bool ___ignoreCollidersNotInFOV1, NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** ___currentGrabbable2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * V_1 = NULL;
	Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___collider0), (&___ignoreCollidersNotInFOV1), (&___currentGrabbable2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_IsColliderValidGrabbable_m459D17E99837CEC99E2D99C923FCCE2BA99D1CFE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16459));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16460));
	int32_t G_B4_0 = 0;
	int32_t G_B6_0 = 0;
	int32_t G_B11_0 = 0;
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16461));
		// currentGrabbable = collider.GetComponent<NearInteractionGrabbable>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16462));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** L_0 = ___currentGrabbable2;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = ___collider0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16480));
		NullCheck(L_1);
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_2 = Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC(L_1, /*hidden argument*/Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16480));
		*((RuntimeObject **)L_0) = (RuntimeObject *)L_2;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_0, (void*)(RuntimeObject *)L_2);
		// bool isValidGrabbable =  (currentGrabbable != null) && !(ignoreBoundsHandlesForQuery && currentGrabbable.IsBoundsHandles);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16463));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** L_3 = ___currentGrabbable2;
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_4 = *((NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E **)L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16481));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16481));
		if (!L_5)
		{
			goto IL_002a;
		}
	}
	{
		bool L_6 = __this->get_ignoreBoundsHandlesForQuery_6();
		if (!L_6)
		{
			goto IL_0027;
		}
	}
	{
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** L_7 = ___currentGrabbable2;
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_8 = *((NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E **)L_7);
		NullCheck(L_8);
		bool L_9 = L_8->get_IsBoundsHandles_5();
		G_B4_0 = ((((int32_t)L_9) == ((int32_t)0))? 1 : 0);
		goto IL_0028;
	}

IL_0027:
	{
		G_B4_0 = 1;
	}

IL_0028:
	{
		G_B6_0 = G_B4_0;
		goto IL_002b;
	}

IL_002a:
	{
		G_B6_0 = 0;
	}

IL_002b:
	{
		V_0 = (bool)G_B6_0;
		// if (!isValidGrabbable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16464));
		bool L_10 = V_0;
		V_3 = (bool)((((int32_t)L_10) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16465));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16466));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16467));
		V_4 = (bool)0;
		goto IL_0089;
	}

IL_003a:
	{
		// MeshCollider meshCollider = collider as MeshCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16468));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_12 = ___collider0;
		V_1 = ((MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE *)IsInstClass((RuntimeObject*)L_12, MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE_il2cpp_TypeInfo_var));
		// if (meshCollider != null && meshCollider.convex == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16469));
		MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16482));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_14 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_13, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16482));
		if (!L_14)
		{
			goto IL_0055;
		}
	}
	{
		MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16483));
		NullCheck(L_15);
		bool L_16 = MeshCollider_get_convex_mAA9801A31A512288CE0705E56596D836FC73E64A(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16483));
		G_B11_0 = ((((int32_t)L_16) == ((int32_t)0))? 1 : 0);
		goto IL_0056;
	}

IL_0055:
	{
		G_B11_0 = 0;
	}

IL_0056:
	{
		V_5 = (bool)G_B11_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16470));
		bool L_17 = V_5;
		if (!L_17)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16471));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16472));
		V_4 = (bool)0;
		goto IL_0089;
	}

IL_0062:
	{
		// Camera mainCam = CameraCache.Main;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16473));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16484));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_18 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16484));
		V_2 = L_18;
		// if (ignoreCollidersNotInFOV && !mainCam.IsInFOVCached(collider))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16474));
		bool L_19 = ___ignoreCollidersNotInFOV1;
		if (!L_19)
		{
			goto IL_0077;
		}
	}
	{
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_20 = V_2;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_21 = ___collider0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16485));
		IL2CPP_RUNTIME_CLASS_INIT(CameraFOVChecker_tB0E867F4D4A49EC7C4CDDF0DC4878BE3CC75A4C4_il2cpp_TypeInfo_var);
		bool L_22 = CameraFOVChecker_IsInFOVCached_m5805DB20DD2C94B684752ADB5ED145262147C795(L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16485));
		G_B16_0 = ((((int32_t)L_22) == ((int32_t)0))? 1 : 0);
		goto IL_0078;
	}

IL_0077:
	{
		G_B16_0 = 0;
	}

IL_0078:
	{
		V_6 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16475));
		bool L_23 = V_6;
		if (!L_23)
		{
			goto IL_0084;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16476));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16477));
		V_4 = (bool)0;
		goto IL_0089;
	}

IL_0084:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16478));
		V_4 = (bool)1;
		goto IL_0089;
	}

IL_0089:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16479));
		bool L_24 = V_4;
		return L_24;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::IsColliderPositionValid(UnityEngine.Collider,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerPosition1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAxis2, float ___queryAngle3, float ___queryDistance4, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___closestPointToCollider5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	float V_1 = 0.0f;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___collider0), (&___pointerPosition1), (&___pointerAxis2), (&___queryAngle3), (&___queryDistance4), (&___closestPointToCollider5));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_IsColliderPositionValid_mFE9735E23B7375FE979501AE9A88153CF826CDDF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16486));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16487));
	int32_t G_B3_0 = 0;
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16488));
		// closestPointToCollider = collider.ClosestPoint(pointerPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16489));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = ___closestPointToCollider5;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = ___collider0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___pointerPosition1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16500));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Collider_ClosestPoint_mA3CF53B6EE9CEEDB3BF2BCCE19E511CA659672B7(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16500));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_0 = L_3;
		// Vector3 relativeColliderPosition = closestPointToCollider - pointerPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16490));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___closestPointToCollider5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = (*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = ___pointerPosition1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16501));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16501));
		V_0 = L_7;
		// float queryAngleRadians = queryAngle * Mathf.Deg2Rad;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16491));
		float L_8 = ___queryAngle3;
		V_1 = ((float)il2cpp_codegen_multiply((float)L_8, (float)(0.0174532924f)));
		// bool inAngle = Vector3.Dot(pointerAxis, relativeColliderPosition.normalized) >= Mathf.Cos(queryAngleRadians) || queryAngle >= 180.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16492));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = ___pointerAxis2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16502));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16502));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16503));
		float L_11 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16503));
		float L_12 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16504));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_13 = cosf(L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16504));
		if ((((float)L_11) >= ((float)L_13)))
		{
			goto IL_0049;
		}
	}
	{
		float L_14 = ___queryAngle3;
		G_B3_0 = ((((int32_t)((!(((float)L_14) >= ((float)(180.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_004a;
	}

IL_0049:
	{
		G_B3_0 = 1;
	}

IL_004a:
	{
		V_2 = (bool)G_B3_0;
		// bool pastMinDistance = relativeColliderPosition.sqrMagnitude >= queryMinDistance * queryMinDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16493));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16505));
		float L_15 = Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16505));
		float L_16 = __this->get_queryMinDistance_3();
		float L_17 = __this->get_queryMinDistance_3();
		V_3 = (bool)((((int32_t)((!(((float)L_15) >= ((float)((float)il2cpp_codegen_multiply((float)L_16, (float)L_17)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		// if (!pastMinDistance || !inAngle)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16494));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_006e;
		}
	}
	{
		bool L_19 = V_2;
		G_B6_0 = ((((int32_t)L_19) == ((int32_t)0))? 1 : 0);
		goto IL_006f;
	}

IL_006e:
	{
		G_B6_0 = 1;
	}

IL_006f:
	{
		V_4 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16495));
		bool L_20 = V_4;
		if (!L_20)
		{
			goto IL_007b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16496));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16497));
		V_5 = (bool)0;
		goto IL_0080;
	}

IL_007b:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16498));
		V_5 = (bool)1;
		goto IL_0080;
	}

IL_0080:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16499));
		bool L_21 = V_5;
		return L_21;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::get_ContainsGrabbable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16506));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16507));
	{
		// public bool ContainsGrabbable => grabbable != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16508));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_0 = __this->get_grabbable_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16509));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16509));
		return L_1;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::get_NearObjectDetected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924 (SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo_get_NearObjectDetected_m5CEF1F2D69F26372BF4DFC2341183AF8689BA924_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16510));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16511));
	int32_t G_B3_0 = 0;
	{
		// public bool NearObjectDetected => ContainsGrabbable && !grabbable.IsBoundsHandles;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16512));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16513));
		bool L_0 = SpherePointerQueryInfo_get_ContainsGrabbable_mD2E7FE7CBD896E6A41015C24F846AE801DB39F47(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16513));
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_1 = __this->get_grabbable_7();
		NullCheck(L_1);
		bool L_2 = L_1->get_IsBoundsHandles_5();
		G_B3_0 = ((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_0019;
	}

IL_0018:
	{
		G_B3_0 = 0;
	}

IL_0019:
	{
		return (bool)G_B3_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointer/SpherePointerQueryInfo::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerQueryInfo__cctor_m535F1BBCCD86EE50E287FCC45D6E144A6610FE93 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerQueryInfo__cctor_m535F1BBCCD86EE50E287FCC45D6E144A6610FE93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerQueryInfo__cctor_m535F1BBCCD86EE50E287FCC45D6E144A6610FE93_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16514));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16515));
	{
		// private static readonly ProfilerMarker TryUpdateQueryBufferForLayerMaskPerfMarker = new ProfilerMarker("[MRTK] SpherePointerQueryInfo.TryUpdateQueryBufferForLayerMask");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16516));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16517));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralCD162394C73DDA97FDD11954A2E58DA7CDA0E9AC, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16517));
		((SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerQueryInfo_t6DAFAEAEA25740603DEEE2B5E56B26BC4B0AF96A_il2cpp_TypeInfo_var))->set_TryUpdateQueryBufferForLayerMaskPerfMarker_9(L_0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerGrabPoint_OnEnable_m1CB773929D281F62521A13718ABACB924D0D9F3D (SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerGrabPoint_OnEnable_m1CB773929D281F62521A13718ABACB924D0D9F3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerGrabPoint_OnEnable_m1CB773929D281F62521A13718ABACB924D0D9F3D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16518));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16519));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16520));
		// if (pointerVisual == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16521));
		SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_0 = __this->get_pointerVisual_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16532));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16532));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16522));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16523));
		// pointerVisual = GetComponent<SpherePointerVisual>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16524));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16533));
		SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_3 = Component_GetComponent_TisSpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_m2C4023D0F1D82C87B46A6C93FC6672F32B0755C9(__this, /*hidden argument*/Component_GetComponent_TisSpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_m2C4023D0F1D82C87B46A6C93FC6672F32B0755C9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16533));
		__this->set_pointerVisual_4(L_3);
		// if (pointerVisual == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16525));
		SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_4 = __this->get_pointerVisual_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16534));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16534));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16526));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16527));
		// enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16528));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16535));
		Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16535));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16529));
	}

IL_0038:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16530));
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16531));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerGrabPoint_LateUpdate_mD33E43B2E734C013208F363DD2CA7480E4C18836 (SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerGrabPoint_LateUpdate_mD33E43B2E734C013208F363DD2CA7480E4C18836_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerGrabPoint_LateUpdate_mD33E43B2E734C013208F363DD2CA7480E4C18836_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16536));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16537));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16538));
		// using (LateUpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16539));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_il2cpp_TypeInfo_var))->get_LateUpdatePerfMarker_9();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16550));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16550));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16540));
			// if (pointerVisual.TetherVisualsEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16541));
			SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_2 = __this->get_pointerVisual_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16551));
			NullCheck(L_2);
			bool L_3 = SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16551));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16542));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0084;
			}
		}

IL_001f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16543));
			// pointMatrix = Matrix4x4.TRS(pointerVisual.TetherEndPoint.position, pointerVisual.TetherEndPoint.rotation, Vector3.one * scale);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16544));
			SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_5 = __this->get_pointerVisual_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16552));
			NullCheck(L_5);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_inline(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16552));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16553));
			NullCheck(L_6);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16553));
			SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_8 = __this->get_pointerVisual_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16554));
			NullCheck(L_8);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_inline(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16554));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16555));
			NullCheck(L_9);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16555));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16556));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16556));
			float L_12 = __this->get_scale_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16557));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_11, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16557));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16558));
			IL2CPP_RUNTIME_CLASS_INIT(Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA_il2cpp_TypeInfo_var);
			Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  L_14 = Matrix4x4_TRS_m5BB2EBA1152301BAC92FDC7F33ECA732BAE57990(L_7, L_10, L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16558));
			__this->set_pointMatrix_8(L_14);
			// Graphics.DrawMesh(grabPointMesh, pointMatrix, grabPointMaterial, pointerVisual.gameObject.layer);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16545));
			Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_15 = __this->get_grabPointMesh_5();
			Matrix4x4_t6BF60F70C9169DF14C9D2577672A44224B236ECA  L_16 = __this->get_pointMatrix_8();
			Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_17 = __this->get_grabPointMaterial_6();
			SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * L_18 = __this->get_pointerVisual_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16559));
			NullCheck(L_18);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16559));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16560));
			NullCheck(L_19);
			int32_t L_20 = GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16560));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16561));
			IL2CPP_RUNTIME_CLASS_INIT(Graphics_t6FB7A5D4561F3AB3C34BF334BB0BD8061BE763B1_il2cpp_TypeInfo_var);
			Graphics_DrawMesh_mC2A810882175BBFBD6984F9C723971E4A2A3271B(L_15, L_16, L_17, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16561));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16546));
		}

IL_0084:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16547));
			IL2CPP_LEAVE(0x96, FINALLY_0087);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0087;
	}

FINALLY_0087:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16548));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16562));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16562));
		IL2CPP_END_FINALLY(135)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(135)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x96, IL_0096)
	}

IL_0096:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16549));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerGrabPoint__ctor_mDF6CC5DD14CBDD32E2A6C698F5FDEADBACB07EFD (SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerGrabPoint__ctor_mDF6CC5DD14CBDD32E2A6C698F5FDEADBACB07EFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerGrabPoint__ctor_mDF6CC5DD14CBDD32E2A6C698F5FDEADBACB07EFD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16563));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16564));
	{
		// private Mesh grabPointMesh = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16565));
		__this->set_grabPointMesh_5((Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C *)NULL);
		// private Material grabPointMaterial = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16566));
		__this->set_grabPointMaterial_6((Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 *)NULL);
		// private float scale = 1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16567));
		__this->set_scale_7((1.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16568));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16568));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerGrabPoint::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerGrabPoint__cctor_m43F935B9A9484A8CC8C5864D6243DA6C0A8FD1F3 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerGrabPoint__cctor_m43F935B9A9484A8CC8C5864D6243DA6C0A8FD1F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerGrabPoint__cctor_m43F935B9A9484A8CC8C5864D6243DA6C0A8FD1F3_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16569));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16570));
	{
		// private static readonly ProfilerMarker LateUpdatePerfMarker = new ProfilerMarker("[MRTK] SpherePointerGrabPoint.LateUpdate");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16571));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16572));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral31167BDECCD92629BE4BB63AF3E02B2AF8C1D58E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16572));
		((SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerGrabPoint_t1DE91A0BB9284883F77AA6E9A5C130996EA13FDA_il2cpp_TypeInfo_var))->set_LateUpdatePerfMarker_9(L_0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::get_TetherEndPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16573));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16574));
	{
		// public Transform TetherEndPoint => tetherEndPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16575));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_tetherEndPoint_8();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::get_TetherVisualsEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16576));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16577));
	{
		// public bool TetherVisualsEnabled { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16578));
		bool L_0 = __this->get_U3CTetherVisualsEnabledU3Ek__BackingField_4();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::set_TetherVisualsEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16579));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16580));
	{
		// public bool TetherVisualsEnabled { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16581));
		bool L_0 = ___value0;
		__this->set_U3CTetherVisualsEnabledU3Ek__BackingField_4(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_OnEnable_mA87C2779D321FF547DBBD434E154BC8D0A7DAFBC (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_OnEnable_mA87C2779D321FF547DBBD434E154BC8D0A7DAFBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_OnEnable_mA87C2779D321FF547DBBD434E154BC8D0A7DAFBC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16582));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16583));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16584));
		// CheckInitialization();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16585));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16587));
		SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16587));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16586));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::OnDestroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_OnDestroy_m76D072B53CD1FC97749BD451922B22CC1EEA7BCC (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_OnDestroy_m76D072B53CD1FC97749BD451922B22CC1EEA7BCC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_OnDestroy_m76D072B53CD1FC97749BD451922B22CC1EEA7BCC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16588));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16589));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16590));
		// if (visualsRoot != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16591));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_visualsRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16597));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16597));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16592));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16593));
		// Destroy(visualsRoot.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16594));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_visualsRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16598));
		NullCheck(L_3);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16598));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16599));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16599));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16595));
	}

IL_0024:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16596));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_Start_mB33183163072266053ABA911330C7B4A50D28CC4 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_Start_mB33183163072266053ABA911330C7B4A50D28CC4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_Start_mB33183163072266053ABA911330C7B4A50D28CC4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16600));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16601));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16602));
		// MixedRealityPlayspace.AddChild(visualsRoot.transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16603));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_visualsRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16606));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16606));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16607));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPlayspace_t26F34BB4D1D53C64B140AF101E96EB151A9770A4_il2cpp_TypeInfo_var);
		MixedRealityPlayspace_AddChild_mA137BA9496C5D73FC8DB4F4C2F3E7BD09BAAEBC4(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16607));
		// visualsRoot.gameObject.name = $"{gameObject.name}_NearTetherVisualsRoot";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16604));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_visualsRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16608));
		NullCheck(L_2);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16609));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16609));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16610));
		NullCheck(L_4);
		String_t* L_5 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16611));
		String_t* L_6 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_5, _stringLiteral678E68D0A76926EABC9B45D86415CA94903BCABB, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16611));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16612));
		NullCheck(L_3);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_3, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16612));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16605));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::CheckInitialization()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_CheckInitialization_m2E685CA8460515C7409C418867D8A589A22C2066_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16613));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16614));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16615));
		// if (pointer == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16616));
		SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_0 = __this->get_pointer_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16630));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16630));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16617));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16618));
		// pointer = GetComponent<SpherePointer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16619));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16631));
		SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_3 = Component_GetComponent_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mC2BB6693AFBB586B7F247B2C1B441EAB19060429(__this, /*hidden argument*/Component_GetComponent_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mC2BB6693AFBB586B7F247B2C1B441EAB19060429_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16631));
		__this->set_pointer_5(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16620));
	}

IL_001f:
	{
		// if (pointer == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16621));
		SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_4 = __this->get_pointer_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16632));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16632));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16622));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16623));
		// Debug.LogError($"No SpherePointer found on {gameObject.name}.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16624));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16633));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16633));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16634));
		NullCheck(L_7);
		String_t* L_8 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16634));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16635));
		String_t* L_9 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteral809C6CDDFF78E8933D07602CF5E60FCF61CCAC0B, L_8, _stringLiteral3A52CE780950D4D969792A2559CD519D7EE8C727, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16635));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16636));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16636));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16625));
	}

IL_0051:
	{
		// CheckAsset(visualsRoot, "Visuals Root");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16626));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = __this->get_visualsRoot_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16637));
		SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12(__this, L_10, _stringLiteralE6CD03753C55931B22FB34243C876E8A36C086B2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16637));
		// CheckAsset(tetherEndPoint, "Tether End Point");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16627));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_tetherEndPoint_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16638));
		SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12(__this, L_11, _stringLiteralC521E7BD131229C8D4FFAB4A0D008E5F3543A953, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16638));
		// CheckAsset(tetherLine, "Tether Line");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16628));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_12 = __this->get_tetherLine_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16639));
		SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12(__this, L_12, _stringLiteral9449B08A0CE91CEBB796EA7E4B727AA8756A7F06, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16639));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16629));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::CheckAsset(System.Object,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, RuntimeObject * ___asset0, String_t* ___fieldname1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___asset0), (&___fieldname1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_CheckAsset_mCB55693EFFE250BB824BCC766B376DBDF9512E12_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16640));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16641));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16642));
		// if (asset == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16643));
		RuntimeObject * L_0 = ___asset0;
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16644));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0052;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16645));
		// Debug.LogError($"No {fieldname} specified on {gameObject.name}.SpherePointerVisual. Did you forget to set the {fieldname}?");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16646));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_2 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)7);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_3 = L_2;
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, _stringLiteral85CDEBE110457B615877365242D1EABFDA3A6346);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral85CDEBE110457B615877365242D1EABFDA3A6346);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_4 = L_3;
		String_t* L_5 = ___fieldname1;
		NullCheck(L_4);
		ArrayElementTypeCheck (L_4, L_5);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_5);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_4;
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, _stringLiteralC0D91897C2813D212D32A644893D61B6F525BF27);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralC0D91897C2813D212D32A644893D61B6F525BF27);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16649));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16650));
		NullCheck(L_8);
		String_t* L_9 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16650));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_9);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_9);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = L_7;
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, _stringLiteral727EC8DEECA4244B2AED10DE668F463FE91EC0E6);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral727EC8DEECA4244B2AED10DE668F463FE91EC0E6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		String_t* L_12 = ___fieldname1;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_12);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_11;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral5BAB61EB53176449E25C2C82F172B82CB13FFB9D);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral5BAB61EB53176449E25C2C82F172B82CB13FFB9D);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16651));
		String_t* L_14 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16651));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16652));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16652));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16647));
	}

IL_0052:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16648));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual_Update_m8F7C7353C0F245E62FDB98559AA98FFCE4ABFC36 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_Update_m8F7C7353C0F245E62FDB98559AA98FFCE4ABFC36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * V_3 = NULL;
	bool V_4 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_Update_m8F7C7353C0F245E62FDB98559AA98FFCE4ABFC36_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16653));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16654));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B5_0 = 0;
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16655));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16656));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_10();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16680));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16680));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16657));
			// TetherVisualsEnabled = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16658));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16681));
			SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_inline(__this, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16681));
			// if (pointer.IsFocusLocked && pointer.IsTargetPositionLockedOnFocusLock && pointer.Result != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16659));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_2 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16682));
			NullCheck(L_2);
			bool L_3 = BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16682));
			if (!L_3)
			{
				goto IL_0042;
			}
		}

IL_0025:
		{
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_4 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16683));
			NullCheck(L_4);
			bool L_5 = VirtFuncInvoker0< bool >::Invoke(90 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::get_IsTargetPositionLockedOnFocusLock() */, L_4);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16683));
			if (!L_5)
			{
				goto IL_0042;
			}
		}

IL_0032:
		{
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_6 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16684));
			NullCheck(L_6);
			RuntimeObject* L_7 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16684));
			G_B5_0 = ((!(((RuntimeObject*)(RuntimeObject*)L_7) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			goto IL_0043;
		}

IL_0042:
		{
			G_B5_0 = 0;
		}

IL_0043:
		{
			V_2 = (bool)G_B5_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16660));
			bool L_8 = V_2;
			if (!L_8)
			{
				goto IL_0139;
			}
		}

IL_004a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16661));
			// NearInteractionGrabbable grabbedObject = GetGrabbedObject();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16662));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16685));
			NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_9 = SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16685));
			V_3 = L_9;
			// if (grabbedObject != null && grabbedObject.ShowTetherWhenManipulating)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16663));
			NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_10 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16686));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16686));
			if (!L_11)
			{
				goto IL_0063;
			}
		}

IL_005b:
		{
			NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_12 = V_3;
			NullCheck(L_12);
			bool L_13 = L_12->get_ShowTetherWhenManipulating_4();
			G_B9_0 = ((int32_t)(L_13));
			goto IL_0064;
		}

IL_0063:
		{
			G_B9_0 = 0;
		}

IL_0064:
		{
			V_4 = (bool)G_B9_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16664));
			bool L_14 = V_4;
			if (!L_14)
			{
				goto IL_0138;
			}
		}

IL_006d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16665));
			// pointer.TryGetNearGraspPoint(out graspPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16666));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_15 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16687));
			NullCheck(L_15);
			SpherePointer_TryGetNearGraspPoint_m9FB1F649BD3E0CEC1E34AF95CE2B4E638E293D40(L_15, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16687));
			// tetherLine.FirstPoint = graspPosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16667));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_16 = __this->get_tetherLine_9();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16688));
			NullCheck(L_16);
			BaseMixedRealityLineDataProvider_set_FirstPoint_mC089D0A2B0C719699AD08F9DDC3D472C099650A8(L_16, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16688));
			// Vector3 endPoint = pointer.Result.Details.Object.transform.TransformPoint(pointer.Result.Details.PointLocalSpace);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16668));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_18 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16689));
			NullCheck(L_18);
			RuntimeObject* L_19 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16689));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16690));
			NullCheck(L_19);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_20 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_19);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16690));
			V_7 = L_20;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16691));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16691));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16692));
			NullCheck(L_21);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16692));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_23 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16693));
			NullCheck(L_23);
			RuntimeObject* L_24 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16693));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16694));
			NullCheck(L_24);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_25 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_24);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16694));
			V_7 = L_25;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16695));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16695));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16696));
			NullCheck(L_22);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_22, L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16696));
			V_6 = L_27;
			// tetherLine.LastPoint = endPoint;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16669));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_28 = __this->get_tetherLine_9();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16697));
			NullCheck(L_28);
			BaseMixedRealityLineDataProvider_set_LastPoint_m743B217D19D640DFEEE1BE06AAF643A0D616B2C9(L_28, L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16697));
			// TetherVisualsEnabled = Vector3.Distance(tetherLine.FirstPoint, tetherLine.LastPoint) > minTetherLength;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16670));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_30 = __this->get_tetherLine_9();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16698));
			NullCheck(L_30);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = BaseMixedRealityLineDataProvider_get_FirstPoint_m54C775438EFAFA94BC0C347262DA3271428F2F8A(L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16698));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_32 = __this->get_tetherLine_9();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16699));
			NullCheck(L_32);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = BaseMixedRealityLineDataProvider_get_LastPoint_m2EC444A7457AEC7FC55FDEFCE81AA6F3527A171F(L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16699));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16700));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			float L_34 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_31, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16700));
			float L_35 = __this->get_minTetherLength_6();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16701));
			SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_inline(__this, (bool)((((float)L_34) > ((float)L_35))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16701));
			// tetherLine.enabled = TetherVisualsEnabled;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16671));
			BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_36 = __this->get_tetherLine_9();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16702));
			bool L_37 = SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16702));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16703));
			NullCheck(L_36);
			Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(L_36, L_37, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16703));
			// tetherEndPoint.gameObject.SetActive(TetherVisualsEnabled);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16672));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_38 = __this->get_tetherEndPoint_8();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16704));
			NullCheck(L_38);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_38, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16704));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16705));
			bool L_40 = SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16705));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16706));
			NullCheck(L_39);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_39, L_40, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16706));
			// tetherEndPoint.position = endPoint;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16673));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_41 = __this->get_tetherEndPoint_8();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16707));
			NullCheck(L_41);
			Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_41, L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16707));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16674));
		}

IL_0138:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16675));
		}

IL_0139:
		{
			// visualsRoot.gameObject.SetActive(TetherVisualsEnabled);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16676));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = __this->get_visualsRoot_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16708));
			NullCheck(L_43);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_44 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_43, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16708));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16709));
			bool L_45 = SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16709));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16710));
			NullCheck(L_44);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_44, L_45, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16710));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16677));
			IL2CPP_LEAVE(0x162, FINALLY_0153);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0153;
	}

FINALLY_0153:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16678));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16711));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16711));
		IL2CPP_END_FINALLY(339)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(339)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x162, IL_0162)
	}

IL_0162:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16679));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::GetGrabbedObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_3;
	memset((&V_3), 0, sizeof(V_3));
	NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * V_4 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_GetGrabbedObject_m29632A8F1422A7167302F44800C2E99200487EDB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16712));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16713));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16714));
		// using (GetGrabbedObjectPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16715));
		IL2CPP_RUNTIME_CLASS_INIT(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var))->get_GetGrabbedObjectPerfMarker_11();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16725));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16725));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16716));
			// if (pointer.Result?.Details.Object != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16717));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_2 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16726));
			NullCheck(L_2);
			RuntimeObject* L_3 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16726));
			RuntimeObject* L_4 = L_3;
			G_B2_0 = L_4;
			if (L_4)
			{
				G_B3_0 = L_4;
				goto IL_0022;
			}
		}

IL_001e:
		{
			G_B4_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			goto IL_002f;
		}

IL_0022:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16727));
			NullCheck(G_B3_0);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_5 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16727));
			V_3 = L_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16728));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16728));
			G_B4_0 = L_6;
		}

IL_002f:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16729));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B4_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16729));
			V_2 = L_7;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16718));
			bool L_8 = V_2;
			if (!L_8)
			{
				goto IL_005b;
			}
		}

IL_0039:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16719));
			// return pointer.Result.Details.Object.GetComponent<NearInteractionGrabbable>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16720));
			SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * L_9 = __this->get_pointer_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16730));
			NullCheck(L_9);
			RuntimeObject* L_10 = BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16730));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16731));
			NullCheck(L_10);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_11 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16731));
			V_3 = L_11;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16732));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16732));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16733));
			NullCheck(L_12);
			NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_13 = GameObject_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m06D77325398A80EE1C356EEC55A0E058313CE2EF(L_12, /*hidden argument*/GameObject_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m06D77325398A80EE1C356EEC55A0E058313CE2EF_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16733));
			V_4 = L_13;
			IL2CPP_LEAVE(0x70, FINALLY_0061);
		}

IL_005b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16721));
			// return null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16722));
			V_4 = (NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E *)NULL;
			IL2CPP_LEAVE(0x70, FINALLY_0061);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0061;
	}

FINALLY_0061:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16723));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16734));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16734));
		IL2CPP_END_FINALLY(97)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(97)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x70, IL_0070)
	}

IL_0070:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16724));
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_14 = V_4;
		return L_14;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual__ctor_m657C2907C14957E7E122EF377588B874C4310250 (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual__ctor_m657C2907C14957E7E122EF377588B874C4310250_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual__ctor_m657C2907C14957E7E122EF377588B874C4310250_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16735));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16736));
	{
		// private float minTetherLength = 0.03f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16737));
		__this->set_minTetherLength_6((0.03f));
		// private Transform visualsRoot = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16738));
		__this->set_visualsRoot_7((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// private Transform tetherEndPoint = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16739));
		__this->set_tetherEndPoint_8((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// private BaseMixedRealityLineDataProvider tetherLine = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16740));
		__this->set_tetherLine_9((BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16741));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16741));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpherePointerVisual::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpherePointerVisual__cctor_m463C69B8D5C2A0C66ECB5B734738415F1E4F7DE4 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual__cctor_m463C69B8D5C2A0C66ECB5B734738415F1E4F7DE4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual__cctor_m463C69B8D5C2A0C66ECB5B734738415F1E4F7DE4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16742));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16743));
	{
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] SpherePointerVisual.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16744));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16746));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralC5BE8E43810C8287C942394782ABE833121178B2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16746));
		((SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_10(L_0);
		// private static readonly ProfilerMarker GetGrabbedObjectPerfMarker = new ProfilerMarker("[MRTK] SpherePointer.GetGrabbedObject");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16745));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16747));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral60CDB39C83666A276FD8082ED7AAC72AFCBA2F45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16747));
		((SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_StaticFields*)il2cpp_codegen_static_fields_for(SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017_il2cpp_TypeInfo_var))->set_GetGrabbedObjectPerfMarker_11(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SpriteCursor::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteCursor_OnEnable_m726AA38A9F5439D3243AB3F193DE8EA346B59C36 (SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpriteCursor_OnEnable_m726AA38A9F5439D3243AB3F193DE8EA346B59C36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpriteCursor_OnEnable_m726AA38A9F5439D3243AB3F193DE8EA346B59C36_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12255));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12256));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12257));
		// if (CursorStateData == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12258));
		SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* L_0 = __this->get_CursorStateData_25();
		V_0 = (bool)((((RuntimeObject*)(SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12259));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12260));
		// CursorStateData = Array.Empty<SpriteCursorDatum>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12261));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12270));
		SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* L_2 = Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_inline(/*hidden argument*/Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12270));
		__this->set_CursorStateData_25(L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12262));
	}

IL_001b:
	{
		// if (TargetRenderer == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12263));
		SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * L_3 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12271));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12271));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12264));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12265));
		// TargetRenderer = GetComponentInChildren<SpriteRenderer>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12266));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12272));
		SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * L_6 = Component_GetComponentInChildren_TisSpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F_mAD0C39866683E6B19390CF583FDBE270C404CE48(__this, /*hidden argument*/Component_GetComponentInChildren_TisSpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F_mAD0C39866683E6B19390CF583FDBE270C404CE48_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12272));
		__this->set_TargetRenderer_26(L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12267));
	}

IL_0039:
	{
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12268));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12273));
		BaseCursor_OnEnable_m99AC865286A0229699D1A68C08F7E49043BB4858(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12273));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12269));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpriteCursor::OnCursorStateChange(Microsoft.MixedReality.Toolkit.Input.CursorStateEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteCursor_OnCursorStateChange_mC355EB99A332AE54589034F3B90A2C6FC658374B (SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2 * __this, int32_t ___state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpriteCursor_OnCursorStateChange_mC355EB99A332AE54589034F3B90A2C6FC658374B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpriteCursor_OnCursorStateChange_mC355EB99A332AE54589034F3B90A2C6FC658374B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12274));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12275));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12276));
		// base.OnCursorStateChange(state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12277));
		int32_t L_0 = ___state0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12295));
		BaseCursor_OnCursorStateChange_mB3E67F6CCF7D497558679F79677E809536D27FB4(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12295));
		// if (state != CursorStateEnum.Contextual)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12278));
		int32_t L_1 = ___state0;
		V_0 = (bool)((((int32_t)((((int32_t)L_1) == ((int32_t)6))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12279));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_005c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12280));
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12281));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12282));
		goto IL_004c;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12283));
		// if (CursorStateData[i].CursorState == state)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12284));
		SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* L_3 = __this->get_CursorStateData_25();
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = ((L_3)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_4)))->get_CursorState_1();
		int32_t L_6 = ___state0;
		V_2 = (bool)((((int32_t)L_5) == ((int32_t)L_6))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12285));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0047;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12286));
		// SetCursorState(CursorStateData[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12287));
		SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* L_8 = __this->get_CursorStateData_25();
		int32_t L_9 = V_1;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12296));
		SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB(__this, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12296));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12288));
	}

IL_0047:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12289));
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12290));
		int32_t L_12 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_004c:
	{
		// for (int i = 0; i < CursorStateData.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12291));
		int32_t L_13 = V_1;
		SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* L_14 = __this->get_CursorStateData_25();
		NullCheck(L_14);
		V_3 = (bool)((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12292));
		bool L_15 = V_3;
		if (L_15)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12293));
	}

IL_005c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12294));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpriteCursor::SetCursorState(Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB (SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2 * __this, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  ___stateDatum0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___stateDatum0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpriteCursor_SetCursorState_mAECBC6723DB64FE7AB8127977553B365416CA9EB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12297));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12298));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12299));
		// if (TargetRenderer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12300));
		SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * L_0 = __this->get_TargetRenderer_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12307));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12307));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12301));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12302));
		// TargetRenderer.sprite = stateDatum.CursorSprite;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12303));
		SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * L_3 = __this->get_TargetRenderer_26();
		SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  L_4 = ___stateDatum0;
		Sprite_tCA09498D612D08DE668653AF1E9C12BF53434198 * L_5 = L_4.get_CursorSprite_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12308));
		NullCheck(L_3);
		SpriteRenderer_set_sprite_m9F5C8B2007AA03FAB66F0CB61260349DF1E28611(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12308));
		// TargetRenderer.color = stateDatum.CursorColor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12304));
		SpriteRenderer_tCD51E875611195DBB91123B68434881D3441BC6F * L_6 = __this->get_TargetRenderer_26();
		SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784  L_7 = ___stateDatum0;
		Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_8 = L_7.get_CursorColor_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12309));
		NullCheck(L_6);
		SpriteRenderer_set_color_m0729526C86891ADD11611CD13A7A18B851355580(L_6, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12309));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12305));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12306));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpriteCursor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteCursor__ctor_m1ABF8604F5E42EE352DD29BF54902C5BF8F40749 (SpriteCursor_t522E8A180AC738BEDE9C89DC6EE9945D37E168C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpriteCursor__ctor_m1ABF8604F5E42EE352DD29BF54902C5BF8F40749_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpriteCursor__ctor_m1ABF8604F5E42EE352DD29BF54902C5BF8F40749_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		BaseCursor__ctor_m8B60D00B583D7A019A0118E482C6AA06CFB4EF22(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
IL2CPP_EXTERN_C void SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshal_pinvoke(const SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784& unmarshaled, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_pinvoke& marshaled)
{
	Exception_t* ___CursorSprite_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorSprite' of type 'SpriteCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorSprite_2Exception, NULL);
}
IL2CPP_EXTERN_C void SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshal_pinvoke_back(const SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_pinvoke& marshaled, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784& unmarshaled)
{
	Exception_t* ___CursorSprite_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorSprite' of type 'SpriteCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorSprite_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
IL2CPP_EXTERN_C void SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshal_pinvoke_cleanup(SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
IL2CPP_EXTERN_C void SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshal_com(const SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784& unmarshaled, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_com& marshaled)
{
	Exception_t* ___CursorSprite_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorSprite' of type 'SpriteCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorSprite_2Exception, NULL);
}
IL2CPP_EXTERN_C void SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshal_com_back(const SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_com& marshaled, SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784& unmarshaled)
{
	Exception_t* ___CursorSprite_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'CursorSprite' of type 'SpriteCursorDatum': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___CursorSprite_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.SpriteCursor/SpriteCursorDatum
IL2CPP_EXTERN_C void SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshal_com_cleanup(SpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler.OnTouchCompleted(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_mA84775DEAF66185861D2E7798781B34F277BA577 (TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_mA84775DEAF66185861D2E7798781B34F277BA577_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_mA84775DEAF66185861D2E7798781B34F277BA577_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9904));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9905));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9906));
		// OnTouchCompleted.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9907));
		TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * L_0 = __this->get_OnTouchCompleted_5();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9909));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40(L_0, L_1, /*hidden argument*/UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9909));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9908));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler.OnTouchStarted(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m4D149429C28201D8619A517581CAA6E75EA9FD8A (TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m4D149429C28201D8619A517581CAA6E75EA9FD8A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m4D149429C28201D8619A517581CAA6E75EA9FD8A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9910));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9911));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9912));
		// OnTouchStarted.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9913));
		TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * L_0 = __this->get_OnTouchStarted_4();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9915));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40(L_0, L_1, /*hidden argument*/UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9915));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9914));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchHandler::Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler.OnTouchUpdated(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_m447DE9545D54CF3AB8CC0126EEBAB095164D0DC5 (TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_m447DE9545D54CF3AB8CC0126EEBAB095164D0DC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchHandler_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_m447DE9545D54CF3AB8CC0126EEBAB095164D0DC5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9917));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9918));
		// OnTouchUpdated.Invoke(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9919));
		TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * L_0 = __this->get_OnTouchUpdated_6();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9921));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40(L_0, L_1, /*hidden argument*/UnityEvent_1_Invoke_m8F102EC90AACA869F1670A00CBF680F8F2C86C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9921));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9920));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchHandler__ctor_m59DAE3670D7085215765F50822AA33CA46B111E6 (TouchHandler_tCAC0E7F5E4DA3F27D8AA8A0A0CE60F793C8AFFF2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchHandler__ctor_m59DAE3670D7085215765F50822AA33CA46B111E6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchHandler__ctor_m59DAE3670D7085215765F50822AA33CA46B111E6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9922));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9923));
	{
		// public TouchEvent OnTouchStarted = new TouchEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9924));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9927));
		TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * L_0 = (TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 *)il2cpp_codegen_object_new(TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4_il2cpp_TypeInfo_var);
		TouchEvent__ctor_mC2E786AB1DBA3775B3D14A309E38DAE5D9ACB85D(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9927));
		__this->set_OnTouchStarted_4(L_0);
		// public TouchEvent OnTouchCompleted = new TouchEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9925));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9928));
		TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * L_1 = (TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 *)il2cpp_codegen_object_new(TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4_il2cpp_TypeInfo_var);
		TouchEvent__ctor_mC2E786AB1DBA3775B3D14A309E38DAE5D9ACB85D(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9928));
		__this->set_OnTouchCompleted_5(L_1);
		// public TouchEvent OnTouchUpdated = new TouchEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9926));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9929));
		TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 * L_2 = (TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4 *)il2cpp_codegen_object_new(TouchEvent_t80932DA5B53A732E5B38184EE9F8251DED47A4A4_il2cpp_TypeInfo_var);
		TouchEvent__ctor_mC2E786AB1DBA3775B3D14A309E38DAE5D9ACB85D(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9929));
		__this->set_OnTouchUpdated_6(L_2);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9930));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9930));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.TouchPointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TouchPointer_get_IsInteractionEnabled_mD293680D6633DA2C9CC1A4551F381BD37F2376CF (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_get_IsInteractionEnabled_mD293680D6633DA2C9CC1A4551F381BD37F2376CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_get_IsInteractionEnabled_mD293680D6633DA2C9CC1A4551F381BD37F2376CF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16748));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16749));
	{
		// public override bool IsInteractionEnabled => isInteractionEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16750));
		bool L_0 = __this->get_isInteractionEnabled_52();
		return L_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.TouchPointer::get_FingerId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t TouchPointer_get_FingerId_mF9A464A12C3B1B8C4A1B73248A303F76D4F090A7 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_get_FingerId_mF9A464A12C3B1B8C4A1B73248A303F76D4F090A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_get_FingerId_mF9A464A12C3B1B8C4A1B73248A303F76D4F090A7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16751));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16752));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16753));
		// get { return fingerId; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16754));
		int32_t L_0 = __this->get_fingerId_53();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return fingerId; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16755));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::set_FingerId(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer_set_FingerId_mE77F56C07A232FA0C7B6589592A4C52F289808A9 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_set_FingerId_mE77F56C07A232FA0C7B6589592A4C52F289808A9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_set_FingerId_mE77F56C07A232FA0C7B6589592A4C52F289808A9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16756));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16757));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16758));
		// if (fingerId < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16759));
		int32_t L_0 = __this->get_fingerId_53();
		V_0 = (bool)((((int32_t)L_0) < ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16760));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16761));
		// fingerId = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16762));
		int32_t L_2 = ___value0;
		__this->set_fingerId_53(L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16763));
	}

IL_0017:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16764));
		return;
	}
}
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.TouchPointer::get_TouchRay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16765));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16766));
	{
		// public Ray TouchRay { get; set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16767));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = __this->get_U3CTouchRayU3Ek__BackingField_54();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::set_TouchRay(UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer_set_TouchRay_m95521AED8EC39D36C025BE3EF364AEF48E5435BB (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_set_TouchRay_m95521AED8EC39D36C025BE3EF364AEF48E5435BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_set_TouchRay_m95521AED8EC39D36C025BE3EF364AEF48E5435BB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16768));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16769));
	{
		// public Ray TouchRay { get; set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16770));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = ___value0;
		__this->set_U3CTouchRayU3Ek__BackingField_54(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer_OnPreSceneQuery_mD9A9C8CC282A3F6F9A6C5560264A6601B0D30BDD (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_OnPreSceneQuery_mD9A9C8CC282A3F6F9A6C5560264A6601B0D30BDD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_OnPreSceneQuery_mD9A9C8CC282A3F6F9A6C5560264A6601B0D30BDD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16771));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16772));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16773));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16774));
		IL2CPP_RUNTIME_CLASS_INIT(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields*)il2cpp_codegen_static_fields_for(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_55();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16796));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16796));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16775));
			// Rays[0].CopyRay(TouchRay, PointerExtent);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16776));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16797));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_2 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16797));
			NullCheck(L_2);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16798));
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_3 = TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16798));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16799));
			float L_4 = BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16799));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16800));
			RayStep_CopyRay_mC78083BBF0A93F22A477DD547E3D552EB9D2FE29((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_2)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), L_3, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16800));
			// if (RayStabilizer != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16777));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16801));
			RuntimeObject* L_5 = BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16801));
			V_2 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16778));
			bool L_6 = V_2;
			if (!L_6)
			{
				goto IL_00dc;
			}
		}

IL_003e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16779));
			// RayStabilizer.UpdateStability(Rays[0].Origin, Rays[0].Direction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16780));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16802));
			RuntimeObject* L_7 = BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16802));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16803));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_8 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16803));
			NullCheck(L_8);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16804));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_8)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16804));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16805));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_10 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16805));
			NullCheck(L_10);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16806));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_10)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16806));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16807));
			NullCheck(L_7);
			InterfaceActionInvoker2< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer::UpdateStability(UnityEngine.Vector3,UnityEngine.Vector3) */, IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD_il2cpp_TypeInfo_var, L_7, L_9, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16807));
			// Rays[0].CopyRay(RayStabilizer.StableRay, PointerExtent);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16781));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16808));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_12 = BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16808));
			NullCheck(L_12);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16809));
			RuntimeObject* L_13 = BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16809));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16810));
			NullCheck(L_13);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_14 = InterfaceFuncInvoker0< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(2 /* UnityEngine.Ray Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer::get_StableRay() */, IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD_il2cpp_TypeInfo_var, L_13);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16810));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16811));
			float L_15 = BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16811));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16812));
			RayStep_CopyRay_mC78083BBF0A93F22A477DD547E3D552EB9D2FE29((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_12)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), L_14, L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16812));
			// if (MixedRealityRaycaster.DebugEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16782));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
			bool L_16 = ((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->get_DebugEnabled_0();
			V_3 = L_16;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16783));
			bool L_17 = V_3;
			if (!L_17)
			{
				goto IL_00d9;
			}
		}

IL_0099:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16784));
			// Debug.DrawRay(RayStabilizer.StableRay.origin, RayStabilizer.StableRay.direction * PointerExtent, Color.green);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16785));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16813));
			RuntimeObject* L_18 = BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16813));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16814));
			NullCheck(L_18);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_19 = InterfaceFuncInvoker0< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(2 /* UnityEngine.Ray Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer::get_StableRay() */, IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD_il2cpp_TypeInfo_var, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16814));
			V_4 = L_19;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16815));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16815));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16816));
			RuntimeObject* L_21 = BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16816));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16817));
			NullCheck(L_21);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_22 = InterfaceFuncInvoker0< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(2 /* UnityEngine.Ray Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer::get_StableRay() */, IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD_il2cpp_TypeInfo_var, L_21);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16817));
			V_4 = L_22;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16818));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16818));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16819));
			float L_24 = BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16819));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16820));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_23, L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16820));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16821));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_26 = Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16821));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16822));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3(L_20, L_25, L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16822));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16786));
		}

IL_00d9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16787));
			goto IL_011d;
		}

IL_00dc:
		{
			// else if (MixedRealityRaycaster.DebugEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16788));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
			bool L_27 = ((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->get_DebugEnabled_0();
			V_5 = L_27;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16789));
			bool L_28 = V_5;
			if (!L_28)
			{
				goto IL_011d;
			}
		}

IL_00e7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16790));
			// Debug.DrawRay(TouchRay.origin, TouchRay.direction * PointerExtent, Color.yellow);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16791));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16823));
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_29 = TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16823));
			V_4 = L_29;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16824));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16824));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16825));
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_31 = TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16825));
			V_4 = L_31;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16826));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16826));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16827));
			float L_33 = BaseControllerPointer_get_PointerExtent_m09486EE578959B7CC30BDEACF2420411EE8B6033(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16827));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16828));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_32, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16828));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16829));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_35 = Color_get_yellow_mC8BD62CCC364EA5FC4273D4C2E116D0E2DE135AE(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16829));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16830));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3(L_30, L_34, L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16830));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16792));
		}

IL_011d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16793));
			IL2CPP_LEAVE(0x12F, FINALLY_0120);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0120;
	}

FINALLY_0120:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16794));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16831));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16831));
		IL2CPP_END_FINALLY(288)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(288)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x12F, IL_012f)
	}

IL_012f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16795));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.TouchPointer::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  TouchPointer_get_Position_mA6FE7FEB89426C6448306757C4FDB36F9FA54AE3 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_get_Position_mA6FE7FEB89426C6448306757C4FDB36F9FA54AE3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_get_Position_mA6FE7FEB89426C6448306757C4FDB36F9FA54AE3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16833));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16834));
		// return TouchRay.origin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16835));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16837));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16837));
		V_0 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16838));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16838));
		V_1 = L_1;
		goto IL_0012;
	}

IL_0012:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16836));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = V_1;
		return L_2;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.TouchPointer::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  TouchPointer_get_Rotation_m233C76C6E2D8B59770636C17B968B0B46B9A4188 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_get_Rotation_m233C76C6E2D8B59770636C17B968B0B46B9A4188_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_get_Rotation_m233C76C6E2D8B59770636C17B968B0B46B9A4188_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16839));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16840));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16841));
		// return Quaternion.LookRotation(TouchRay.direction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16842));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16844));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16844));
		V_0 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16845));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16845));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16846));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16846));
		V_1 = L_2;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16843));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = V_1;
		return L_3;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer_OnSourceDetected_m9AA089034C682AB45CEE7B5B9090F643B8879DE8 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_OnSourceDetected_m9AA089034C682AB45CEE7B5B9090F643B8879DE8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_OnSourceDetected_m9AA089034C682AB45CEE7B5B9090F643B8879DE8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16847));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16848));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16849));
		// using (OnSourceDetectedPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16850));
		IL2CPP_RUNTIME_CLASS_INIT(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields*)il2cpp_codegen_static_fields_for(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var))->get_OnSourceDetectedPerfMarker_56();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16861));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16861));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16851));
			// base.OnSourceDetected(eventData);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16852));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16862));
			ControllerPoseSynchronizer_OnSourceDetected_m19DAD7BE24CF3CE5CEFAF1DC8E039AA09C88C08B(__this, L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16862));
			// if (eventData.InputSource.SourceId == Controller.InputSource.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16853));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_3 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16863));
			NullCheck(L_3);
			RuntimeObject* L_4 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16863));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16864));
			NullCheck(L_4);
			uint32_t L_5 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_4);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16864));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16865));
			RuntimeObject* L_6 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16865));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16866));
			NullCheck(L_6);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16866));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16867));
			NullCheck(L_7);
			uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16867));
			V_2 = (bool)((((int32_t)L_5) == ((int32_t)L_8))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16854));
			bool L_9 = V_2;
			if (!L_9)
			{
				goto IL_0042;
			}
		}

IL_0039:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16855));
			// isInteractionEnabled = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16856));
			__this->set_isInteractionEnabled_52((bool)1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16857));
		}

IL_0042:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16858));
			IL2CPP_LEAVE(0x54, FINALLY_0045);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0045;
	}

FINALLY_0045:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16859));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16868));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16868));
		IL2CPP_END_FINALLY(69)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(69)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x54, IL_0054)
	}

IL_0054:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16860));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer_OnSourceLost_mEC209CC5869A86DD90211CDAF6432E3DCCF8C785 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_OnSourceLost_mEC209CC5869A86DD90211CDAF6432E3DCCF8C785_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_OnSourceLost_mEC209CC5869A86DD90211CDAF6432E3DCCF8C785_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16869));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16870));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16871));
		// using (OnSourceLostPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16872));
		IL2CPP_RUNTIME_CLASS_INIT(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields*)il2cpp_codegen_static_fields_for(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var))->get_OnSourceLostPerfMarker_57();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16883));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16883));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16873));
			// base.OnSourceLost(eventData);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16874));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16884));
			BaseControllerPointer_OnSourceLost_mACE60EBAC1FF6EEC9C6815276505A2F709142395(__this, L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16884));
			// if (Controller != null &&
			//     eventData.Controller != null &&
			//     eventData.Controller.InputSource.SourceId == Controller.InputSource.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16875));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16885));
			RuntimeObject* L_3 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16885));
			if (!L_3)
			{
				goto IL_004c;
			}
		}

IL_0020:
		{
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_4 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16886));
			NullCheck(L_4);
			RuntimeObject* L_5 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16886));
			if (!L_5)
			{
				goto IL_004c;
			}
		}

IL_0028:
		{
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_6 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16887));
			NullCheck(L_6);
			RuntimeObject* L_7 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16887));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16888));
			NullCheck(L_7);
			RuntimeObject* L_8 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16888));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16889));
			NullCheck(L_8);
			uint32_t L_9 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16889));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16890));
			RuntimeObject* L_10 = VirtFuncInvoker0< RuntimeObject* >::Invoke(32 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16890));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16891));
			NullCheck(L_10);
			RuntimeObject* L_11 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16891));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16892));
			NullCheck(L_11);
			uint32_t L_12 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16892));
			G_B5_0 = ((((int32_t)L_9) == ((int32_t)L_12))? 1 : 0);
			goto IL_004d;
		}

IL_004c:
		{
			G_B5_0 = 0;
		}

IL_004d:
		{
			V_2 = (bool)G_B5_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16876));
			bool L_13 = V_2;
			if (!L_13)
			{
				goto IL_005a;
			}
		}

IL_0051:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16877));
			// isInteractionEnabled = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16878));
			__this->set_isInteractionEnabled_52((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16879));
		}

IL_005a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16880));
			IL2CPP_LEAVE(0x6C, FINALLY_005d);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_005d;
	}

FINALLY_005d:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16881));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16893));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16893));
		IL2CPP_END_FINALLY(93)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(93)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x6C, IL_006c)
	}

IL_006c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16882));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer__ctor_m17F2061D06A88EEFD79C16B0621D50E65F2B9AC5 (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer__ctor_m17F2061D06A88EEFD79C16B0621D50E65F2B9AC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer__ctor_m17F2061D06A88EEFD79C16B0621D50E65F2B9AC5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16894));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16895));
	{
		// private bool isInteractionEnabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16896));
		__this->set_isInteractionEnabled_52((bool)0);
		// private int fingerId = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16897));
		__this->set_fingerId_53((-1));
		// public Ray TouchRay { get; set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16898));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_0 = __this->get_address_of_U3CTouchRayU3Ek__BackingField_54();
		il2cpp_codegen_initobj(L_0, sizeof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16899));
		IL2CPP_RUNTIME_CLASS_INIT(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_il2cpp_TypeInfo_var);
		BaseControllerPointer__ctor_m8374A8CF3D902194835061AD6EC89AAE3FA48071(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16899));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchPointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchPointer__cctor_m66E9EBB26C64369EF2AEF32C63EAD5641ED2D996 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer__cctor_m66E9EBB26C64369EF2AEF32C63EAD5641ED2D996_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer__cctor_m66E9EBB26C64369EF2AEF32C63EAD5641ED2D996_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16900));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16901));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] TouchPointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16905));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral634A289DCAB10B0E94E2C054268C5DE77E45F353, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16905));
		((TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields*)il2cpp_codegen_static_fields_for(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_55(L_0);
		// private static readonly ProfilerMarker OnSourceDetectedPerfMarker = new ProfilerMarker("[MRTK] TouchPointer.OnSourceDetected");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16906));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteralBB4B466E3D27EA9B5EDBCF317F4D69C188120733, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16906));
		((TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields*)il2cpp_codegen_static_fields_for(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var))->set_OnSourceDetectedPerfMarker_56(L_1);
		// private static readonly ProfilerMarker OnSourceLostPerfMarker = new ProfilerMarker("[MRTK] TouchPointer.OnSourceLost");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16904));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16907));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteralF5EB7246A1A0CB8C3B1EE5883A65F4B0B0A24735, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16907));
		((TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_StaticFields*)il2cpp_codegen_static_fields_for(TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F_il2cpp_TypeInfo_var))->set_OnSourceLostPerfMarker_57(L_2);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_inline (InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6CMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionEventPair_get_InputAction_mF8207D89990D08BBEBA85979A9F6C93E159F4D6C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25828));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25829));
	{
		// public MixedRealityInputAction InputAction => inputAction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25830));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_inputAction_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26615));
	{
		// public MixedRealityInputAction MixedRealityInputAction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26616));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_U3CMixedRealityInputActionU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_inline (InputActionEventPair_tBD9DA6188D864336D07D47E259A7698B84EF622D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputActionEventPair_get_UnityEvent_m4DDF14960083D11F77DC5777CD538FA4D8B832DF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25831));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25832));
	{
		// public UnityEvent UnityEvent => unityEvent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25833));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_unityEvent_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 43));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 44));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 45));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 46));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1;
		memset((&L_1), 0, sizeof(L_1));
		AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline((&L_1), (intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 47));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_2 = V_0;
		return L_2;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0FMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_Rays_m801B4DEC18827CB5799B7354F7D9A435FAFA8B0F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12635));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12636));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12637));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = __this->get_U3CRaysU3Ek__BackingField_41();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_set_Rays_mFBE619CD3AAB6315AAE6E02CE23B91B566BB788A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12638));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12639));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12640));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = ___value0;
		__this->set_U3CRaysU3Ek__BackingField_41(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 56));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 57));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 58));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 59));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A((intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 60));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_IgnoreCollidersNotInFOV_m5F1EF84CFA47DFDAF737CEEB8B8CF01AF5B3B55A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15163));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15164));
	{
		// get => ignoreCollidersNotInFOV;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15165));
		bool L_0 = __this->get_ignoreCollidersNotInFOV_56();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, NearInteractionTouchableUnityUI_get_Instances_m68B9B0632E97328349FBC29DC5390F2B8DE98586_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 7217));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 7218));
	{
		// public static IReadOnlyList<NearInteractionTouchableUnityUI> Instances => instances;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 7219));
		IL2CPP_RUNTIME_CLASS_INIT(NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_il2cpp_TypeInfo_var);
		List_1_tB2A5454788FD5BF6D048288E5324FE872CE10A65 * L_0 = ((NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_StaticFields*)il2cpp_codegen_static_fields_for(NearInteractionTouchableUnityUI_t92B35BF132B7C878E844518B61760035E6832FEC_il2cpp_TypeInfo_var))->get_instances_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_Result_m4680641772AC8238A9DA6B482FB3B57A474F7765_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12653));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12654));
	{
		// public IPointerResult Result { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12655));
		RuntimeObject* L_0 = __this->get_U3CResultU3Ek__BackingField_44();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21973));
	{
		// public Vector3 Point { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21974));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_inline (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 6));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 7));
	{
		// public float DebounceThreshold { get => debounceThreshold; set => debounceThreshold = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 8));
		float L_0 = __this->get_debounceThreshold_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41DMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_set_PreviousPosition_mE3090515E184BD995707BB123B88DC4C0662C41D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15188));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15189));
	{
		// public Vector3 PreviousPosition { get; private set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15190));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPreviousPositionU3Ek__BackingField_63(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_inline (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FBMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 0));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1));
	{
		// public TouchableEventType EventsToReceive { get => eventsToReceive; set => eventsToReceive = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2));
		int32_t L_0 = __this->get_eventsToReceive_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028EMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_InputSourceParent_m89A0E4060A000552CF4089F47ED48CB1A0FB028E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12544));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12545));
	{
		// public IMixedRealityInputSource InputSourceParent { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12546));
		RuntimeObject* L_0 = __this->get_U3CInputSourceParentU3Ek__BackingField_32();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___name0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 25));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 26));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 27));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 28));
		String_t* L_0 = ___name0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		intptr_t L_1 = ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370(L_0, (uint16_t)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		__this->set_m_Ptr_0((intptr_t)L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 29));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_inline (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDAMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_HandRenderer_m314C4A8FA1350EA68E929B9EF1E59C6BAFC8BEDA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16918));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16919));
	{
		// public SkinnedMeshRenderer HandRenderer => handRenderer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16920));
		SkinnedMeshRenderer_tFC8103EE7842F7F8A98BEF0C855D32A9711B7B65 * L_0 = __this->get_handRenderer_22();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_inline (RiggedHandVisualizer_tA436EF9D896979C5C98B40373D0F7EB9794D54A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RiggedHandVisualizer_get_Controller_m1C3F6BC0B966BF689F16411A8A3A43EB15F484AF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16912));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16913));
	{
		// public IMixedRealityController Controller { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16914));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26603));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26604));
	{
		// public IMixedRealityInputSource InputSource { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26605));
		RuntimeObject* L_0 = __this->get_U3CInputSourceU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26734));
	{
		// public Handedness Handedness { get; private set; } = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26735));
		uint8_t L_0 = __this->get_U3CHandednessU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DE_inline (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DEMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityHandTrackingProfile_get_PalmJointPrefab_m73FAFF8E1FFC075E012E3C7D6B14724ED7A6A4DE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25140));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25141));
	{
		// public GameObject PalmJointPrefab => palmPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25142));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_palmPrefab_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3_inline (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityHandTrackingProfile_get_FingerTipPrefab_m4EF67F1D214C50EF61ABA3B12CECD27B6CB4F0C3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25143));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25144));
	{
		// public GameObject FingerTipPrefab => fingertipPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25145));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_fingertipPrefab_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903_inline (MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityHandTrackingProfile_get_JointPrefab_mC1EF42D8D45C91394BB393B468CCCAFD97089903_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25137));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25138));
	{
		// public GameObject JointPrefab => jointPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25139));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_jointPrefab_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_inline (BaseMousePointer_t1DA0C14A4508BF0FB0CC53BBA62206B1D0256F99 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseMousePointer_get_MovementThresholdToUnHide_mE5B0F533D8F118E23D61251E67260F63A68B3EC7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13123));
	{
		// public float MovementThresholdToUnHide => movementThresholdToUnHide;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 13124));
		float L_0 = __this->get_movementThresholdToUnHide_57();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512B_inline (MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512BMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityLineRenderer_get_LineMaterial_mE15B9A7FB2297B9BA4FA42CA3B0CD0C66AD4512B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13636));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13637));
	{
		// get => lineMaterial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13638));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = __this->get_lineMaterial_15();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EBMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_LineBase_m2C31E561185CBA9AC93025864DA8BB213E7AE9EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14673));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14674));
	{
		// public BaseMixedRealityLineDataProvider LineBase => lineBase;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14675));
		BaseMixedRealityLineDataProvider_tBDC1C0137D794157BB9AA6DDB6838067D790AFB4 * L_0 = __this->get_lineBase_57();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_inline (LinePointer_t5101B76E2EFDEFB6FA643831C5C549615BBE2665 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, LinePointer_get_LineRenderers_m1EB6379CCFCA42221D1700968B19864D0E9A2F63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14677));
	{
		// public BaseMixedRealityLineRenderer[] LineRenderers => lineRenderers;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 14678));
		BaseMixedRealityLineRendererU5BU5D_tDA4F33848908ACBF79C9A69C3DB6BB9D6BCB5822* L_0 = __this->get_lineRenderers_58();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42_inline (MixedRealityLineRenderer_tC55065EFEAE02F78D40F47F202F2752731E002FE * __this, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityLineRenderer_set_LineMaterial_mF80C6B60EB1D26C7C0CF8888E368740E1AC67F42_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13639));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13640));
	{
		// set => lineMaterial = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 13641));
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_0 = ___value0;
		__this->set_lineMaterial_15(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_IsFocusLocked_m60E7049A5E53649E06071EC7C9B59466C94362A4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12591));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12592));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12593));
		bool L_0 = __this->get_U3CIsFocusLockedU3Ek__BackingField_36();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_RayDistance_m4EE49956B634F8462DAE4DBADFE5252626A2CC5A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21966));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21967));
	{
		// public float RayDistance { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21968));
		float L_0 = __this->get_U3CRayDistanceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3C_inline (KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3CMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeywordAndResponse_get_Keyword_m238BB1D5E7B41EA4A3113412AC3EB40EBBA9AF3C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25936));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25937));
	{
		// public string Keyword => keyword;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25938));
		String_t* L_0 = __this->get_keyword_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27_inline (KeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeywordAndResponse_get_Response_mA2CBA7BFB0D2C139A2F86221B7D19E2D32A71F27_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25939));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25940));
	{
		// public UnityEvent Response => response;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25941));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = __this->get_response_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FFMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26875));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26876));
	{
		// public SpeechCommands Command { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26877));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_0 = __this->get_U3CCommandU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectSectorAngle_mF9D7B9003ECC258233090FB9B624BBB52C89CDD0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15984));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15985));
	{
		// get => nearObjectSectorAngle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15986));
		float L_0 = __this->get_nearObjectSectorAngle_54();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_SphereCastRadius_m3C213528B46CEDA074335C35822D3A4A338D70B3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12671));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12672));
	{
		// get => sphereCastRadius;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12673));
		float L_0 = __this->get_sphereCastRadius_47();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectMargin_mB92C9CFDCF8755D5107AB618A73C027E68DBA015_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15994));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15995));
	{
		// get => nearObjectMargin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15996));
		float L_0 = __this->get_nearObjectMargin_55();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_PullbackDistance_m6FDFD26E8EB6A3C15900B3F27AB162A6A7704164_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15975));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15976));
	{
		// get => pullbackDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15977));
		float L_0 = __this->get_pullbackDistance_53();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECAMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_IgnoreCollidersNotInFOV_mB2F7E2D5CBB2A8B1DE9F8C9AC8D25B6FBF3CFECA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16041));
	{
		// get => ignoreCollidersNotInFOV;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16042));
		bool L_0 = __this->get_ignoreCollidersNotInFOV_61();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_inline (SpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1DMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointer_get_NearObjectAxisLerp_mA8511F176F372A33DBE30AB1DB329AEA51902B1D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16004));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16005));
	{
		// get => nearObjectAxisLerp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16006));
		float L_0 = __this->get_nearObjectAxisLerp_56();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21979));
	{
		// public Vector3 Normal { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21980));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CNormalU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_inline (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404CMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_get_TetherVisualsEnabled_m7F88A8EFA3080ACE49287D0BF483F2CE00A9404C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16576));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16577));
	{
		// public bool TetherVisualsEnabled { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16578));
		bool L_0 = __this->get_U3CTetherVisualsEnabledU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_inline (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_get_TetherEndPoint_m51747A51875E3D4D32E0757443A13BBB711611E1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16573));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16574));
	{
		// public Transform TetherEndPoint => tetherEndPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16575));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_tetherEndPoint_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_inline (SpherePointerVisual_t499E6BFC0627CD64B6FE90C9211C8AF85A06C017 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpherePointerVisual_set_TetherVisualsEnabled_mC9955E188B1F24E9864F12BE95EE9833CC8FA181_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16579));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16580));
	{
		// public bool TetherVisualsEnabled { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16581));
		bool L_0 = ___value0;
		__this->set_U3CTetherVisualsEnabledU3Ek__BackingField_4(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21984));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21985));
	{
		// public GameObject Object { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21986));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CObjectU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22002));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22003));
	{
		// public Vector3 PointLocalSpace { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22004));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointLocalSpaceU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_inline (TouchPointer_t0B9452FF0FDE1BEE53923E9065BC85C77F30C49F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3EMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchPointer_get_TouchRay_m77E3F57CB2F883B325DD696E61619EF8B28A7C3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16765));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16766));
	{
		// public Ray TouchRay { get; set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 16767));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = __this->get_U3CTouchRayU3Ek__BackingField_54();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_inline (BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785DMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseControllerPointer_get_RayStabilizer_m31BE7A02BB86B63539F66795A4663D11CA94785D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12659));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12660));
	{
		// public IBaseRayStabilizer RayStabilizer { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 12661));
		RuntimeObject* L_0 = __this->get_U3CRayStabilizerU3Ek__BackingField_45();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22022));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22023));
	{
		// public Vector3 Origin { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22024));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3COriginU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317BMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22034));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22035));
	{
		// public Vector3 Direction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22036));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CDirectionU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26842));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26843));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26844));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get__current_3();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		uint32_t L_0 = (uint32_t)__this->get_value_0();
		return (uint32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4ACMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_gshared_inline (InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CEMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26755));
	{
		// public T InputData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26756));
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_U3CInputDataU3Ek__BackingField_6();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0  Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAE_gshared_inline (Enumerator_t7FEF6285CE3126B603AB8D951220B684A52AF179 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAEMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m98C839A52A221D4874CDA99667A9451978315EAE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0  L_0 = (KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0 )__this->get_current_3();
		return (KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7A_gshared_inline (KeyValuePair_2_t69CC9209E494AB6BA5729796FBBBAFB5F933F3F0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7AMicrosoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_mACFF50732053ECFDF29B6D3F394985BEE3B94A7A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_value_1();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* Array_Empty_TisKeywordAndResponse_tFFF55F9650BDEE408A09923CFDFB318A97D1963A_mD212BE803A4A4387261A9703608D4F91A38E896A_gshared_inline (const RuntimeMethod* method)
{
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, method, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(IL2CPP_RGCTX_DATA(method->rgctx_data, 0));
		KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75* L_0 = ((EmptyArray_1_t97F97A54C24BC0E28CFA3FBD556842A04F112FC6_StaticFields*)il2cpp_codegen_static_fields_for(IL2CPP_RGCTX_DATA(method->rgctx_data, 0)))->get_Value_0();
		return (KeywordAndResponseU5BU5D_t4A9E084C91FE195B4047D915EEC936D5D6CBCE75*)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* Array_Empty_TisSpriteCursorDatum_t7EF127D03AE70D5F53CA6FDC7F23ADEA0841D784_m55F5681A9E41413E2F7DC4AF6C74110A67495923_gshared_inline (const RuntimeMethod* method)
{
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, method, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(IL2CPP_RGCTX_DATA(method->rgctx_data, 0));
		SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C* L_0 = ((EmptyArray_1_t143CCC6829B035146127AD6B741D057DF92E5BB6_StaticFields*)il2cpp_codegen_static_fields_for(IL2CPP_RGCTX_DATA(method->rgctx_data, 0)))->get_Value_0();
		return (SpriteCursorDatumU5BU5D_t3B4B67C402C262C2A3BD5CED784F6328487EC71C*)L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit_SDK4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___markerPtr0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 49));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 50));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 51));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 52));
		intptr_t L_0 = ___markerPtr0;
		__this->set_m_Ptr_0((intptr_t)L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 53));
		intptr_t L_1 = ___markerPtr0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5((intptr_t)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 54));
		return;
	}
}
