#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};

// IActivationFactory
struct Il2CppIActivationFactory;
// Microsoft.MixedReality.Toolkit.BaseDataProvider`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem>
struct BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966;
// Microsoft.MixedReality.Toolkit.BaseDataProvider`1<System.Object>
struct BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278;
// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile
struct BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8;
// Microsoft.MixedReality.Toolkit.BaseService
struct BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10;
// Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar
struct IMixedRealityServiceRegistrar_t7B6E2AF9599FB6847FE71FC6F5DE9AE0BC8ABB50;
// Microsoft.MixedReality.Toolkit.Input.BaseController
struct BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B;
// Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager
struct BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC;
// Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager/PointerConfig[]
struct PointerConfigU5BU5D_tFF5D750ACD5998A5994F9B8EF58BCAA5F563B386;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.BaseInputSourceDefinition
struct BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityControllerVisualizer
struct IMixedRealityControllerVisualizer_tF11B01C18D3E7D9443AFA3B890520D0F196716C5;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController[]
struct IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition
struct IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem
struct IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityMouseDeviceManager
struct IMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute
struct MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile
struct MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile
struct MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[]
struct MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile
struct MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile
struct MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping
struct MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[]
struct MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile
struct MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile
struct MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[]
struct MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping
struct MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[]
struct MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[]
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile
struct MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile
struct MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E;
// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile
struct MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD;
// Microsoft.MixedReality.Toolkit.Input.MouseControllerDefinition
struct MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B;
// Microsoft.MixedReality.Toolkit.Input.OculusRemoteControllerDefinition
struct OculusRemoteControllerDefinition_t3D22BBCDBCD365FCCD1FD8EE1C6F4F86CFD32DF9;
// Microsoft.MixedReality.Toolkit.Input.OculusTouchControllerDefinition
struct OculusTouchControllerDefinition_tC9642682696715D95E748D1705E01C287490FF99;
// Microsoft.MixedReality.Toolkit.Input.PointerOption[]
struct PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E;
// Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler
struct PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0;
// Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition
struct SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands[]
struct SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3;
// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7;
// Microsoft.MixedReality.Toolkit.Input.TouchScreenDefinition
struct TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController
struct GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController
struct MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager
struct MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager
struct UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController
struct UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController[]
struct UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager
struct UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963;
// Microsoft.MixedReality.Toolkit.Input.UnityInput.XboxController
struct XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD;
// Microsoft.MixedReality.Toolkit.Input.ViveKnucklesControllerDefinition
struct ViveKnucklesControllerDefinition_tA63DFCEBFAD95F32D30B544F68CC3280748FA912;
// Microsoft.MixedReality.Toolkit.Input.XboxControllerDefinition
struct XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359;
// Microsoft.MixedReality.Toolkit.Utilities.Handedness[]
struct HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B;
// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432;
// System.ArgumentException
struct ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2/Entry<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>[]
struct EntryU5BU5D_t322D7F2D608789D10EA9F5D249486766CEB5EA7E;
// System.Collections.Generic.Dictionary`2/Entry<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>[]
struct EntryU5BU5D_t01FE397A16E8B69EEAAC7B553B44F24D74F37E00;
// System.Collections.Generic.Dictionary`2/KeyCollection<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct KeyCollection_t4D0DEC682C837679425B9F9E509A1329A9D4DF4E;
// System.Collections.Generic.Dictionary`2/KeyCollection<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct KeyCollection_tD769D816A5DCA044A45E1397CE47F2EAE75AC006;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct ValueCollection_t50C21B3626D2E45FE6B5EA39D02B3789D50D5275;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.Object,System.Object>
struct ValueCollection_t0816666499CBD11E58E1E7C79A4EFC2AA47E08A2;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,System.UInt32>
struct Dictionary_2_t96750716FF4F33B66CBE19A55C531D33FD8A0EA8;
// System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Object>
struct Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884;
// System.Collections.Generic.Dictionary`2<System.Object,System.Object>
struct Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA;
// System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5;
// System.Collections.Generic.Dictionary`2<System.String,System.String>
struct Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC;
// System.Collections.Generic.HashSet`1/Slot<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>[]
struct SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1;
// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F;
// System.Collections.Generic.HashSet`1<System.Object>
struct HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3;
// System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct IEnumerable_1_t5FA420B15D11497ADD2892502E41C152808AB2AE;
// System.Collections.Generic.IEnumerable`1<System.Object>
struct IEnumerable_1_t2F75FCBEC68AFE08982DA43985F9D04056E2BE73;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct IEqualityComparer_1_t064C223FF9217A6DF0423D99A6E66C28C73E518A;
// System.Collections.Generic.IEqualityComparer`1<System.Int32>
struct IEqualityComparer_1_t7B82AA0F8B96BAAA21E36DDF7A1FE4348BDDBE95;
// System.Collections.Generic.IEqualityComparer`1<System.String>
struct IEqualityComparer_1_t1F07EAC22CC1D4F279164B144240E4718BD7E7A9;
// System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>
struct IReadOnlyList_1_t9358DECEA3E357EDBDBA29CE97CA97FC5569817C;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct List_1_t2A40CCD444FF66B1871D49626E273B4347465641;
// System.Collections.Generic.List`1<System.Globalization.CultureInfo>
struct List_1_t74F59DD36FAE0CFB087612565C42CAD359647832;
// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D;
// System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseInputModule>
struct List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26;
// System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem>
struct List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Comparison`1<UnityEngine.EventSystems.RaycastResult>
struct Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Runtime.Serialization.SerializationInfo
struct SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Color[]
struct ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399;
// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5;
// UnityEngine.EventSystems.BaseInputModule
struct BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C;
// UnityEngine.MeshCollider
struct MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.RaycastHit[]
struct RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57;
// UnityEngine.Touch[]
struct TouchU5BU5D_t0207B72FD95EF1F56E7A6C9F0A42896B03D2BD5D;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// Windows.ApplicationModel.Resources.IResourceLoaderFactory
struct IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E;
// Windows.ApplicationModel.Resources.IResourceLoaderStatics
struct IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A;
// Windows.ApplicationModel.Resources.IResourceLoaderStatics2
struct IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300;
// Windows.ApplicationModel.Resources.IResourceLoaderStatics3
struct IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA;
// Windows.ApplicationModel.Resources.ResourceLoader
struct ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsUnityEngine_CoreModule[];
IL2CPP_EXTERN_C RuntimeClass* ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Exception_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IReadOnlyList_1_t9358DECEA3E357EDBDBA29CE97CA97FC5569817C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t2A40CCD444FF66B1871D49626E273B4347465641_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* String_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral01FD3AAC7F11CC7F6594833D76B910FB4805D560;
IL2CPP_EXTERN_C String_t* _stringLiteral04734178D407F1573AAACEB7E086B11BCFABD7FF;
IL2CPP_EXTERN_C String_t* _stringLiteral056B3BC98792010367C5AFAE60918EAA30303D62;
IL2CPP_EXTERN_C String_t* _stringLiteral0957326BD9199091B642BF0CD6AA6600B50CF258;
IL2CPP_EXTERN_C String_t* _stringLiteral0B00E71ECE847B4119EFBB0AFBFE6915BD9DA3C3;
IL2CPP_EXTERN_C String_t* _stringLiteral0C6D5314C33FC3E7B46BEAC3B382F2E73B1DB494;
IL2CPP_EXTERN_C String_t* _stringLiteral0F835DF4D4EB91CAAA508B52518573853048231D;
IL2CPP_EXTERN_C String_t* _stringLiteral0F9D13B1C31A5F4C68D0EEA587D21588F757084E;
IL2CPP_EXTERN_C String_t* _stringLiteral106F1A34948BC9FB59B142222011038C66E8D87B;
IL2CPP_EXTERN_C String_t* _stringLiteral15758E5B89585EBF8F8D346C942E99DF131DBCEF;
IL2CPP_EXTERN_C String_t* _stringLiteral188E72867D40866EDC45372E1B0708E67AAD8C21;
IL2CPP_EXTERN_C String_t* _stringLiteral1B71A18ED3E9993B0A28105B128830780EC8C318;
IL2CPP_EXTERN_C String_t* _stringLiteral1E4850764A9CD7B8BCFAFBA165A9885423D24F56;
IL2CPP_EXTERN_C String_t* _stringLiteral1E88AB05D76FF253F292B74866D32460BB3836E2;
IL2CPP_EXTERN_C String_t* _stringLiteral203DA333F71D786E4BC6F5673CDA14AF8DD1FE53;
IL2CPP_EXTERN_C String_t* _stringLiteral21FB34F4DAA656F758F1ADDBAE425CF36A75C27E;
IL2CPP_EXTERN_C String_t* _stringLiteral25939F72D787A122BF99C3514878B0C24DAFB7D8;
IL2CPP_EXTERN_C String_t* _stringLiteral275E1B4617651F82B33FFBF62CF7873AE1D25FDC;
IL2CPP_EXTERN_C String_t* _stringLiteral28546FFD601E0EE6024B29BEC3070E44223D1E9F;
IL2CPP_EXTERN_C String_t* _stringLiteral28A44F30741C541824259E2E5481D0EA59A5D422;
IL2CPP_EXTERN_C String_t* _stringLiteral294D359ECE148A430F19981912277E5154CA19E0;
IL2CPP_EXTERN_C String_t* _stringLiteral31E1A9E6CFF6074546DAF449DDCE91F89C782683;
IL2CPP_EXTERN_C String_t* _stringLiteral389C31E60DD0E577273C009A47D71D79B84A138C;
IL2CPP_EXTERN_C String_t* _stringLiteral3DCF82ABAFAB13E329B400F4BA9711EE79CB4683;
IL2CPP_EXTERN_C String_t* _stringLiteral3DD48670856F023E42F1E65D4630BDF5E79CCADD;
IL2CPP_EXTERN_C String_t* _stringLiteral41DC700A22938E6F7AF528592CEA8E869DAC445E;
IL2CPP_EXTERN_C String_t* _stringLiteral4468B5733BBDF8B9FA64F38D318118FC9793EDDC;
IL2CPP_EXTERN_C String_t* _stringLiteral457E989E00F6A99FBBBB4FD7334A3235F20E538A;
IL2CPP_EXTERN_C String_t* _stringLiteral4629BC1F6F7ED9DCC419998FC11B1B6B896A7C1D;
IL2CPP_EXTERN_C String_t* _stringLiteral48C19D7517421E7E0771F84827A99574BB437A9F;
IL2CPP_EXTERN_C String_t* _stringLiteral49516E0C4558202F90B0D9F478B4C60CE7660C96;
IL2CPP_EXTERN_C String_t* _stringLiteral4A247A5D4261C04753C459F90887FA1602AD1092;
IL2CPP_EXTERN_C String_t* _stringLiteral4B1F8CB79B5361F54B20780F0B261EDEDED54945;
IL2CPP_EXTERN_C String_t* _stringLiteral4B7CE41792A4716B37BC3CBD3D12805EFAD3CA89;
IL2CPP_EXTERN_C String_t* _stringLiteral4B8C20D6E86130A8812D91631E57BE39DA04F0B2;
IL2CPP_EXTERN_C String_t* _stringLiteral4EB8D65397E0EA7D5F983E64A14766E94CA509BA;
IL2CPP_EXTERN_C String_t* _stringLiteral4F608568C36B4BBFB29820366803B0BA041C8450;
IL2CPP_EXTERN_C String_t* _stringLiteral51984F4C8A58B2412727FEC81BE236DB0C1BF8A2;
IL2CPP_EXTERN_C String_t* _stringLiteral51F3B2EE9B97B2EF33D3F509A8473295A1E92EE9;
IL2CPP_EXTERN_C String_t* _stringLiteral55557B0A6D6B32A25091D912CACFE3B06B07C1D0;
IL2CPP_EXTERN_C String_t* _stringLiteral587D31C728BABB75EBD8560EDC7B82CF3D423526;
IL2CPP_EXTERN_C String_t* _stringLiteral59955982BCDC9F05C43EE91BE0638935E20F9E7B;
IL2CPP_EXTERN_C String_t* _stringLiteral59CD0DFFEED085A4807F289746848F13DF2EC40B;
IL2CPP_EXTERN_C String_t* _stringLiteral5CB44880126DDB804A069EE4DFAD186E290CC2CD;
IL2CPP_EXTERN_C String_t* _stringLiteral5D55589F65E143B227E3C086A040D08278E9810D;
IL2CPP_EXTERN_C String_t* _stringLiteral5EB22C5455F364C72E10DDF8A0BC46CDCA2BD509;
IL2CPP_EXTERN_C String_t* _stringLiteral60A60C524FFE620011ACC85A62321A2FDF4B57F3;
IL2CPP_EXTERN_C String_t* _stringLiteral6161DB73C1776456F22798D656A2CC60A77D3F79;
IL2CPP_EXTERN_C String_t* _stringLiteral62451FBAE8C624EC16B53E2B8B5A94636DB8204B;
IL2CPP_EXTERN_C String_t* _stringLiteral64D9EE1F43D368115457FB30F1A17D7C92563305;
IL2CPP_EXTERN_C String_t* _stringLiteral656DE1F988407C087F04D6D4B010279AEFAB457D;
IL2CPP_EXTERN_C String_t* _stringLiteral66654F3A427908EF2AB0102919620271D634DA8A;
IL2CPP_EXTERN_C String_t* _stringLiteral66E3998641BA92B9A789AE078DDAF008AE3C3881;
IL2CPP_EXTERN_C String_t* _stringLiteral682E113198B41B8B3429A7BA36840E99C886CBA6;
IL2CPP_EXTERN_C String_t* _stringLiteral6AC05709BF5AD71C0F65FEDDE4171594C3ACC763;
IL2CPP_EXTERN_C String_t* _stringLiteral6B3FED9B04FECD70B95D853F5BA5BA9EE0A05138;
IL2CPP_EXTERN_C String_t* _stringLiteral6D97E87A7B278B947C98CC75ADAEBAD7C90FD353;
IL2CPP_EXTERN_C String_t* _stringLiteral6ED8D91246C58ABCC5DDEB00EAC56E94A9B046DD;
IL2CPP_EXTERN_C String_t* _stringLiteral729AC18CABA43BF0EC0D3CF1D034733763675EBB;
IL2CPP_EXTERN_C String_t* _stringLiteral767DC8E1BFF946141D583CFBDDD63C8909250D51;
IL2CPP_EXTERN_C String_t* _stringLiteral7728F0C88C76D8DD950F1C815CE0B63B916A017F;
IL2CPP_EXTERN_C String_t* _stringLiteral7B6BB76A88E0023DEAD12D83B749EE7F209F469C;
IL2CPP_EXTERN_C String_t* _stringLiteral80DDC1364C0999AD6B42A6503CC3A25895B61997;
IL2CPP_EXTERN_C String_t* _stringLiteral8598222918D3C6E513D63060CF55E2971DED729A;
IL2CPP_EXTERN_C String_t* _stringLiteral8A568A1FB9B8EC33F67F2DE8407E314209A38D0C;
IL2CPP_EXTERN_C String_t* _stringLiteral8B7970623A806CC748C1B218861BE920B011B98C;
IL2CPP_EXTERN_C String_t* _stringLiteral8DBD45BEC618F8791EA0C57E9FCA86B8D1263EF1;
IL2CPP_EXTERN_C String_t* _stringLiteral8FEAC14DA484CAF7B9EEE0BE17699EBE9BC2C093;
IL2CPP_EXTERN_C String_t* _stringLiteral913CD5CDA7750EC4C845F32CFB033E1369B179B3;
IL2CPP_EXTERN_C String_t* _stringLiteral95EFCD8A09FF0DFDCCBB845A6A8357BA36522BF3;
IL2CPP_EXTERN_C String_t* _stringLiteral96D88A78DB47254993B8BEDDCE220C9F5D9C15BB;
IL2CPP_EXTERN_C String_t* _stringLiteral974235C44BB7E804020E4FE46DD329F69F735D85;
IL2CPP_EXTERN_C String_t* _stringLiteral98C4F18076684F6635FACB8581378E95739E8AEF;
IL2CPP_EXTERN_C String_t* _stringLiteral9C44182EB81FF343CEE2C9734433ADD711E79D21;
IL2CPP_EXTERN_C String_t* _stringLiteral9C9A5C6A957D4F2265042CD8B5B4BD9903436DC8;
IL2CPP_EXTERN_C String_t* _stringLiteral9CB08DC0ACF6D46CAB170F605604E304D97EBC74;
IL2CPP_EXTERN_C String_t* _stringLiteralA00916847DE4842DCB336904198BB06A4A779353;
IL2CPP_EXTERN_C String_t* _stringLiteralA3C990A4BA4B686203D4582C21ECAAFEF25CC3F7;
IL2CPP_EXTERN_C String_t* _stringLiteralA3EEA3403E74D1D76ADADD79641A30AC00A9ED76;
IL2CPP_EXTERN_C String_t* _stringLiteralA4D8F2F82AF4A72233434AF862F5603D5E0121DA;
IL2CPP_EXTERN_C String_t* _stringLiteralA4DBC3E998BCA45C68C2D8EB209D483C15B4F9CB;
IL2CPP_EXTERN_C String_t* _stringLiteralA839C5A27FE72B3244E8502E5C29CF8D95649D14;
IL2CPP_EXTERN_C String_t* _stringLiteralA8F8625B9FBA6D4FEBC5CA11B8FCB336747BE2B9;
IL2CPP_EXTERN_C String_t* _stringLiteralAB20906877EEE3FDB9EDE86DA207757C3CAB1135;
IL2CPP_EXTERN_C String_t* _stringLiteralAB2BB40748121CF37DA5E0282CC37DC27B029080;
IL2CPP_EXTERN_C String_t* _stringLiteralABAC81EB87F7C90922F66FD5618A7B497DEC587B;
IL2CPP_EXTERN_C String_t* _stringLiteralB09532BE24B61EA3DB13D1DC5124B8828D798CE8;
IL2CPP_EXTERN_C String_t* _stringLiteralB4B23EAB9DB662B174AF7913A54AEF0F104E2A51;
IL2CPP_EXTERN_C String_t* _stringLiteralB7DF14D3D4609EC0F4A2F59741330D5CE07BA0BF;
IL2CPP_EXTERN_C String_t* _stringLiteralBE3A69641719C82A0346149022F30010B875EF38;
IL2CPP_EXTERN_C String_t* _stringLiteralBEC3A1EB621F66A9977AE9420F50B054C58D000C;
IL2CPP_EXTERN_C String_t* _stringLiteralBFC251F0EE7E738E9803C51B96A0610EF66A88F3;
IL2CPP_EXTERN_C String_t* _stringLiteralC00134BCFFA05DD4FF4A1868C2C8BA9290A5B71B;
IL2CPP_EXTERN_C String_t* _stringLiteralC128F6DF6A1EE17EA1BE8D8816E6A349F1DE0923;
IL2CPP_EXTERN_C String_t* _stringLiteralC3D412B022C729047A3D0A7EF95B8E0F9A7E5DC5;
IL2CPP_EXTERN_C String_t* _stringLiteralC3D586F426A98B96AAD74DEC01DCA29835D892BD;
IL2CPP_EXTERN_C String_t* _stringLiteralC3EE37116CA604A95B2D60FC79EB227D914DB1E6;
IL2CPP_EXTERN_C String_t* _stringLiteralC577C6AB98A4D18F7740145FB4769D96C375A2B2;
IL2CPP_EXTERN_C String_t* _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2;
IL2CPP_EXTERN_C String_t* _stringLiteralCBA5457BDCABFEAA29B1FF68C1AFB7EC38379224;
IL2CPP_EXTERN_C String_t* _stringLiteralCC4299750360DE9674D82B609CE1B9991E169CA6;
IL2CPP_EXTERN_C String_t* _stringLiteralCC93706187D66F9E507CF7C5A64899EF0FD87ECD;
IL2CPP_EXTERN_C String_t* _stringLiteralCFC1F9E31329EEECF4CD35DD100BB63DBD05A4E4;
IL2CPP_EXTERN_C String_t* _stringLiteralD01DE6A2ADEF7A6D19EBCCE32840732F330F400B;
IL2CPP_EXTERN_C String_t* _stringLiteralD17032C22D37E7C2F07D0DE79CFB7F6CC0E7E49B;
IL2CPP_EXTERN_C String_t* _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
IL2CPP_EXTERN_C String_t* _stringLiteralDAFED0D7742E207A0850BCF7B75B78DCCF28BF7A;
IL2CPP_EXTERN_C String_t* _stringLiteralE000862658F39C5D07E4089084F69D0EA518B5F8;
IL2CPP_EXTERN_C String_t* _stringLiteralE06B21AEA9D546CFF5C83176D33BD36A347C6A0D;
IL2CPP_EXTERN_C String_t* _stringLiteralE5D93B49F138108E73899C063D797C414A902597;
IL2CPP_EXTERN_C String_t* _stringLiteralE6F6FF708C4924DF021F6ADE19E5004ECF5D13E9;
IL2CPP_EXTERN_C String_t* _stringLiteralE9385D48D9D0F106119D7E40570281511CBE54B7;
IL2CPP_EXTERN_C String_t* _stringLiteralECFBD0D7C84BE309392B74650DFE2BD7CA3BF4DC;
IL2CPP_EXTERN_C String_t* _stringLiteralED172DA14313D0353CA5064B9F762F0DFCECFF17;
IL2CPP_EXTERN_C String_t* _stringLiteralF1357DB265A92BBB6D1D47A0E99634C06E522DC1;
IL2CPP_EXTERN_C String_t* _stringLiteralF23BF77E29407B6FCD302C93F0299BC519EAFE31;
IL2CPP_EXTERN_C String_t* _stringLiteralF61219430ADB6DAF41DEB37CBCCD31B790D89026;
IL2CPP_EXTERN_C String_t* _stringLiteralF683313BD533409E1704E06D2A97B5CE5BCC7B4A;
IL2CPP_EXTERN_C String_t* _stringLiteralF825D6866DE69320DBBECFA75BE5218E0FEE9A07;
IL2CPP_EXTERN_C String_t* _stringLiteralF98F3F4946BE442C0460E756655E87C20B5C93C8;
IL2CPP_EXTERN_C String_t* _stringLiteralF9BA3224DDE923BCBB695A2A34CE59F4045E0324;
IL2CPP_EXTERN_C String_t* _stringLiteralFAC55957006045DAAB160CA173A879B303A99B33;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* CoreServices_GetInputSystemDataProvider_TisIMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_m6678BE77DBD2504AFD9C5F6CB1F9512DBA4297C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m3FC788FC7B8816967B9EC77354AC2FAD9550FF9D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m9C52F46BB4751273EEB9FBE1CB2B1E35D3540A7C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Clear_m5BC780B1E0C90700EA1D5062A3260A265EF78A80_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Clear_m9FD6C20A778F2D2F0F63681D63EF9DA51AC5F1A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_m8FF1FB6216734271E1D7757714BBF0BBCC63A85C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_mC56F3FFF67E6CD1A08088FF4C7B165CA69702B8D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_m6DB227679C4A31F46514CAD78DD69AA39EAA4134_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_mE0031EE54F04BC349BAE2FCFC9FCDD0FF4FD8E3C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m6AFD8CFDF30BA488E5D39AD0F76C0694353487B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_mDC48879027B12DEEF5A5FDBEB8ACA6D4F865884F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Item_m0696A60D09B1FAA461A45B2C28B3FB371C4F941C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Values_m8B00A65ACFC01906741611CB7601750B9BCB2CDF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerable_ToArray_TisIMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_m4B0F45E6D631135CAE99179B9ABEC8C860AB0C44_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m39A511596ACB5BBD01500520D94056D7DDF1CE13_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_mA9EEA8ACD842AAE42972E735B4ED02DB80DCFAC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mC6E0E3541F0A87B9F9FFDC157E3CE05B68AA1268_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mE0DB4245D460F7AF6C5BF327AC8E5DD06F95662A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m580CCFE476343A034A018DC5D713BE06CD47F5C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mDCF3615CD5DB835933BF9CBD12589BD70D73B088_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_UpdateController_mAAF4BF2FF4CF85429DF562F819FA9C18F7E29CEC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController__cctor_m501805257E2E3DCFD8DEBB0F110B202C400E42DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController__ctor_m362C0B541A088E9FD5A4E2CD7C1FD3DA337D80E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_DefaultInteractions_mF7D5A9668EF263061B29D96CE3FB9E06FD9041E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_DefaultLeftHandedInteractions_m4F855F6CE5291B2B2F68BD01F482BD6A6CD8830D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_DefaultRightHandedInteractions_mE208E11288D0A8371CB82B964AB2EA231D686560_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_LeftHandedLegacyInputSupport_mC877601AB4E6FB4C8585763415D9B108F26ACDE0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_LegacyInputSupport_mE9B90A08DCEDD43400BAB283EDBCC5DCFD90E0D7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_PointerOffsetAngle_mF87BE6BF8E30F723FC0D94C7452E6C1A2413CDE1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_get_RightHandedLegacyInputSupport_mB083CBFF49B6A8EE2F3FA1D807C6ACA7C11AF3D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericJoystickController_set_PointerOffsetAngle_m5D4684EB9F6A170D2CF38F6FEC777F35E7C5404E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m71AFC3161B8141E5CC800EDB1F481131F3E9F720_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m73FE262EDA97C22B87F4852530316000528DA335_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mB8C580D84B1E55A95131F82A4FC55A236DDE2734_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_mF49B7896BD967B3666158CEEE7BB82DBFCC78770_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m902E064E7124DC92A785E2B9A4E0834340DFDD8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m25755E7CBE0BCCD43E32856AFE1EB8C34ABF6579_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m2AC9CA51EE6392725A4EE663ECA63B765AF4638D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m7E51D8A37DB3D824E9E174072CD0530BE6F413D9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m844CD9BA2E6C52967CA36908B2EA7739BF9CBC64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_Description_mE13C0C1AA4390BBD2DC1CB5A21DDD4B05888EC6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_Id_mD6C2BC5B6E0DA6E5655456F21B8E897B9F12C358_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_InvertXAxis_m82A95CBB15419F0894BE53B7698F9C2D1C1689A3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_InvertYAxis_m68811F0F6DEA6C0505B0FEF2D20452B2B93E1930_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_RawData_m60D2461B4B1D8EF89B8B430F6470293502361646_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_InvertXAxis_m66647EA9D0FF68E5189025514D53E18D4AE33657_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_InvertYAxis_mF8A76F91E2D3E422595B730EC949C545F43C5DFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_MixedRealityInputAction_m8C85B3C044B29D8A528BE7E5AD68B8756569C0BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_PositionData_mEF64ADE69D0B6C2F422B2BDD4B50C8C0FBAAB654_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_RawData_m6CA5CA0C86D7C7BF85DA28344C103C2BD750567F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_RotationData_mD0DC4F12389D7151DC896BCF83E5F844DF0C4C52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityMouseInputProfile__ctor_m64B076AF4711BFC77189ED06F2B0721F73F08647_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_Initialize_m4BEB83AAE24CE49EF02D22D82D9A9AD6A5BF6E9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_Initialize_m57268FBA83339F35090660C3E4BCBAD24CBAB3CF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData__ctor_m437897C23251E30E63BF38068E00AA84F160055B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_get_Count_mF11CED15B86C3B70B4871EE31CB9DB7EBCD8344A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile__ctor_m78D944E504E9115F169858270E34DE8947853B26_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_DebugDrawPointingRayColors_mB3501FB9EE13DABD03901321CFE11BA97E9E9205_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_DebugDrawPointingRays_m7BD92F80939DE0545AEC2643BC2E41A817A80551_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_GazeCursorPrefab_m0F87A5C3B69804A6DBA4C3B364FC944D4B22B630_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_GazeProviderType_mEDD757AE258E9D0C1D6EBD7DB85DA785909C5B34_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_IsEyeTrackingEnabled_m5679DF292107CBC1FF1080723BB6FEBB345D9D3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PointerOptions_m51CAF7E0A62650F884B67C97B4FE98AAAD38200B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_UseHeadGazeOverride_m74C748C176CF1DD2093F974358298667C1A2CB27_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_set_GazeProviderType_m04992AE43FA50F472881769D5AAC9572C25F6D3C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_set_IsEyeTrackingEnabled_m88C1761B2AAA9E67E627FD2D7EA9E7D7C68CF3C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealitySpeechCommandsProfile__ctor_mD6870CB1D728304BA8CB1E2B125991AE5BD51F09_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealitySpeechCommandsProfile_get_SpeechCommands_m1BAA28B890C02DD8984C7FBA1EF1B905BDBAD6B9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealitySpeechCommandsProfile_get_SpeechRecognitionConfidenceLevel_mD07EC3F0C555F0635B714CC901BD1635C8F3609A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealitySpeechCommandsProfile_get_SpeechRecognizerStartBehavior_m8DB42B73900D75367BCCADE158634F41C237363A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseControllerDefinition_get_DefaultMappings_m7EF7ECB5F5503867EB09A3E4EA8082907919B866_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseController__cctor_mD2F02D905783BF807B093427BF0196A3BF29C6F8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseController_get_DefaultInteractions_m852788FAB995ED6BF7BC45D4963E40119302AA86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_Disable_m53B9DD07A43E4727524288D4D0379FAFECB82498_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_Enable_m9CBAE43364362D2389AEC1B0360CBE692CC7A664_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_Initialize_m35E86B0049510BF374BF2124D745BCE1722EB96C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_Update_mC81D420BA6FB5B3D59FCE8F4D9A375CBCDB24F92_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager__cctor_m345E8A0EF1BB48043F646729526855AB1CFB52C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager__ctor_m6EB7FF7462475F9A9C2E158C93E665E7A7B1CF68_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_get_CursorSpeed_m07DD4EF9A30BE0ADB3512A31828FF6A72BA4DBA9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_get_MouseInputProfile_m9AC02DC0078B74BCDC27A957EC41F3F7B054340E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_get_WheelSpeed_m10628B386DE10423D1D01706D64C3FB92CB65826_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OculusRemoteControllerDefinition__ctor_m96E71128286C34D5B4F11A794D8161F2CFD7EBE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OculusRemoteControllerDefinition_get_DefaultMappings_mA53721E2183AD2F31FC38098B764D603DE020440_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OculusTouchControllerDefinition__ctor_m9B8032ED418BABA305FA05EF88C2B0D9F060F9B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OculusTouchControllerDefinition_get_DefaultLeftHandedMappings_m5917901468278FCE944079924D336FA35EE94D45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OculusTouchControllerDefinition_get_DefaultRightHandedMappings_m1D3BFC65AD861C7A7E48C55752E4CBE304765163_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimpleHandDefinition_get_DefaultMappings_m06E20C5986CCDF17622C785772E3F2FC6056D45A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_Initialize_m48195FDCEF647EDA8F7234F78309E11229C47590_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData__ctor_m22F7E9CFCD56B0DF9CDA1DE40A34C1142B945C51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_Initialize_m13B54C1ABECBD301660C299F4BB63FC6780E0ABB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData__ctor_mB4E5D7BD3AB3D7158F659D63231CCD8D8A9CE0A5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_Confidence_mAD712C67AEA3766430BD3D6C987708D3809D158E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_PhraseDuration_mAF65ED068651949A4636D8BE436BC76CC298F408_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_PhraseStartTime_m6E06AC0E405E060918B1F24ED02FDC4644428AA3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SupportedControllerTypeExtensions_IsMaskSet_m5AF5B1AE6B2140DDA223AA06F7F64336B53C3A91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TouchScreenDefinition_get_DefaultMappings_mFD52AB386376E58C4CB93E0975C5AAC7F716F0F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_Disable_m0FD46FBB69911D57D1C807D96F316C3DA60597F9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_GetActiveControllers_m0F3F99F4414281BB0131F41FF7A33D197D2951F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_GetCurrentControllerType_m81A64D49CD656F5C4F94800D0732E16CB5DBD6D1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_GetOrAddController_m2A788FF049103104D007F7C9018F4D9EB0C862A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_RemoveController_m1F45A0CD261B3AE0BC040D7B90A280196F2A5601_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager_Update_m99D4BF6A93A272108DA1385BE10780DB6D28C403_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager__cctor_mB1ED339A9A8A01FEDED23C546C6617728BCD1C69_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager__ctor_m4DDE66FDDE5DB1EE78F75A3882467E0B66ED337F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_SetupDefaultInteractions_m23A9AE8A93B27241041303B745FE57964DED5674_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController__cctor_m4DF64F0BA55F22DA58CAD86BF654C027694E2243_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_get_ScreenPointRay_mB8C75CA782463EB0AF62EBA1E7C4E9674B17C12D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_set_ManipulationThreshold_mC5D064139A6E5C1D3C9671707F1F239B270D003B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_set_MaxTapContactTime_mD21DB0072711AD637DCC28D89C4F4A811FEBE19B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager_Disable_m9A4855DD017F948DABF3FBDB5956B29788518549_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager_Update_m894F1B418C66E0079CCD7E34E5CDEA95BF56B226_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager__cctor_mFB0EDF5BD4D39B291147D32B25A232C0EA7DA280_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager__ctor_m6AC10B189F643EFCDC17DBB4B5A06112DF54F6C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ViveKnucklesControllerDefinition__ctor_m3D93365EC1E071D9179C0D2CBD6D70CC5884551C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ViveKnucklesControllerDefinition_get_DefaultMappings_m2BB6A448979A36275E7C16DE212EF67E4250C899_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* XboxController__ctor_mEB26934DF010AB9131EE9E7CC6DBE3F86C42D573_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* XboxController_get_LegacyInputSupport_mFEE8C5627D4318DA4820607E4ADB84A028D7079C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseDataProvider_1_tEED30277478AA814BB9ADAEDC605A8BD42127D88_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t302202D6382013588B561A500FF7B594704FCCDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Exception_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GestureInputType_tE0BF82A452F97F80C699F9D207127F34EEB261CF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IReadOnlyList_1_t9358DECEA3E357EDBDBA29CE97CA97FC5569817C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OculusRemoteControllerDefinition_t3D22BBCDBCD365FCCD1FD8EE1C6F4F86CFD32DF9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OculusTouchControllerDefinition_tC9642682696715D95E748D1705E01C287490FF99_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RuntimeObject_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SupportedControllerType_t5F457C64820CC9C7A23743C07FC033ABE19D72F9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TouchPhase_t7E9CEC3DD059E32F847242513BD6CE30866AB2A6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Type_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ViveKnucklesControllerDefinition_tA63DFCEBFAD95F32D30B544F68CC3280748FA912_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995AMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFDMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2CMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_UpdateController_mAAF4BF2FF4CF85429DF562F819FA9C18F7E29CEC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController__cctor_m501805257E2E3DCFD8DEBB0F110B202C400E42DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController__ctor_m362C0B541A088E9FD5A4E2CD7C1FD3DA337D80E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_DefaultInteractions_mF7D5A9668EF263061B29D96CE3FB9E06FD9041E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_DefaultLeftHandedInteractions_m4F855F6CE5291B2B2F68BD01F482BD6A6CD8830D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_DefaultRightHandedInteractions_mE208E11288D0A8371CB82B964AB2EA231D686560_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_LeftHandedLegacyInputSupport_mC877601AB4E6FB4C8585763415D9B108F26ACDE0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_LegacyInputSupport_mE9B90A08DCEDD43400BAB283EDBCC5DCFD90E0D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_PointerOffsetAngle_mF87BE6BF8E30F723FC0D94C7452E6C1A2413CDE1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_get_RightHandedLegacyInputSupport_mB083CBFF49B6A8EE2F3FA1D807C6ACA7C11AF3D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericJoystickController_set_PointerOffsetAngle_m5D4684EB9F6A170D2CF38F6FEC777F35E7C5404E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8EMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AECMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FDMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106AMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m25755E7CBE0BCCD43E32856AFE1EB8C34ABF6579_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m2AC9CA51EE6392725A4EE663ECA63B765AF4638D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m7E51D8A37DB3D824E9E174072CD0530BE6F413D9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m844CD9BA2E6C52967CA36908B2EA7739BF9CBC64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7EDMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52BMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052DMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_Description_mE13C0C1AA4390BBD2DC1CB5A21DDD4B05888EC6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_Id_mD6C2BC5B6E0DA6E5655456F21B8E897B9F12C358_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CDMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_InvertXAxis_m82A95CBB15419F0894BE53B7698F9C2D1C1689A3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_InvertYAxis_m68811F0F6DEA6C0505B0FEF2D20452B2B93E1930_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8BMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_RawData_m60D2461B4B1D8EF89B8B430F6470293502361646_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_InvertXAxis_m66647EA9D0FF68E5189025514D53E18D4AE33657_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_InvertYAxis_mF8A76F91E2D3E422595B730EC949C545F43C5DFA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_MixedRealityInputAction_m8C85B3C044B29D8A528BE7E5AD68B8756569C0BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_PositionData_mEF64ADE69D0B6C2F422B2BDD4B50C8C0FBAAB654_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_RawData_m6CA5CA0C86D7C7BF85DA28344C103C2BD750567F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_RotationData_mD0DC4F12389D7151DC896BCF83E5F844DF0C4C52_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityMouseInputProfile__ctor_m64B076AF4711BFC77189ED06F2B0721F73F08647_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568EMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_Initialize_m4BEB83AAE24CE49EF02D22D82D9A9AD6A5BF6E9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_Initialize_m57268FBA83339F35090660C3E4BCBAD24CBAB3CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData__ctor_m437897C23251E30E63BF38068E00AA84F160055B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_get_Count_mF11CED15B86C3B70B4871EE31CB9DB7EBCD8344A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CCMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715DMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile__ctor_m78D944E504E9115F169858270E34DE8947853B26_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_DebugDrawPointingRayColors_mB3501FB9EE13DABD03901321CFE11BA97E9E9205_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_DebugDrawPointingRays_m7BD92F80939DE0545AEC2643BC2E41A817A80551_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_GazeCursorPrefab_m0F87A5C3B69804A6DBA4C3B364FC944D4B22B630_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_GazeProviderType_mEDD757AE258E9D0C1D6EBD7DB85DA785909C5B34_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_IsEyeTrackingEnabled_m5679DF292107CBC1FF1080723BB6FEBB345D9D3A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PointerOptions_m51CAF7E0A62650F884B67C97B4FE98AAAD38200B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_UseHeadGazeOverride_m74C748C176CF1DD2093F974358298667C1A2CB27_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_set_GazeProviderType_m04992AE43FA50F472881769D5AAC9572C25F6D3C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_set_IsEyeTrackingEnabled_m88C1761B2AAA9E67E627FD2D7EA9E7D7C68CF3C3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547ADMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealitySpeechCommandsProfile__ctor_mD6870CB1D728304BA8CB1E2B125991AE5BD51F09_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealitySpeechCommandsProfile_get_SpeechCommands_m1BAA28B890C02DD8984C7FBA1EF1B905BDBAD6B9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealitySpeechCommandsProfile_get_SpeechRecognitionConfidenceLevel_mD07EC3F0C555F0635B714CC901BD1635C8F3609A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealitySpeechCommandsProfile_get_SpeechRecognizerStartBehavior_m8DB42B73900D75367BCCADE158634F41C237363A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseControllerDefinition_get_DefaultMappings_m7EF7ECB5F5503867EB09A3E4EA8082907919B866_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseController__cctor_mD2F02D905783BF807B093427BF0196A3BF29C6F8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseController_get_DefaultInteractions_m852788FAB995ED6BF7BC45D4963E40119302AA86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_Disable_m53B9DD07A43E4727524288D4D0379FAFECB82498_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_Enable_m9CBAE43364362D2389AEC1B0360CBE692CC7A664_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_Initialize_m35E86B0049510BF374BF2124D745BCE1722EB96C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_Update_mC81D420BA6FB5B3D59FCE8F4D9A375CBCDB24F92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager__cctor_m345E8A0EF1BB48043F646729526855AB1CFB52C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager__ctor_m6EB7FF7462475F9A9C2E158C93E665E7A7B1CF68_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16BMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_get_CursorSpeed_m07DD4EF9A30BE0ADB3512A31828FF6A72BA4DBA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_get_MouseInputProfile_m9AC02DC0078B74BCDC27A957EC41F3F7B054340E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_get_WheelSpeed_m10628B386DE10423D1D01706D64C3FB92CB65826_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OculusRemoteControllerDefinition__ctor_m96E71128286C34D5B4F11A794D8161F2CFD7EBE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OculusRemoteControllerDefinition_get_DefaultMappings_mA53721E2183AD2F31FC38098B764D603DE020440_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OculusTouchControllerDefinition__ctor_m9B8032ED418BABA305FA05EF88C2B0D9F060F9B7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OculusTouchControllerDefinition_get_DefaultLeftHandedMappings_m5917901468278FCE944079924D336FA35EE94D45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OculusTouchControllerDefinition_get_DefaultRightHandedMappings_m1D3BFC65AD861C7A7E48C55752E4CBE304765163_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90AMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEFMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimpleHandDefinition_get_DefaultMappings_m06E20C5986CCDF17622C785772E3F2FC6056D45A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_Initialize_m48195FDCEF647EDA8F7234F78309E11229C47590_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData__ctor_m22F7E9CFCD56B0DF9CDA1DE40A34C1142B945C51_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11AMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_Initialize_m13B54C1ABECBD301660C299F4BB63FC6780E0ABB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData__ctor_mB4E5D7BD3AB3D7158F659D63231CCD8D8A9CE0A5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_Confidence_mAD712C67AEA3766430BD3D6C987708D3809D158E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_PhraseDuration_mAF65ED068651949A4636D8BE436BC76CC298F408_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_PhraseStartTime_m6E06AC0E405E060918B1F24ED02FDC4644428AA3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEFMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0EMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SupportedControllerTypeExtensions_IsMaskSet_m5AF5B1AE6B2140DDA223AA06F7F64336B53C3A91_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TouchScreenDefinition_get_DefaultMappings_mFD52AB386376E58C4CB93E0975C5AAC7F716F0F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_Disable_m0FD46FBB69911D57D1C807D96F316C3DA60597F9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_GetActiveControllers_m0F3F99F4414281BB0131F41FF7A33D197D2951F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_GetCurrentControllerType_m81A64D49CD656F5C4F94800D0732E16CB5DBD6D1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_GetOrAddController_m2A788FF049103104D007F7C9018F4D9EB0C862A9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_RemoveController_m1F45A0CD261B3AE0BC040D7B90A280196F2A5601_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager_Update_m99D4BF6A93A272108DA1385BE10780DB6D28C403_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager__cctor_mB1ED339A9A8A01FEDED23C546C6617728BCD1C69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager__ctor_m4DDE66FDDE5DB1EE78F75A3882467E0B66ED337F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_SetupDefaultInteractions_m23A9AE8A93B27241041303B745FE57964DED5674_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController__cctor_m4DF64F0BA55F22DA58CAD86BF654C027694E2243_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0DMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_ScreenPointRay_mB8C75CA782463EB0AF62EBA1E7C4E9674B17C12D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_ManipulationThreshold_mC5D064139A6E5C1D3C9671707F1F239B270D003B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_MaxTapContactTime_mD21DB0072711AD637DCC28D89C4F4A811FEBE19B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1BMicrosoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924Microsoft_MixedReality_Toolkit3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager_Disable_m9A4855DD017F948DABF3FBDB5956B29788518549_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager_Update_m894F1B418C66E0079CCD7E34E5CDEA95BF56B226_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager__cctor_mFB0EDF5BD4D39B291147D32B25A232C0EA7DA280_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager__ctor_m6AC10B189F643EFCDC17DBB4B5A06112DF54F6C5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ViveKnucklesControllerDefinition__ctor_m3D93365EC1E071D9179C0D2CBD6D70CC5884551C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ViveKnucklesControllerDefinition_get_DefaultMappings_m2BB6A448979A36275E7C16DE212EF67E4250C899_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t XboxController__ctor_mEB26934DF010AB9131EE9E7CC6DBE3F86C42D573_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t XboxController_get_LegacyInputSupport_mFEE8C5627D4318DA4820607E4ADB84A028D7079C_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;
struct IResourceLoader_tFA2C0882D3054804485A5197EB0FED42387AD2EE;
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073;;
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com;
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com;;
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke;
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke;;

struct IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81;
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
struct MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874;
struct MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA;
struct MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C;
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA;
struct PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E;
struct SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3;
struct HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399;
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
struct TouchU5BU5D_t0207B72FD95EF1F56E7A6C9F0A42896B03D2BD5D;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

// Windows.ApplicationModel.Resources.IResourceLoaderFactory
struct NOVTABLE IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E : Il2CppIInspectable
{
	static const Il2CppGuid IID;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderFactory_U24__Stripped0_CreateResourceLoaderByName_m994EF64A3355E5AE6F0B1515B36D1C826B00CE19() = 0;
};
// Windows.ApplicationModel.Resources.IResourceLoaderStatics
struct NOVTABLE IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A : Il2CppIInspectable
{
	static const Il2CppGuid IID;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderStatics_U24__Stripped0_GetStringForReference_m62E62042027DB67B2B66C46660B7E4E227ADE969() = 0;
};
// Windows.ApplicationModel.Resources.IResourceLoaderStatics2
struct NOVTABLE IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300 : Il2CppIInspectable
{
	static const Il2CppGuid IID;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderStatics2_U24__Stripped0_GetForCurrentView_m52D01FAAA2CF9BF1A31635856E53DAA261455A17() = 0;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderStatics2_U24__Stripped1_GetForCurrentView_mFECC1614159C96056C280A17F6CCC826ACEB39CD() = 0;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderStatics2_GetForViewIndependentUse_m724E59EB59C57D5186FD40350214BB04AD4F536D(IResourceLoader_tFA2C0882D3054804485A5197EB0FED42387AD2EE** comReturnValue) = 0;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderStatics2_U24__Stripped2_GetForViewIndependentUse_m1842026052559FC886F4AE51D9189D603422C52E() = 0;
};
// Windows.ApplicationModel.Resources.IResourceLoaderStatics3
struct NOVTABLE IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA : Il2CppIInspectable
{
	static const Il2CppGuid IID;
	virtual il2cpp_hresult_t STDCALL IResourceLoaderStatics3_U24__Stripped0_GetForUIContext_m1A2F6246C693902B62F8C3CF80EEC7C119FA540F() = 0;
};

// Microsoft.MixedReality.Toolkit.Input.SupportedControllerTypeExtensions
struct SupportedControllerTypeExtensions_t6A826C9FACF76C73805AB7478B5BBA8CDD3EA273  : public RuntimeObject
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432  : public RuntimeObject
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Utilities.SystemType::reference
	String_t* ___reference_0;
	// System.Type Microsoft.MixedReality.Toolkit.Utilities.SystemType::type
	Type_t * ___type_1;

public:
	inline static int32_t get_offset_of_reference_0() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432, ___reference_0)); }
	inline String_t* get_reference_0() const { return ___reference_0; }
	inline String_t** get_address_of_reference_0() { return &___reference_0; }
	inline void set_reference_0(String_t* value)
	{
		___reference_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___reference_0), (void*)value);
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432, ___type_1)); }
	inline Type_t * get_type_1() const { return ___type_1; }
	inline Type_t ** get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(Type_t * value)
	{
		___type_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___type_1), (void*)value);
	}
};

struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_StaticFields
{
public:
	// System.Collections.Generic.Dictionary`2<System.String,System.String> Microsoft.MixedReality.Toolkit.Utilities.SystemType::ReferenceMappings
	Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * ___ReferenceMappings_2;

public:
	inline static int32_t get_offset_of_ReferenceMappings_2() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_StaticFields, ___ReferenceMappings_2)); }
	inline Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * get_ReferenceMappings_2() const { return ___ReferenceMappings_2; }
	inline Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC ** get_address_of_ReferenceMappings_2() { return &___ReferenceMappings_2; }
	inline void set_ReferenceMappings_2(Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * value)
	{
		___ReferenceMappings_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReferenceMappings_2), (void*)value);
	}
};

struct Il2CppArrayBounds;

// System.Array


// System.Attribute
struct Attribute_tF048C13FB3C8CFCC53F82290E4A3F621089F9A74  : public RuntimeObject
{
public:

public:
};


// System.Collections.Generic.Dictionary`2/ValueCollection<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A  : public RuntimeObject
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/ValueCollection::dictionary
	Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * ___dictionary_0;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A, ___dictionary_0)); }
	inline Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_t322D7F2D608789D10EA9F5D249486766CEB5EA7E* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_t4D0DEC682C837679425B9F9E509A1329A9D4DF4E * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_t50C21B3626D2E45FE6B5EA39D02B3789D50D5275 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___entries_1)); }
	inline EntryU5BU5D_t322D7F2D608789D10EA9F5D249486766CEB5EA7E* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_t322D7F2D608789D10EA9F5D249486766CEB5EA7E** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_t322D7F2D608789D10EA9F5D249486766CEB5EA7E* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___keys_7)); }
	inline KeyCollection_t4D0DEC682C837679425B9F9E509A1329A9D4DF4E * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_t4D0DEC682C837679425B9F9E509A1329A9D4DF4E ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_t4D0DEC682C837679425B9F9E509A1329A9D4DF4E * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ___values_8)); }
	inline ValueCollection_t50C21B3626D2E45FE6B5EA39D02B3789D50D5275 * get_values_8() const { return ___values_8; }
	inline ValueCollection_t50C21B3626D2E45FE6B5EA39D02B3789D50D5275 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_t50C21B3626D2E45FE6B5EA39D02B3789D50D5275 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_t01FE397A16E8B69EEAAC7B553B44F24D74F37E00* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_tD769D816A5DCA044A45E1397CE47F2EAE75AC006 * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___entries_1)); }
	inline EntryU5BU5D_t01FE397A16E8B69EEAAC7B553B44F24D74F37E00* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_t01FE397A16E8B69EEAAC7B553B44F24D74F37E00** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_t01FE397A16E8B69EEAAC7B553B44F24D74F37E00* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___keys_7)); }
	inline KeyCollection_tD769D816A5DCA044A45E1397CE47F2EAE75AC006 * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_tD769D816A5DCA044A45E1397CE47F2EAE75AC006 ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_tD769D816A5DCA044A45E1397CE47F2EAE75AC006 * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ___values_8)); }
	inline ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A * get_values_8() const { return ___values_8; }
	inline ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * ____siInfo_14;

public:
	inline static int32_t get_offset_of__buckets_7() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____buckets_7)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__buckets_7() const { return ____buckets_7; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__buckets_7() { return &____buckets_7; }
	inline void set__buckets_7(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____buckets_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____buckets_7), (void*)value);
	}

	inline static int32_t get_offset_of__slots_8() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____slots_8)); }
	inline SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* get__slots_8() const { return ____slots_8; }
	inline SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1** get_address_of__slots_8() { return &____slots_8; }
	inline void set__slots_8(SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* value)
	{
		____slots_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____slots_8), (void*)value);
	}

	inline static int32_t get_offset_of__count_9() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____count_9)); }
	inline int32_t get__count_9() const { return ____count_9; }
	inline int32_t* get_address_of__count_9() { return &____count_9; }
	inline void set__count_9(int32_t value)
	{
		____count_9 = value;
	}

	inline static int32_t get_offset_of__lastIndex_10() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____lastIndex_10)); }
	inline int32_t get__lastIndex_10() const { return ____lastIndex_10; }
	inline int32_t* get_address_of__lastIndex_10() { return &____lastIndex_10; }
	inline void set__lastIndex_10(int32_t value)
	{
		____lastIndex_10 = value;
	}

	inline static int32_t get_offset_of__freeList_11() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____freeList_11)); }
	inline int32_t get__freeList_11() const { return ____freeList_11; }
	inline int32_t* get_address_of__freeList_11() { return &____freeList_11; }
	inline void set__freeList_11(int32_t value)
	{
		____freeList_11 = value;
	}

	inline static int32_t get_offset_of__comparer_12() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____comparer_12)); }
	inline RuntimeObject* get__comparer_12() const { return ____comparer_12; }
	inline RuntimeObject** get_address_of__comparer_12() { return &____comparer_12; }
	inline void set__comparer_12(RuntimeObject* value)
	{
		____comparer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____comparer_12), (void*)value);
	}

	inline static int32_t get_offset_of__version_13() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____version_13)); }
	inline int32_t get__version_13() const { return ____version_13; }
	inline int32_t* get_address_of__version_13() { return &____version_13; }
	inline void set__version_13(int32_t value)
	{
		____version_13 = value;
	}

	inline static int32_t get_offset_of__siInfo_14() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____siInfo_14)); }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * get__siInfo_14() const { return ____siInfo_14; }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 ** get_address_of__siInfo_14() { return &____siInfo_14; }
	inline void set__siInfo_14(SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * value)
	{
		____siInfo_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____siInfo_14), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct List_1_t2A40CCD444FF66B1871D49626E273B4347465641  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t2A40CCD444FF66B1871D49626E273B4347465641, ____items_1)); }
	inline UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750* get__items_1() const { return ____items_1; }
	inline UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t2A40CCD444FF66B1871D49626E273B4347465641, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t2A40CCD444FF66B1871D49626E273B4347465641, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t2A40CCD444FF66B1871D49626E273B4347465641, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t2A40CCD444FF66B1871D49626E273B4347465641_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t2A40CCD444FF66B1871D49626E273B4347465641_StaticFields, ____emptyArray_5)); }
	inline UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750* get__emptyArray_5() const { return ____emptyArray_5; }
	inline UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(UnityTouchControllerU5BU5D_tD7A0A2739CF50B4D13BB78DD283E81012C0ED750* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____items_1)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__items_1() const { return ____items_1; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields, ____emptyArray_5)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.EmptyArray`1<Microsoft.MixedReality.Toolkit.Input.PointerOption>
struct EmptyArray_1_t9D6B26C61D63F2FB04A21B84D8E6B49B40C77F5E  : public RuntimeObject
{
public:

public:
};

struct EmptyArray_1_t9D6B26C61D63F2FB04A21B84D8E6B49B40C77F5E_StaticFields
{
public:
	// T[] System.EmptyArray`1::Value
	PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* ___Value_0;

public:
	inline static int32_t get_offset_of_Value_0() { return static_cast<int32_t>(offsetof(EmptyArray_1_t9D6B26C61D63F2FB04A21B84D8E6B49B40C77F5E_StaticFields, ___Value_0)); }
	inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* get_Value_0() const { return ___Value_0; }
	inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E** get_address_of_Value_0() { return &___Value_0; }
	inline void set_Value_0(PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* value)
	{
		___Value_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Value_0), (void*)value);
	}
};


// System.EmptyArray`1<Microsoft.MixedReality.Toolkit.Input.SpeechCommands>
struct EmptyArray_1_t7FBED657CACCBD55797E008928568C43768E418E  : public RuntimeObject
{
public:

public:
};

struct EmptyArray_1_t7FBED657CACCBD55797E008928568C43768E418E_StaticFields
{
public:
	// T[] System.EmptyArray`1::Value
	SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* ___Value_0;

public:
	inline static int32_t get_offset_of_Value_0() { return static_cast<int32_t>(offsetof(EmptyArray_1_t7FBED657CACCBD55797E008928568C43768E418E_StaticFields, ___Value_0)); }
	inline SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* get_Value_0() const { return ___Value_0; }
	inline SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3** get_address_of_Value_0() { return &___Value_0; }
	inline void set_Value_0(SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* value)
	{
		___Value_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Value_0), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// System.__Il2CppComObject


// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject* ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____set_0)); }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * get__set_0() const { return ____set_0; }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____current_3)); }
	inline RuntimeObject* get__current_3() const { return ____current_3; }
	inline RuntimeObject** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject* value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<System.Object>
struct Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject * ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____set_0)); }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * get__set_0() const { return ____set_0; }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____current_3)); }
	inline RuntimeObject * get__current_3() const { return ____current_3; }
	inline RuntimeObject ** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject * value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	int32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D, ___key_0)); }
	inline int32_t get_key_0() const { return ___key_0; }
	inline int32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(int32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D, ___value_1)); }
	inline UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * get_value_1() const { return ___value_1; }
	inline UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Int32,System.Object>
struct KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	int32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE, ___key_0)); }
	inline int32_t get_key_0() const { return ___key_0; }
	inline int32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(int32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE, ___value_1)); }
	inline RuntimeObject * get_value_1() const { return ___value_1; }
	inline RuntimeObject ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>
struct KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE, ___key_0)); }
	inline RuntimeObject * get_key_0() const { return ___key_0; }
	inline RuntimeObject ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE, ___value_1)); }
	inline RuntimeObject * get_value_1() const { return ___value_1; }
	inline RuntimeObject ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	String_t* ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A, ___key_0)); }
	inline String_t* get_key_0() const { return ___key_0; }
	inline String_t** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(String_t* value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A, ___value_1)); }
	inline GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * get_value_1() const { return ___value_1; }
	inline GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.Boolean>
struct Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 
{
public:
	// T System.Nullable`1::value
	bool ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___value_0)); }
	inline bool get_value_0() const { return ___value_0; }
	inline bool* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(bool value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<System.Int32>
struct Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB 
{
public:
	// T System.Nullable`1::value
	int32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB, ___value_0)); }
	inline int32_t get_value_0() const { return ___value_0; }
	inline int32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(int32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt16
struct UInt16_tAE45CEF73BF720100519F6867F32145D075F928E 
{
public:
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt16_tAE45CEF73BF720100519F6867F32145D075F928E, ___m_value_0)); }
	inline uint16_t get_m_value_0() const { return ___m_value_0; }
	inline uint16_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint16_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Color
struct Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 
{
public:
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.LayerMask
struct LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 
{
public:
	// System.Int32 UnityEngine.LayerMask::m_Mask
	int32_t ___m_Mask_0;

public:
	inline static int32_t get_offset_of_m_Mask_0() { return static_cast<int32_t>(offsetof(LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0, ___m_Mask_0)); }
	inline int32_t get_m_Mask_0() const { return ___m_Mask_0; }
	inline int32_t* get_address_of_m_Mask_0() { return &___m_Mask_0; }
	inline void set_m_Mask_0(int32_t value)
	{
		___m_Mask_0 = value;
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Windows.ApplicationModel.Resources.ResourceLoader
struct ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7  : public Il2CppComObject
{
public:

public:
};

struct ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7_StaticFields
{
public:
	// Cached pointer to IActivationFactory
	Il2CppIActivationFactory* activationFactory;
	// Cached pointer to Windows.ApplicationModel.Resources.IResourceLoaderFactory
	IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E* ____iresourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E;
	// Cached pointer to Windows.ApplicationModel.Resources.IResourceLoaderStatics
	IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A* ____iresourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A;
	// Cached pointer to Windows.ApplicationModel.Resources.IResourceLoaderStatics3
	IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA* ____iresourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA;
	// Cached pointer to Windows.ApplicationModel.Resources.IResourceLoaderStatics2
	IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300* ____iresourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300;

public:
	inline Il2CppIActivationFactory* get_activationFactory()
	{
		Il2CppIActivationFactory* returnValue = activationFactory;
		if (returnValue == NULL)
		{
			il2cpp::utils::StringView<Il2CppNativeChar> className(IL2CPP_NATIVE_STRING("Windows.ApplicationModel.Resources.ResourceLoader"));
			returnValue = il2cpp_codegen_windows_runtime_get_activation_factory(className);

			if (il2cpp_codegen_atomic_compare_exchange_pointer<Il2CppIActivationFactory>((&activationFactory), returnValue, NULL) != NULL)
			{
				returnValue->Release();
				returnValue = activationFactory;
			}
		}
		return returnValue;
	}

	inline IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E* get_____iresourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E()
	{
		IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E* returnValue = ____iresourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E;
		if (returnValue == NULL)
		{
			const il2cpp_hresult_t hr = get_activationFactory()->QueryInterface(IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E::IID, reinterpret_cast<void**>(&returnValue));
			il2cpp_codegen_com_raise_exception_if_failed(hr, false);

			if (il2cpp_codegen_atomic_compare_exchange_pointer<IResourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E>((&____iresourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E), returnValue, NULL) != NULL)
			{
				returnValue->Release();
				returnValue = ____iresourceLoaderFactory_tFDB61C80191FA536C86555AA1909B9A7730F3A0E;
			}
		}
		return returnValue;
	}

	inline IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A* get_____iresourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A()
	{
		IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A* returnValue = ____iresourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A;
		if (returnValue == NULL)
		{
			const il2cpp_hresult_t hr = get_activationFactory()->QueryInterface(IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A::IID, reinterpret_cast<void**>(&returnValue));
			il2cpp_codegen_com_raise_exception_if_failed(hr, false);

			if (il2cpp_codegen_atomic_compare_exchange_pointer<IResourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A>((&____iresourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A), returnValue, NULL) != NULL)
			{
				returnValue->Release();
				returnValue = ____iresourceLoaderStatics_t6F406ECDF06F7ADE5F5C6BAB81B14F4937CB662A;
			}
		}
		return returnValue;
	}

	inline IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA* get_____iresourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA()
	{
		IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA* returnValue = ____iresourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA;
		if (returnValue == NULL)
		{
			const il2cpp_hresult_t hr = get_activationFactory()->QueryInterface(IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA::IID, reinterpret_cast<void**>(&returnValue));
			il2cpp_codegen_com_raise_exception_if_failed(hr, false);

			if (il2cpp_codegen_atomic_compare_exchange_pointer<IResourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA>((&____iresourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA), returnValue, NULL) != NULL)
			{
				returnValue->Release();
				returnValue = ____iresourceLoaderStatics3_tAB9CB861DDE786F340258AF37CD2EE9BF56C2ABA;
			}
		}
		return returnValue;
	}

	inline IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300* get_____iresourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300()
	{
		IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300* returnValue = ____iresourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300;
		if (returnValue == NULL)
		{
			const il2cpp_hresult_t hr = get_activationFactory()->QueryInterface(IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300::IID, reinterpret_cast<void**>(&returnValue));
			il2cpp_codegen_com_raise_exception_if_failed(hr, false);

			if (il2cpp_codegen_atomic_compare_exchange_pointer<IResourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300>((&____iresourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300), returnValue, NULL) != NULL)
			{
				returnValue->Release();
				returnValue = ____iresourceLoaderStatics2_t31E7B90156F59AC0E18E8325A17005842E44B300;
			}
		}
		return returnValue;
	}
};


// Microsoft.MixedReality.Toolkit.BaseService
struct BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10  : public RuntimeObject
{
public:
	// System.String Microsoft.MixedReality.Toolkit.BaseService::<Name>k__BackingField
	String_t* ___U3CNameU3Ek__BackingField_1;
	// System.UInt32 Microsoft.MixedReality.Toolkit.BaseService::<Priority>k__BackingField
	uint32_t ___U3CPriorityU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile Microsoft.MixedReality.Toolkit.BaseService::<ConfigurationProfile>k__BackingField
	BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___U3CConfigurationProfileU3Ek__BackingField_3;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.BaseService::isInitialized
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___isInitialized_4;
	// System.String[] Microsoft.MixedReality.Toolkit.BaseService::typeName
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___typeName_5;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.BaseService::isEnabled
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___isEnabled_9;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.BaseService::isMarkedDestroyed
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___isMarkedDestroyed_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseService::disposed
	bool ___disposed_11;

public:
	inline static int32_t get_offset_of_U3CNameU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___U3CNameU3Ek__BackingField_1)); }
	inline String_t* get_U3CNameU3Ek__BackingField_1() const { return ___U3CNameU3Ek__BackingField_1; }
	inline String_t** get_address_of_U3CNameU3Ek__BackingField_1() { return &___U3CNameU3Ek__BackingField_1; }
	inline void set_U3CNameU3Ek__BackingField_1(String_t* value)
	{
		___U3CNameU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNameU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPriorityU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___U3CPriorityU3Ek__BackingField_2)); }
	inline uint32_t get_U3CPriorityU3Ek__BackingField_2() const { return ___U3CPriorityU3Ek__BackingField_2; }
	inline uint32_t* get_address_of_U3CPriorityU3Ek__BackingField_2() { return &___U3CPriorityU3Ek__BackingField_2; }
	inline void set_U3CPriorityU3Ek__BackingField_2(uint32_t value)
	{
		___U3CPriorityU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CConfigurationProfileU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___U3CConfigurationProfileU3Ek__BackingField_3)); }
	inline BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * get_U3CConfigurationProfileU3Ek__BackingField_3() const { return ___U3CConfigurationProfileU3Ek__BackingField_3; }
	inline BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 ** get_address_of_U3CConfigurationProfileU3Ek__BackingField_3() { return &___U3CConfigurationProfileU3Ek__BackingField_3; }
	inline void set_U3CConfigurationProfileU3Ek__BackingField_3(BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * value)
	{
		___U3CConfigurationProfileU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CConfigurationProfileU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_isInitialized_4() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___isInitialized_4)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_isInitialized_4() const { return ___isInitialized_4; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_isInitialized_4() { return &___isInitialized_4; }
	inline void set_isInitialized_4(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___isInitialized_4 = value;
	}

	inline static int32_t get_offset_of_typeName_5() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___typeName_5)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_typeName_5() const { return ___typeName_5; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_typeName_5() { return &___typeName_5; }
	inline void set_typeName_5(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___typeName_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___typeName_5), (void*)value);
	}

	inline static int32_t get_offset_of_isEnabled_9() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___isEnabled_9)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_isEnabled_9() const { return ___isEnabled_9; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_isEnabled_9() { return &___isEnabled_9; }
	inline void set_isEnabled_9(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___isEnabled_9 = value;
	}

	inline static int32_t get_offset_of_isMarkedDestroyed_10() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___isMarkedDestroyed_10)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_isMarkedDestroyed_10() const { return ___isMarkedDestroyed_10; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_isMarkedDestroyed_10() { return &___isMarkedDestroyed_10; }
	inline void set_isMarkedDestroyed_10(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___isMarkedDestroyed_10 = value;
	}

	inline static int32_t get_offset_of_disposed_11() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___disposed_11)); }
	inline bool get_disposed_11() const { return ___disposed_11; }
	inline bool* get_address_of_disposed_11() { return &___disposed_11; }
	inline void set_disposed_11(bool value)
	{
		___disposed_11 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.DeviceInputType
struct DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.DeviceInputType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GestureInputType
struct GestureInputType_tE0BF82A452F97F80C699F9D207127F34EEB261CF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.GestureInputType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(GestureInputType_tE0BF82A452F97F80C699F9D207127F34EEB261CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSourceType
struct InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.InputSourceType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerConfigurationFlags
struct MixedRealityControllerConfigurationFlags_t1EF36CE4DE08EDBA4EBD31A1C37AC605C3F693A3 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerConfigurationFlags::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(MixedRealityControllerConfigurationFlags_t1EF36CE4DE08EDBA4EBD31A1C37AC605C3F693A3, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::barycentricCoordinate
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::distance
	float ___distance_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::triangleIndex
	int32_t ___triangleIndex_4;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord2
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::lightmapCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::raycastValid
	bool ___raycastValid_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::collider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;

public:
	inline static int32_t get_offset_of_point_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_point_0() const { return ___point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_point_0() { return &___point_0; }
	inline void set_point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___point_0 = value;
	}

	inline static int32_t get_offset_of_normal_1() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_normal_1() const { return ___normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_normal_1() { return &___normal_1; }
	inline void set_normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___normal_1 = value;
	}

	inline static int32_t get_offset_of_barycentricCoordinate_2() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___barycentricCoordinate_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_barycentricCoordinate_2() const { return ___barycentricCoordinate_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_barycentricCoordinate_2() { return &___barycentricCoordinate_2; }
	inline void set_barycentricCoordinate_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___barycentricCoordinate_2 = value;
	}

	inline static int32_t get_offset_of_distance_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___distance_3)); }
	inline float get_distance_3() const { return ___distance_3; }
	inline float* get_address_of_distance_3() { return &___distance_3; }
	inline void set_distance_3(float value)
	{
		___distance_3 = value;
	}

	inline static int32_t get_offset_of_triangleIndex_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___triangleIndex_4)); }
	inline int32_t get_triangleIndex_4() const { return ___triangleIndex_4; }
	inline int32_t* get_address_of_triangleIndex_4() { return &___triangleIndex_4; }
	inline void set_triangleIndex_4(int32_t value)
	{
		___triangleIndex_4 = value;
	}

	inline static int32_t get_offset_of_textureCoord_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord_5() const { return ___textureCoord_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord_5() { return &___textureCoord_5; }
	inline void set_textureCoord_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord_5 = value;
	}

	inline static int32_t get_offset_of_textureCoord2_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord2_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord2_6() const { return ___textureCoord2_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord2_6() { return &___textureCoord2_6; }
	inline void set_textureCoord2_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord2_6 = value;
	}

	inline static int32_t get_offset_of_transform_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___transform_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_7() const { return ___transform_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_7() { return &___transform_7; }
	inline void set_transform_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_7), (void*)value);
	}

	inline static int32_t get_offset_of_lightmapCoord_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___lightmapCoord_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lightmapCoord_8() const { return ___lightmapCoord_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lightmapCoord_8() { return &___lightmapCoord_8; }
	inline void set_lightmapCoord_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lightmapCoord_8 = value;
	}

	inline static int32_t get_offset_of_raycastValid_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___raycastValid_9)); }
	inline bool get_raycastValid_9() const { return ___raycastValid_9; }
	inline bool* get_address_of_raycastValid_9() { return &___raycastValid_9; }
	inline void set_raycastValid_9(bool value)
	{
		___raycastValid_9 = value;
	}

	inline static int32_t get_offset_of_collider_10() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___collider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_collider_10() const { return ___collider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_collider_10() { return &___collider_10; }
	inline void set_collider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___collider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___collider_10), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};

// Microsoft.MixedReality.Toolkit.Input.PointerBehavior
struct PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerBehavior::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SupportedControllerType
struct SupportedControllerType_t5F457C64820CC9C7A23743C07FC033ABE19D72F9 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.SupportedControllerType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SupportedControllerType_t5F457C64820CC9C7A23743C07FC033ABE19D72F9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.TouchableEventType
struct TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.TouchableEventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.TrackingState
struct TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.TrackingState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior
struct AutoStartBehavior_t9BBC9C0AE47250C9034F4B386E2D1C6BA21D5839 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AutoStartBehavior_t9BBC9C0AE47250C9034F4B386E2D1C6BA21D5839, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel
struct RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.SupportedUnityXRPipelines
struct SupportedUnityXRPipelines_t49611CB52FD74C7E752975C1DDE0DF47F7712A86 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.SupportedUnityXRPipelines::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SupportedUnityXRPipelines_t49611CB52FD74C7E752975C1DDE0DF47F7712A86, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings
struct WindowsGestureSettings_t1876E81B36888DFF13EDC8D13F0509B5253DD430 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(WindowsGestureSettings_t1876E81B36888DFF13EDC8D13F0509B5253DD430, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>
struct Enumerator_t302202D6382013588B561A500FF7B594704FCCDA 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t302202D6382013588B561A500FF7B594704FCCDA, ___dictionary_0)); }
	inline Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t302202D6382013588B561A500FF7B594704FCCDA, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t302202D6382013588B561A500FF7B594704FCCDA, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t302202D6382013588B561A500FF7B594704FCCDA, ___current_3)); }
	inline KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t302202D6382013588B561A500FF7B594704FCCDA, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Object>
struct Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF, ___dictionary_0)); }
	inline Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF, ___current_3)); }
	inline KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>
struct Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___dictionary_0)); }
	inline Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___current_3)); }
	inline KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___key_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>
struct Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011, ___dictionary_0)); }
	inline Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011, ___current_3)); }
	inline KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___key_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.TimeSpan
struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 
{
public:
	// System.Int64 System.TimeSpan::_ticks
	int64_t ____ticks_3;

public:
	inline static int32_t get_offset_of__ticks_3() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4, ____ticks_3)); }
	inline int64_t get__ticks_3() const { return ____ticks_3; }
	inline int64_t* get_address_of__ticks_3() { return &____ticks_3; }
	inline void set__ticks_3(int64_t value)
	{
		____ticks_3 = value;
	}
};

struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields
{
public:
	// System.TimeSpan System.TimeSpan::Zero
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___Zero_0;
	// System.TimeSpan System.TimeSpan::MaxValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MaxValue_1;
	// System.TimeSpan System.TimeSpan::MinValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MinValue_2;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyConfigChecked
	bool ____legacyConfigChecked_4;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyMode
	bool ____legacyMode_5;

public:
	inline static int32_t get_offset_of_Zero_0() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___Zero_0)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_Zero_0() const { return ___Zero_0; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_Zero_0() { return &___Zero_0; }
	inline void set_Zero_0(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___Zero_0 = value;
	}

	inline static int32_t get_offset_of_MaxValue_1() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MaxValue_1)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MaxValue_1() const { return ___MaxValue_1; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MaxValue_1() { return &___MaxValue_1; }
	inline void set_MaxValue_1(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MaxValue_1 = value;
	}

	inline static int32_t get_offset_of_MinValue_2() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MinValue_2)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MinValue_2() const { return ___MinValue_2; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MinValue_2() { return &___MinValue_2; }
	inline void set_MinValue_2(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MinValue_2 = value;
	}

	inline static int32_t get_offset_of__legacyConfigChecked_4() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyConfigChecked_4)); }
	inline bool get__legacyConfigChecked_4() const { return ____legacyConfigChecked_4; }
	inline bool* get_address_of__legacyConfigChecked_4() { return &____legacyConfigChecked_4; }
	inline void set__legacyConfigChecked_4(bool value)
	{
		____legacyConfigChecked_4 = value;
	}

	inline static int32_t get_offset_of__legacyMode_5() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyMode_5)); }
	inline bool get__legacyMode_5() const { return ____legacyMode_5; }
	inline bool* get_address_of__legacyMode_5() { return &____legacyMode_5; }
	inline void set__legacyMode_5(bool value)
	{
		____legacyMode_5 = value;
	}
};


// Unity.Profiling.ProfilerMarker
struct ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// Unity.Profiling.ProfilerMarker/AutoScope
struct AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker/AutoScope::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// UnityEngine.KeyCode
struct KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C 
{
public:
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.Ray
struct Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 
{
public:
	// UnityEngine.Vector3 UnityEngine.Ray::m_Origin
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Origin_0;
	// UnityEngine.Vector3 UnityEngine.Ray::m_Direction
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Direction_1;

public:
	inline static int32_t get_offset_of_m_Origin_0() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Origin_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Origin_0() const { return ___m_Origin_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Origin_0() { return &___m_Origin_0; }
	inline void set_m_Origin_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Origin_0 = value;
	}

	inline static int32_t get_offset_of_m_Direction_1() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Direction_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Direction_1() const { return ___m_Direction_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Direction_1() { return &___m_Direction_1; }
	inline void set_m_Direction_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Direction_1 = value;
	}
};


// UnityEngine.RaycastHit
struct RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 
{
public:
	// UnityEngine.Vector3 UnityEngine.RaycastHit::m_Point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Point_0;
	// UnityEngine.Vector3 UnityEngine.RaycastHit::m_Normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Normal_1;
	// System.UInt32 UnityEngine.RaycastHit::m_FaceID
	uint32_t ___m_FaceID_2;
	// System.Single UnityEngine.RaycastHit::m_Distance
	float ___m_Distance_3;
	// UnityEngine.Vector2 UnityEngine.RaycastHit::m_UV
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___m_UV_4;
	// System.Int32 UnityEngine.RaycastHit::m_Collider
	int32_t ___m_Collider_5;

public:
	inline static int32_t get_offset_of_m_Point_0() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Point_0() const { return ___m_Point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Point_0() { return &___m_Point_0; }
	inline void set_m_Point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Point_0 = value;
	}

	inline static int32_t get_offset_of_m_Normal_1() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Normal_1() const { return ___m_Normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Normal_1() { return &___m_Normal_1; }
	inline void set_m_Normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Normal_1 = value;
	}

	inline static int32_t get_offset_of_m_FaceID_2() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_FaceID_2)); }
	inline uint32_t get_m_FaceID_2() const { return ___m_FaceID_2; }
	inline uint32_t* get_address_of_m_FaceID_2() { return &___m_FaceID_2; }
	inline void set_m_FaceID_2(uint32_t value)
	{
		___m_FaceID_2 = value;
	}

	inline static int32_t get_offset_of_m_Distance_3() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Distance_3)); }
	inline float get_m_Distance_3() const { return ___m_Distance_3; }
	inline float* get_address_of_m_Distance_3() { return &___m_Distance_3; }
	inline void set_m_Distance_3(float value)
	{
		___m_Distance_3 = value;
	}

	inline static int32_t get_offset_of_m_UV_4() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_UV_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_m_UV_4() const { return ___m_UV_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_m_UV_4() { return &___m_UV_4; }
	inline void set_m_UV_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___m_UV_4 = value;
	}

	inline static int32_t get_offset_of_m_Collider_5() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Collider_5)); }
	inline int32_t get_m_Collider_5() const { return ___m_Collider_5; }
	inline int32_t* get_address_of_m_Collider_5() { return &___m_Collider_5; }
	inline void set_m_Collider_5(int32_t value)
	{
		___m_Collider_5 = value;
	}
};


// UnityEngine.Rendering.VertexAttribute
struct VertexAttribute_t2D79DF64001C55DA72AC86CE8946098970E8194D 
{
public:
	// System.Int32 UnityEngine.Rendering.VertexAttribute::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VertexAttribute_t2D79DF64001C55DA72AC86CE8946098970E8194D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.TouchPhase
struct TouchPhase_t7E9CEC3DD059E32F847242513BD6CE30866AB2A6 
{
public:
	// System.Int32 UnityEngine.TouchPhase::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TouchPhase_t7E9CEC3DD059E32F847242513BD6CE30866AB2A6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.TouchType
struct TouchType_tBBD83025576FC017B10484014B5C396613A02B8E 
{
public:
	// System.Int32 UnityEngine.TouchType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TouchType_tBBD83025576FC017B10484014B5C396613A02B8E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.BaseDataProvider`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem>
struct BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966  : public BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10
{
public:
	// Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar Microsoft.MixedReality.Toolkit.BaseDataProvider`1::<Registrar>k__BackingField
	RuntimeObject* ___U3CRegistrarU3Ek__BackingField_12;
	// T Microsoft.MixedReality.Toolkit.BaseDataProvider`1::<Service>k__BackingField
	RuntimeObject* ___U3CServiceU3Ek__BackingField_13;

public:
	inline static int32_t get_offset_of_U3CRegistrarU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966, ___U3CRegistrarU3Ek__BackingField_12)); }
	inline RuntimeObject* get_U3CRegistrarU3Ek__BackingField_12() const { return ___U3CRegistrarU3Ek__BackingField_12; }
	inline RuntimeObject** get_address_of_U3CRegistrarU3Ek__BackingField_12() { return &___U3CRegistrarU3Ek__BackingField_12; }
	inline void set_U3CRegistrarU3Ek__BackingField_12(RuntimeObject* value)
	{
		___U3CRegistrarU3Ek__BackingField_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRegistrarU3Ek__BackingField_12), (void*)value);
	}

	inline static int32_t get_offset_of_U3CServiceU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966, ___U3CServiceU3Ek__BackingField_13)); }
	inline RuntimeObject* get_U3CServiceU3Ek__BackingField_13() const { return ___U3CServiceU3Ek__BackingField_13; }
	inline RuntimeObject** get_address_of_U3CServiceU3Ek__BackingField_13() { return &___U3CServiceU3Ek__BackingField_13; }
	inline void set_U3CServiceU3Ek__BackingField_13(RuntimeObject* value)
	{
		___U3CServiceU3Ek__BackingField_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CServiceU3Ek__BackingField_13), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.BaseDataProvider`1<System.Object>
struct BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278  : public BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10
{
public:
	// Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar Microsoft.MixedReality.Toolkit.BaseDataProvider`1::<Registrar>k__BackingField
	RuntimeObject* ___U3CRegistrarU3Ek__BackingField_12;
	// T Microsoft.MixedReality.Toolkit.BaseDataProvider`1::<Service>k__BackingField
	RuntimeObject * ___U3CServiceU3Ek__BackingField_13;

public:
	inline static int32_t get_offset_of_U3CRegistrarU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278, ___U3CRegistrarU3Ek__BackingField_12)); }
	inline RuntimeObject* get_U3CRegistrarU3Ek__BackingField_12() const { return ___U3CRegistrarU3Ek__BackingField_12; }
	inline RuntimeObject** get_address_of_U3CRegistrarU3Ek__BackingField_12() { return &___U3CRegistrarU3Ek__BackingField_12; }
	inline void set_U3CRegistrarU3Ek__BackingField_12(RuntimeObject* value)
	{
		___U3CRegistrarU3Ek__BackingField_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRegistrarU3Ek__BackingField_12), (void*)value);
	}

	inline static int32_t get_offset_of_U3CServiceU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278, ___U3CServiceU3Ek__BackingField_13)); }
	inline RuntimeObject * get_U3CServiceU3Ek__BackingField_13() const { return ___U3CServiceU3Ek__BackingField_13; }
	inline RuntimeObject ** get_address_of_U3CServiceU3Ek__BackingField_13() { return &___U3CServiceU3Ek__BackingField_13; }
	inline void set_U3CServiceU3Ek__BackingField_13(RuntimeObject * value)
	{
		___U3CServiceU3Ek__BackingField_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CServiceU3Ek__BackingField_13), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseController
struct BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition Microsoft.MixedReality.Toolkit.Input.BaseController::<Definition>k__BackingField
	RuntimeObject* ___U3CDefinitionU3Ek__BackingField_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<Enabled>k__BackingField
	bool ___U3CEnabledU3Ek__BackingField_1;
	// Microsoft.MixedReality.Toolkit.TrackingState Microsoft.MixedReality.Toolkit.Input.BaseController::<TrackingState>k__BackingField
	int32_t ___U3CTrackingStateU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.BaseController::<ControllerHandedness>k__BackingField
	uint8_t ___U3CControllerHandednessU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseController::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_4;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityControllerVisualizer Microsoft.MixedReality.Toolkit.Input.BaseController::<Visualizer>k__BackingField
	RuntimeObject* ___U3CVisualizerU3Ek__BackingField_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<IsPositionAvailable>k__BackingField
	bool ___U3CIsPositionAvailableU3Ek__BackingField_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<IsPositionApproximate>k__BackingField
	bool ___U3CIsPositionApproximateU3Ek__BackingField_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<IsRotationAvailable>k__BackingField
	bool ___U3CIsRotationAvailableU3Ek__BackingField_8;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.BaseController::<Interactions>k__BackingField
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___U3CInteractionsU3Ek__BackingField_9;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseController::<AngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CAngularVelocityU3Ek__BackingField_10;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseController::<Velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CVelocityU3Ek__BackingField_11;

public:
	inline static int32_t get_offset_of_U3CDefinitionU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CDefinitionU3Ek__BackingField_0)); }
	inline RuntimeObject* get_U3CDefinitionU3Ek__BackingField_0() const { return ___U3CDefinitionU3Ek__BackingField_0; }
	inline RuntimeObject** get_address_of_U3CDefinitionU3Ek__BackingField_0() { return &___U3CDefinitionU3Ek__BackingField_0; }
	inline void set_U3CDefinitionU3Ek__BackingField_0(RuntimeObject* value)
	{
		___U3CDefinitionU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CDefinitionU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CEnabledU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CEnabledU3Ek__BackingField_1)); }
	inline bool get_U3CEnabledU3Ek__BackingField_1() const { return ___U3CEnabledU3Ek__BackingField_1; }
	inline bool* get_address_of_U3CEnabledU3Ek__BackingField_1() { return &___U3CEnabledU3Ek__BackingField_1; }
	inline void set_U3CEnabledU3Ek__BackingField_1(bool value)
	{
		___U3CEnabledU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CTrackingStateU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CTrackingStateU3Ek__BackingField_2)); }
	inline int32_t get_U3CTrackingStateU3Ek__BackingField_2() const { return ___U3CTrackingStateU3Ek__BackingField_2; }
	inline int32_t* get_address_of_U3CTrackingStateU3Ek__BackingField_2() { return &___U3CTrackingStateU3Ek__BackingField_2; }
	inline void set_U3CTrackingStateU3Ek__BackingField_2(int32_t value)
	{
		___U3CTrackingStateU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CControllerHandednessU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CControllerHandednessU3Ek__BackingField_3)); }
	inline uint8_t get_U3CControllerHandednessU3Ek__BackingField_3() const { return ___U3CControllerHandednessU3Ek__BackingField_3; }
	inline uint8_t* get_address_of_U3CControllerHandednessU3Ek__BackingField_3() { return &___U3CControllerHandednessU3Ek__BackingField_3; }
	inline void set_U3CControllerHandednessU3Ek__BackingField_3(uint8_t value)
	{
		___U3CControllerHandednessU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CInputSourceU3Ek__BackingField_4)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_4() const { return ___U3CInputSourceU3Ek__BackingField_4; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_4() { return &___U3CInputSourceU3Ek__BackingField_4; }
	inline void set_U3CInputSourceU3Ek__BackingField_4(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CVisualizerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CVisualizerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CVisualizerU3Ek__BackingField_5() const { return ___U3CVisualizerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CVisualizerU3Ek__BackingField_5() { return &___U3CVisualizerU3Ek__BackingField_5; }
	inline void set_U3CVisualizerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CVisualizerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CVisualizerU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsPositionAvailableU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CIsPositionAvailableU3Ek__BackingField_6)); }
	inline bool get_U3CIsPositionAvailableU3Ek__BackingField_6() const { return ___U3CIsPositionAvailableU3Ek__BackingField_6; }
	inline bool* get_address_of_U3CIsPositionAvailableU3Ek__BackingField_6() { return &___U3CIsPositionAvailableU3Ek__BackingField_6; }
	inline void set_U3CIsPositionAvailableU3Ek__BackingField_6(bool value)
	{
		___U3CIsPositionAvailableU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CIsPositionApproximateU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CIsPositionApproximateU3Ek__BackingField_7)); }
	inline bool get_U3CIsPositionApproximateU3Ek__BackingField_7() const { return ___U3CIsPositionApproximateU3Ek__BackingField_7; }
	inline bool* get_address_of_U3CIsPositionApproximateU3Ek__BackingField_7() { return &___U3CIsPositionApproximateU3Ek__BackingField_7; }
	inline void set_U3CIsPositionApproximateU3Ek__BackingField_7(bool value)
	{
		___U3CIsPositionApproximateU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_U3CIsRotationAvailableU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CIsRotationAvailableU3Ek__BackingField_8)); }
	inline bool get_U3CIsRotationAvailableU3Ek__BackingField_8() const { return ___U3CIsRotationAvailableU3Ek__BackingField_8; }
	inline bool* get_address_of_U3CIsRotationAvailableU3Ek__BackingField_8() { return &___U3CIsRotationAvailableU3Ek__BackingField_8; }
	inline void set_U3CIsRotationAvailableU3Ek__BackingField_8(bool value)
	{
		___U3CIsRotationAvailableU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_U3CInteractionsU3Ek__BackingField_9() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CInteractionsU3Ek__BackingField_9)); }
	inline MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* get_U3CInteractionsU3Ek__BackingField_9() const { return ___U3CInteractionsU3Ek__BackingField_9; }
	inline MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA** get_address_of_U3CInteractionsU3Ek__BackingField_9() { return &___U3CInteractionsU3Ek__BackingField_9; }
	inline void set_U3CInteractionsU3Ek__BackingField_9(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* value)
	{
		___U3CInteractionsU3Ek__BackingField_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInteractionsU3Ek__BackingField_9), (void*)value);
	}

	inline static int32_t get_offset_of_U3CAngularVelocityU3Ek__BackingField_10() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CAngularVelocityU3Ek__BackingField_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CAngularVelocityU3Ek__BackingField_10() const { return ___U3CAngularVelocityU3Ek__BackingField_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CAngularVelocityU3Ek__BackingField_10() { return &___U3CAngularVelocityU3Ek__BackingField_10; }
	inline void set_U3CAngularVelocityU3Ek__BackingField_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CAngularVelocityU3Ek__BackingField_10 = value;
	}

	inline static int32_t get_offset_of_U3CVelocityU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CVelocityU3Ek__BackingField_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CVelocityU3Ek__BackingField_11() const { return ___U3CVelocityU3Ek__BackingField_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CVelocityU3Ek__BackingField_11() { return &___U3CVelocityU3Ek__BackingField_11; }
	inline void set_U3CVelocityU3Ek__BackingField_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CVelocityU3Ek__BackingField_11 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputSourceDefinition
struct BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.BaseInputSourceDefinition::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6, ___U3CHandednessU3Ek__BackingField_0)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_0() const { return ___U3CHandednessU3Ek__BackingField_0; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_0() { return &___U3CHandednessU3Ek__BackingField_0; }
	inline void set_U3CHandednessU3Ek__BackingField_0(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute
struct MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D  : public Attribute_tF048C13FB3C8CFCC53F82290E4A3F621089F9A74
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SupportedControllerType Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::<SupportedControllerType>k__BackingField
	int32_t ___U3CSupportedControllerTypeU3Ek__BackingField_0;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness[] Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::<SupportedHandedness>k__BackingField
	HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* ___U3CSupportedHandednessU3Ek__BackingField_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::<TexturePath>k__BackingField
	String_t* ___U3CTexturePathU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerConfigurationFlags Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::<Flags>k__BackingField
	uint8_t ___U3CFlagsU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Utilities.SupportedUnityXRPipelines Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::<SupportedUnityXRPipelines>k__BackingField
	int32_t ___U3CSupportedUnityXRPipelinesU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CSupportedControllerTypeU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D, ___U3CSupportedControllerTypeU3Ek__BackingField_0)); }
	inline int32_t get_U3CSupportedControllerTypeU3Ek__BackingField_0() const { return ___U3CSupportedControllerTypeU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CSupportedControllerTypeU3Ek__BackingField_0() { return &___U3CSupportedControllerTypeU3Ek__BackingField_0; }
	inline void set_U3CSupportedControllerTypeU3Ek__BackingField_0(int32_t value)
	{
		___U3CSupportedControllerTypeU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CSupportedHandednessU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D, ___U3CSupportedHandednessU3Ek__BackingField_1)); }
	inline HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* get_U3CSupportedHandednessU3Ek__BackingField_1() const { return ___U3CSupportedHandednessU3Ek__BackingField_1; }
	inline HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B** get_address_of_U3CSupportedHandednessU3Ek__BackingField_1() { return &___U3CSupportedHandednessU3Ek__BackingField_1; }
	inline void set_U3CSupportedHandednessU3Ek__BackingField_1(HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* value)
	{
		___U3CSupportedHandednessU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CSupportedHandednessU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CTexturePathU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D, ___U3CTexturePathU3Ek__BackingField_2)); }
	inline String_t* get_U3CTexturePathU3Ek__BackingField_2() const { return ___U3CTexturePathU3Ek__BackingField_2; }
	inline String_t** get_address_of_U3CTexturePathU3Ek__BackingField_2() { return &___U3CTexturePathU3Ek__BackingField_2; }
	inline void set_U3CTexturePathU3Ek__BackingField_2(String_t* value)
	{
		___U3CTexturePathU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CTexturePathU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CFlagsU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D, ___U3CFlagsU3Ek__BackingField_3)); }
	inline uint8_t get_U3CFlagsU3Ek__BackingField_3() const { return ___U3CFlagsU3Ek__BackingField_3; }
	inline uint8_t* get_address_of_U3CFlagsU3Ek__BackingField_3() { return &___U3CFlagsU3Ek__BackingField_3; }
	inline void set_U3CFlagsU3Ek__BackingField_3(uint8_t value)
	{
		___U3CFlagsU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CSupportedUnityXRPipelinesU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D, ___U3CSupportedUnityXRPipelinesU3Ek__BackingField_4)); }
	inline int32_t get_U3CSupportedUnityXRPipelinesU3Ek__BackingField_4() const { return ___U3CSupportedUnityXRPipelinesU3Ek__BackingField_4; }
	inline int32_t* get_address_of_U3CSupportedUnityXRPipelinesU3Ek__BackingField_4() { return &___U3CSupportedUnityXRPipelinesU3Ek__BackingField_4; }
	inline void set_U3CSupportedUnityXRPipelinesU3Ek__BackingField_4(int32_t value)
	{
		___U3CSupportedUnityXRPipelinesU3Ek__BackingField_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
struct MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 
{
public:
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::<KeyCode>k__BackingField
	int32_t ___U3CKeyCodeU3Ek__BackingField_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::<AxisCodeX>k__BackingField
	String_t* ___U3CAxisCodeXU3Ek__BackingField_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::<AxisCodeY>k__BackingField
	String_t* ___U3CAxisCodeYU3Ek__BackingField_2;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::<InvertXAxis>k__BackingField
	bool ___U3CInvertXAxisU3Ek__BackingField_3;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::<InvertYAxis>k__BackingField
	bool ___U3CInvertYAxisU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CKeyCodeU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146, ___U3CKeyCodeU3Ek__BackingField_0)); }
	inline int32_t get_U3CKeyCodeU3Ek__BackingField_0() const { return ___U3CKeyCodeU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CKeyCodeU3Ek__BackingField_0() { return &___U3CKeyCodeU3Ek__BackingField_0; }
	inline void set_U3CKeyCodeU3Ek__BackingField_0(int32_t value)
	{
		___U3CKeyCodeU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CAxisCodeXU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146, ___U3CAxisCodeXU3Ek__BackingField_1)); }
	inline String_t* get_U3CAxisCodeXU3Ek__BackingField_1() const { return ___U3CAxisCodeXU3Ek__BackingField_1; }
	inline String_t** get_address_of_U3CAxisCodeXU3Ek__BackingField_1() { return &___U3CAxisCodeXU3Ek__BackingField_1; }
	inline void set_U3CAxisCodeXU3Ek__BackingField_1(String_t* value)
	{
		___U3CAxisCodeXU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CAxisCodeXU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CAxisCodeYU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146, ___U3CAxisCodeYU3Ek__BackingField_2)); }
	inline String_t* get_U3CAxisCodeYU3Ek__BackingField_2() const { return ___U3CAxisCodeYU3Ek__BackingField_2; }
	inline String_t** get_address_of_U3CAxisCodeYU3Ek__BackingField_2() { return &___U3CAxisCodeYU3Ek__BackingField_2; }
	inline void set_U3CAxisCodeYU3Ek__BackingField_2(String_t* value)
	{
		___U3CAxisCodeYU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CAxisCodeYU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CInvertXAxisU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146, ___U3CInvertXAxisU3Ek__BackingField_3)); }
	inline bool get_U3CInvertXAxisU3Ek__BackingField_3() const { return ___U3CInvertXAxisU3Ek__BackingField_3; }
	inline bool* get_address_of_U3CInvertXAxisU3Ek__BackingField_3() { return &___U3CInvertXAxisU3Ek__BackingField_3; }
	inline void set_U3CInvertXAxisU3Ek__BackingField_3(bool value)
	{
		___U3CInvertXAxisU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CInvertYAxisU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146, ___U3CInvertYAxisU3Ek__BackingField_4)); }
	inline bool get_U3CInvertYAxisU3Ek__BackingField_4() const { return ___U3CInvertYAxisU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CInvertYAxisU3Ek__BackingField_4() { return &___U3CInvertYAxisU3Ek__BackingField_4; }
	inline void set_U3CInvertYAxisU3Ek__BackingField_4(bool value)
	{
		___U3CInvertYAxisU3Ek__BackingField_4 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
struct MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_pinvoke
{
	int32_t ___U3CKeyCodeU3Ek__BackingField_0;
	char* ___U3CAxisCodeXU3Ek__BackingField_1;
	char* ___U3CAxisCodeYU3Ek__BackingField_2;
	int32_t ___U3CInvertXAxisU3Ek__BackingField_3;
	int32_t ___U3CInvertYAxisU3Ek__BackingField_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
struct MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_com
{
	int32_t ___U3CKeyCodeU3Ek__BackingField_0;
	Il2CppChar* ___U3CAxisCodeXU3Ek__BackingField_1;
	Il2CppChar* ___U3CAxisCodeYU3Ek__BackingField_2;
	int32_t ___U3CInvertXAxisU3Ek__BackingField_3;
	int32_t ___U3CInvertYAxisU3Ek__BackingField_4;
};

// Microsoft.MixedReality.Toolkit.Input.PointerOption
struct PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SupportedControllerType Microsoft.MixedReality.Toolkit.Input.PointerOption::controllerType
	int32_t ___controllerType_0;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.PointerOption::handedness
	uint8_t ___handedness_1;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PointerOption::pointerPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointerPrefab_2;

public:
	inline static int32_t get_offset_of_controllerType_0() { return static_cast<int32_t>(offsetof(PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109, ___controllerType_0)); }
	inline int32_t get_controllerType_0() const { return ___controllerType_0; }
	inline int32_t* get_address_of_controllerType_0() { return &___controllerType_0; }
	inline void set_controllerType_0(int32_t value)
	{
		___controllerType_0 = value;
	}

	inline static int32_t get_offset_of_handedness_1() { return static_cast<int32_t>(offsetof(PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109, ___handedness_1)); }
	inline uint8_t get_handedness_1() const { return ___handedness_1; }
	inline uint8_t* get_address_of_handedness_1() { return &___handedness_1; }
	inline void set_handedness_1(uint8_t value)
	{
		___handedness_1 = value;
	}

	inline static int32_t get_offset_of_pointerPrefab_2() { return static_cast<int32_t>(offsetof(PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109, ___pointerPrefab_2)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_pointerPrefab_2() const { return ___pointerPrefab_2; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_pointerPrefab_2() { return &___pointerPrefab_2; }
	inline void set_pointerPrefab_2(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___pointerPrefab_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerPrefab_2), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.PointerOption
struct PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_pinvoke
{
	int32_t ___controllerType_0;
	uint8_t ___handedness_1;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointerPrefab_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.PointerOption
struct PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_com
{
	int32_t ___controllerType_0;
	uint8_t ___handedness_1;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointerPrefab_2;
};

// Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster
struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F  : public RuntimeObject
{
public:

public:
};

struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::DebugEnabled
	bool ___DebugEnabled_0;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___RaycastHits_3;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::SphereCastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___SphereCastHits_4;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSimplePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSimplePhysicsStepPerfMarker_5;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastBoxPhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastBoxPhysicsStepPerfMarker_6;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSpherePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSpherePhysicsStepPerfMarker_7;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::TryGetPrioritizedPhysicsHitPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetPrioritizedPhysicsHitPerfMarker_8;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastPlanePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastPlanePhysicsStepPerfMarker_9;

public:
	inline static int32_t get_offset_of_DebugEnabled_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___DebugEnabled_0)); }
	inline bool get_DebugEnabled_0() const { return ___DebugEnabled_0; }
	inline bool* get_address_of_DebugEnabled_0() { return &___DebugEnabled_0; }
	inline void set_DebugEnabled_0(bool value)
	{
		___DebugEnabled_0 = value;
	}

	inline static int32_t get_offset_of_RaycastHits_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastHits_3)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_RaycastHits_3() const { return ___RaycastHits_3; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_RaycastHits_3() { return &___RaycastHits_3; }
	inline void set_RaycastHits_3(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___RaycastHits_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RaycastHits_3), (void*)value);
	}

	inline static int32_t get_offset_of_SphereCastHits_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___SphereCastHits_4)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_SphereCastHits_4() const { return ___SphereCastHits_4; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_SphereCastHits_4() { return &___SphereCastHits_4; }
	inline void set_SphereCastHits_4(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___SphereCastHits_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SphereCastHits_4), (void*)value);
	}

	inline static int32_t get_offset_of_RaycastSimplePhysicsStepPerfMarker_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSimplePhysicsStepPerfMarker_5)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSimplePhysicsStepPerfMarker_5() const { return ___RaycastSimplePhysicsStepPerfMarker_5; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSimplePhysicsStepPerfMarker_5() { return &___RaycastSimplePhysicsStepPerfMarker_5; }
	inline void set_RaycastSimplePhysicsStepPerfMarker_5(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSimplePhysicsStepPerfMarker_5 = value;
	}

	inline static int32_t get_offset_of_RaycastBoxPhysicsStepPerfMarker_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastBoxPhysicsStepPerfMarker_6)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastBoxPhysicsStepPerfMarker_6() const { return ___RaycastBoxPhysicsStepPerfMarker_6; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastBoxPhysicsStepPerfMarker_6() { return &___RaycastBoxPhysicsStepPerfMarker_6; }
	inline void set_RaycastBoxPhysicsStepPerfMarker_6(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastBoxPhysicsStepPerfMarker_6 = value;
	}

	inline static int32_t get_offset_of_RaycastSpherePhysicsStepPerfMarker_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSpherePhysicsStepPerfMarker_7)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSpherePhysicsStepPerfMarker_7() const { return ___RaycastSpherePhysicsStepPerfMarker_7; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSpherePhysicsStepPerfMarker_7() { return &___RaycastSpherePhysicsStepPerfMarker_7; }
	inline void set_RaycastSpherePhysicsStepPerfMarker_7(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSpherePhysicsStepPerfMarker_7 = value;
	}

	inline static int32_t get_offset_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___TryGetPrioritizedPhysicsHitPerfMarker_8)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetPrioritizedPhysicsHitPerfMarker_8() const { return ___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return &___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline void set_TryGetPrioritizedPhysicsHitPerfMarker_8(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetPrioritizedPhysicsHitPerfMarker_8 = value;
	}

	inline static int32_t get_offset_of_RaycastPlanePhysicsStepPerfMarker_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastPlanePhysicsStepPerfMarker_9)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastPlanePhysicsStepPerfMarker_9() const { return ___RaycastPlanePhysicsStepPerfMarker_9; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastPlanePhysicsStepPerfMarker_9() { return &___RaycastPlanePhysicsStepPerfMarker_9; }
	inline void set_RaycastPlanePhysicsStepPerfMarker_9(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastPlanePhysicsStepPerfMarker_9 = value;
	}
};


// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.SystemException
struct SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_pinvoke : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_com : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
};

// UnityEngine.Touch
struct Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 
{
public:
	// System.Int32 UnityEngine.Touch::m_FingerId
	int32_t ___m_FingerId_0;
	// UnityEngine.Vector2 UnityEngine.Touch::m_Position
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___m_Position_1;
	// UnityEngine.Vector2 UnityEngine.Touch::m_RawPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___m_RawPosition_2;
	// UnityEngine.Vector2 UnityEngine.Touch::m_PositionDelta
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___m_PositionDelta_3;
	// System.Single UnityEngine.Touch::m_TimeDelta
	float ___m_TimeDelta_4;
	// System.Int32 UnityEngine.Touch::m_TapCount
	int32_t ___m_TapCount_5;
	// UnityEngine.TouchPhase UnityEngine.Touch::m_Phase
	int32_t ___m_Phase_6;
	// UnityEngine.TouchType UnityEngine.Touch::m_Type
	int32_t ___m_Type_7;
	// System.Single UnityEngine.Touch::m_Pressure
	float ___m_Pressure_8;
	// System.Single UnityEngine.Touch::m_maximumPossiblePressure
	float ___m_maximumPossiblePressure_9;
	// System.Single UnityEngine.Touch::m_Radius
	float ___m_Radius_10;
	// System.Single UnityEngine.Touch::m_RadiusVariance
	float ___m_RadiusVariance_11;
	// System.Single UnityEngine.Touch::m_AltitudeAngle
	float ___m_AltitudeAngle_12;
	// System.Single UnityEngine.Touch::m_AzimuthAngle
	float ___m_AzimuthAngle_13;

public:
	inline static int32_t get_offset_of_m_FingerId_0() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_FingerId_0)); }
	inline int32_t get_m_FingerId_0() const { return ___m_FingerId_0; }
	inline int32_t* get_address_of_m_FingerId_0() { return &___m_FingerId_0; }
	inline void set_m_FingerId_0(int32_t value)
	{
		___m_FingerId_0 = value;
	}

	inline static int32_t get_offset_of_m_Position_1() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_Position_1)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_m_Position_1() const { return ___m_Position_1; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_m_Position_1() { return &___m_Position_1; }
	inline void set_m_Position_1(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___m_Position_1 = value;
	}

	inline static int32_t get_offset_of_m_RawPosition_2() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_RawPosition_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_m_RawPosition_2() const { return ___m_RawPosition_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_m_RawPosition_2() { return &___m_RawPosition_2; }
	inline void set_m_RawPosition_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___m_RawPosition_2 = value;
	}

	inline static int32_t get_offset_of_m_PositionDelta_3() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_PositionDelta_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_m_PositionDelta_3() const { return ___m_PositionDelta_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_m_PositionDelta_3() { return &___m_PositionDelta_3; }
	inline void set_m_PositionDelta_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___m_PositionDelta_3 = value;
	}

	inline static int32_t get_offset_of_m_TimeDelta_4() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_TimeDelta_4)); }
	inline float get_m_TimeDelta_4() const { return ___m_TimeDelta_4; }
	inline float* get_address_of_m_TimeDelta_4() { return &___m_TimeDelta_4; }
	inline void set_m_TimeDelta_4(float value)
	{
		___m_TimeDelta_4 = value;
	}

	inline static int32_t get_offset_of_m_TapCount_5() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_TapCount_5)); }
	inline int32_t get_m_TapCount_5() const { return ___m_TapCount_5; }
	inline int32_t* get_address_of_m_TapCount_5() { return &___m_TapCount_5; }
	inline void set_m_TapCount_5(int32_t value)
	{
		___m_TapCount_5 = value;
	}

	inline static int32_t get_offset_of_m_Phase_6() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_Phase_6)); }
	inline int32_t get_m_Phase_6() const { return ___m_Phase_6; }
	inline int32_t* get_address_of_m_Phase_6() { return &___m_Phase_6; }
	inline void set_m_Phase_6(int32_t value)
	{
		___m_Phase_6 = value;
	}

	inline static int32_t get_offset_of_m_Type_7() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_Type_7)); }
	inline int32_t get_m_Type_7() const { return ___m_Type_7; }
	inline int32_t* get_address_of_m_Type_7() { return &___m_Type_7; }
	inline void set_m_Type_7(int32_t value)
	{
		___m_Type_7 = value;
	}

	inline static int32_t get_offset_of_m_Pressure_8() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_Pressure_8)); }
	inline float get_m_Pressure_8() const { return ___m_Pressure_8; }
	inline float* get_address_of_m_Pressure_8() { return &___m_Pressure_8; }
	inline void set_m_Pressure_8(float value)
	{
		___m_Pressure_8 = value;
	}

	inline static int32_t get_offset_of_m_maximumPossiblePressure_9() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_maximumPossiblePressure_9)); }
	inline float get_m_maximumPossiblePressure_9() const { return ___m_maximumPossiblePressure_9; }
	inline float* get_address_of_m_maximumPossiblePressure_9() { return &___m_maximumPossiblePressure_9; }
	inline void set_m_maximumPossiblePressure_9(float value)
	{
		___m_maximumPossiblePressure_9 = value;
	}

	inline static int32_t get_offset_of_m_Radius_10() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_Radius_10)); }
	inline float get_m_Radius_10() const { return ___m_Radius_10; }
	inline float* get_address_of_m_Radius_10() { return &___m_Radius_10; }
	inline void set_m_Radius_10(float value)
	{
		___m_Radius_10 = value;
	}

	inline static int32_t get_offset_of_m_RadiusVariance_11() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_RadiusVariance_11)); }
	inline float get_m_RadiusVariance_11() const { return ___m_RadiusVariance_11; }
	inline float* get_address_of_m_RadiusVariance_11() { return &___m_RadiusVariance_11; }
	inline void set_m_RadiusVariance_11(float value)
	{
		___m_RadiusVariance_11 = value;
	}

	inline static int32_t get_offset_of_m_AltitudeAngle_12() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_AltitudeAngle_12)); }
	inline float get_m_AltitudeAngle_12() const { return ___m_AltitudeAngle_12; }
	inline float* get_address_of_m_AltitudeAngle_12() { return &___m_AltitudeAngle_12; }
	inline void set_m_AltitudeAngle_12(float value)
	{
		___m_AltitudeAngle_12 = value;
	}

	inline static int32_t get_offset_of_m_AzimuthAngle_13() { return static_cast<int32_t>(offsetof(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8, ___m_AzimuthAngle_13)); }
	inline float get_m_AzimuthAngle_13() const { return ___m_AzimuthAngle_13; }
	inline float* get_address_of_m_AzimuthAngle_13() { return &___m_AzimuthAngle_13; }
	inline void set_m_AzimuthAngle_13(float value)
	{
		___m_AzimuthAngle_13 = value;
	}
};


// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile
struct BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile::isCustomProfile
	bool ___isCustomProfile_4;

public:
	inline static int32_t get_offset_of_isCustomProfile_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8, ___isCustomProfile_4)); }
	inline bool get_isCustomProfile_4() const { return ___isCustomProfile_4; }
	inline bool* get_address_of_isCustomProfile_4() { return &___isCustomProfile_4; }
	inline void set_isCustomProfile_4(bool value)
	{
		___isCustomProfile_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager
struct BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC  : public BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::enablePointerCache
	bool ___enablePointerCache_14;
	// Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager/PointerConfig[] Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::pointerConfigurations
	PointerConfigU5BU5D_tFF5D750ACD5998A5994F9B8EF58BCAA5F563B386* ___pointerConfigurations_15;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,System.UInt32> Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::activePointersToConfig
	Dictionary_2_t96750716FF4F33B66CBE19A55C531D33FD8A0EA8 * ___activePointersToConfig_17;

public:
	inline static int32_t get_offset_of_enablePointerCache_14() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC, ___enablePointerCache_14)); }
	inline bool get_enablePointerCache_14() const { return ___enablePointerCache_14; }
	inline bool* get_address_of_enablePointerCache_14() { return &___enablePointerCache_14; }
	inline void set_enablePointerCache_14(bool value)
	{
		___enablePointerCache_14 = value;
	}

	inline static int32_t get_offset_of_pointerConfigurations_15() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC, ___pointerConfigurations_15)); }
	inline PointerConfigU5BU5D_tFF5D750ACD5998A5994F9B8EF58BCAA5F563B386* get_pointerConfigurations_15() const { return ___pointerConfigurations_15; }
	inline PointerConfigU5BU5D_tFF5D750ACD5998A5994F9B8EF58BCAA5F563B386** get_address_of_pointerConfigurations_15() { return &___pointerConfigurations_15; }
	inline void set_pointerConfigurations_15(PointerConfigU5BU5D_tFF5D750ACD5998A5994F9B8EF58BCAA5F563B386* value)
	{
		___pointerConfigurations_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerConfigurations_15), (void*)value);
	}

	inline static int32_t get_offset_of_activePointersToConfig_17() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC, ___activePointersToConfig_17)); }
	inline Dictionary_2_t96750716FF4F33B66CBE19A55C531D33FD8A0EA8 * get_activePointersToConfig_17() const { return ___activePointersToConfig_17; }
	inline Dictionary_2_t96750716FF4F33B66CBE19A55C531D33FD8A0EA8 ** get_address_of_activePointersToConfig_17() { return &___activePointersToConfig_17; }
	inline void set_activePointersToConfig_17(Dictionary_2_t96750716FF4F33B66CBE19A55C531D33FD8A0EA8 * value)
	{
		___activePointersToConfig_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___activePointersToConfig_17), (void*)value);
	}
};

struct BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::RequestPointersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RequestPointersPerfMarker_16;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::RecyclePointersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RecyclePointersPerfMarker_18;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::CreatePointerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___CreatePointerPerfMarker_19;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::CleanActivePointersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___CleanActivePointersPerfMarker_20;

public:
	inline static int32_t get_offset_of_RequestPointersPerfMarker_16() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_StaticFields, ___RequestPointersPerfMarker_16)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RequestPointersPerfMarker_16() const { return ___RequestPointersPerfMarker_16; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RequestPointersPerfMarker_16() { return &___RequestPointersPerfMarker_16; }
	inline void set_RequestPointersPerfMarker_16(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RequestPointersPerfMarker_16 = value;
	}

	inline static int32_t get_offset_of_RecyclePointersPerfMarker_18() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_StaticFields, ___RecyclePointersPerfMarker_18)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RecyclePointersPerfMarker_18() const { return ___RecyclePointersPerfMarker_18; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RecyclePointersPerfMarker_18() { return &___RecyclePointersPerfMarker_18; }
	inline void set_RecyclePointersPerfMarker_18(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RecyclePointersPerfMarker_18 = value;
	}

	inline static int32_t get_offset_of_CreatePointerPerfMarker_19() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_StaticFields, ___CreatePointerPerfMarker_19)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_CreatePointerPerfMarker_19() const { return ___CreatePointerPerfMarker_19; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_CreatePointerPerfMarker_19() { return &___CreatePointerPerfMarker_19; }
	inline void set_CreatePointerPerfMarker_19(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___CreatePointerPerfMarker_19 = value;
	}

	inline static int32_t get_offset_of_CleanActivePointersPerfMarker_20() { return static_cast<int32_t>(offsetof(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_StaticFields, ___CleanActivePointersPerfMarker_20)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_CleanActivePointersPerfMarker_20() const { return ___CleanActivePointersPerfMarker_20; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_CleanActivePointersPerfMarker_20() { return &___CleanActivePointersPerfMarker_20; }
	inline void set_CleanActivePointersPerfMarker_20(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___CleanActivePointersPerfMarker_20 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping
struct MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::description
	String_t* ___description_0;
	// Microsoft.MixedReality.Toolkit.Input.GestureInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::gestureType
	int32_t ___gestureType_1;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_2;

public:
	inline static int32_t get_offset_of_description_0() { return static_cast<int32_t>(offsetof(MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074, ___description_0)); }
	inline String_t* get_description_0() const { return ___description_0; }
	inline String_t** get_address_of_description_0() { return &___description_0; }
	inline void set_description_0(String_t* value)
	{
		___description_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_0), (void*)value);
	}

	inline static int32_t get_offset_of_gestureType_1() { return static_cast<int32_t>(offsetof(MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074, ___gestureType_1)); }
	inline int32_t get_gestureType_1() const { return ___gestureType_1; }
	inline int32_t* get_address_of_gestureType_1() { return &___gestureType_1; }
	inline void set_gestureType_1(int32_t value)
	{
		___gestureType_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074, ___action_2)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_2() const { return ___action_2; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_2))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping
struct MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074_marshaled_pinvoke
{
	char* ___description_0;
	int32_t ___gestureType_1;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping
struct MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074_marshaled_com
{
	Il2CppChar* ___description_0;
	int32_t ___gestureType_1;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_2;
};

// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping
struct MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044  : public RuntimeObject
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::description
	String_t* ___description_0;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::axisType
	int32_t ___axisType_1;
	// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::inputType
	int32_t ___inputType_2;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::inputAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction_3;

public:
	inline static int32_t get_offset_of_description_0() { return static_cast<int32_t>(offsetof(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044, ___description_0)); }
	inline String_t* get_description_0() const { return ___description_0; }
	inline String_t** get_address_of_description_0() { return &___description_0; }
	inline void set_description_0(String_t* value)
	{
		___description_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_0), (void*)value);
	}

	inline static int32_t get_offset_of_axisType_1() { return static_cast<int32_t>(offsetof(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044, ___axisType_1)); }
	inline int32_t get_axisType_1() const { return ___axisType_1; }
	inline int32_t* get_address_of_axisType_1() { return &___axisType_1; }
	inline void set_axisType_1(int32_t value)
	{
		___axisType_1 = value;
	}

	inline static int32_t get_offset_of_inputType_2() { return static_cast<int32_t>(offsetof(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044, ___inputType_2)); }
	inline int32_t get_inputType_2() const { return ___inputType_2; }
	inline int32_t* get_address_of_inputType_2() { return &___inputType_2; }
	inline void set_inputType_2(int32_t value)
	{
		___inputType_2 = value;
	}

	inline static int32_t get_offset_of_inputAction_3() { return static_cast<int32_t>(offsetof(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044, ___inputAction_3)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_inputAction_3() const { return ___inputAction_3; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_inputAction_3() { return &___inputAction_3; }
	inline void set_inputAction_3(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___inputAction_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___inputAction_3))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping
struct MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2  : public RuntimeObject
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::id
	uint32_t ___id_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::description
	String_t* ___description_1;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisType
	int32_t ___axisType_2;
	// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::inputType
	int32_t ___inputType_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::inputAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction_4;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::keyCode
	int32_t ___keyCode_5;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisCodeX
	String_t* ___axisCodeX_6;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisCodeY
	String_t* ___axisCodeY_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::invertXAxis
	bool ___invertXAxis_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::invertYAxis
	bool ___invertYAxis_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::changed
	bool ___changed_10;
	// System.Object Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::rawData
	RuntimeObject * ___rawData_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::boolData
	bool ___boolData_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::floatData
	float ___floatData_13;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::vector2Data
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___vector2Data_14;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::positionData
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positionData_15;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::rotationData
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotationData_16;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::poseData
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___poseData_17;

public:
	inline static int32_t get_offset_of_id_0() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___id_0)); }
	inline uint32_t get_id_0() const { return ___id_0; }
	inline uint32_t* get_address_of_id_0() { return &___id_0; }
	inline void set_id_0(uint32_t value)
	{
		___id_0 = value;
	}

	inline static int32_t get_offset_of_description_1() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___description_1)); }
	inline String_t* get_description_1() const { return ___description_1; }
	inline String_t** get_address_of_description_1() { return &___description_1; }
	inline void set_description_1(String_t* value)
	{
		___description_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_1), (void*)value);
	}

	inline static int32_t get_offset_of_axisType_2() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisType_2)); }
	inline int32_t get_axisType_2() const { return ___axisType_2; }
	inline int32_t* get_address_of_axisType_2() { return &___axisType_2; }
	inline void set_axisType_2(int32_t value)
	{
		___axisType_2 = value;
	}

	inline static int32_t get_offset_of_inputType_3() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___inputType_3)); }
	inline int32_t get_inputType_3() const { return ___inputType_3; }
	inline int32_t* get_address_of_inputType_3() { return &___inputType_3; }
	inline void set_inputType_3(int32_t value)
	{
		___inputType_3 = value;
	}

	inline static int32_t get_offset_of_inputAction_4() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___inputAction_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_inputAction_4() const { return ___inputAction_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_inputAction_4() { return &___inputAction_4; }
	inline void set_inputAction_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___inputAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___inputAction_4))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_keyCode_5() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___keyCode_5)); }
	inline int32_t get_keyCode_5() const { return ___keyCode_5; }
	inline int32_t* get_address_of_keyCode_5() { return &___keyCode_5; }
	inline void set_keyCode_5(int32_t value)
	{
		___keyCode_5 = value;
	}

	inline static int32_t get_offset_of_axisCodeX_6() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisCodeX_6)); }
	inline String_t* get_axisCodeX_6() const { return ___axisCodeX_6; }
	inline String_t** get_address_of_axisCodeX_6() { return &___axisCodeX_6; }
	inline void set_axisCodeX_6(String_t* value)
	{
		___axisCodeX_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___axisCodeX_6), (void*)value);
	}

	inline static int32_t get_offset_of_axisCodeY_7() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisCodeY_7)); }
	inline String_t* get_axisCodeY_7() const { return ___axisCodeY_7; }
	inline String_t** get_address_of_axisCodeY_7() { return &___axisCodeY_7; }
	inline void set_axisCodeY_7(String_t* value)
	{
		___axisCodeY_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___axisCodeY_7), (void*)value);
	}

	inline static int32_t get_offset_of_invertXAxis_8() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___invertXAxis_8)); }
	inline bool get_invertXAxis_8() const { return ___invertXAxis_8; }
	inline bool* get_address_of_invertXAxis_8() { return &___invertXAxis_8; }
	inline void set_invertXAxis_8(bool value)
	{
		___invertXAxis_8 = value;
	}

	inline static int32_t get_offset_of_invertYAxis_9() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___invertYAxis_9)); }
	inline bool get_invertYAxis_9() const { return ___invertYAxis_9; }
	inline bool* get_address_of_invertYAxis_9() { return &___invertYAxis_9; }
	inline void set_invertYAxis_9(bool value)
	{
		___invertYAxis_9 = value;
	}

	inline static int32_t get_offset_of_changed_10() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___changed_10)); }
	inline bool get_changed_10() const { return ___changed_10; }
	inline bool* get_address_of_changed_10() { return &___changed_10; }
	inline void set_changed_10(bool value)
	{
		___changed_10 = value;
	}

	inline static int32_t get_offset_of_rawData_11() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___rawData_11)); }
	inline RuntimeObject * get_rawData_11() const { return ___rawData_11; }
	inline RuntimeObject ** get_address_of_rawData_11() { return &___rawData_11; }
	inline void set_rawData_11(RuntimeObject * value)
	{
		___rawData_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawData_11), (void*)value);
	}

	inline static int32_t get_offset_of_boolData_12() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___boolData_12)); }
	inline bool get_boolData_12() const { return ___boolData_12; }
	inline bool* get_address_of_boolData_12() { return &___boolData_12; }
	inline void set_boolData_12(bool value)
	{
		___boolData_12 = value;
	}

	inline static int32_t get_offset_of_floatData_13() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___floatData_13)); }
	inline float get_floatData_13() const { return ___floatData_13; }
	inline float* get_address_of_floatData_13() { return &___floatData_13; }
	inline void set_floatData_13(float value)
	{
		___floatData_13 = value;
	}

	inline static int32_t get_offset_of_vector2Data_14() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___vector2Data_14)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_vector2Data_14() const { return ___vector2Data_14; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_vector2Data_14() { return &___vector2Data_14; }
	inline void set_vector2Data_14(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___vector2Data_14 = value;
	}

	inline static int32_t get_offset_of_positionData_15() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___positionData_15)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positionData_15() const { return ___positionData_15; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positionData_15() { return &___positionData_15; }
	inline void set_positionData_15(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positionData_15 = value;
	}

	inline static int32_t get_offset_of_rotationData_16() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___rotationData_16)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotationData_16() const { return ___rotationData_16; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotationData_16() { return &___rotationData_16; }
	inline void set_rotationData_16(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotationData_16 = value;
	}

	inline static int32_t get_offset_of_poseData_17() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___poseData_17)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_poseData_17() const { return ___poseData_17; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_poseData_17() { return &___poseData_17; }
	inline void set_poseData_17(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___poseData_17 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MouseControllerDefinition
struct MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.OculusRemoteControllerDefinition
struct OculusRemoteControllerDefinition_t3D22BBCDBCD365FCCD1FD8EE1C6F4F86CFD32DF9  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.OculusTouchControllerDefinition
struct OculusTouchControllerDefinition_tC9642682696715D95E748D1705E01C287490FF99  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler
struct PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0  : public MulticastDelegate_t
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition
struct SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizationKey
	String_t* ___localizationKey_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizedKeyword
	String_t* ___localizedKeyword_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyword
	String_t* ___keyword_2;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyCode
	int32_t ___keyCode_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_4;

public:
	inline static int32_t get_offset_of_localizationKey_0() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizationKey_0)); }
	inline String_t* get_localizationKey_0() const { return ___localizationKey_0; }
	inline String_t** get_address_of_localizationKey_0() { return &___localizationKey_0; }
	inline void set_localizationKey_0(String_t* value)
	{
		___localizationKey_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizationKey_0), (void*)value);
	}

	inline static int32_t get_offset_of_localizedKeyword_1() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizedKeyword_1)); }
	inline String_t* get_localizedKeyword_1() const { return ___localizedKeyword_1; }
	inline String_t** get_address_of_localizedKeyword_1() { return &___localizedKeyword_1; }
	inline void set_localizedKeyword_1(String_t* value)
	{
		___localizedKeyword_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizedKeyword_1), (void*)value);
	}

	inline static int32_t get_offset_of_keyword_2() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyword_2)); }
	inline String_t* get_keyword_2() const { return ___keyword_2; }
	inline String_t** get_address_of_keyword_2() { return &___keyword_2; }
	inline void set_keyword_2(String_t* value)
	{
		___keyword_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keyword_2), (void*)value);
	}

	inline static int32_t get_offset_of_keyCode_3() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyCode_3)); }
	inline int32_t get_keyCode_3() const { return ___keyCode_3; }
	inline int32_t* get_address_of_keyCode_3() { return &___keyCode_3; }
	inline void set_keyCode_3(int32_t value)
	{
		___keyCode_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___action_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_4() const { return ___action_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_4))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke
{
	char* ___localizationKey_0;
	char* ___localizedKeyword_1;
	char* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com
{
	Il2CppChar* ___localizationKey_0;
	Il2CppChar* ___localizedKeyword_1;
	Il2CppChar* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_4;
};

// Microsoft.MixedReality.Toolkit.Input.TouchScreenDefinition
struct TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController
struct GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845  : public BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::<PointerOffsetAngle>k__BackingField
	float ___U3CPointerOffsetAngleU3Ek__BackingField_12;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::dualAxisPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___dualAxisPosition_13;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::pointerOffsetPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___pointerOffsetPose_14;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::CurrentControllerPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___CurrentControllerPosition_15;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::CurrentControllerRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___CurrentControllerRotation_16;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::LastControllerPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___LastControllerPose_17;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::CurrentControllerPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___CurrentControllerPose_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::<LegacyInputSupport>k__BackingField
	MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___U3CLegacyInputSupportU3Ek__BackingField_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::<LeftHandedLegacyInputSupport>k__BackingField
	MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::<RightHandedLegacyInputSupport>k__BackingField
	MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___U3CRightHandedLegacyInputSupportU3Ek__BackingField_21;

public:
	inline static int32_t get_offset_of_U3CPointerOffsetAngleU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___U3CPointerOffsetAngleU3Ek__BackingField_12)); }
	inline float get_U3CPointerOffsetAngleU3Ek__BackingField_12() const { return ___U3CPointerOffsetAngleU3Ek__BackingField_12; }
	inline float* get_address_of_U3CPointerOffsetAngleU3Ek__BackingField_12() { return &___U3CPointerOffsetAngleU3Ek__BackingField_12; }
	inline void set_U3CPointerOffsetAngleU3Ek__BackingField_12(float value)
	{
		___U3CPointerOffsetAngleU3Ek__BackingField_12 = value;
	}

	inline static int32_t get_offset_of_dualAxisPosition_13() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___dualAxisPosition_13)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_dualAxisPosition_13() const { return ___dualAxisPosition_13; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_dualAxisPosition_13() { return &___dualAxisPosition_13; }
	inline void set_dualAxisPosition_13(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___dualAxisPosition_13 = value;
	}

	inline static int32_t get_offset_of_pointerOffsetPose_14() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___pointerOffsetPose_14)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_pointerOffsetPose_14() const { return ___pointerOffsetPose_14; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_pointerOffsetPose_14() { return &___pointerOffsetPose_14; }
	inline void set_pointerOffsetPose_14(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___pointerOffsetPose_14 = value;
	}

	inline static int32_t get_offset_of_CurrentControllerPosition_15() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___CurrentControllerPosition_15)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_CurrentControllerPosition_15() const { return ___CurrentControllerPosition_15; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_CurrentControllerPosition_15() { return &___CurrentControllerPosition_15; }
	inline void set_CurrentControllerPosition_15(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___CurrentControllerPosition_15 = value;
	}

	inline static int32_t get_offset_of_CurrentControllerRotation_16() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___CurrentControllerRotation_16)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_CurrentControllerRotation_16() const { return ___CurrentControllerRotation_16; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_CurrentControllerRotation_16() { return &___CurrentControllerRotation_16; }
	inline void set_CurrentControllerRotation_16(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___CurrentControllerRotation_16 = value;
	}

	inline static int32_t get_offset_of_LastControllerPose_17() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___LastControllerPose_17)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_LastControllerPose_17() const { return ___LastControllerPose_17; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_LastControllerPose_17() { return &___LastControllerPose_17; }
	inline void set_LastControllerPose_17(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___LastControllerPose_17 = value;
	}

	inline static int32_t get_offset_of_CurrentControllerPose_18() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___CurrentControllerPose_18)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_CurrentControllerPose_18() const { return ___CurrentControllerPose_18; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_CurrentControllerPose_18() { return &___CurrentControllerPose_18; }
	inline void set_CurrentControllerPose_18(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___CurrentControllerPose_18 = value;
	}

	inline static int32_t get_offset_of_U3CLegacyInputSupportU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___U3CLegacyInputSupportU3Ek__BackingField_19)); }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* get_U3CLegacyInputSupportU3Ek__BackingField_19() const { return ___U3CLegacyInputSupportU3Ek__BackingField_19; }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C** get_address_of_U3CLegacyInputSupportU3Ek__BackingField_19() { return &___U3CLegacyInputSupportU3Ek__BackingField_19; }
	inline void set_U3CLegacyInputSupportU3Ek__BackingField_19(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* value)
	{
		___U3CLegacyInputSupportU3Ek__BackingField_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CLegacyInputSupportU3Ek__BackingField_19), (void*)value);
	}

	inline static int32_t get_offset_of_U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20)); }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* get_U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20() const { return ___U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20; }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C** get_address_of_U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20() { return &___U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20; }
	inline void set_U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* value)
	{
		___U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20), (void*)value);
	}

	inline static int32_t get_offset_of_U3CRightHandedLegacyInputSupportU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845, ___U3CRightHandedLegacyInputSupportU3Ek__BackingField_21)); }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* get_U3CRightHandedLegacyInputSupportU3Ek__BackingField_21() const { return ___U3CRightHandedLegacyInputSupportU3Ek__BackingField_21; }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C** get_address_of_U3CRightHandedLegacyInputSupportU3Ek__BackingField_21() { return &___U3CRightHandedLegacyInputSupportU3Ek__BackingField_21; }
	inline void set_U3CRightHandedLegacyInputSupportU3Ek__BackingField_21(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* value)
	{
		___U3CRightHandedLegacyInputSupportU3Ek__BackingField_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRightHandedLegacyInputSupportU3Ek__BackingField_21), (void*)value);
	}
};

struct GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateControllerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateControllerPerfMarker_22;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateButtonDataPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateButtonDataPerfMarker_23;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateSingleAxisDataPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateSingleAxisDataPerfMarker_24;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateDualAxisDataPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateDualAxisDataPerfMarker_25;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdatePoseDataPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePoseDataPerfMarker_26;

public:
	inline static int32_t get_offset_of_UpdateControllerPerfMarker_22() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields, ___UpdateControllerPerfMarker_22)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateControllerPerfMarker_22() const { return ___UpdateControllerPerfMarker_22; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateControllerPerfMarker_22() { return &___UpdateControllerPerfMarker_22; }
	inline void set_UpdateControllerPerfMarker_22(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateControllerPerfMarker_22 = value;
	}

	inline static int32_t get_offset_of_UpdateButtonDataPerfMarker_23() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields, ___UpdateButtonDataPerfMarker_23)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateButtonDataPerfMarker_23() const { return ___UpdateButtonDataPerfMarker_23; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateButtonDataPerfMarker_23() { return &___UpdateButtonDataPerfMarker_23; }
	inline void set_UpdateButtonDataPerfMarker_23(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateButtonDataPerfMarker_23 = value;
	}

	inline static int32_t get_offset_of_UpdateSingleAxisDataPerfMarker_24() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields, ___UpdateSingleAxisDataPerfMarker_24)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateSingleAxisDataPerfMarker_24() const { return ___UpdateSingleAxisDataPerfMarker_24; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateSingleAxisDataPerfMarker_24() { return &___UpdateSingleAxisDataPerfMarker_24; }
	inline void set_UpdateSingleAxisDataPerfMarker_24(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateSingleAxisDataPerfMarker_24 = value;
	}

	inline static int32_t get_offset_of_UpdateDualAxisDataPerfMarker_25() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields, ___UpdateDualAxisDataPerfMarker_25)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateDualAxisDataPerfMarker_25() const { return ___UpdateDualAxisDataPerfMarker_25; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateDualAxisDataPerfMarker_25() { return &___UpdateDualAxisDataPerfMarker_25; }
	inline void set_UpdateDualAxisDataPerfMarker_25(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateDualAxisDataPerfMarker_25 = value;
	}

	inline static int32_t get_offset_of_UpdatePoseDataPerfMarker_26() { return static_cast<int32_t>(offsetof(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields, ___UpdatePoseDataPerfMarker_26)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePoseDataPerfMarker_26() const { return ___UpdatePoseDataPerfMarker_26; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePoseDataPerfMarker_26() { return &___UpdatePoseDataPerfMarker_26; }
	inline void set_UpdatePoseDataPerfMarker_26(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePoseDataPerfMarker_26 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController
struct MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F  : public BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::controllerPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___controllerPose_13;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityMouseDeviceManager Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::mouseDeviceManager
	RuntimeObject* ___mouseDeviceManager_14;

public:
	inline static int32_t get_offset_of_controllerPose_13() { return static_cast<int32_t>(offsetof(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F, ___controllerPose_13)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_controllerPose_13() const { return ___controllerPose_13; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_controllerPose_13() { return &___controllerPose_13; }
	inline void set_controllerPose_13(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___controllerPose_13 = value;
	}

	inline static int32_t get_offset_of_mouseDeviceManager_14() { return static_cast<int32_t>(offsetof(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F, ___mouseDeviceManager_14)); }
	inline RuntimeObject* get_mouseDeviceManager_14() const { return ___mouseDeviceManager_14; }
	inline RuntimeObject** get_address_of_mouseDeviceManager_14() { return &___mouseDeviceManager_14; }
	inline void set_mouseDeviceManager_14(RuntimeObject* value)
	{
		___mouseDeviceManager_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___mouseDeviceManager_14), (void*)value);
	}
};

struct MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::LegacyInputSupport
	MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___LegacyInputSupport_12;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_15;

public:
	inline static int32_t get_offset_of_LegacyInputSupport_12() { return static_cast<int32_t>(offsetof(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields, ___LegacyInputSupport_12)); }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* get_LegacyInputSupport_12() const { return ___LegacyInputSupport_12; }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C** get_address_of_LegacyInputSupport_12() { return &___LegacyInputSupport_12; }
	inline void set_LegacyInputSupport_12(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* value)
	{
		___LegacyInputSupport_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LegacyInputSupport_12), (void*)value);
	}

	inline static int32_t get_offset_of_UpdatePerfMarker_15() { return static_cast<int32_t>(offsetof(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields, ___UpdatePerfMarker_15)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_15() const { return ___UpdatePerfMarker_15; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_15() { return &___UpdatePerfMarker_15; }
	inline void set_UpdatePerfMarker_15(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_15 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController
struct UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5  : public BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::<MaxTapContactTime>k__BackingField
	float ___U3CMaxTapContactTimeU3Ek__BackingField_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::<ManipulationThreshold>k__BackingField
	float ___U3CManipulationThresholdU3Ek__BackingField_13;
	// UnityEngine.Touch Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::<TouchData>k__BackingField
	Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___U3CTouchDataU3Ek__BackingField_14;
	// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::<ScreenPointRay>k__BackingField
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___U3CScreenPointRayU3Ek__BackingField_15;
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::<Lifetime>k__BackingField
	float ___U3CLifetimeU3Ek__BackingField_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::isTouched
	bool ___isTouched_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::holdingAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___holdingAction_18;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::isHolding
	bool ___isHolding_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::manipulationAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___manipulationAction_20;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::isManipulating
	bool ___isManipulating_21;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::lastPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___lastPose_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::isNewController
	bool ___isNewController_23;

public:
	inline static int32_t get_offset_of_U3CMaxTapContactTimeU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___U3CMaxTapContactTimeU3Ek__BackingField_12)); }
	inline float get_U3CMaxTapContactTimeU3Ek__BackingField_12() const { return ___U3CMaxTapContactTimeU3Ek__BackingField_12; }
	inline float* get_address_of_U3CMaxTapContactTimeU3Ek__BackingField_12() { return &___U3CMaxTapContactTimeU3Ek__BackingField_12; }
	inline void set_U3CMaxTapContactTimeU3Ek__BackingField_12(float value)
	{
		___U3CMaxTapContactTimeU3Ek__BackingField_12 = value;
	}

	inline static int32_t get_offset_of_U3CManipulationThresholdU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___U3CManipulationThresholdU3Ek__BackingField_13)); }
	inline float get_U3CManipulationThresholdU3Ek__BackingField_13() const { return ___U3CManipulationThresholdU3Ek__BackingField_13; }
	inline float* get_address_of_U3CManipulationThresholdU3Ek__BackingField_13() { return &___U3CManipulationThresholdU3Ek__BackingField_13; }
	inline void set_U3CManipulationThresholdU3Ek__BackingField_13(float value)
	{
		___U3CManipulationThresholdU3Ek__BackingField_13 = value;
	}

	inline static int32_t get_offset_of_U3CTouchDataU3Ek__BackingField_14() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___U3CTouchDataU3Ek__BackingField_14)); }
	inline Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  get_U3CTouchDataU3Ek__BackingField_14() const { return ___U3CTouchDataU3Ek__BackingField_14; }
	inline Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * get_address_of_U3CTouchDataU3Ek__BackingField_14() { return &___U3CTouchDataU3Ek__BackingField_14; }
	inline void set_U3CTouchDataU3Ek__BackingField_14(Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  value)
	{
		___U3CTouchDataU3Ek__BackingField_14 = value;
	}

	inline static int32_t get_offset_of_U3CScreenPointRayU3Ek__BackingField_15() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___U3CScreenPointRayU3Ek__BackingField_15)); }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  get_U3CScreenPointRayU3Ek__BackingField_15() const { return ___U3CScreenPointRayU3Ek__BackingField_15; }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * get_address_of_U3CScreenPointRayU3Ek__BackingField_15() { return &___U3CScreenPointRayU3Ek__BackingField_15; }
	inline void set_U3CScreenPointRayU3Ek__BackingField_15(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  value)
	{
		___U3CScreenPointRayU3Ek__BackingField_15 = value;
	}

	inline static int32_t get_offset_of_U3CLifetimeU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___U3CLifetimeU3Ek__BackingField_16)); }
	inline float get_U3CLifetimeU3Ek__BackingField_16() const { return ___U3CLifetimeU3Ek__BackingField_16; }
	inline float* get_address_of_U3CLifetimeU3Ek__BackingField_16() { return &___U3CLifetimeU3Ek__BackingField_16; }
	inline void set_U3CLifetimeU3Ek__BackingField_16(float value)
	{
		___U3CLifetimeU3Ek__BackingField_16 = value;
	}

	inline static int32_t get_offset_of_isTouched_17() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___isTouched_17)); }
	inline bool get_isTouched_17() const { return ___isTouched_17; }
	inline bool* get_address_of_isTouched_17() { return &___isTouched_17; }
	inline void set_isTouched_17(bool value)
	{
		___isTouched_17 = value;
	}

	inline static int32_t get_offset_of_holdingAction_18() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___holdingAction_18)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_holdingAction_18() const { return ___holdingAction_18; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_holdingAction_18() { return &___holdingAction_18; }
	inline void set_holdingAction_18(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___holdingAction_18 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___holdingAction_18))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_isHolding_19() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___isHolding_19)); }
	inline bool get_isHolding_19() const { return ___isHolding_19; }
	inline bool* get_address_of_isHolding_19() { return &___isHolding_19; }
	inline void set_isHolding_19(bool value)
	{
		___isHolding_19 = value;
	}

	inline static int32_t get_offset_of_manipulationAction_20() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___manipulationAction_20)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_manipulationAction_20() const { return ___manipulationAction_20; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_manipulationAction_20() { return &___manipulationAction_20; }
	inline void set_manipulationAction_20(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___manipulationAction_20 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___manipulationAction_20))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_isManipulating_21() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___isManipulating_21)); }
	inline bool get_isManipulating_21() const { return ___isManipulating_21; }
	inline bool* get_address_of_isManipulating_21() { return &___isManipulating_21; }
	inline void set_isManipulating_21(bool value)
	{
		___isManipulating_21 = value;
	}

	inline static int32_t get_offset_of_lastPose_22() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___lastPose_22)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_lastPose_22() const { return ___lastPose_22; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_lastPose_22() { return &___lastPose_22; }
	inline void set_lastPose_22(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___lastPose_22 = value;
	}

	inline static int32_t get_offset_of_isNewController_23() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5, ___isNewController_23)); }
	inline bool get_isNewController_23() const { return ___isNewController_23; }
	inline bool* get_address_of_isNewController_23() { return &___isNewController_23; }
	inline void set_isNewController_23(bool value)
	{
		___isNewController_23 = value;
	}
};

struct UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_24;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::EndTouchPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___EndTouchPerfMarker_25;

public:
	inline static int32_t get_offset_of_UpdatePerfMarker_24() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields, ___UpdatePerfMarker_24)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_24() const { return ___UpdatePerfMarker_24; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_24() { return &___UpdatePerfMarker_24; }
	inline void set_UpdatePerfMarker_24(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_24 = value;
	}

	inline static int32_t get_offset_of_EndTouchPerfMarker_25() { return static_cast<int32_t>(offsetof(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields, ___EndTouchPerfMarker_25)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_EndTouchPerfMarker_25() const { return ___EndTouchPerfMarker_25; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_EndTouchPerfMarker_25() { return &___EndTouchPerfMarker_25; }
	inline void set_EndTouchPerfMarker_25(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___EndTouchPerfMarker_25 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ViveKnucklesControllerDefinition
struct ViveKnucklesControllerDefinition_tA63DFCEBFAD95F32D30B544F68CC3280748FA912  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.XboxControllerDefinition
struct XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// System.ArgumentException
struct ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:
	// System.String System.ArgumentException::m_paramName
	String_t* ___m_paramName_17;

public:
	inline static int32_t get_offset_of_m_paramName_17() { return static_cast<int32_t>(offsetof(ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1, ___m_paramName_17)); }
	inline String_t* get_m_paramName_17() const { return ___m_paramName_17; }
	inline String_t** get_address_of_m_paramName_17() { return &___m_paramName_17; }
	inline void set_m_paramName_17(String_t* value)
	{
		___m_paramName_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_paramName_17), (void*)value);
	}
};


// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile
struct MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::manipulationGestures
	int32_t ___manipulationGestures_5;
	// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::navigationGestures
	int32_t ___navigationGestures_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::useRailsNavigation
	bool ___useRailsNavigation_7;
	// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::railsNavigationGestures
	int32_t ___railsNavigationGestures_8;
	// Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::windowsGestureAutoStart
	int32_t ___windowsGestureAutoStart_9;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[] Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::gestures
	MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* ___gestures_10;

public:
	inline static int32_t get_offset_of_manipulationGestures_5() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___manipulationGestures_5)); }
	inline int32_t get_manipulationGestures_5() const { return ___manipulationGestures_5; }
	inline int32_t* get_address_of_manipulationGestures_5() { return &___manipulationGestures_5; }
	inline void set_manipulationGestures_5(int32_t value)
	{
		___manipulationGestures_5 = value;
	}

	inline static int32_t get_offset_of_navigationGestures_6() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___navigationGestures_6)); }
	inline int32_t get_navigationGestures_6() const { return ___navigationGestures_6; }
	inline int32_t* get_address_of_navigationGestures_6() { return &___navigationGestures_6; }
	inline void set_navigationGestures_6(int32_t value)
	{
		___navigationGestures_6 = value;
	}

	inline static int32_t get_offset_of_useRailsNavigation_7() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___useRailsNavigation_7)); }
	inline bool get_useRailsNavigation_7() const { return ___useRailsNavigation_7; }
	inline bool* get_address_of_useRailsNavigation_7() { return &___useRailsNavigation_7; }
	inline void set_useRailsNavigation_7(bool value)
	{
		___useRailsNavigation_7 = value;
	}

	inline static int32_t get_offset_of_railsNavigationGestures_8() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___railsNavigationGestures_8)); }
	inline int32_t get_railsNavigationGestures_8() const { return ___railsNavigationGestures_8; }
	inline int32_t* get_address_of_railsNavigationGestures_8() { return &___railsNavigationGestures_8; }
	inline void set_railsNavigationGestures_8(int32_t value)
	{
		___railsNavigationGestures_8 = value;
	}

	inline static int32_t get_offset_of_windowsGestureAutoStart_9() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___windowsGestureAutoStart_9)); }
	inline int32_t get_windowsGestureAutoStart_9() const { return ___windowsGestureAutoStart_9; }
	inline int32_t* get_address_of_windowsGestureAutoStart_9() { return &___windowsGestureAutoStart_9; }
	inline void set_windowsGestureAutoStart_9(int32_t value)
	{
		___windowsGestureAutoStart_9 = value;
	}

	inline static int32_t get_offset_of_gestures_10() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___gestures_10)); }
	inline MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* get_gestures_10() const { return ___gestures_10; }
	inline MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874** get_address_of_gestures_10() { return &___gestures_10; }
	inline void set_gestures_10(MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* value)
	{
		___gestures_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gestures_10), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[] Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::dataProviderConfigurations
	MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* ___dataProviderConfigurations_5;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___focusProviderType_6;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::raycastProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___raycastProviderType_7;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusQueryBufferSize
	int32_t ___focusQueryBufferSize_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::shouldUseGraphicsRaycast
	bool ___shouldUseGraphicsRaycast_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusIndividualCompoundCollider
	bool ___focusIndividualCompoundCollider_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionsProfile
	MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * ___inputActionsProfile_11;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionRulesProfile
	MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * ___inputActionRulesProfile_12;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::pointerProfile
	MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * ___pointerProfile_13;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::gesturesProfile
	MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * ___gesturesProfile_14;
	// System.Collections.Generic.List`1<System.Globalization.CultureInfo> Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::supportedVoiceCultures
	List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * ___supportedVoiceCultures_15;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::speechCommandsProfile
	MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * ___speechCommandsProfile_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::enableControllerMapping
	bool ___enableControllerMapping_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerMappingProfile
	MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * ___controllerMappingProfile_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerVisualizationProfile
	MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * ___controllerVisualizationProfile_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::handTrackingProfile
	MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * ___handTrackingProfile_20;

public:
	inline static int32_t get_offset_of_dataProviderConfigurations_5() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___dataProviderConfigurations_5)); }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* get_dataProviderConfigurations_5() const { return ___dataProviderConfigurations_5; }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426** get_address_of_dataProviderConfigurations_5() { return &___dataProviderConfigurations_5; }
	inline void set_dataProviderConfigurations_5(MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* value)
	{
		___dataProviderConfigurations_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dataProviderConfigurations_5), (void*)value);
	}

	inline static int32_t get_offset_of_focusProviderType_6() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusProviderType_6)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_focusProviderType_6() const { return ___focusProviderType_6; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_focusProviderType_6() { return &___focusProviderType_6; }
	inline void set_focusProviderType_6(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___focusProviderType_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___focusProviderType_6), (void*)value);
	}

	inline static int32_t get_offset_of_raycastProviderType_7() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___raycastProviderType_7)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_raycastProviderType_7() const { return ___raycastProviderType_7; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_raycastProviderType_7() { return &___raycastProviderType_7; }
	inline void set_raycastProviderType_7(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___raycastProviderType_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastProviderType_7), (void*)value);
	}

	inline static int32_t get_offset_of_focusQueryBufferSize_8() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusQueryBufferSize_8)); }
	inline int32_t get_focusQueryBufferSize_8() const { return ___focusQueryBufferSize_8; }
	inline int32_t* get_address_of_focusQueryBufferSize_8() { return &___focusQueryBufferSize_8; }
	inline void set_focusQueryBufferSize_8(int32_t value)
	{
		___focusQueryBufferSize_8 = value;
	}

	inline static int32_t get_offset_of_shouldUseGraphicsRaycast_9() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___shouldUseGraphicsRaycast_9)); }
	inline bool get_shouldUseGraphicsRaycast_9() const { return ___shouldUseGraphicsRaycast_9; }
	inline bool* get_address_of_shouldUseGraphicsRaycast_9() { return &___shouldUseGraphicsRaycast_9; }
	inline void set_shouldUseGraphicsRaycast_9(bool value)
	{
		___shouldUseGraphicsRaycast_9 = value;
	}

	inline static int32_t get_offset_of_focusIndividualCompoundCollider_10() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusIndividualCompoundCollider_10)); }
	inline bool get_focusIndividualCompoundCollider_10() const { return ___focusIndividualCompoundCollider_10; }
	inline bool* get_address_of_focusIndividualCompoundCollider_10() { return &___focusIndividualCompoundCollider_10; }
	inline void set_focusIndividualCompoundCollider_10(bool value)
	{
		___focusIndividualCompoundCollider_10 = value;
	}

	inline static int32_t get_offset_of_inputActionsProfile_11() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionsProfile_11)); }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * get_inputActionsProfile_11() const { return ___inputActionsProfile_11; }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 ** get_address_of_inputActionsProfile_11() { return &___inputActionsProfile_11; }
	inline void set_inputActionsProfile_11(MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * value)
	{
		___inputActionsProfile_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionsProfile_11), (void*)value);
	}

	inline static int32_t get_offset_of_inputActionRulesProfile_12() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionRulesProfile_12)); }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * get_inputActionRulesProfile_12() const { return ___inputActionRulesProfile_12; }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A ** get_address_of_inputActionRulesProfile_12() { return &___inputActionRulesProfile_12; }
	inline void set_inputActionRulesProfile_12(MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * value)
	{
		___inputActionRulesProfile_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionRulesProfile_12), (void*)value);
	}

	inline static int32_t get_offset_of_pointerProfile_13() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___pointerProfile_13)); }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * get_pointerProfile_13() const { return ___pointerProfile_13; }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E ** get_address_of_pointerProfile_13() { return &___pointerProfile_13; }
	inline void set_pointerProfile_13(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * value)
	{
		___pointerProfile_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerProfile_13), (void*)value);
	}

	inline static int32_t get_offset_of_gesturesProfile_14() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___gesturesProfile_14)); }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * get_gesturesProfile_14() const { return ___gesturesProfile_14; }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 ** get_address_of_gesturesProfile_14() { return &___gesturesProfile_14; }
	inline void set_gesturesProfile_14(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * value)
	{
		___gesturesProfile_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gesturesProfile_14), (void*)value);
	}

	inline static int32_t get_offset_of_supportedVoiceCultures_15() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___supportedVoiceCultures_15)); }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * get_supportedVoiceCultures_15() const { return ___supportedVoiceCultures_15; }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 ** get_address_of_supportedVoiceCultures_15() { return &___supportedVoiceCultures_15; }
	inline void set_supportedVoiceCultures_15(List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * value)
	{
		___supportedVoiceCultures_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___supportedVoiceCultures_15), (void*)value);
	}

	inline static int32_t get_offset_of_speechCommandsProfile_16() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___speechCommandsProfile_16)); }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * get_speechCommandsProfile_16() const { return ___speechCommandsProfile_16; }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD ** get_address_of_speechCommandsProfile_16() { return &___speechCommandsProfile_16; }
	inline void set_speechCommandsProfile_16(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * value)
	{
		___speechCommandsProfile_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechCommandsProfile_16), (void*)value);
	}

	inline static int32_t get_offset_of_enableControllerMapping_17() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___enableControllerMapping_17)); }
	inline bool get_enableControllerMapping_17() const { return ___enableControllerMapping_17; }
	inline bool* get_address_of_enableControllerMapping_17() { return &___enableControllerMapping_17; }
	inline void set_enableControllerMapping_17(bool value)
	{
		___enableControllerMapping_17 = value;
	}

	inline static int32_t get_offset_of_controllerMappingProfile_18() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerMappingProfile_18)); }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * get_controllerMappingProfile_18() const { return ___controllerMappingProfile_18; }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB ** get_address_of_controllerMappingProfile_18() { return &___controllerMappingProfile_18; }
	inline void set_controllerMappingProfile_18(MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * value)
	{
		___controllerMappingProfile_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerMappingProfile_18), (void*)value);
	}

	inline static int32_t get_offset_of_controllerVisualizationProfile_19() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerVisualizationProfile_19)); }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * get_controllerVisualizationProfile_19() const { return ___controllerVisualizationProfile_19; }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D ** get_address_of_controllerVisualizationProfile_19() { return &___controllerVisualizationProfile_19; }
	inline void set_controllerVisualizationProfile_19(MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * value)
	{
		___controllerVisualizationProfile_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerVisualizationProfile_19), (void*)value);
	}

	inline static int32_t get_offset_of_handTrackingProfile_20() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___handTrackingProfile_20)); }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * get_handTrackingProfile_20() const { return ___handTrackingProfile_20; }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 ** get_address_of_handTrackingProfile_20() { return &___handTrackingProfile_20; }
	inline void set_handTrackingProfile_20(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * value)
	{
		___handTrackingProfile_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handTrackingProfile_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile
struct MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::cursorSpeed
	float ___cursorSpeed_5;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::wheelSpeed
	float ___wheelSpeed_6;

public:
	inline static int32_t get_offset_of_cursorSpeed_5() { return static_cast<int32_t>(offsetof(MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC, ___cursorSpeed_5)); }
	inline float get_cursorSpeed_5() const { return ___cursorSpeed_5; }
	inline float* get_address_of_cursorSpeed_5() { return &___cursorSpeed_5; }
	inline void set_cursorSpeed_5(float value)
	{
		___cursorSpeed_5 = value;
	}

	inline static int32_t get_offset_of_wheelSpeed_6() { return static_cast<int32_t>(offsetof(MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC, ___wheelSpeed_6)); }
	inline float get_wheelSpeed_6() const { return ___wheelSpeed_6; }
	inline float* get_address_of_wheelSpeed_6() { return &___wheelSpeed_6; }
	inline void set_wheelSpeed_6(float value)
	{
		___wheelSpeed_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile
struct MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointingExtent
	float ___pointingExtent_5;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointingRaycastLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___pointingRaycastLayerMasks_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::debugDrawPointingRays
	bool ___debugDrawPointingRays_7;
	// UnityEngine.Color[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::debugDrawPointingRayColors
	ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* ___debugDrawPointingRayColors_8;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::gazeCursorPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gazeCursorPrefab_9;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::gazeProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___gazeProviderType_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::useHeadGazeOverride
	bool ___useHeadGazeOverride_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::isEyeTrackingEnabled
	bool ___isEyeTrackingEnabled_12;
	// Microsoft.MixedReality.Toolkit.Input.PointerOption[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointerOptions
	PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* ___pointerOptions_13;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointerMediator
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___pointerMediator_14;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::primaryPointerSelector
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___primaryPointerSelector_15;

public:
	inline static int32_t get_offset_of_pointingExtent_5() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointingExtent_5)); }
	inline float get_pointingExtent_5() const { return ___pointingExtent_5; }
	inline float* get_address_of_pointingExtent_5() { return &___pointingExtent_5; }
	inline void set_pointingExtent_5(float value)
	{
		___pointingExtent_5 = value;
	}

	inline static int32_t get_offset_of_pointingRaycastLayerMasks_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointingRaycastLayerMasks_6)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_pointingRaycastLayerMasks_6() const { return ___pointingRaycastLayerMasks_6; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_pointingRaycastLayerMasks_6() { return &___pointingRaycastLayerMasks_6; }
	inline void set_pointingRaycastLayerMasks_6(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___pointingRaycastLayerMasks_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointingRaycastLayerMasks_6), (void*)value);
	}

	inline static int32_t get_offset_of_debugDrawPointingRays_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___debugDrawPointingRays_7)); }
	inline bool get_debugDrawPointingRays_7() const { return ___debugDrawPointingRays_7; }
	inline bool* get_address_of_debugDrawPointingRays_7() { return &___debugDrawPointingRays_7; }
	inline void set_debugDrawPointingRays_7(bool value)
	{
		___debugDrawPointingRays_7 = value;
	}

	inline static int32_t get_offset_of_debugDrawPointingRayColors_8() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___debugDrawPointingRayColors_8)); }
	inline ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* get_debugDrawPointingRayColors_8() const { return ___debugDrawPointingRayColors_8; }
	inline ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399** get_address_of_debugDrawPointingRayColors_8() { return &___debugDrawPointingRayColors_8; }
	inline void set_debugDrawPointingRayColors_8(ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* value)
	{
		___debugDrawPointingRayColors_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___debugDrawPointingRayColors_8), (void*)value);
	}

	inline static int32_t get_offset_of_gazeCursorPrefab_9() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___gazeCursorPrefab_9)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_gazeCursorPrefab_9() const { return ___gazeCursorPrefab_9; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_gazeCursorPrefab_9() { return &___gazeCursorPrefab_9; }
	inline void set_gazeCursorPrefab_9(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___gazeCursorPrefab_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeCursorPrefab_9), (void*)value);
	}

	inline static int32_t get_offset_of_gazeProviderType_10() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___gazeProviderType_10)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_gazeProviderType_10() const { return ___gazeProviderType_10; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_gazeProviderType_10() { return &___gazeProviderType_10; }
	inline void set_gazeProviderType_10(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___gazeProviderType_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeProviderType_10), (void*)value);
	}

	inline static int32_t get_offset_of_useHeadGazeOverride_11() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___useHeadGazeOverride_11)); }
	inline bool get_useHeadGazeOverride_11() const { return ___useHeadGazeOverride_11; }
	inline bool* get_address_of_useHeadGazeOverride_11() { return &___useHeadGazeOverride_11; }
	inline void set_useHeadGazeOverride_11(bool value)
	{
		___useHeadGazeOverride_11 = value;
	}

	inline static int32_t get_offset_of_isEyeTrackingEnabled_12() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___isEyeTrackingEnabled_12)); }
	inline bool get_isEyeTrackingEnabled_12() const { return ___isEyeTrackingEnabled_12; }
	inline bool* get_address_of_isEyeTrackingEnabled_12() { return &___isEyeTrackingEnabled_12; }
	inline void set_isEyeTrackingEnabled_12(bool value)
	{
		___isEyeTrackingEnabled_12 = value;
	}

	inline static int32_t get_offset_of_pointerOptions_13() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointerOptions_13)); }
	inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* get_pointerOptions_13() const { return ___pointerOptions_13; }
	inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E** get_address_of_pointerOptions_13() { return &___pointerOptions_13; }
	inline void set_pointerOptions_13(PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* value)
	{
		___pointerOptions_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerOptions_13), (void*)value);
	}

	inline static int32_t get_offset_of_pointerMediator_14() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointerMediator_14)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_pointerMediator_14() const { return ___pointerMediator_14; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_pointerMediator_14() { return &___pointerMediator_14; }
	inline void set_pointerMediator_14(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___pointerMediator_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerMediator_14), (void*)value);
	}

	inline static int32_t get_offset_of_primaryPointerSelector_15() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___primaryPointerSelector_15)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_primaryPointerSelector_15() const { return ___primaryPointerSelector_15; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_primaryPointerSelector_15() { return &___primaryPointerSelector_15; }
	inline void set_primaryPointerSelector_15(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___primaryPointerSelector_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___primaryPointerSelector_15), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile
struct MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::startBehavior
	int32_t ___startBehavior_5;
	// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::recognitionConfidenceLevel
	int32_t ___recognitionConfidenceLevel_6;
	// Microsoft.MixedReality.Toolkit.Input.SpeechCommands[] Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::speechCommands
	SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* ___speechCommands_7;

public:
	inline static int32_t get_offset_of_startBehavior_5() { return static_cast<int32_t>(offsetof(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD, ___startBehavior_5)); }
	inline int32_t get_startBehavior_5() const { return ___startBehavior_5; }
	inline int32_t* get_address_of_startBehavior_5() { return &___startBehavior_5; }
	inline void set_startBehavior_5(int32_t value)
	{
		___startBehavior_5 = value;
	}

	inline static int32_t get_offset_of_recognitionConfidenceLevel_6() { return static_cast<int32_t>(offsetof(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD, ___recognitionConfidenceLevel_6)); }
	inline int32_t get_recognitionConfidenceLevel_6() const { return ___recognitionConfidenceLevel_6; }
	inline int32_t* get_address_of_recognitionConfidenceLevel_6() { return &___recognitionConfidenceLevel_6; }
	inline void set_recognitionConfidenceLevel_6(int32_t value)
	{
		___recognitionConfidenceLevel_6 = value;
	}

	inline static int32_t get_offset_of_speechCommands_7() { return static_cast<int32_t>(offsetof(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD, ___speechCommands_7)); }
	inline SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* get_speechCommands_7() const { return ___speechCommands_7; }
	inline SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3** get_address_of_speechCommands_7() { return &___speechCommands_7; }
	inline void set_speechCommands_7(SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* value)
	{
		___speechCommands_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechCommands_7), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// System.TimeSpan Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseDuration>k__BackingField
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___U3CPhraseDurationU3Ek__BackingField_5;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseStartTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CPhraseStartTimeU3Ek__BackingField_6;
	// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Command>k__BackingField
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___U3CCommandU3Ek__BackingField_7;
	// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Confidence>k__BackingField
	int32_t ___U3CConfidenceU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_U3CPhraseDurationU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseDurationU3Ek__BackingField_5)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_U3CPhraseDurationU3Ek__BackingField_5() const { return ___U3CPhraseDurationU3Ek__BackingField_5; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_U3CPhraseDurationU3Ek__BackingField_5() { return &___U3CPhraseDurationU3Ek__BackingField_5; }
	inline void set_U3CPhraseDurationU3Ek__BackingField_5(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___U3CPhraseDurationU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseStartTimeU3Ek__BackingField_6)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CPhraseStartTimeU3Ek__BackingField_6() const { return ___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return &___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline void set_U3CPhraseStartTimeU3Ek__BackingField_6(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CPhraseStartTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CCommandU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CCommandU3Ek__BackingField_7)); }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  get_U3CCommandU3Ek__BackingField_7() const { return ___U3CCommandU3Ek__BackingField_7; }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * get_address_of_U3CCommandU3Ek__BackingField_7() { return &___U3CCommandU3Ek__BackingField_7; }
	inline void set_U3CCommandU3Ek__BackingField_7(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		___U3CCommandU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CCommandU3Ek__BackingField_7))->___action_4))->___description_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CConfidenceU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CConfidenceU3Ek__BackingField_8)); }
	inline int32_t get_U3CConfidenceU3Ek__BackingField_8() const { return ___U3CConfidenceU3Ek__BackingField_8; }
	inline int32_t* get_address_of_U3CConfidenceU3Ek__BackingField_8() { return &___U3CConfidenceU3Ek__BackingField_8; }
	inline void set_U3CConfidenceU3Ek__BackingField_8(int32_t value)
	{
		___U3CConfidenceU3Ek__BackingField_8 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager
struct MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268  : public BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::cursorSpeed
	float ___cursorSpeed_23;
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::wheelSpeed
	float ___wheelSpeed_24;
	// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::<Controller>k__BackingField
	MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * ___U3CControllerU3Ek__BackingField_25;

public:
	inline static int32_t get_offset_of_cursorSpeed_23() { return static_cast<int32_t>(offsetof(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268, ___cursorSpeed_23)); }
	inline float get_cursorSpeed_23() const { return ___cursorSpeed_23; }
	inline float* get_address_of_cursorSpeed_23() { return &___cursorSpeed_23; }
	inline void set_cursorSpeed_23(float value)
	{
		___cursorSpeed_23 = value;
	}

	inline static int32_t get_offset_of_wheelSpeed_24() { return static_cast<int32_t>(offsetof(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268, ___wheelSpeed_24)); }
	inline float get_wheelSpeed_24() const { return ___wheelSpeed_24; }
	inline float* get_address_of_wheelSpeed_24() { return &___wheelSpeed_24; }
	inline void set_wheelSpeed_24(float value)
	{
		___wheelSpeed_24 = value;
	}

	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268, ___U3CControllerU3Ek__BackingField_25)); }
	inline MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * get_U3CControllerU3Ek__BackingField_25() const { return ___U3CControllerU3Ek__BackingField_25; }
	inline MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F ** get_address_of_U3CControllerU3Ek__BackingField_25() { return &___U3CControllerU3Ek__BackingField_25; }
	inline void set_U3CControllerU3Ek__BackingField_25(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * value)
	{
		___U3CControllerU3Ek__BackingField_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_25), (void*)value);
	}
};

struct MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_26;

public:
	inline static int32_t get_offset_of_UpdatePerfMarker_26() { return static_cast<int32_t>(offsetof(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_StaticFields, ___UpdatePerfMarker_26)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_26() const { return ___UpdatePerfMarker_26; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_26() { return &___UpdatePerfMarker_26; }
	inline void set_UpdatePerfMarker_26(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_26 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager
struct UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2  : public BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::deviceRefreshTimer
	float ___deviceRefreshTimer_23;
	// System.String[] Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::lastDeviceList
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___lastDeviceList_24;

public:
	inline static int32_t get_offset_of_deviceRefreshTimer_23() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2, ___deviceRefreshTimer_23)); }
	inline float get_deviceRefreshTimer_23() const { return ___deviceRefreshTimer_23; }
	inline float* get_address_of_deviceRefreshTimer_23() { return &___deviceRefreshTimer_23; }
	inline void set_deviceRefreshTimer_23(float value)
	{
		___deviceRefreshTimer_23 = value;
	}

	inline static int32_t get_offset_of_lastDeviceList_24() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2, ___lastDeviceList_24)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_lastDeviceList_24() const { return ___lastDeviceList_24; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_lastDeviceList_24() { return &___lastDeviceList_24; }
	inline void set_lastDeviceList_24(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___lastDeviceList_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lastDeviceList_24), (void*)value);
	}
};

struct UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields
{
public:
	// System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController> Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::ActiveControllers
	Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * ___ActiveControllers_22;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_25;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetActiveControllersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GetActiveControllersPerfMarker_26;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::RefreshDevicesPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RefreshDevicesPerfMarker_27;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetOrAddControllerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GetOrAddControllerPerfMarker_28;

public:
	inline static int32_t get_offset_of_ActiveControllers_22() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields, ___ActiveControllers_22)); }
	inline Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * get_ActiveControllers_22() const { return ___ActiveControllers_22; }
	inline Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 ** get_address_of_ActiveControllers_22() { return &___ActiveControllers_22; }
	inline void set_ActiveControllers_22(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * value)
	{
		___ActiveControllers_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ActiveControllers_22), (void*)value);
	}

	inline static int32_t get_offset_of_UpdatePerfMarker_25() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields, ___UpdatePerfMarker_25)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_25() const { return ___UpdatePerfMarker_25; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_25() { return &___UpdatePerfMarker_25; }
	inline void set_UpdatePerfMarker_25(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_25 = value;
	}

	inline static int32_t get_offset_of_GetActiveControllersPerfMarker_26() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields, ___GetActiveControllersPerfMarker_26)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GetActiveControllersPerfMarker_26() const { return ___GetActiveControllersPerfMarker_26; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GetActiveControllersPerfMarker_26() { return &___GetActiveControllersPerfMarker_26; }
	inline void set_GetActiveControllersPerfMarker_26(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GetActiveControllersPerfMarker_26 = value;
	}

	inline static int32_t get_offset_of_RefreshDevicesPerfMarker_27() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields, ___RefreshDevicesPerfMarker_27)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RefreshDevicesPerfMarker_27() const { return ___RefreshDevicesPerfMarker_27; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RefreshDevicesPerfMarker_27() { return &___RefreshDevicesPerfMarker_27; }
	inline void set_RefreshDevicesPerfMarker_27(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RefreshDevicesPerfMarker_27 = value;
	}

	inline static int32_t get_offset_of_GetOrAddControllerPerfMarker_28() { return static_cast<int32_t>(offsetof(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields, ___GetOrAddControllerPerfMarker_28)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GetOrAddControllerPerfMarker_28() const { return ___GetOrAddControllerPerfMarker_28; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GetOrAddControllerPerfMarker_28() { return &___GetOrAddControllerPerfMarker_28; }
	inline void set_GetOrAddControllerPerfMarker_28(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GetOrAddControllerPerfMarker_28 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager
struct UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963  : public BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC
{
public:
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController> Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::touchesToRemove
	List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * ___touchesToRemove_22;

public:
	inline static int32_t get_offset_of_touchesToRemove_22() { return static_cast<int32_t>(offsetof(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963, ___touchesToRemove_22)); }
	inline List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * get_touchesToRemove_22() const { return ___touchesToRemove_22; }
	inline List_1_t2A40CCD444FF66B1871D49626E273B4347465641 ** get_address_of_touchesToRemove_22() { return &___touchesToRemove_22; }
	inline void set_touchesToRemove_22(List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * value)
	{
		___touchesToRemove_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchesToRemove_22), (void*)value);
	}
};

struct UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields
{
public:
	// System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController> Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::ActiveTouches
	Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * ___ActiveTouches_21;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_23;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::AddTouchControllerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___AddTouchControllerPerfMarker_24;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::UpdateTouchDataPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateTouchDataPerfMarker_25;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::RemoveTouchControllerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RemoveTouchControllerPerfMarker_26;

public:
	inline static int32_t get_offset_of_ActiveTouches_21() { return static_cast<int32_t>(offsetof(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields, ___ActiveTouches_21)); }
	inline Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * get_ActiveTouches_21() const { return ___ActiveTouches_21; }
	inline Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD ** get_address_of_ActiveTouches_21() { return &___ActiveTouches_21; }
	inline void set_ActiveTouches_21(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * value)
	{
		___ActiveTouches_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ActiveTouches_21), (void*)value);
	}

	inline static int32_t get_offset_of_UpdatePerfMarker_23() { return static_cast<int32_t>(offsetof(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields, ___UpdatePerfMarker_23)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_23() const { return ___UpdatePerfMarker_23; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_23() { return &___UpdatePerfMarker_23; }
	inline void set_UpdatePerfMarker_23(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_23 = value;
	}

	inline static int32_t get_offset_of_AddTouchControllerPerfMarker_24() { return static_cast<int32_t>(offsetof(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields, ___AddTouchControllerPerfMarker_24)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_AddTouchControllerPerfMarker_24() const { return ___AddTouchControllerPerfMarker_24; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_AddTouchControllerPerfMarker_24() { return &___AddTouchControllerPerfMarker_24; }
	inline void set_AddTouchControllerPerfMarker_24(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___AddTouchControllerPerfMarker_24 = value;
	}

	inline static int32_t get_offset_of_UpdateTouchDataPerfMarker_25() { return static_cast<int32_t>(offsetof(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields, ___UpdateTouchDataPerfMarker_25)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateTouchDataPerfMarker_25() const { return ___UpdateTouchDataPerfMarker_25; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateTouchDataPerfMarker_25() { return &___UpdateTouchDataPerfMarker_25; }
	inline void set_UpdateTouchDataPerfMarker_25(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateTouchDataPerfMarker_25 = value;
	}

	inline static int32_t get_offset_of_RemoveTouchControllerPerfMarker_26() { return static_cast<int32_t>(offsetof(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields, ___RemoveTouchControllerPerfMarker_26)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RemoveTouchControllerPerfMarker_26() const { return ___RemoveTouchControllerPerfMarker_26; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RemoveTouchControllerPerfMarker_26() { return &___RemoveTouchControllerPerfMarker_26; }
	inline void set_RemoveTouchControllerPerfMarker_26(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RemoveTouchControllerPerfMarker_26 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.UnityInput.XboxController
struct XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD  : public GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.XboxController::<LegacyInputSupport>k__BackingField
	MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___U3CLegacyInputSupportU3Ek__BackingField_27;

public:
	inline static int32_t get_offset_of_U3CLegacyInputSupportU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD, ___U3CLegacyInputSupportU3Ek__BackingField_27)); }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* get_U3CLegacyInputSupportU3Ek__BackingField_27() const { return ___U3CLegacyInputSupportU3Ek__BackingField_27; }
	inline MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C** get_address_of_U3CLegacyInputSupportU3Ek__BackingField_27() { return &___U3CLegacyInputSupportU3Ek__BackingField_27; }
	inline void set_U3CLegacyInputSupportU3Ek__BackingField_27(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* value)
	{
		___U3CLegacyInputSupportU3Ek__BackingField_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CLegacyInputSupportU3Ek__BackingField_27), (void*)value);
	}
};


// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};

struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields
{
public:
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPostRender_6;

public:
	inline static int32_t get_offset_of_onPreCull_4() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreCull_4)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreCull_4() const { return ___onPreCull_4; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreCull_4() { return &___onPreCull_4; }
	inline void set_onPreCull_4(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreCull_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreCull_4), (void*)value);
	}

	inline static int32_t get_offset_of_onPreRender_5() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreRender_5)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreRender_5() const { return ___onPreRender_5; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreRender_5() { return &___onPreRender_5; }
	inline void set_onPreRender_5(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreRender_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreRender_5), (void*)value);
	}

	inline static int32_t get_offset_of_onPostRender_6() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPostRender_6)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPostRender_6() const { return ___onPostRender_6; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPostRender_6() { return &___onPostRender_6; }
	inline void set_onPostRender_6(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPostRender_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPostRender_6), (void*)value);
	}
};


// UnityEngine.MeshCollider
struct MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE  : public Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF
{
public:

public:
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CPointerU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_6() const { return ___U3CPointerU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_6() { return &___U3CPointerU3Ek__BackingField_6; }
	inline void set_U3CPointerU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCountU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CCountU3Ek__BackingField_7)); }
	inline int32_t get_U3CCountU3Ek__BackingField_7() const { return ___U3CCountU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3CCountU3Ek__BackingField_7() { return &___U3CCountU3Ek__BackingField_7; }
	inline void set_U3CCountU3Ek__BackingField_7(int32_t value)
	{
		___U3CCountU3Ek__BackingField_7 = value;
	}
};


// UnityEngine.EventSystems.UIBehaviour
struct UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:

public:
};


// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77  : public UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70
{
public:
	// System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseInputModule> UnityEngine.EventSystems.EventSystem::m_SystemInputModules
	List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 * ___m_SystemInputModules_4;
	// UnityEngine.EventSystems.BaseInputModule UnityEngine.EventSystems.EventSystem::m_CurrentInputModule
	BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 * ___m_CurrentInputModule_5;
	// UnityEngine.GameObject UnityEngine.EventSystems.EventSystem::m_FirstSelected
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_FirstSelected_7;
	// System.Boolean UnityEngine.EventSystems.EventSystem::m_sendNavigationEvents
	bool ___m_sendNavigationEvents_8;
	// System.Int32 UnityEngine.EventSystems.EventSystem::m_DragThreshold
	int32_t ___m_DragThreshold_9;
	// UnityEngine.GameObject UnityEngine.EventSystems.EventSystem::m_CurrentSelected
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_CurrentSelected_10;
	// System.Boolean UnityEngine.EventSystems.EventSystem::m_HasFocus
	bool ___m_HasFocus_11;
	// System.Boolean UnityEngine.EventSystems.EventSystem::m_SelectionGuard
	bool ___m_SelectionGuard_12;
	// UnityEngine.EventSystems.BaseEventData UnityEngine.EventSystems.EventSystem::m_DummyData
	BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 * ___m_DummyData_13;

public:
	inline static int32_t get_offset_of_m_SystemInputModules_4() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_SystemInputModules_4)); }
	inline List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 * get_m_SystemInputModules_4() const { return ___m_SystemInputModules_4; }
	inline List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 ** get_address_of_m_SystemInputModules_4() { return &___m_SystemInputModules_4; }
	inline void set_m_SystemInputModules_4(List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 * value)
	{
		___m_SystemInputModules_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_SystemInputModules_4), (void*)value);
	}

	inline static int32_t get_offset_of_m_CurrentInputModule_5() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_CurrentInputModule_5)); }
	inline BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 * get_m_CurrentInputModule_5() const { return ___m_CurrentInputModule_5; }
	inline BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 ** get_address_of_m_CurrentInputModule_5() { return &___m_CurrentInputModule_5; }
	inline void set_m_CurrentInputModule_5(BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 * value)
	{
		___m_CurrentInputModule_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CurrentInputModule_5), (void*)value);
	}

	inline static int32_t get_offset_of_m_FirstSelected_7() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_FirstSelected_7)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_FirstSelected_7() const { return ___m_FirstSelected_7; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_FirstSelected_7() { return &___m_FirstSelected_7; }
	inline void set_m_FirstSelected_7(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_FirstSelected_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_FirstSelected_7), (void*)value);
	}

	inline static int32_t get_offset_of_m_sendNavigationEvents_8() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_sendNavigationEvents_8)); }
	inline bool get_m_sendNavigationEvents_8() const { return ___m_sendNavigationEvents_8; }
	inline bool* get_address_of_m_sendNavigationEvents_8() { return &___m_sendNavigationEvents_8; }
	inline void set_m_sendNavigationEvents_8(bool value)
	{
		___m_sendNavigationEvents_8 = value;
	}

	inline static int32_t get_offset_of_m_DragThreshold_9() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_DragThreshold_9)); }
	inline int32_t get_m_DragThreshold_9() const { return ___m_DragThreshold_9; }
	inline int32_t* get_address_of_m_DragThreshold_9() { return &___m_DragThreshold_9; }
	inline void set_m_DragThreshold_9(int32_t value)
	{
		___m_DragThreshold_9 = value;
	}

	inline static int32_t get_offset_of_m_CurrentSelected_10() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_CurrentSelected_10)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_CurrentSelected_10() const { return ___m_CurrentSelected_10; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_CurrentSelected_10() { return &___m_CurrentSelected_10; }
	inline void set_m_CurrentSelected_10(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_CurrentSelected_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CurrentSelected_10), (void*)value);
	}

	inline static int32_t get_offset_of_m_HasFocus_11() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_HasFocus_11)); }
	inline bool get_m_HasFocus_11() const { return ___m_HasFocus_11; }
	inline bool* get_address_of_m_HasFocus_11() { return &___m_HasFocus_11; }
	inline void set_m_HasFocus_11(bool value)
	{
		___m_HasFocus_11 = value;
	}

	inline static int32_t get_offset_of_m_SelectionGuard_12() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_SelectionGuard_12)); }
	inline bool get_m_SelectionGuard_12() const { return ___m_SelectionGuard_12; }
	inline bool* get_address_of_m_SelectionGuard_12() { return &___m_SelectionGuard_12; }
	inline void set_m_SelectionGuard_12(bool value)
	{
		___m_SelectionGuard_12 = value;
	}

	inline static int32_t get_offset_of_m_DummyData_13() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_DummyData_13)); }
	inline BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 * get_m_DummyData_13() const { return ___m_DummyData_13; }
	inline BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 ** get_address_of_m_DummyData_13() { return &___m_DummyData_13; }
	inline void set_m_DummyData_13(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 * value)
	{
		___m_DummyData_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_DummyData_13), (void*)value);
	}
};

struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_StaticFields
{
public:
	// System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> UnityEngine.EventSystems.EventSystem::m_EventSystems
	List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B * ___m_EventSystems_6;
	// System.Comparison`1<UnityEngine.EventSystems.RaycastResult> UnityEngine.EventSystems.EventSystem::s_RaycastComparer
	Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 * ___s_RaycastComparer_14;

public:
	inline static int32_t get_offset_of_m_EventSystems_6() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_StaticFields, ___m_EventSystems_6)); }
	inline List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B * get_m_EventSystems_6() const { return ___m_EventSystems_6; }
	inline List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B ** get_address_of_m_EventSystems_6() { return &___m_EventSystems_6; }
	inline void set_m_EventSystems_6(List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B * value)
	{
		___m_EventSystems_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystems_6), (void*)value);
	}

	inline static int32_t get_offset_of_s_RaycastComparer_14() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_StaticFields, ___s_RaycastComparer_14)); }
	inline Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 * get_s_RaycastComparer_14() const { return ___s_RaycastComparer_14; }
	inline Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 ** get_address_of_s_RaycastComparer_14() { return &___s_RaycastComparer_14; }
	inline void set_s_RaycastComparer_14(Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 * value)
	{
		___s_RaycastComparer_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_RaycastComparer_14), (void*)value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  m_Items[1];

public:
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Color[]
struct ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  m_Items[1];

public:
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  value)
	{
		m_Items[index] = value;
	}
};
// Microsoft.MixedReality.Toolkit.Input.PointerOption[]
struct PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109  m_Items[1];

public:
	inline PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___pointerPrefab_2), (void*)NULL);
	}
	inline PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___pointerPrefab_2), (void*)NULL);
	}
};
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands[]
struct SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  m_Items[1];

public:
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((m_Items + index)->___action_4))->___description_2), (void*)NULL);
		#endif
	}
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((m_Items + index)->___action_4))->___description_2), (void*)NULL);
		#endif
	}
};
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[]
struct MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * m_Items[1];

public:
	inline MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[]
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * m_Items[1];

public:
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[]
struct MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  m_Items[1];

public:
	inline MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___U3CAxisCodeXU3Ek__BackingField_1), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___U3CAxisCodeYU3Ek__BackingField_2), (void*)NULL);
		#endif
	}
	inline MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___U3CAxisCodeXU3Ek__BackingField_1), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___U3CAxisCodeYU3Ek__BackingField_2), (void*)NULL);
		#endif
	}
};
// Microsoft.MixedReality.Toolkit.Utilities.Handedness[]
struct HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) uint8_t m_Items[1];

public:
	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
};
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController[]
struct IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject * m_Items[1];

public:
	inline RuntimeObject * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[]
struct MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  m_Items[1];

public:
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___description_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((m_Items + index)->___action_2))->___description_2), (void*)NULL);
		#endif
	}
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___description_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((m_Items + index)->___action_2))->___description_2), (void*)NULL);
		#endif
	}
};
// UnityEngine.Touch[]
struct TouchU5BU5D_t0207B72FD95EF1F56E7A6C9F0A42896B03D2BD5D  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  m_Items[1];

public:
	inline Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  value)
	{
		m_Items[index] = value;
	}
};

IL2CPP_EXTERN_C void MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_pinvoke(const MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073& unmarshaled, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_pinvoke_back(const MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke& marshaled, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073& unmarshaled);
IL2CPP_EXTERN_C void MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_pinvoke_cleanup(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke& marshaled);
IL2CPP_EXTERN_C void MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_com(const MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073& unmarshaled, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com& marshaled);
IL2CPP_EXTERN_C void MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_com_back(const MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com& marshaled, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073& unmarshaled);
IL2CPP_EXTERN_C void MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_com_cleanup(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com& marshaled);

// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.PointerOption>()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_gshared_inline (const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.SpeechCommands>()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_gshared_inline (const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Int32>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_gshared (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, int32_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.Int32>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.Int32>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method);
// T Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseDataProvider`1<System.Object>::set_Registrar(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR void BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209_gshared_inline (BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// T Microsoft.MixedReality.Toolkit.BaseDataProvider`1<System.Object>::get_Service()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2C_gshared_inline (BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.Object,System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB  Dictionary_2_GetEnumerator_mF1CF1D13F3E70C6D20D96D9AC88E44454E4C0053_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_gshared_inline (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Object,System.Object>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m9B9FB07EC2C1D82E921C9316A4E0901C933BBF6C_gshared (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.Object,System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mE363888280B72ED50538416C060EF9FC94B3BB00_gshared (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Clear_m1115171C74C982EA09CF1B8DB7E4C97ED6AC23D4_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection<!0,!1> System.Collections.Generic.Dictionary`2<System.Object,System.Object>::get_Values()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ValueCollection_t0816666499CBD11E58E1E7C79A4EFC2AA47E08A2 * Dictionary_2_get_Values_m58CC32586C31C6F38B730DE7CD79A1FFE9109BA4_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// !!0[] System.Linq.Enumerable::ToArray<System.Object>(System.Collections.Generic.IEnumerable`1<!!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* Enumerable_ToArray_TisRuntimeObject_mBEE3CCB2651B39976F7ECCBB024119C449ABF8B8_gshared (RuntimeObject* ___source0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Object>::ContainsKey(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_ContainsKey_m4EBC00E16E83DA33851A551757D2B7332D5756B9_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.Object,System.Object>::get_Item(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Dictionary_2_get_Item_m6625C3BA931A6EE5D6DB46B9E743B40AAA30010B_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mC741BBB0A647C814227953DB9B23CB1BDF571C5B_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_m0FCCD33CE2C6A7589E52A2AB0872FE361BF5EF60_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m2C7E51568033239B506E15E7804A0B8658246498_gshared (Dictionary_2_t32F25F093828AA9F93CB11C2A2B4648FD62A09BA * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Object>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<System.Object>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.Int32,System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF  Dictionary_2_GetEnumerator_m96229BB73AA611A324DC70110E62FE619827A2CD_gshared (Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE  Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553_gshared_inline (Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Int32,System.Object>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8E_gshared_inline (KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE * __this, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133  HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.HashSet`1/Enumerator<System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.HashSet`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m2E3757A7C76D2E1DB0B77D03FF3DE7406334779A_gshared (Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mA0C519E84D909C2F0BEABF433D85E0EC6FB7C218_gshared (Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32,System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Clear_m482455899CE0084909A48605A2F722B2F1307FB7_gshared (Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32,System.Object>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_m867F6DA953678D0333A55270B7C6EF38EFC293FF_gshared (Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * __this, int32_t ___key0, RuntimeObject ** ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32,System.Object>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mF7AEA0EFA07EEBC1A4B283A26A7CB720EE7A4C20_gshared (Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * __this, int32_t ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32,System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_m2204D6D532702FD13AB2A9AD8DB538E4E8FB1913_gshared (Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * __this, int32_t ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m7D745ADE56151C2895459668F4A4242985E526D8_gshared (Dictionary_2_t03608389BB57475AA3F4B2B79D176A27807BC884 * __this, const RuntimeMethod* method);

// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,System.String,Microsoft.MixedReality.Toolkit.Utilities.AxisType,Microsoft.MixedReality.Toolkit.Input.DeviceInputType,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.KeyCode,System.String,System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, String_t* ___description1, int32_t ___axisType2, int32_t ___inputType3, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction4, int32_t ___keyCode5, String_t* ___axisCodeX6, String_t* ___axisCodeY7, bool ___invertXAxis8, bool ___invertYAxis9, const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_ZeroIdentity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline (const RuntimeMethod* method);
// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_KeyCode()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_AxisCodeX()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_AxisCodeY()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_InvertXAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_InvertYAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::get_Description()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106A_inline (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::get_AxisType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FD_inline (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::get_InputType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6_inline (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::get_InputAction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputActionMapping_get_InputAction_mA9635F68EB361A716F6B93A94BF77B06542A8A28 (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_AxisType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogWarning(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568 (RuntimeObject * ___message0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_InputType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA (String_t* ___format0, RuntimeObject * ___arg01, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_Changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean System.Single::Equals(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7 (float* __this, float ___obj0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Multiply(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___b1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector2::op_Inequality(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lhs0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rhs1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Quaternion::op_Inequality(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Quaternion_op_Inequality_mDA6D2E63A498C8A9AB9A11DD7EA3B96567390C70 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::op_Inequality(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityPose_op_Inequality_m85FF483B646A63C06AE543020D4F85257046AB3D (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___left0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___right1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::.ctor(UnityEngine.KeyCode,System.String,System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, int32_t ___keyCode0, String_t* ___axisCodeX1, String_t* ___axisCodeY2, bool ___invertXAxis3, bool ___invertYAxis4, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseMixedRealityProfile__ctor_mC73E9360DB114F72FBC08703A0A9ABA78168B78A (BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputEventData::.ctor(UnityEngine.EventSystems.EventSystem)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputEventData__ctor_m0F7328A777D0A325204267833E18F52E418AE8AA (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputEventData::Initialize(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputEventData_Initialize_mDF11D791D9F66E4C9E4FED1B374028EE13A2E972 (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, RuntimeObject* ___inputSource0, uint8_t ___handedness1, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::set_Pointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::set_Count(System.Int32)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, int32_t ___value0, const RuntimeMethod* method);
// UnityEngine.LayerMask UnityEngine.LayerMask::op_Implicit(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300 (int32_t ___intVal0, const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.PointerOption>()
inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_inline (const RuntimeMethod* method)
{
	return ((  PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* (*) (const RuntimeMethod*))Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_gshared_inline)(method);
}
// UnityEngine.Vector3 UnityEngine.RaycastHit::get_point()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RaycastHit_get_point_m0E564B2A72C7A744B889AE9D596F3EFA55059001 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.RaycastHit::get_normal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RaycastHit_get_normal_mF736A6D09D98D63AB7E5BF10F38AEBFC177A1D94 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.RaycastHit::get_barycentricCoordinate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RaycastHit_get_barycentricCoordinate_m1384DAADA89355B2BECB0D6DC0FC9428728FFF09 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.RaycastHit::get_distance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float RaycastHit_get_distance_m1CBA60855C35F29BBC348D374BBC76386A243543 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.RaycastHit::get_triangleIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t RaycastHit_get_triangleIndex_mE6029E04F9AA327127146B8B71886F657796E78E (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Collider UnityEngine.RaycastHit::get_collider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.RaycastHit::get_textureCoord()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  RaycastHit_get_textureCoord_mE520CE27BD748249D38ABAA093FFAD9186FEE68D (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.RaycastHit::get_textureCoord2()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  RaycastHit_get_textureCoord2_m44B83C4AD15B69F9DA09CB4AA51493B983DFF12E (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.RaycastHit::get_lightmapCoord()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  RaycastHit_get_lightmapCoord_mDF3BB89FC6FCC243C15A764482AC9B42516FD3C7 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Mesh UnityEngine.MeshCollider::get_sharedMesh()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * MeshCollider_get_sharedMesh_mD66AB7910B58EBCB574232E54E6A496B81A56C67 (MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Mesh::get_isReadable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Mesh_get_isReadable_mC669062F2DC32484D130C3188FF21F88D4F84A19 (Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Mesh::HasVertexAttribute(UnityEngine.Rendering.VertexAttribute)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Mesh_HasVertexAttribute_m87C57B859ECB5224EEB77ED9BD3B6FF30F5A9B1C (Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * __this, int32_t ___attr0, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.RaycastHit::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * RaycastHit_get_transform_m3C0BEE7439CA37F82FD5216143B92BF32F995279 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::.ctor(System.Boolean,UnityEngine.RaycastHit)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76 (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * __this, bool ___raycastValid0, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ___hitInfo1, const RuntimeMethod* method);
// !!0[] System.Array::Empty<Microsoft.MixedReality.Toolkit.Input.SpeechCommands>()
inline SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_inline (const RuntimeMethod* method)
{
	return ((  SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* (*) (const RuntimeMethod*))Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_gshared_inline)(method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputSourceDefinition::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D (BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6 * __this, uint8_t ___handedness0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping::.ctor(System.String,Microsoft.MixedReality.Toolkit.Utilities.AxisType,Microsoft.MixedReality.Toolkit.Input.DeviceInputType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032 (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, String_t* ___description0, int32_t ___axisType1, int32_t ___inputType2, const RuntimeMethod* method);
// System.Void System.ArgumentException::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArgumentException__ctor_m9A85EF7FEFEC21DDD525A67E831D77278E5165B7 (ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1 * __this, String_t* ___message0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerOption::.ctor(Microsoft.MixedReality.Toolkit.Input.SupportedControllerType,Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, int32_t ___controllerType0, uint8_t ___handedness1, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointerPrefab2, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.SupportedControllerType Microsoft.MixedReality.Toolkit.Input.PointerOption::get_ControllerType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_inline (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.PointerOption::get_Handedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_inline (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PointerOption::get_PointerPrefab()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_inline (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::.ctor(UnityEngine.EventSystems.EventSystem)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputEventData__ctor_mEBF558B276C1066D066D7C6AEBE8147E19EF5F73 (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::BaseInitialize(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputEventData_BaseInitialize_mB2F424D21461AB89B95CCB03E14405375FACC25C (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, RuntimeObject* ___inputSource0, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechCommands::.ctor(System.String,UnityEngine.KeyCode,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, String_t* ___keyword0, int32_t ___keyCode1, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action2, String_t* ___localizationKey3, const RuntimeMethod* method);
// System.Boolean System.String::IsNullOrWhiteSpace(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_IsNullOrWhiteSpace_m62102CA65546AE151DC8254B72110F4AA48E2135 (String_t* ___value0, const RuntimeMethod* method);
// Windows.ApplicationModel.Resources.ResourceLoader Windows.ApplicationModel.Resources.ResourceLoader::GetForViewIndependentUse()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7 * ResourceLoader_GetForViewIndependentUse_mE4720FC4004660F31458F37540685A14332D0323 (const RuntimeMethod* method);
// System.String Windows.ApplicationModel.Resources.ResourceLoader::GetString(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* ResourceLoader_GetString_m8586C7138823D162F671D6958F3F245C17E6B628 (ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7 * __this, String_t* ___resource0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_LocalizedKeyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Keyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_KeyCode()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_inline (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Action()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_inline (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_Confidence(Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_PhraseDuration(System.TimeSpan)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_PhraseStartTime(System.DateTime)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_Command(Microsoft.MixedReality.Toolkit.Input.SpeechCommands)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___definition2, RuntimeObject* ___inputSource3, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions4, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseController__ctor_m6B509BCC8DF752AD27011E3C23E91DFB17C8F6AE (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, RuntimeObject* ___definition4, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.BaseController::get_Interactions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// System.Type System.Object::GetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60 (RuntimeObject * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_left()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_left_m74B52D8CFD8C62138067B2EB6846B6E9E51B7C20 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::set_Rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_PoseData(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.BaseController::get_ControllerHandedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::BuildInteractions(System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, RuntimeObject* ___definitionInteractions0, MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___legacyInputs1, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A (String_t* ___format0, RuntimeObject * ___arg01, RuntimeObject * ___arg12, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * ___mixedRealityInputActionMapping1, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  ___legacyInput2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * ___mixedRealityInputActionMapping1, const RuntimeMethod* method);
// Unity.Profiling.ProfilerMarker/AutoScope Unity.Profiling.ProfilerMarker::Auto()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::get_Enabled()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseController::set_Enabled(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateButtonData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateSingleAxisData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateDualAxisData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdatePoseData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Int32>::.ctor(!0)
inline void Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2 (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, int32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *, int32_t, const RuntimeMethod*))Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_gshared)(__this, ___value0, method);
}
// !0 System.Nullable`1<System.Int32>::GetValueOrDefault()
inline int32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_gshared_inline)(__this, method);
}
// System.Boolean System.Nullable`1<System.Int32>::get_HasValue()
inline bool Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *, const RuntimeMethod*))Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_gshared_inline)(__this, method);
}
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::Dispose()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E (bool ___condition0, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_AxisCodeX()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Input::GetAxisRaw(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Input_GetAxisRaw_mC68301A9D93702F0C393E45C6337348062EACE21 (String_t* ___axisName0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_BoolData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method);
// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_KeyCode()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Input::GetKey(UnityEngine.KeyCode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Input_GetKey_m46AA83E14F9C3A75E06FE0A8C55740D47B2DB784 (int32_t ___key0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_BoolData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem Microsoft.MixedReality.Toolkit.CoreServices::get_InputSystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8 (const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseController::get_InputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_MixedRealityInputAction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_FloatData(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, float ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_FloatData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_AxisCodeY()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_Vector2Data(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Vector2Data()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::set_Position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_PoseData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::.ctor(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MouseControllerDefinition::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E (MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Input::get_mousePresent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Input_get_mousePresent_m84357E5B596CD17272874EF83E2D2F2864580E05 (const RuntimeMethod* method);
// T Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<Microsoft.MixedReality.Toolkit.Input.IMixedRealityMouseDeviceManager>()
inline RuntimeObject* CoreServices_GetInputSystemDataProvider_TisIMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_m6678BE77DBD2504AFD9C5F6CB1F9512DBA4297C1 (const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (const RuntimeMethod*))CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared)(method);
}
// UnityEngine.Vector3 UnityEngine.Input::get_mousePosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53 (const RuntimeMethod* method);
// System.Int32 UnityEngine.Screen::get_width()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Screen_get_width_m8ECCEF7FF17395D1237BC0193D7A6640A3FEEAD3 (const RuntimeMethod* method);
// System.Int32 UnityEngine.Screen::get_height()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Screen_get_height_mF5B64EBC4CDE0EAAA5713C1452ED2CE475F25150 (const RuntimeMethod* method);
// System.Single UnityEngine.Input::GetAxis(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Input_GetAxis_m6454498C755B9A2C964875927FB557CA9E75D387 (String_t* ___axisName0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___euler0, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___v0, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Input::get_mouseScrollDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Input_get_mouseScrollDelta_m66F785090C429CE7DCDEF09C92CDBDD08FCDE98D (const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Multiply(UnityEngine.Vector2,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, float ___d1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseDataProvider`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem>::set_Registrar(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar)
inline void BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_inline (BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	((  void (*) (BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966 *, RuntimeObject*, const RuntimeMethod*))BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209_gshared_inline)(__this, ___value0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputDeviceManager__ctor_m1746D3A8EBE4F327683713A37AF88FF94969DD1B (BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Clamp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507 (float ___value0, float ___min1, float ___max2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseInputDeviceManager_Initialize_m225122D3D7BCF0BBBD6DEE1E4F8CA3E238CB71DC (BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::ReadProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseService::Enable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseService_Enable_m04CE0EA9BE41F36575F1B7FBDAE7CB7514EFEB49 (BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method);
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::Find(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * MixedRealityControllerAttribute_Find_mE7629886DC03917866AF6BA137963D97A83A331F (Type_t * ___type0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness[] Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerAttribute::get_SupportedHandedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1_inline (MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC (bool ___condition0, String_t* ___message1, const RuntimeMethod* method);
// T Microsoft.MixedReality.Toolkit.BaseDataProvider`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem>::get_Service()
inline RuntimeObject* BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline (BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966 * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (BaseDataProvider_1_t3C6A855F93E52373AFB4857AC6D668A38D58B966 *, const RuntimeMethod*))BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2C_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::set_Controller(Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_inline (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseService::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseService_Update_mAE9EBAC35F456E318362A34CA0ED90722C6C6F42 (BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseService::Disable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseService_Disable_m349524E2ECE37A703BC12D77419612C9162EC92A (BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::get_CursorSpeed()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_inline (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::set_CursorSpeed(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, float ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::get_WheelSpeed()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_inline (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::set_WheelSpeed(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, float ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_unscaledDeltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_unscaledDeltaTime_mA0AE7A144C88AE8AABB42DF17B0F3F0714BA06B2 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::RefreshDevices()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::GetEnumerator()
inline Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011  Dictionary_2_GetEnumerator_m8FF1FB6216734271E1D7757714BBF0BBCC63A85C (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011  (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, const RuntimeMethod*))Dictionary_2_GetEnumerator_mF1CF1D13F3E70C6D20D96D9AC88E44454E4C0053_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::get_Current()
inline KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  Enumerator_get_Current_m580CCFE476343A034A018DC5D713BE06CD47F5C5_inline (Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  (*) (Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *, const RuntimeMethod*))Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::get_Value()
inline GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_inline (KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A * __this, const RuntimeMethod* method)
{
	return ((  GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * (*) (KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A *, const RuntimeMethod*))KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::MoveNext()
inline bool Enumerator_MoveNext_mC6E0E3541F0A87B9F9FFDC157E3CE05B68AA1268 (Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *, const RuntimeMethod*))Enumerator_MoveNext_m9B9FB07EC2C1D82E921C9316A4E0901C933BBF6C_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::Dispose()
inline void Enumerator_Dispose_mA9EEA8ACD842AAE42972E735B4ED02DB80DCFAC6 (Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *, const RuntimeMethod*))Enumerator_Dispose_mE363888280B72ED50538416C060EF9FC94B3BB00_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::Clear()
inline void Dictionary_2_Clear_m9FD6C20A778F2D2F0F63681D63EF9DA51AC5F1A2 (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, const RuntimeMethod*))Dictionary_2_Clear_m1115171C74C982EA09CF1B8DB7E4C97ED6AC23D4_gshared)(__this, method);
}
// System.Collections.Generic.Dictionary`2/ValueCollection<!0,!1> System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::get_Values()
inline ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A * Dictionary_2_get_Values_m8B00A65ACFC01906741611CB7601750B9BCB2CDF (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, const RuntimeMethod* method)
{
	return ((  ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A * (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, const RuntimeMethod*))Dictionary_2_get_Values_m58CC32586C31C6F38B730DE7CD79A1FFE9109BA4_gshared)(__this, method);
}
// !!0[] System.Linq.Enumerable::ToArray<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>(System.Collections.Generic.IEnumerable`1<!!0>)
inline IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* Enumerable_ToArray_TisIMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_m4B0F45E6D631135CAE99179B9ABEC8C860AB0C44 (RuntimeObject* ___source0, const RuntimeMethod* method)
{
	return ((  IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* (*) (RuntimeObject*, const RuntimeMethod*))Enumerable_ToArray_TisRuntimeObject_mBEE3CCB2651B39976F7ECCBB024119C449ABF8B8_gshared)(___source0, method);
}
// System.String[] UnityEngine.Input::GetJoystickNames()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* Input_GetJoystickNames_m99559CDAA21A390D9D10E9B82F65397C32424C32 (const RuntimeMethod* method);
// System.Boolean System.String::Equals(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_Equals_m9C4D78DFA0979504FE31429B64A4C26DF48020D1 (String_t* __this, String_t* ___value0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571 (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, String_t* ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, String_t*, const RuntimeMethod*))Dictionary_2_ContainsKey_m4EBC00E16E83DA33851A551757D2B7332D5756B9_gshared)(__this, ___key0, method);
}
// System.Boolean System.String::IsNullOrEmpty(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229 (String_t* ___value0, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::get_Item(!0)
inline GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * Dictionary_2_get_Item_m0696A60D09B1FAA461A45B2C28B3FB371C4F941C (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, String_t* ___key0, const RuntimeMethod* method)
{
	return ((  GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, String_t*, const RuntimeMethod*))Dictionary_2_get_Item_m6625C3BA931A6EE5D6DB46B9E743B40AAA30010B_gshared)(__this, ___key0, method);
}
// System.Object System.Activator::CreateInstance(System.Type,System.Object[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Activator_CreateInstance_mEE50708E1E8AAD4E5021A2FFDB992DDF65727E17 (Type_t * ___type0, ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___args1, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::Add(!0,!1)
inline void Dictionary_2_Add_m9C52F46BB4751273EEB9FBE1CB2B1E35D3540A7C (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, String_t* ___key0, GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, String_t*, GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *, const RuntimeMethod*))Dictionary_2_Add_mC741BBB0A647C814227953DB9B23CB1BDF571C5B_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::Remove(!0)
inline bool Dictionary_2_Remove_mE0031EE54F04BC349BAE2FCFC9FCDD0FF4FD8E3C (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, String_t* ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, String_t*, const RuntimeMethod*))Dictionary_2_Remove_m0FCCD33CE2C6A7589E52A2AB0872FE361BF5EF60_gshared)(__this, ___key0, method);
}
// System.Boolean System.String::Contains(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B (String_t* __this, String_t* ___value0, const RuntimeMethod* method);
// System.String System.String::ToLower()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8 (String_t* __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.String,Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController>::.ctor()
inline void Dictionary_2__ctor_m6AFD8CFDF30BA488E5D39AD0F76C0694353487B8 (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *, const RuntimeMethod*))Dictionary_2__ctor_m2C7E51568033239B506E15E7804A0B8658246498_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchScreenDefinition::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E (TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseController::SetupDefaultInteractions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseController_SetupDefaultInteractions_mA62F23BA33A0C35AD25BF4F19363CAAE853DD2A2 (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_GesturesProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * MixedRealityInputSystemProfile_get_GesturesProfile_mA8F275BA8A5AE96D3A95350F698A7343D72E5129 (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[] Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::get_Gestures()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.GestureInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::get_GestureType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::get_Action()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_Lifetime()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_Lifetime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, float ___value0, const RuntimeMethod* method);
// UnityEngine.Touch Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_TouchData()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// UnityEngine.TouchPhase UnityEngine.Touch::get_phase()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Touch_get_phase_m759A61477ECBBD90A57E36F1166EB9340A0FE349 (Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Touch::get_deltaPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64 (Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_ManipulationThreshold()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_MaxTapContactTime()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Touch::get_tapCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Touch_get_tapCount_m05E8AD1DD071603EA806087E42A7BC6FFA18C5F9 (Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::.ctor()
inline void List_1__ctor_mB8C580D84B1E55A95131F82A4FC55A236DDE2734 (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// !0 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::get_Item(System.Int32)
inline UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * List_1_get_Item_m902E064E7124DC92A785E2B9A4E0834340DFDD8A_inline (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * (*) (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::get_Count()
inline int32_t List_1_get_Count_mF49B7896BD967B3666158CEEE7BB82DBFCC78770_inline (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::Clear()
inline void List_1_Clear_m73FE262EDA97C22B87F4852530316000528DA335 (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 *, const RuntimeMethod*))List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared)(__this, method);
}
// System.Int32 UnityEngine.Input::get_touchCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Input_get_touchCount_m497E19AA4FA22DB659F631B20FAEF65572D1B44E (const RuntimeMethod* method);
// UnityEngine.Touch[] UnityEngine.Input::get_touches()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TouchU5BU5D_t0207B72FD95EF1F56E7A6C9F0A42896B03D2BD5D* Input_get_touches_mD31418E8B2487DBC9641A15677B41B459859011A (const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Utilities.CameraCache::get_Main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554 (const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Touch::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Touch_get_position_m2E60676112DA3628CF2DC76418A275C7FE521D8F (Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector2_op_Implicit_mD152B6A34B4DB7FFECC2844D74718568FE867D6F (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___v0, const RuntimeMethod* method);
// UnityEngine.Ray UnityEngine.Camera::ScreenPointToRay(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  Camera_ScreenPointToRay_m27638E78502DB6D6D7113F81AF7C210773B828F3 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::AddTouchController(UnityEngine.Touch,UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___touch0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___ray1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::UpdateTouchData(UnityEngine.Touch,UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___touch0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___ray1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::RemoveTouchController(UnityEngine.Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___touch0, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::GetEnumerator()
inline Enumerator_t302202D6382013588B561A500FF7B594704FCCDA  Dictionary_2_GetEnumerator_mC56F3FFF67E6CD1A08088FF4C7B165CA69702B8D (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t302202D6382013588B561A500FF7B594704FCCDA  (*) (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *, const RuntimeMethod*))Dictionary_2_GetEnumerator_m96229BB73AA611A324DC70110E62FE619827A2CD_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::get_Current()
inline KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  Enumerator_get_Current_mDCF3615CD5DB835933BF9CBD12589BD70D73B088_inline (Enumerator_t302202D6382013588B561A500FF7B594704FCCDA * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  (*) (Enumerator_t302202D6382013588B561A500FF7B594704FCCDA *, const RuntimeMethod*))Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::get_Value()
inline UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_inline (KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D * __this, const RuntimeMethod* method)
{
	return ((  UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * (*) (KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D *, const RuntimeMethod*))KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8E_gshared_inline)(__this, method);
}
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::GetEnumerator()
inline Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE (HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  (*) (HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F *, const RuntimeMethod*))HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared)(__this, method);
}
// !0 System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::get_Current()
inline RuntimeObject* Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_inline (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::MoveNext()
inline bool Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327 (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared)(__this, method);
}
// System.Void System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::Dispose()
inline void Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498 (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::MoveNext()
inline bool Enumerator_MoveNext_mE0DB4245D460F7AF6C5BF327AC8E5DD06F95662A (Enumerator_t302202D6382013588B561A500FF7B594704FCCDA * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t302202D6382013588B561A500FF7B594704FCCDA *, const RuntimeMethod*))Enumerator_MoveNext_m2E3757A7C76D2E1DB0B77D03FF3DE7406334779A_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::Dispose()
inline void Enumerator_Dispose_m39A511596ACB5BBD01500520D94056D7DDF1CE13 (Enumerator_t302202D6382013588B561A500FF7B594704FCCDA * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t302202D6382013588B561A500FF7B594704FCCDA *, const RuntimeMethod*))Enumerator_Dispose_mA0C519E84D909C2F0BEABF433D85E0EC6FB7C218_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::Clear()
inline void Dictionary_2_Clear_m5BC780B1E0C90700EA1D5062A3260A265EF78A80 (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *, const RuntimeMethod*))Dictionary_2_Clear_m482455899CE0084909A48605A2F722B2F1307FB7_gshared)(__this, method);
}
// System.Int32 UnityEngine.Touch::get_fingerId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D (Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04 (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * __this, int32_t ___key0, UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 ** ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *, int32_t, UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 **, const RuntimeMethod*))Dictionary_2_TryGetValue_m867F6DA953678D0333A55270B7C6EF38EFC293FF_gshared)(__this, ___key0, ___value1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::Add(!0,!1)
inline void Dictionary_2_Add_m3FC788FC7B8816967B9EC77354AC2FAD9550FF9D (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * __this, int32_t ___key0, UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *, int32_t, UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 *, const RuntimeMethod*))Dictionary_2_Add_mF7AEA0EFA07EEBC1A4B283A26A7CB720EE7A4C20_gshared)(__this, ___key0, ___value1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_TouchData(UnityEngine.Touch)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::StartTouch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_ScreenPointRay(UnityEngine.Ray)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::EndTouch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::Add(!0)
inline void List_1_Add_m71AFC3161B8141E5CC800EDB1F481131F3E9F720 (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * __this, UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 *, UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::Remove(!0)
inline bool Dictionary_2_Remove_m6DB227679C4A31F46514CAD78DD69AA39EAA4134 (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * __this, int32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *, int32_t, const RuntimeMethod*))Dictionary_2_Remove_m2204D6D532702FD13AB2A9AD8DB538E4E8FB1913_gshared)(__this, ___key0, method);
}
// System.Void System.Collections.Generic.Dictionary`2<System.Int32,Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController>::.ctor()
inline void Dictionary_2__ctor_mDC48879027B12DEEF5A5FDBEB8ACA6D4F865884F (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *, const RuntimeMethod*))Dictionary_2__ctor_m7D745ADE56151C2895459668F4A4242985E526D8_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.XboxControllerDefinition::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XboxControllerDefinition__ctor_m0EBBFA2B2E65D98B60D8583F844B3666B2579120 (XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::.ctor(System.IntPtr)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_End(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A (intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.IntPtr Unity.Profiling.ProfilerMarker::Internal_Create(System.String,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370 (String_t* ___name0, uint16_t ___flags1, const RuntimeMethod* method);
// System.Void System.ThrowHelper::ThrowArgumentOutOfRangeException()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550 (const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_Begin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5 (intptr_t ___markerPtr0, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,System.String,Microsoft.MixedReality.Toolkit.Utilities.AxisType,Microsoft.MixedReality.Toolkit.Input.DeviceInputType,System.String,System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m25755E7CBE0BCCD43E32856AFE1EB8C34ABF6579 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, String_t* ___description1, int32_t ___axisType2, int32_t ___inputType3, String_t* ___axisCodeX4, String_t* ___axisCodeY5, bool ___invertXAxis6, bool ___invertYAxis7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m25755E7CBE0BCCD43E32856AFE1EB8C34ABF6579_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___id0), (&___description1), (&___axisType2), (&___inputType3), (&___axisCodeX4), (&___axisCodeY5), (&___invertXAxis6), (&___invertYAxis7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m25755E7CBE0BCCD43E32856AFE1EB8C34ABF6579_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25233));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25234));
	{
		// : this(id, description, axisType, inputType, MixedRealityInputAction.None, KeyCode.None, axisCodeX, axisCodeY, invertXAxis, invertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25235));
		uint32_t L_0 = ___id0;
		String_t* L_1 = ___description1;
		int32_t L_2 = ___axisType2;
		int32_t L_3 = ___inputType3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25238));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25238));
		String_t* L_5 = ___axisCodeX4;
		String_t* L_6 = ___axisCodeY5;
		bool L_7 = ___invertXAxis6;
		bool L_8 = ___invertYAxis7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25239));
		MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F(__this, L_0, L_1, L_2, L_3, L_4, 0, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25239));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25236));
		// : this(id, description, axisType, inputType, MixedRealityInputAction.None, KeyCode.None, axisCodeX, axisCodeY, invertXAxis, invertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25237));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,System.String,Microsoft.MixedReality.Toolkit.Utilities.AxisType,Microsoft.MixedReality.Toolkit.Input.DeviceInputType,UnityEngine.KeyCode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m2AC9CA51EE6392725A4EE663ECA63B765AF4638D (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, String_t* ___description1, int32_t ___axisType2, int32_t ___inputType3, int32_t ___keyCode4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m2AC9CA51EE6392725A4EE663ECA63B765AF4638D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___id0), (&___description1), (&___axisType2), (&___inputType3), (&___keyCode4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m2AC9CA51EE6392725A4EE663ECA63B765AF4638D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25240));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25241));
	{
		// : this(id, description, axisType, inputType, MixedRealityInputAction.None, keyCode) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25242));
		uint32_t L_0 = ___id0;
		String_t* L_1 = ___description1;
		int32_t L_2 = ___axisType2;
		int32_t L_3 = ___inputType3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25245));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25245));
		int32_t L_5 = ___keyCode4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25246));
		MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F(__this, L_0, L_1, L_2, L_3, L_4, L_5, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25246));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25243));
		// : this(id, description, axisType, inputType, MixedRealityInputAction.None, keyCode) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25244));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,System.String,Microsoft.MixedReality.Toolkit.Utilities.AxisType,Microsoft.MixedReality.Toolkit.Input.DeviceInputType,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.KeyCode,System.String,System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, String_t* ___description1, int32_t ___axisType2, int32_t ___inputType3, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction4, int32_t ___keyCode5, String_t* ___axisCodeX6, String_t* ___axisCodeY7, bool ___invertXAxis8, bool ___invertYAxis9, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___id0), (&___description1), (&___axisType2), (&___inputType3), (&___inputAction4), (&___keyCode5), (&___axisCodeX6), (&___axisCodeY7), (&___invertXAxis8), (&___invertYAxis9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25247));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25248));
	{
		// private bool invertXAxis = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25249));
		__this->set_invertXAxis_8((bool)0);
		// private bool invertYAxis = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25250));
		__this->set_invertYAxis_9((bool)0);
		// public MixedRealityInteractionMapping(uint id, string description, AxisType axisType, DeviceInputType inputType, MixedRealityInputAction inputAction, KeyCode keyCode = KeyCode.None, string axisCodeX = "", string axisCodeY = "", bool invertXAxis = false, bool invertYAxis = false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25272));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25272));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25252));
		// this.id = id;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25253));
		uint32_t L_0 = ___id0;
		__this->set_id_0(L_0);
		// this.description = description;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25254));
		String_t* L_1 = ___description1;
		__this->set_description_1(L_1);
		// this.axisType = axisType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25255));
		int32_t L_2 = ___axisType2;
		__this->set_axisType_2(L_2);
		// this.inputType = inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25256));
		int32_t L_3 = ___inputType3;
		__this->set_inputType_3(L_3);
		// this.inputAction = inputAction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25257));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = ___inputAction4;
		__this->set_inputAction_4(L_4);
		// this.keyCode = keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25258));
		int32_t L_5 = ___keyCode5;
		__this->set_keyCode_5(L_5);
		// this.axisCodeX = axisCodeX;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25259));
		String_t* L_6 = ___axisCodeX6;
		__this->set_axisCodeX_6(L_6);
		// this.axisCodeY = axisCodeY;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25260));
		String_t* L_7 = ___axisCodeY7;
		__this->set_axisCodeY_7(L_7);
		// this.invertXAxis = invertXAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25261));
		bool L_8 = ___invertXAxis8;
		__this->set_invertXAxis_8(L_8);
		// this.invertYAxis = invertYAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25262));
		bool L_9 = ___invertYAxis9;
		__this->set_invertYAxis_9(L_9);
		// rawData = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25263));
		__this->set_rawData_11(NULL);
		// boolData = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25264));
		__this->set_boolData_12((bool)0);
		// floatData = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25265));
		__this->set_floatData_13((0.0f));
		// vector2Data = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25266));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25273));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25273));
		__this->set_vector2Data_14(L_10);
		// positionData = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25267));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25274));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25274));
		__this->set_positionData_15(L_11);
		// rotationData = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25268));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25275));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25275));
		__this->set_rotationData_16(L_12);
		// poseData = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25269));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25276));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_13 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25276));
		__this->set_poseData_17(L_13);
		// changed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25270));
		__this->set_changed_10((bool)0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25271));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m844CD9BA2E6C52967CA36908B2EA7739BF9CBC64 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___mixedRealityInteractionMapping0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m844CD9BA2E6C52967CA36908B2EA7739BF9CBC64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mixedRealityInteractionMapping0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m844CD9BA2E6C52967CA36908B2EA7739BF9CBC64_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25277));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25278));
	{
		// : this(mixedRealityInteractionMapping.id,
		//        mixedRealityInteractionMapping.description,
		//        mixedRealityInteractionMapping.axisType,
		//        mixedRealityInteractionMapping.inputType,
		//        mixedRealityInteractionMapping.inputAction,
		//        mixedRealityInteractionMapping.keyCode,
		//        mixedRealityInteractionMapping.axisCodeX,
		//        mixedRealityInteractionMapping.axisCodeY,
		//        mixedRealityInteractionMapping.invertXAxis,
		//        mixedRealityInteractionMapping.invertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25279));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_0 = ___mixedRealityInteractionMapping0;
		NullCheck(L_0);
		uint32_t L_1 = L_0->get_id_0();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_2 = ___mixedRealityInteractionMapping0;
		NullCheck(L_2);
		String_t* L_3 = L_2->get_description_1();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_4 = ___mixedRealityInteractionMapping0;
		NullCheck(L_4);
		int32_t L_5 = L_4->get_axisType_2();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_6 = ___mixedRealityInteractionMapping0;
		NullCheck(L_6);
		int32_t L_7 = L_6->get_inputType_3();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_8 = ___mixedRealityInteractionMapping0;
		NullCheck(L_8);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_9 = L_8->get_inputAction_4();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_10 = ___mixedRealityInteractionMapping0;
		NullCheck(L_10);
		int32_t L_11 = L_10->get_keyCode_5();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_12 = ___mixedRealityInteractionMapping0;
		NullCheck(L_12);
		String_t* L_13 = L_12->get_axisCodeX_6();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_14 = ___mixedRealityInteractionMapping0;
		NullCheck(L_14);
		String_t* L_15 = L_14->get_axisCodeY_7();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_16 = ___mixedRealityInteractionMapping0;
		NullCheck(L_16);
		bool L_17 = L_16->get_invertXAxis_8();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_18 = ___mixedRealityInteractionMapping0;
		NullCheck(L_18);
		bool L_19 = L_18->get_invertYAxis_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25282));
		MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F(__this, L_1, L_3, L_5, L_7, L_9, L_11, L_13, L_15, L_17, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25282));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25280));
		// mixedRealityInteractionMapping.invertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25281));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m7E51D8A37DB3D824E9E174072CD0530BE6F413D9 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___mixedRealityInteractionMapping0, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  ___legacyInput1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m7E51D8A37DB3D824E9E174072CD0530BE6F413D9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mixedRealityInteractionMapping0), (&___legacyInput1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m7E51D8A37DB3D824E9E174072CD0530BE6F413D9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25283));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25284));
	{
		// : this(mixedRealityInteractionMapping.id,
		//        mixedRealityInteractionMapping.description,
		//        mixedRealityInteractionMapping.axisType,
		//        mixedRealityInteractionMapping.inputType,
		//        mixedRealityInteractionMapping.inputAction,
		//        legacyInput.KeyCode,
		//        legacyInput.AxisCodeX,
		//        legacyInput.AxisCodeY,
		//        legacyInput.InvertXAxis,
		//        legacyInput.InvertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25285));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_0 = ___mixedRealityInteractionMapping0;
		NullCheck(L_0);
		uint32_t L_1 = L_0->get_id_0();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_2 = ___mixedRealityInteractionMapping0;
		NullCheck(L_2);
		String_t* L_3 = L_2->get_description_1();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_4 = ___mixedRealityInteractionMapping0;
		NullCheck(L_4);
		int32_t L_5 = L_4->get_axisType_2();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_6 = ___mixedRealityInteractionMapping0;
		NullCheck(L_6);
		int32_t L_7 = L_6->get_inputType_3();
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_8 = ___mixedRealityInteractionMapping0;
		NullCheck(L_8);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_9 = L_8->get_inputAction_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25288));
		int32_t L_10 = MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25288));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25289));
		String_t* L_11 = MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25289));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25290));
		String_t* L_12 = MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25290));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25291));
		bool L_13 = MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25291));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25292));
		bool L_14 = MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25292));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25293));
		MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F(__this, L_1, L_3, L_5, L_7, L_9, L_10, L_11, L_12, L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25293));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25286));
		// legacyInput.InvertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25287));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * ___mixedRealityInputActionMapping1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___id0), (&___mixedRealityInputActionMapping1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25294));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25295));
	{
		// : this(id,
		//        mixedRealityInputActionMapping.Description,
		//        mixedRealityInputActionMapping.AxisType,
		//        mixedRealityInputActionMapping.InputType,
		//        mixedRealityInputActionMapping.InputAction) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25296));
		uint32_t L_0 = ___id0;
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_1 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25299));
		NullCheck(L_1);
		String_t* L_2 = MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106A_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25299));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_3 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25300));
		NullCheck(L_3);
		int32_t L_4 = MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FD_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25300));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_5 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25301));
		NullCheck(L_5);
		int32_t L_6 = MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6_inline(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25301));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_7 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25302));
		NullCheck(L_7);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = MixedRealityInputActionMapping_get_InputAction_mA9635F68EB361A716F6B93A94BF77B06542A8A28(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25303));
		MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F(__this, L_0, L_2, L_4, L_6, L_8, 0, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25303));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25297));
		// mixedRealityInputActionMapping.InputAction) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25298));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::.ctor(System.UInt32,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, uint32_t ___id0, MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * ___mixedRealityInputActionMapping1, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  ___legacyInput2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___id0), (&___mixedRealityInputActionMapping1), (&___legacyInput2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25304));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25305));
	String_t* G_B2_0 = NULL;
	int32_t G_B2_1 = 0;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B2_2;
	memset((&G_B2_2), 0, sizeof(G_B2_2));
	int32_t G_B2_3 = 0;
	int32_t G_B2_4 = 0;
	String_t* G_B2_5 = NULL;
	uint32_t G_B2_6 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B2_7 = NULL;
	String_t* G_B1_0 = NULL;
	int32_t G_B1_1 = 0;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B1_2;
	memset((&G_B1_2), 0, sizeof(G_B1_2));
	int32_t G_B1_3 = 0;
	int32_t G_B1_4 = 0;
	String_t* G_B1_5 = NULL;
	uint32_t G_B1_6 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B1_7 = NULL;
	String_t* G_B4_0 = NULL;
	String_t* G_B4_1 = NULL;
	int32_t G_B4_2 = 0;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B4_3;
	memset((&G_B4_3), 0, sizeof(G_B4_3));
	int32_t G_B4_4 = 0;
	int32_t G_B4_5 = 0;
	String_t* G_B4_6 = NULL;
	uint32_t G_B4_7 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B4_8 = NULL;
	String_t* G_B3_0 = NULL;
	String_t* G_B3_1 = NULL;
	int32_t G_B3_2 = 0;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B3_3;
	memset((&G_B3_3), 0, sizeof(G_B3_3));
	int32_t G_B3_4 = 0;
	int32_t G_B3_5 = 0;
	String_t* G_B3_6 = NULL;
	uint32_t G_B3_7 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B3_8 = NULL;
	{
		// : this(id,
		//        mixedRealityInputActionMapping.Description,
		//        mixedRealityInputActionMapping.AxisType,
		//        mixedRealityInputActionMapping.InputType,
		//        mixedRealityInputActionMapping.InputAction,
		//        legacyInput.KeyCode,
		//        legacyInput.AxisCodeX ?? string.Empty, // defaults to null in the struct, but Unity serializes as empty string
		//        legacyInput.AxisCodeY ?? string.Empty, // defaults to null in the struct, but Unity serializes as empty string
		//        legacyInput.InvertXAxis,
		//        legacyInput.InvertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25306));
		uint32_t L_0 = ___id0;
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_1 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25309));
		NullCheck(L_1);
		String_t* L_2 = MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106A_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25309));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_3 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25310));
		NullCheck(L_3);
		int32_t L_4 = MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FD_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25310));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_5 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25311));
		NullCheck(L_5);
		int32_t L_6 = MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6_inline(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25311));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_7 = ___mixedRealityInputActionMapping1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25312));
		NullCheck(L_7);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = MixedRealityInputActionMapping_get_InputAction_mA9635F68EB361A716F6B93A94BF77B06542A8A28(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25312));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25313));
		int32_t L_9 = MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25313));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25314));
		String_t* L_10 = MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25314));
		String_t* L_11 = L_10;
		G_B1_0 = L_11;
		G_B1_1 = L_9;
		G_B1_2 = L_8;
		G_B1_3 = L_6;
		G_B1_4 = L_4;
		G_B1_5 = L_2;
		G_B1_6 = L_0;
		G_B1_7 = __this;
		if (L_11)
		{
			G_B2_0 = L_11;
			G_B2_1 = L_9;
			G_B2_2 = L_8;
			G_B2_3 = L_6;
			G_B2_4 = L_4;
			G_B2_5 = L_2;
			G_B2_6 = L_0;
			G_B2_7 = __this;
			goto IL_0031;
		}
	}
	{
		String_t* L_12 = ((String_t_StaticFields*)il2cpp_codegen_static_fields_for(String_t_il2cpp_TypeInfo_var))->get_Empty_5();
		G_B2_0 = L_12;
		G_B2_1 = G_B1_1;
		G_B2_2 = G_B1_2;
		G_B2_3 = G_B1_3;
		G_B2_4 = G_B1_4;
		G_B2_5 = G_B1_5;
		G_B2_6 = G_B1_6;
		G_B2_7 = G_B1_7;
	}

IL_0031:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25315));
		String_t* L_13 = MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25315));
		String_t* L_14 = L_13;
		G_B3_0 = L_14;
		G_B3_1 = G_B2_0;
		G_B3_2 = G_B2_1;
		G_B3_3 = G_B2_2;
		G_B3_4 = G_B2_3;
		G_B3_5 = G_B2_4;
		G_B3_6 = G_B2_5;
		G_B3_7 = G_B2_6;
		G_B3_8 = G_B2_7;
		if (L_14)
		{
			G_B4_0 = L_14;
			G_B4_1 = G_B2_0;
			G_B4_2 = G_B2_1;
			G_B4_3 = G_B2_2;
			G_B4_4 = G_B2_3;
			G_B4_5 = G_B2_4;
			G_B4_6 = G_B2_5;
			G_B4_7 = G_B2_6;
			G_B4_8 = G_B2_7;
			goto IL_0041;
		}
	}
	{
		String_t* L_15 = ((String_t_StaticFields*)il2cpp_codegen_static_fields_for(String_t_il2cpp_TypeInfo_var))->get_Empty_5();
		G_B4_0 = L_15;
		G_B4_1 = G_B3_1;
		G_B4_2 = G_B3_2;
		G_B4_3 = G_B3_3;
		G_B4_4 = G_B3_4;
		G_B4_5 = G_B3_5;
		G_B4_6 = G_B3_6;
		G_B4_7 = G_B3_7;
		G_B4_8 = G_B3_8;
	}

IL_0041:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25316));
		bool L_16 = MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25316));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25317));
		bool L_17 = MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_inline((MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *)(&___legacyInput2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25317));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25318));
		NullCheck(G_B4_8);
		MixedRealityInteractionMapping__ctor_m42FA7B2EF2BAA3804530651DFDF1145EEECE437F(G_B4_8, G_B4_7, G_B4_6, G_B4_5, G_B4_4, G_B4_3, G_B4_2, G_B4_1, G_B4_0, L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25318));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25307));
		// legacyInput.InvertYAxis) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25308));
		return;
	}
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Id()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t MixedRealityInteractionMapping_get_Id_mD6C2BC5B6E0DA6E5655456F21B8E897B9F12C358 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_Id_mD6C2BC5B6E0DA6E5655456F21B8E897B9F12C358_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_Id_mD6C2BC5B6E0DA6E5655456F21B8E897B9F12C358_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25319));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25320));
	{
		// public uint Id => id;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25321));
		uint32_t L_0 = __this->get_id_0();
		return L_0;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Description()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_Description_mE13C0C1AA4390BBD2DC1CB5A21DDD4B05888EC6C (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_Description_mE13C0C1AA4390BBD2DC1CB5A21DDD4B05888EC6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_Description_mE13C0C1AA4390BBD2DC1CB5A21DDD4B05888EC6C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25322));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25323));
	{
		// public string Description => description;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25324));
		String_t* L_0 = __this->get_description_1();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_AxisType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25325));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25326));
	{
		// public AxisType AxisType => axisType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25327));
		int32_t L_0 = __this->get_axisType_2();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_InputType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25329));
	{
		// public DeviceInputType InputType => inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25330));
		int32_t L_0 = __this->get_inputType_3();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_MixedRealityInputAction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25331));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25332));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25333));
		// get { return inputAction; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25334));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_inputAction_4();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return inputAction; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25335));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_MixedRealityInputAction(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_MixedRealityInputAction_m8C85B3C044B29D8A528BE7E5AD68B8756569C0BD (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_MixedRealityInputAction_m8C85B3C044B29D8A528BE7E5AD68B8756569C0BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_MixedRealityInputAction_m8C85B3C044B29D8A528BE7E5AD68B8756569C0BD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25336));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25337));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25338));
		// internal set { inputAction = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25339));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ___value0;
		__this->set_inputAction_4(L_0);
		// internal set { inputAction = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25340));
		return;
	}
}
// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_KeyCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25342));
	{
		// public KeyCode KeyCode => keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25343));
		int32_t L_0 = __this->get_keyCode_5();
		return L_0;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_AxisCodeX()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25344));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25345));
	{
		// public string AxisCodeX => axisCodeX;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25346));
		String_t* L_0 = __this->get_axisCodeX_6();
		return L_0;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_AxisCodeY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25347));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25348));
	{
		// public string AxisCodeY => axisCodeY;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25349));
		String_t* L_0 = __this->get_axisCodeY_7();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_InvertXAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_InvertXAxis_m82A95CBB15419F0894BE53B7698F9C2D1C1689A3 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_InvertXAxis_m82A95CBB15419F0894BE53B7698F9C2D1C1689A3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_InvertXAxis_m82A95CBB15419F0894BE53B7698F9C2D1C1689A3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25350));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25351));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25352));
		// get { return invertXAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25353));
		bool L_0 = __this->get_invertXAxis_8();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return invertXAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25354));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_InvertXAxis(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_InvertXAxis_m66647EA9D0FF68E5189025514D53E18D4AE33657 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_InvertXAxis_m66647EA9D0FF68E5189025514D53E18D4AE33657_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_InvertXAxis_m66647EA9D0FF68E5189025514D53E18D4AE33657_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25355));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25356));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25357));
		// if (AxisType != AxisType.SingleAxis && AxisType != AxisType.DualAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25358));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25365));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25365));
		if ((((int32_t)L_0) == ((int32_t)3)))
		{
			goto IL_0018;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25366));
		int32_t L_1 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25366));
		G_B3_0 = ((((int32_t)((((int32_t)L_1) == ((int32_t)4))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0019;
	}

IL_0018:
	{
		G_B3_0 = 0;
	}

IL_0019:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25359));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25360));
		// Debug.LogWarning("Inverted X axis only valid for Single or Dual Axis inputs.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25361));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25367));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral4F608568C36B4BBFB29820366803B0BA041C8450, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25367));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25362));
		goto IL_0032;
	}

IL_002b:
	{
		// invertXAxis = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25363));
		bool L_3 = ___value0;
		__this->set_invertXAxis_8(L_3);
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25364));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_InvertYAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_InvertYAxis_m68811F0F6DEA6C0505B0FEF2D20452B2B93E1930 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_InvertYAxis_m68811F0F6DEA6C0505B0FEF2D20452B2B93E1930_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_InvertYAxis_m68811F0F6DEA6C0505B0FEF2D20452B2B93E1930_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25368));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25369));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25370));
		// get { return invertYAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25371));
		bool L_0 = __this->get_invertYAxis_9();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return invertYAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25372));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_InvertYAxis(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_InvertYAxis_mF8A76F91E2D3E422595B730EC949C545F43C5DFA (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_InvertYAxis_mF8A76F91E2D3E422595B730EC949C545F43C5DFA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_InvertYAxis_mF8A76F91E2D3E422595B730EC949C545F43C5DFA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25373));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25374));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25375));
		// if (AxisType != AxisType.DualAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25376));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25383));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25383));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)4))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25377));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25378));
		// Debug.LogWarning("Inverted Y axis only valid for Dual Axis inputs.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25379));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25384));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteralE06B21AEA9D546CFF5C83176D33BD36A347C6A0D, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25384));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25380));
		goto IL_0026;
	}

IL_001f:
	{
		// invertYAxis = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25381));
		bool L_2 = ___value0;
		__this->set_invertYAxis_9(L_2);
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25382));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25385));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25386));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25387));
		// bool returnValue = changed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25388));
		bool L_0 = __this->get_changed_10();
		V_0 = L_0;
		// if (changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25389));
		bool L_1 = __this->get_changed_10();
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25390));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25391));
		// changed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25392));
		__this->set_changed_10((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25393));
	}

IL_001b:
	{
		// return returnValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25394));
		bool L_3 = V_0;
		V_2 = L_3;
		goto IL_001f;
	}

IL_001f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25395));
		bool L_4 = V_2;
		return L_4;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_Changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25396));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25397));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25398));
		// changed = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25399));
		bool L_0 = ___value0;
		__this->set_changed_10(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25400));
		return;
	}
}
// System.Object Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_RawData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * MixedRealityInteractionMapping_get_RawData_m60D2461B4B1D8EF89B8B430F6470293502361646 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_RawData_m60D2461B4B1D8EF89B8B430F6470293502361646_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_RawData_m60D2461B4B1D8EF89B8B430F6470293502361646_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25401));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25402));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25403));
		// return rawData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25404));
		RuntimeObject * L_0 = __this->get_rawData_11();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25405));
		RuntimeObject * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_RawData(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_RawData_m6CA5CA0C86D7C7BF85DA28344C103C2BD750567F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, RuntimeObject * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_RawData_m6CA5CA0C86D7C7BF85DA28344C103C2BD750567F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_RawData_m6CA5CA0C86D7C7BF85DA28344C103C2BD750567F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25406));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25407));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25408));
		// if (AxisType != AxisType.Raw)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25409));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25417));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25417));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25410));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25411));
		// Debug.LogError($"SetRawValue is only valid for AxisType.Raw InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25412));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25418));
		int32_t L_2 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25418));
		int32_t L_3 = L_2;
		RuntimeObject * L_4 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25419));
		String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral49516E0C4558202F90B0D9F478B4C60CE7660C96, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25419));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25420));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25420));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25413));
	}

IL_002e:
	{
		// Changed = rawData != value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25414));
		RuntimeObject * L_6 = __this->get_rawData_11();
		RuntimeObject * L_7 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25421));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, (bool)((((int32_t)((((RuntimeObject*)(RuntimeObject *)L_6) == ((RuntimeObject*)(RuntimeObject *)L_7))? 1 : 0)) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25421));
		// rawData = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25415));
		RuntimeObject * L_8 = ___value0;
		__this->set_rawData_11(L_8);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25416));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_BoolData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25422));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25423));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25424));
		// return boolData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25425));
		bool L_0 = __this->get_boolData_12();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25426));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_BoolData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25427));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25428));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25429));
		// if (AxisType != AxisType.Digital && AxisType != AxisType.SingleAxis && AxisType != AxisType.DualAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25430));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25438));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25438));
		if ((((int32_t)L_0) == ((int32_t)2)))
		{
			goto IL_0021;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25439));
		int32_t L_1 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25439));
		if ((((int32_t)L_1) == ((int32_t)3)))
		{
			goto IL_0021;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25440));
		int32_t L_2 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25440));
		G_B4_0 = ((((int32_t)((((int32_t)L_2) == ((int32_t)4))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0022;
	}

IL_0021:
	{
		G_B4_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25431));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25432));
		// Debug.LogError($"SetBoolValue is only valid for AxisType.Digital, AxisType.SingleAxis, or AxisType.DualAxis InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25433));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25441));
		int32_t L_4 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25441));
		int32_t L_5 = L_4;
		RuntimeObject * L_6 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_5);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25442));
		String_t* L_7 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral5EB22C5455F364C72E10DDF8A0BC46CDCA2BD509, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25442));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25443));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25443));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25434));
	}

IL_0043:
	{
		// Changed = boolData != value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25435));
		bool L_8 = __this->get_boolData_12();
		bool L_9 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25444));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, (bool)((((int32_t)((((int32_t)L_8) == ((int32_t)L_9))? 1 : 0)) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25444));
		// boolData = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25436));
		bool L_10 = ___value0;
		__this->set_boolData_12(L_10);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25437));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_FloatData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25445));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25446));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25447));
		// return floatData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25448));
		float L_0 = __this->get_floatData_13();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25449));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_FloatData(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25450));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25451));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25452));
		// if (AxisType != AxisType.SingleAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25469));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25469));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25454));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25455));
		// Debug.LogError($"SetFloatValue is only valid for AxisType.SingleAxis InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25456));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25470));
		int32_t L_2 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25470));
		int32_t L_3 = L_2;
		RuntimeObject * L_4 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25471));
		String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralA00916847DE4842DCB336904198BB06A4A779353, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25471));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25472));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25472));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25457));
	}

IL_002e:
	{
		// if (invertXAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25458));
		bool L_6 = __this->get_invertXAxis_8();
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25459));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0065;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25460));
		// Changed = !floatData.Equals(value * -1f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25461));
		float* L_8 = __this->get_address_of_floatData_13();
		float L_9 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25473));
		bool L_10 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)L_8, ((float)il2cpp_codegen_multiply((float)L_9, (float)(-1.0f))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25473));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25474));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, (bool)((((int32_t)L_10) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25474));
		// floatData = value * -1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25462));
		float L_11 = ___value0;
		__this->set_floatData_13(((float)il2cpp_codegen_multiply((float)L_11, (float)(-1.0f))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25463));
		goto IL_0084;
	}

IL_0065:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25464));
		// Changed = !floatData.Equals(value);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25465));
		float* L_12 = __this->get_address_of_floatData_13();
		float L_13 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25475));
		bool L_14 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25475));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25476));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, (bool)((((int32_t)L_14) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25476));
		// floatData = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25466));
		float L_15 = ___value0;
		__this->set_floatData_13(L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25467));
	}

IL_0084:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25468));
		return;
	}
}
// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Vector2Data()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25477));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25478));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25479));
		// return vector2Data;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25480));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_vector2Data_14();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25481));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_Vector2Data(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25482));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25483));
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  G_B4_0;
	memset((&G_B4_0), 0, sizeof(G_B4_0));
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	float G_B5_0 = 0.0f;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  G_B5_1;
	memset((&G_B5_1), 0, sizeof(G_B5_1));
	float G_B7_0 = 0.0f;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  G_B7_1;
	memset((&G_B7_1), 0, sizeof(G_B7_1));
	float G_B6_0 = 0.0f;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  G_B6_1;
	memset((&G_B6_1), 0, sizeof(G_B6_1));
	float G_B8_0 = 0.0f;
	float G_B8_1 = 0.0f;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  G_B8_2;
	memset((&G_B8_2), 0, sizeof(G_B8_2));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25484));
		// if (AxisType != AxisType.DualAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25485));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25494));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25494));
		V_1 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)4))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25486));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25487));
		// Debug.LogError($"SetVector2Value is only valid for AxisType.DualAxis InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25488));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25495));
		int32_t L_2 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25495));
		int32_t L_3 = L_2;
		RuntimeObject * L_4 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25496));
		String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral0C6D5314C33FC3E7B46BEAC3B382F2E73B1DB494, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25496));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25497));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25497));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25489));
	}

IL_002e:
	{
		// Vector2 newValue = value * new Vector2(invertXAxis ? -1f : 1f, invertYAxis ? -1f : 1f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25490));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_6 = ___value0;
		bool L_7 = __this->get_invertXAxis_8();
		G_B3_0 = L_6;
		if (L_7)
		{
			G_B4_0 = L_6;
			goto IL_003e;
		}
	}
	{
		G_B5_0 = (1.0f);
		G_B5_1 = G_B3_0;
		goto IL_0043;
	}

IL_003e:
	{
		G_B5_0 = (-1.0f);
		G_B5_1 = G_B4_0;
	}

IL_0043:
	{
		bool L_8 = __this->get_invertYAxis_9();
		G_B6_0 = G_B5_0;
		G_B6_1 = G_B5_1;
		if (L_8)
		{
			G_B7_0 = G_B5_0;
			G_B7_1 = G_B5_1;
			goto IL_0052;
		}
	}
	{
		G_B8_0 = (1.0f);
		G_B8_1 = G_B6_0;
		G_B8_2 = G_B6_1;
		goto IL_0057;
	}

IL_0052:
	{
		G_B8_0 = (-1.0f);
		G_B8_1 = G_B7_0;
		G_B8_2 = G_B7_1;
	}

IL_0057:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25498));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_9), G_B8_1, G_B8_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25498));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25499));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4(G_B8_2, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25499));
		V_0 = L_10;
		// Changed = vector2Data != newValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25491));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_11 = __this->get_vector2Data_14();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25500));
		bool L_13 = Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25500));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25501));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25501));
		// vector2Data = newValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25492));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14 = V_0;
		__this->set_vector2Data_14(L_14);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25493));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_PositionData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_PositionData_m8DFE20E69C92A2D2014D18E40CAF9EA4D82CF4C3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25503));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25504));
		// return positionData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25505));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_positionData_15();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25506));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_PositionData(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_PositionData_mEF64ADE69D0B6C2F422B2BDD4B50C8C0FBAAB654 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_PositionData_mEF64ADE69D0B6C2F422B2BDD4B50C8C0FBAAB654_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_PositionData_mEF64ADE69D0B6C2F422B2BDD4B50C8C0FBAAB654_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25507));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25508));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25509));
		// if (AxisType != AxisType.ThreeDofPosition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25510));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25520));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25520));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)5))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25511));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0030;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25512));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25513));
		// Debug.LogError($"SetPositionValue is only valid for AxisType.ThreeDoFPosition InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25514));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25521));
		int32_t L_2 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25521));
		int32_t L_3 = L_2;
		RuntimeObject * L_4 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25522));
		String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralF98F3F4946BE442C0460E756655E87C20B5C93C8, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25522));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25523));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25523));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25515));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25516));
	}

IL_0030:
	{
		// Changed = positionData != value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25517));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = __this->get_positionData_15();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25524));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		bool L_8 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25524));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25525));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25525));
		// positionData = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25518));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = ___value0;
		__this->set_positionData_15(L_9);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25519));
		return;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_RotationData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_RotationData_m8987BE60B1D0A7D80570985C9416B8751D0213F2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25526));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25527));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25528));
		// return rotationData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25529));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_rotationData_16();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25530));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_RotationData(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_RotationData_mD0DC4F12389D7151DC896BCF83E5F844DF0C4C52 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_RotationData_mD0DC4F12389D7151DC896BCF83E5F844DF0C4C52_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_RotationData_mD0DC4F12389D7151DC896BCF83E5F844DF0C4C52_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25531));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25532));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25533));
		// if (AxisType != AxisType.ThreeDofRotation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25534));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25542));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25542));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)6))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25535));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25536));
		// Debug.LogError($"SetRotationValue is only valid for AxisType.ThreeDoFRotation InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25537));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25543));
		int32_t L_2 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25543));
		int32_t L_3 = L_2;
		RuntimeObject * L_4 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25544));
		String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral3DD48670856F023E42F1E65D4630BDF5E79CCADD, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25544));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25545));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25545));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25538));
	}

IL_002e:
	{
		// Changed = rotationData != value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25539));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = __this->get_rotationData_16();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25546));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		bool L_8 = Quaternion_op_Inequality_mDA6D2E63A498C8A9AB9A11DD7EA3B96567390C70(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25546));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25547));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25547));
		// rotationData = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25540));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_9 = ___value0;
		__this->set_rotationData_16(L_9);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25541));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_PoseData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25548));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25549));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25550));
		// return poseData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25551));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = __this->get_poseData_17();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25552));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_PoseData(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25553));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25554));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25555));
		// if (AxisType != AxisType.SixDof)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25556));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25566));
		int32_t L_0 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25566));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)7))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25557));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25558));
		// Debug.LogError($"SetPoseValue is only valid for AxisType.SixDoF InteractionMappings\nPlease check the {InputType} mapping for the current controller");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25559));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25567));
		int32_t L_2 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25567));
		int32_t L_3 = L_2;
		RuntimeObject * L_4 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25568));
		String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralD17032C22D37E7C2F07D0DE79CFB7F6CC0E7E49B, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25568));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25569));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25569));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25560));
	}

IL_002e:
	{
		// Changed = poseData != value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25561));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_6 = __this->get_poseData_17();
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_7 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25570));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		bool L_8 = MixedRealityPose_op_Inequality_m85FF483B646A63C06AE543020D4F85257046AB3D(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25570));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25571));
		MixedRealityInteractionMapping_set_Changed_m9893A721AB5CD64025F0B03DB8AC3E8224AE0F12(__this, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25571));
		// poseData = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25562));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_9 = ___value0;
		__this->set_poseData_17(L_9);
		// positionData = poseData.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25563));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_10 = __this->get_address_of_poseData_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25572));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25572));
		__this->set_positionData_15(L_11);
		// rotationData = poseData.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25564));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_12 = __this->get_address_of_poseData_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25573));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25573));
		__this->set_rotationData_16(L_13);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25565));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
IL2CPP_EXTERN_C void MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshal_pinvoke(const MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146& unmarshaled, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_pinvoke& marshaled)
{
	marshaled.___U3CKeyCodeU3Ek__BackingField_0 = unmarshaled.get_U3CKeyCodeU3Ek__BackingField_0();
	marshaled.___U3CAxisCodeXU3Ek__BackingField_1 = il2cpp_codegen_marshal_string(unmarshaled.get_U3CAxisCodeXU3Ek__BackingField_1());
	marshaled.___U3CAxisCodeYU3Ek__BackingField_2 = il2cpp_codegen_marshal_string(unmarshaled.get_U3CAxisCodeYU3Ek__BackingField_2());
	marshaled.___U3CInvertXAxisU3Ek__BackingField_3 = static_cast<int32_t>(unmarshaled.get_U3CInvertXAxisU3Ek__BackingField_3());
	marshaled.___U3CInvertYAxisU3Ek__BackingField_4 = static_cast<int32_t>(unmarshaled.get_U3CInvertYAxisU3Ek__BackingField_4());
}
IL2CPP_EXTERN_C void MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshal_pinvoke_back(const MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_pinvoke& marshaled, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146& unmarshaled)
{
	int32_t unmarshaled_U3CKeyCodeU3Ek__BackingField_temp_0 = 0;
	unmarshaled_U3CKeyCodeU3Ek__BackingField_temp_0 = marshaled.___U3CKeyCodeU3Ek__BackingField_0;
	unmarshaled.set_U3CKeyCodeU3Ek__BackingField_0(unmarshaled_U3CKeyCodeU3Ek__BackingField_temp_0);
	unmarshaled.set_U3CAxisCodeXU3Ek__BackingField_1(il2cpp_codegen_marshal_string_result(marshaled.___U3CAxisCodeXU3Ek__BackingField_1));
	unmarshaled.set_U3CAxisCodeYU3Ek__BackingField_2(il2cpp_codegen_marshal_string_result(marshaled.___U3CAxisCodeYU3Ek__BackingField_2));
	bool unmarshaled_U3CInvertXAxisU3Ek__BackingField_temp_3 = false;
	unmarshaled_U3CInvertXAxisU3Ek__BackingField_temp_3 = static_cast<bool>(marshaled.___U3CInvertXAxisU3Ek__BackingField_3);
	unmarshaled.set_U3CInvertXAxisU3Ek__BackingField_3(unmarshaled_U3CInvertXAxisU3Ek__BackingField_temp_3);
	bool unmarshaled_U3CInvertYAxisU3Ek__BackingField_temp_4 = false;
	unmarshaled_U3CInvertYAxisU3Ek__BackingField_temp_4 = static_cast<bool>(marshaled.___U3CInvertYAxisU3Ek__BackingField_4);
	unmarshaled.set_U3CInvertYAxisU3Ek__BackingField_4(unmarshaled_U3CInvertYAxisU3Ek__BackingField_temp_4);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
IL2CPP_EXTERN_C void MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshal_pinvoke_cleanup(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_pinvoke& marshaled)
{
	il2cpp_codegen_marshal_free(marshaled.___U3CAxisCodeXU3Ek__BackingField_1);
	marshaled.___U3CAxisCodeXU3Ek__BackingField_1 = NULL;
	il2cpp_codegen_marshal_free(marshaled.___U3CAxisCodeYU3Ek__BackingField_2);
	marshaled.___U3CAxisCodeYU3Ek__BackingField_2 = NULL;
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
IL2CPP_EXTERN_C void MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshal_com(const MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146& unmarshaled, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_com& marshaled)
{
	marshaled.___U3CKeyCodeU3Ek__BackingField_0 = unmarshaled.get_U3CKeyCodeU3Ek__BackingField_0();
	marshaled.___U3CAxisCodeXU3Ek__BackingField_1 = il2cpp_codegen_marshal_bstring(unmarshaled.get_U3CAxisCodeXU3Ek__BackingField_1());
	marshaled.___U3CAxisCodeYU3Ek__BackingField_2 = il2cpp_codegen_marshal_bstring(unmarshaled.get_U3CAxisCodeYU3Ek__BackingField_2());
	marshaled.___U3CInvertXAxisU3Ek__BackingField_3 = static_cast<int32_t>(unmarshaled.get_U3CInvertXAxisU3Ek__BackingField_3());
	marshaled.___U3CInvertYAxisU3Ek__BackingField_4 = static_cast<int32_t>(unmarshaled.get_U3CInvertYAxisU3Ek__BackingField_4());
}
IL2CPP_EXTERN_C void MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshal_com_back(const MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_com& marshaled, MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146& unmarshaled)
{
	int32_t unmarshaled_U3CKeyCodeU3Ek__BackingField_temp_0 = 0;
	unmarshaled_U3CKeyCodeU3Ek__BackingField_temp_0 = marshaled.___U3CKeyCodeU3Ek__BackingField_0;
	unmarshaled.set_U3CKeyCodeU3Ek__BackingField_0(unmarshaled_U3CKeyCodeU3Ek__BackingField_temp_0);
	unmarshaled.set_U3CAxisCodeXU3Ek__BackingField_1(il2cpp_codegen_marshal_bstring_result(marshaled.___U3CAxisCodeXU3Ek__BackingField_1));
	unmarshaled.set_U3CAxisCodeYU3Ek__BackingField_2(il2cpp_codegen_marshal_bstring_result(marshaled.___U3CAxisCodeYU3Ek__BackingField_2));
	bool unmarshaled_U3CInvertXAxisU3Ek__BackingField_temp_3 = false;
	unmarshaled_U3CInvertXAxisU3Ek__BackingField_temp_3 = static_cast<bool>(marshaled.___U3CInvertXAxisU3Ek__BackingField_3);
	unmarshaled.set_U3CInvertXAxisU3Ek__BackingField_3(unmarshaled_U3CInvertXAxisU3Ek__BackingField_temp_3);
	bool unmarshaled_U3CInvertYAxisU3Ek__BackingField_temp_4 = false;
	unmarshaled_U3CInvertYAxisU3Ek__BackingField_temp_4 = static_cast<bool>(marshaled.___U3CInvertYAxisU3Ek__BackingField_4);
	unmarshaled.set_U3CInvertYAxisU3Ek__BackingField_4(unmarshaled_U3CInvertYAxisU3Ek__BackingField_temp_4);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput
IL2CPP_EXTERN_C void MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshal_com_cleanup(MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146_marshaled_com& marshaled)
{
	il2cpp_codegen_marshal_free_bstring(marshaled.___U3CAxisCodeXU3Ek__BackingField_1);
	marshaled.___U3CAxisCodeXU3Ek__BackingField_1 = NULL;
	il2cpp_codegen_marshal_free_bstring(marshaled.___U3CAxisCodeYU3Ek__BackingField_2);
	marshaled.___U3CAxisCodeYU3Ek__BackingField_2 = NULL;
}
// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_KeyCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484 (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25574));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25575));
	{
		// public KeyCode KeyCode { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25576));
		int32_t L_0 = __this->get_U3CKeyCodeU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C  int32_t MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * _thisAdjusted = reinterpret_cast<MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *>(__this + _offset);
	return MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_inline(_thisAdjusted, method);
}
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_AxisCodeX()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857 (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25577));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25578));
	{
		// public string AxisCodeX { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25579));
		String_t* L_0 = __this->get_U3CAxisCodeXU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C  String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * _thisAdjusted = reinterpret_cast<MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *>(__this + _offset);
	return MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_inline(_thisAdjusted, method);
}
// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_AxisCodeY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271 (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25580));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25581));
	{
		// public string AxisCodeY { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25582));
		String_t* L_0 = __this->get_U3CAxisCodeYU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C  String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * _thisAdjusted = reinterpret_cast<MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *>(__this + _offset);
	return MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_inline(_thisAdjusted, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_InvertXAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7 (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25583));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25584));
	{
		// public bool InvertXAxis { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25585));
		bool L_0 = __this->get_U3CInvertXAxisU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C  bool MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * _thisAdjusted = reinterpret_cast<MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *>(__this + _offset);
	return MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_inline(_thisAdjusted, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::get_InvertYAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8 (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25586));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25587));
	{
		// public bool InvertYAxis { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25588));
		bool L_0 = __this->get_U3CInvertYAxisU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C  bool MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * _thisAdjusted = reinterpret_cast<MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *>(__this + _offset);
	return MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_inline(_thisAdjusted, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput::.ctor(UnityEngine.KeyCode,System.String,System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, int32_t ___keyCode0, String_t* ___axisCodeX1, String_t* ___axisCodeY2, bool ___invertXAxis3, bool ___invertYAxis4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___keyCode0), (&___axisCodeX1), (&___axisCodeY2), (&___invertXAxis3), (&___invertYAxis4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25589));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25590));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25591));
		// KeyCode = keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25592));
		int32_t L_0 = ___keyCode0;
		__this->set_U3CKeyCodeU3Ek__BackingField_0(L_0);
		// AxisCodeX = axisCodeX;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25593));
		String_t* L_1 = ___axisCodeX1;
		__this->set_U3CAxisCodeXU3Ek__BackingField_1(L_1);
		// AxisCodeY = axisCodeY;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25594));
		String_t* L_2 = ___axisCodeY2;
		__this->set_U3CAxisCodeYU3Ek__BackingField_2(L_2);
		// InvertXAxis = invertXAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25595));
		bool L_3 = ___invertXAxis3;
		__this->set_U3CInvertXAxisU3Ek__BackingField_3(L_3);
		// InvertYAxis = invertYAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25596));
		bool L_4 = ___invertYAxis4;
		__this->set_U3CInvertYAxisU3Ek__BackingField_4(L_4);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25597));
		return;
	}
}
IL2CPP_EXTERN_C  void MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC_AdjustorThunk (RuntimeObject * __this, int32_t ___keyCode0, String_t* ___axisCodeX1, String_t* ___axisCodeY2, bool ___invertXAxis3, bool ___invertYAxis4, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * _thisAdjusted = reinterpret_cast<MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 *>(__this + _offset);
	MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC(_thisAdjusted, ___keyCode0, ___axisCodeX1, ___axisCodeY2, ___invertXAxis3, ___invertYAxis4, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::get_CursorSpeed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302 (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29348));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29349));
	{
		// public float CursorSpeed => cursorSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29350));
		float L_0 = __this->get_cursorSpeed_5();
		return L_0;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::get_WheelSpeed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29351));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29352));
	{
		// public float WheelSpeed => wheelSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29353));
		float L_0 = __this->get_wheelSpeed_6();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityMouseInputProfile__ctor_m64B076AF4711BFC77189ED06F2B0721F73F08647 (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityMouseInputProfile__ctor_m64B076AF4711BFC77189ED06F2B0721F73F08647_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityMouseInputProfile__ctor_m64B076AF4711BFC77189ED06F2B0721F73F08647_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29354));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29355));
	{
		// private float cursorSpeed = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29356));
		__this->set_cursorSpeed_5((1.0f));
		// private float wheelSpeed = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29357));
		__this->set_wheelSpeed_6((1.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29358));
		BaseMixedRealityProfile__ctor_mC73E9360DB114F72FBC08703A0A9ABA78168B78A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29358));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::get_Pointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26775));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26776));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::set_Pointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26777));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26778));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26779));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CPointerU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::get_Count()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealityPointerEventData_get_Count_mF11CED15B86C3B70B4871EE31CB9DB7EBCD8344A (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_get_Count_mF11CED15B86C3B70B4871EE31CB9DB7EBCD8344A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_get_Count_mF11CED15B86C3B70B4871EE31CB9DB7EBCD8344A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26780));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26781));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26782));
		int32_t L_0 = __this->get_U3CCountU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::set_Count(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26783));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26784));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26785));
		int32_t L_0 = ___value0;
		__this->set_U3CCountU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::.ctor(UnityEngine.EventSystems.EventSystem)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerEventData__ctor_m437897C23251E30E63BF38068E00AA84F160055B (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData__ctor_m437897C23251E30E63BF38068E00AA84F160055B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventSystem0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData__ctor_m437897C23251E30E63BF38068E00AA84F160055B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26786));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26787));
	{
		// public MixedRealityPointerEventData(EventSystem eventSystem) : base(eventSystem) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26788));
		EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_0 = ___eventSystem0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26791));
		InputEventData__ctor_m0F7328A777D0A325204267833E18F52E418AE8AA(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26791));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26789));
		// public MixedRealityPointerEventData(EventSystem eventSystem) : base(eventSystem) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26790));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::Initialize(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_Initialize_m4BEB83AAE24CE49EF02D22D82D9A9AD6A5BF6E9C (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, RuntimeObject* ___pointer0, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction1, uint8_t ___handedness2, RuntimeObject* ___inputSource3, int32_t ___count4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_Initialize_m4BEB83AAE24CE49EF02D22D82D9A9AD6A5BF6E9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___inputAction1), (&___handedness2), (&___inputSource3), (&___count4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_Initialize_m4BEB83AAE24CE49EF02D22D82D9A9AD6A5BF6E9C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26792));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26793));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26794));
		// if (inputSource != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26795));
		RuntimeObject* L_0 = ___inputSource3;
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26796));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26797));
		// Initialize(inputSource, handedness, inputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26798));
		RuntimeObject* L_2 = ___inputSource3;
		uint8_t L_3 = ___handedness2;
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = ___inputAction1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26806));
		InputEventData_Initialize_mDF11D791D9F66E4C9E4FED1B374028EE13A2E972(__this, L_2, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26806));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26799));
		goto IL_002a;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26800));
		// Initialize(pointer.InputSourceParent, handedness, inputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26801));
		RuntimeObject* L_5 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26807));
		NullCheck(L_5);
		RuntimeObject* L_6 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(5 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_InputSourceParent() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26807));
		uint8_t L_7 = ___handedness2;
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_8 = ___inputAction1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26808));
		InputEventData_Initialize_mDF11D791D9F66E4C9E4FED1B374028EE13A2E972(__this, L_6, L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26808));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26802));
	}

IL_002a:
	{
		// Pointer = pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26803));
		RuntimeObject* L_9 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26809));
		MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_inline(__this, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26809));
		// Count = count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26804));
		int32_t L_10 = ___count4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26810));
		MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_inline(__this, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26810));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26805));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::Initialize(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_Initialize_m57268FBA83339F35090660C3E4BCBAD24CBAB3CF (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, RuntimeObject* ___pointer0, uint8_t ___handedness1, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction2, int32_t ___count3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_Initialize_m57268FBA83339F35090660C3E4BCBAD24CBAB3CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___handedness1), (&___inputAction2), (&___count3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_Initialize_m57268FBA83339F35090660C3E4BCBAD24CBAB3CF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26811));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26812));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26813));
		// Initialize(pointer.InputSourceParent, handedness, inputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26814));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26818));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(5 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_InputSourceParent() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26818));
		uint8_t L_2 = ___handedness1;
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_3 = ___inputAction2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26819));
		InputEventData_Initialize_mDF11D791D9F66E4C9E4FED1B374028EE13A2E972(__this, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26819));
		// Pointer = pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26815));
		RuntimeObject* L_4 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26820));
		MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_inline(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26820));
		// Count = count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26816));
		int32_t L_5 = ___count3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26821));
		MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_inline(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26821));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26817));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointingExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26329));
	{
		// public float PointingExtent => pointingExtent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26330));
		float L_0 = __this->get_pointingExtent_5();
		return L_0;
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointingRaycastLayerMasks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26331));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26332));
	{
		// public LayerMask[] PointingRaycastLayerMasks => pointingRaycastLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26333));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_pointingRaycastLayerMasks_6();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_DebugDrawPointingRays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityPointerProfile_get_DebugDrawPointingRays_m7BD92F80939DE0545AEC2643BC2E41A817A80551 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_DebugDrawPointingRays_m7BD92F80939DE0545AEC2643BC2E41A817A80551_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_DebugDrawPointingRays_m7BD92F80939DE0545AEC2643BC2E41A817A80551_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26334));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26335));
	{
		// public bool DebugDrawPointingRays => debugDrawPointingRays;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26336));
		bool L_0 = __this->get_debugDrawPointingRays_7();
		return L_0;
	}
}
// UnityEngine.Color[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_DebugDrawPointingRayColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* MixedRealityPointerProfile_get_DebugDrawPointingRayColors_mB3501FB9EE13DABD03901321CFE11BA97E9E9205 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_DebugDrawPointingRayColors_mB3501FB9EE13DABD03901321CFE11BA97E9E9205_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_DebugDrawPointingRayColors_mB3501FB9EE13DABD03901321CFE11BA97E9E9205_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26337));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26338));
	{
		// public Color[] DebugDrawPointingRayColors => debugDrawPointingRayColors;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26339));
		ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* L_0 = __this->get_debugDrawPointingRayColors_8();
		return L_0;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_GazeCursorPrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * MixedRealityPointerProfile_get_GazeCursorPrefab_m0F87A5C3B69804A6DBA4C3B364FC944D4B22B630 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_GazeCursorPrefab_m0F87A5C3B69804A6DBA4C3B364FC944D4B22B630_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_GazeCursorPrefab_m0F87A5C3B69804A6DBA4C3B364FC944D4B22B630_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26340));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26341));
	{
		// public GameObject GazeCursorPrefab => gazeCursorPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26342));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_gazeCursorPrefab_9();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_GazeProviderType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * MixedRealityPointerProfile_get_GazeProviderType_mEDD757AE258E9D0C1D6EBD7DB85DA785909C5B34 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_GazeProviderType_mEDD757AE258E9D0C1D6EBD7DB85DA785909C5B34_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_GazeProviderType_mEDD757AE258E9D0C1D6EBD7DB85DA785909C5B34_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26343));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26344));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26345));
		// get { return gazeProviderType; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26346));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_0 = __this->get_gazeProviderType_10();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return gazeProviderType; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26347));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::set_GazeProviderType(Microsoft.MixedReality.Toolkit.Utilities.SystemType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerProfile_set_GazeProviderType_m04992AE43FA50F472881769D5AAC9572C25F6D3C (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_set_GazeProviderType_m04992AE43FA50F472881769D5AAC9572C25F6D3C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_set_GazeProviderType_m04992AE43FA50F472881769D5AAC9572C25F6D3C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26348));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26349));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26350));
		// internal set { gazeProviderType = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26351));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_0 = ___value0;
		__this->set_gazeProviderType_10(L_0);
		// internal set { gazeProviderType = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26352));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_UseHeadGazeOverride()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityPointerProfile_get_UseHeadGazeOverride_m74C748C176CF1DD2093F974358298667C1A2CB27 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_UseHeadGazeOverride_m74C748C176CF1DD2093F974358298667C1A2CB27_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_UseHeadGazeOverride_m74C748C176CF1DD2093F974358298667C1A2CB27_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26353));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26354));
	{
		// public bool UseHeadGazeOverride => useHeadGazeOverride;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26355));
		bool L_0 = __this->get_useHeadGazeOverride_11();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_IsEyeTrackingEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityPointerProfile_get_IsEyeTrackingEnabled_m5679DF292107CBC1FF1080723BB6FEBB345D9D3A (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_IsEyeTrackingEnabled_m5679DF292107CBC1FF1080723BB6FEBB345D9D3A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_IsEyeTrackingEnabled_m5679DF292107CBC1FF1080723BB6FEBB345D9D3A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26356));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26357));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26358));
		// get { return isEyeTrackingEnabled; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26359));
		bool L_0 = __this->get_isEyeTrackingEnabled_12();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return isEyeTrackingEnabled; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26360));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::set_IsEyeTrackingEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerProfile_set_IsEyeTrackingEnabled_m88C1761B2AAA9E67E627FD2D7EA9E7D7C68CF3C3 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_set_IsEyeTrackingEnabled_m88C1761B2AAA9E67E627FD2D7EA9E7D7C68CF3C3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_set_IsEyeTrackingEnabled_m88C1761B2AAA9E67E627FD2D7EA9E7D7C68CF3C3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26362));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26363));
		// internal set { isEyeTrackingEnabled = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26364));
		bool L_0 = ___value0;
		__this->set_isEyeTrackingEnabled_12(L_0);
		// internal set { isEyeTrackingEnabled = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26365));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.PointerOption[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointerOptions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* MixedRealityPointerProfile_get_PointerOptions_m51CAF7E0A62650F884B67C97B4FE98AAAD38200B (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PointerOptions_m51CAF7E0A62650F884B67C97B4FE98AAAD38200B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PointerOptions_m51CAF7E0A62650F884B67C97B4FE98AAAD38200B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26366));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26367));
	{
		// public PointerOption[] PointerOptions => pointerOptions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26368));
		PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* L_0 = __this->get_pointerOptions_13();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointerMediator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26369));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26370));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26371));
		// get { return pointerMediator; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26372));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_0 = __this->get_pointerMediator_14();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return pointerMediator; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26373));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_1 = V_0;
		return L_1;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PrimaryPointerSelector()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26374));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26375));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26376));
		// get { return primaryPointerSelector; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26377));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_0 = __this->get_primaryPointerSelector_15();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return primaryPointerSelector; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26378));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPointerProfile__ctor_m78D944E504E9115F169858270E34DE8947853B26 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile__ctor_m78D944E504E9115F169858270E34DE8947853B26_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile__ctor_m78D944E504E9115F169858270E34DE8947853B26_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26379));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26380));
	{
		// private float pointingExtent = 10f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26381));
		__this->set_pointingExtent_5((10.0f));
		// private LayerMask[] pointingRaycastLayerMasks = { UnityEngine.Physics.DefaultRaycastLayers };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26382));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = (LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)SZArrayNew(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var, (uint32_t)1);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26391));
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_2 = LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300(((int32_t)-5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26391));
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 )L_2);
		__this->set_pointingRaycastLayerMasks_6(L_1);
		// private bool debugDrawPointingRays = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26383));
		__this->set_debugDrawPointingRays_7((bool)0);
		// private Color[] debugDrawPointingRayColors = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26384));
		__this->set_debugDrawPointingRayColors_8((ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399*)NULL);
		// private GameObject gazeCursorPrefab = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26385));
		__this->set_gazeCursorPrefab_9((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private bool useHeadGazeOverride = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26386));
		__this->set_useHeadGazeOverride_11((bool)0);
		// private bool isEyeTrackingEnabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26387));
		__this->set_isEyeTrackingEnabled_12((bool)0);
		// private PointerOption[] pointerOptions = System.Array.Empty<PointerOption>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26388));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26392));
		PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* L_3 = Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_inline(/*hidden argument*/Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26392));
		__this->set_pointerOptions_13(L_3);
		// private SystemType pointerMediator = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26389));
		__this->set_pointerMediator_14((SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 *)NULL);
		// private SystemType primaryPointerSelector = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26390));
		__this->set_primaryPointerSelector_15((SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26393));
		BaseMixedRealityProfile__ctor_mC73E9360DB114F72FBC08703A0A9ABA78168B78A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26393));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
IL2CPP_EXTERN_C void MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshal_pinvoke(const MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A& unmarshaled, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke& marshaled)
{
	Exception_t* ___transform_7Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'transform' of type 'MixedRealityRaycastHit': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___transform_7Exception, NULL);
}
IL2CPP_EXTERN_C void MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshal_pinvoke_back(const MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke& marshaled, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A& unmarshaled)
{
	Exception_t* ___transform_7Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'transform' of type 'MixedRealityRaycastHit': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___transform_7Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
IL2CPP_EXTERN_C void MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshal_pinvoke_cleanup(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
IL2CPP_EXTERN_C void MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshal_com(const MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A& unmarshaled, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com& marshaled)
{
	Exception_t* ___transform_7Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'transform' of type 'MixedRealityRaycastHit': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___transform_7Exception, NULL);
}
IL2CPP_EXTERN_C void MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshal_com_back(const MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com& marshaled, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A& unmarshaled)
{
	Exception_t* ___transform_7Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'transform' of type 'MixedRealityRaycastHit': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___transform_7Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
IL2CPP_EXTERN_C void MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshal_com_cleanup(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com& marshaled)
{
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::.ctor(System.Boolean,UnityEngine.RaycastHit)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76 (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * __this, bool ___raycastValid0, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ___hitInfo1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * V_1 = NULL;
	bool V_2 = false;
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___raycastValid0), (&___hitInfo1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26394));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26395));
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26396));
		// this.raycastValid = raycastValid;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26397));
		bool L_0 = ___raycastValid0;
		__this->set_raycastValid_9(L_0);
		// if (raycastValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26398));
		bool L_1 = ___raycastValid0;
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26399));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_016b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26400));
		// point = hitInfo.point;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26401));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26460));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = RaycastHit_get_point_m0E564B2A72C7A744B889AE9D596F3EFA55059001((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26460));
		__this->set_point_0(L_3);
		// normal = hitInfo.normal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26402));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26461));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = RaycastHit_get_normal_mF736A6D09D98D63AB7E5BF10F38AEBFC177A1D94((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26461));
		__this->set_normal_1(L_4);
		// barycentricCoordinate = hitInfo.barycentricCoordinate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26403));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26462));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = RaycastHit_get_barycentricCoordinate_m1384DAADA89355B2BECB0D6DC0FC9428728FFF09((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26462));
		__this->set_barycentricCoordinate_2(L_5);
		// distance = hitInfo.distance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26404));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26463));
		float L_6 = RaycastHit_get_distance_m1CBA60855C35F29BBC348D374BBC76386A243543((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26463));
		__this->set_distance_3(L_6);
		// triangleIndex = hitInfo.triangleIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26405));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26464));
		int32_t L_7 = RaycastHit_get_triangleIndex_mE6029E04F9AA327127146B8B71886F657796E78E((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26464));
		__this->set_triangleIndex_4(L_7);
		// MeshCollider meshCollider = hitInfo.collider as MeshCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26406));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26465));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_8 = RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26465));
		V_1 = ((MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE *)IsInstClass((RuntimeObject*)L_8, MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE_il2cpp_TypeInfo_var));
		// if (meshCollider == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26407));
		MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26466));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_10 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_9, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26466));
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26408));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0098;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26409));
		// textureCoord = hitInfo.textureCoord;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26410));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26467));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_12 = RaycastHit_get_textureCoord_mE520CE27BD748249D38ABAA093FFAD9186FEE68D((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26467));
		__this->set_textureCoord_5(L_12);
		// textureCoord2 = hitInfo.textureCoord2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26411));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26468));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_13 = RaycastHit_get_textureCoord2_m44B83C4AD15B69F9DA09CB4AA51493B983DFF12E((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26468));
		__this->set_textureCoord2_6(L_13);
		// lightmapCoord = hitInfo.lightmapCoord;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26412));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26469));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14 = RaycastHit_get_lightmapCoord_mDF3BB89FC6FCC243C15A764482AC9B42516FD3C7((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26469));
		__this->set_lightmapCoord_8(L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26413));
		goto IL_014e;
	}

IL_0098:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26414));
		// Mesh sharedMesh = meshCollider.sharedMesh;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26415));
		MeshCollider_t60EB55ADE92499FE8D1AA206D2BD96E65B2766DE * L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26470));
		NullCheck(L_15);
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_16 = MeshCollider_get_sharedMesh_mD66AB7910B58EBCB574232E54E6A496B81A56C67(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26470));
		V_3 = L_16;
		// if (sharedMesh != null && sharedMesh.isReadable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26416));
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_17 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26471));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_18 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_17, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26471));
		if (!L_18)
		{
			goto IL_00b1;
		}
	}
	{
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_19 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26472));
		NullCheck(L_19);
		bool L_20 = Mesh_get_isReadable_mC669062F2DC32484D130C3188FF21F88D4F84A19(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26472));
		G_B6_0 = ((int32_t)(L_20));
		goto IL_00b2;
	}

IL_00b1:
	{
		G_B6_0 = 0;
	}

IL_00b2:
	{
		V_4 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26417));
		bool L_21 = V_4;
		if (!L_21)
		{
			goto IL_012a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26418));
		// if (sharedMesh.HasVertexAttribute(UnityEngine.Rendering.VertexAttribute.TexCoord0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26419));
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_22 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26473));
		NullCheck(L_22);
		bool L_23 = Mesh_HasVertexAttribute_m87C57B859ECB5224EEB77ED9BD3B6FF30F5A9B1C(L_22, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26473));
		V_5 = L_23;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26420));
		bool L_24 = V_5;
		if (!L_24)
		{
			goto IL_00d7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26421));
		// textureCoord = hitInfo.textureCoord;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26422));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26474));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_25 = RaycastHit_get_textureCoord_mE520CE27BD748249D38ABAA093FFAD9186FEE68D((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26474));
		__this->set_textureCoord_5(L_25);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26423));
		goto IL_00e4;
	}

IL_00d7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26424));
		// textureCoord = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26475));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_26 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26475));
		__this->set_textureCoord_5(L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26426));
	}

IL_00e4:
	{
		// if (sharedMesh.HasVertexAttribute(UnityEngine.Rendering.VertexAttribute.TexCoord1))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26427));
		Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * L_27 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26476));
		NullCheck(L_27);
		bool L_28 = Mesh_HasVertexAttribute_m87C57B859ECB5224EEB77ED9BD3B6FF30F5A9B1C(L_27, 5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26476));
		V_6 = L_28;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26428));
		bool L_29 = V_6;
		if (!L_29)
		{
			goto IL_010f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26429));
		// textureCoord2 = hitInfo.textureCoord2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26430));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26477));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_30 = RaycastHit_get_textureCoord2_m44B83C4AD15B69F9DA09CB4AA51493B983DFF12E((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26477));
		__this->set_textureCoord2_6(L_30);
		// lightmapCoord = hitInfo.lightmapCoord;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26431));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26478));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_31 = RaycastHit_get_lightmapCoord_mDF3BB89FC6FCC243C15A764482AC9B42516FD3C7((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26478));
		__this->set_lightmapCoord_8(L_31);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26432));
		goto IL_0127;
	}

IL_010f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26433));
		// textureCoord2 = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26434));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26479));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_32 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26479));
		__this->set_textureCoord2_6(L_32);
		// lightmapCoord = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26435));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26480));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_33 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26480));
		__this->set_lightmapCoord_8(L_33);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26436));
	}

IL_0127:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26437));
		goto IL_014d;
	}

IL_012a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26438));
		// textureCoord = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26439));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26481));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_34 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26481));
		__this->set_textureCoord_5(L_34);
		// textureCoord2 = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26440));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26482));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_35 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26482));
		__this->set_textureCoord2_6(L_35);
		// lightmapCoord = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26483));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_36 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26483));
		__this->set_lightmapCoord_8(L_36);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26442));
	}

IL_014d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26443));
	}

IL_014e:
	{
		// transform = hitInfo.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26444));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26484));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_37 = RaycastHit_get_transform_m3C0BEE7439CA37F82FD5216143B92BF32F995279((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26484));
		__this->set_transform_7(L_37);
		// collider = hitInfo.collider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26445));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26485));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_38 = RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&___hitInfo1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26485));
		__this->set_collider_10(L_38);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26446));
		goto IL_01cf;
	}

IL_016b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26447));
		// point = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26448));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26486));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26486));
		__this->set_point_0(L_39);
		// normal = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26449));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26487));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26487));
		__this->set_normal_1(L_40);
		// barycentricCoordinate = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26488));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_41 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26488));
		__this->set_barycentricCoordinate_2(L_41);
		// distance = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26451));
		__this->set_distance_3((0.0f));
		// triangleIndex = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26452));
		__this->set_triangleIndex_4(0);
		// textureCoord = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26489));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_42 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26489));
		__this->set_textureCoord_5(L_42);
		// textureCoord2 = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26454));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26490));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_43 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26490));
		__this->set_textureCoord2_6(L_43);
		// transform = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26455));
		__this->set_transform_7((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// lightmapCoord = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26456));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26491));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_44 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26491));
		__this->set_lightmapCoord_8(L_44);
		// collider = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26457));
		__this->set_collider_10((Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF *)NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26458));
	}

IL_01cf:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26459));
		return;
	}
}
IL2CPP_EXTERN_C  void MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76_AdjustorThunk (RuntimeObject * __this, bool ___raycastValid0, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ___hitInfo1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * _thisAdjusted = reinterpret_cast<MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *>(__this + _offset);
	MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76(_thisAdjusted, ___raycastValid0, ___hitInfo1, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::get_SpeechRecognizerStartBehavior()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealitySpeechCommandsProfile_get_SpeechRecognizerStartBehavior_m8DB42B73900D75367BCCADE158634F41C237363A (MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealitySpeechCommandsProfile_get_SpeechRecognizerStartBehavior_m8DB42B73900D75367BCCADE158634F41C237363A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealitySpeechCommandsProfile_get_SpeechRecognizerStartBehavior_m8DB42B73900D75367BCCADE158634F41C237363A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26492));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26493));
	{
		// public AutoStartBehavior SpeechRecognizerStartBehavior => startBehavior;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26494));
		int32_t L_0 = __this->get_startBehavior_5();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::get_SpeechRecognitionConfidenceLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MixedRealitySpeechCommandsProfile_get_SpeechRecognitionConfidenceLevel_mD07EC3F0C555F0635B714CC901BD1635C8F3609A (MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealitySpeechCommandsProfile_get_SpeechRecognitionConfidenceLevel_mD07EC3F0C555F0635B714CC901BD1635C8F3609A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealitySpeechCommandsProfile_get_SpeechRecognitionConfidenceLevel_mD07EC3F0C555F0635B714CC901BD1635C8F3609A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26495));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26496));
	{
		// public RecognitionConfidenceLevel SpeechRecognitionConfidenceLevel => recognitionConfidenceLevel;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26497));
		int32_t L_0 = __this->get_recognitionConfidenceLevel_6();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands[] Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::get_SpeechCommands()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* MixedRealitySpeechCommandsProfile_get_SpeechCommands_m1BAA28B890C02DD8984C7FBA1EF1B905BDBAD6B9 (MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealitySpeechCommandsProfile_get_SpeechCommands_m1BAA28B890C02DD8984C7FBA1EF1B905BDBAD6B9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealitySpeechCommandsProfile_get_SpeechCommands_m1BAA28B890C02DD8984C7FBA1EF1B905BDBAD6B9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26498));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26499));
	{
		// public SpeechCommands[] SpeechCommands => speechCommands;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26500));
		SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* L_0 = __this->get_speechCommands_7();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealitySpeechCommandsProfile__ctor_mD6870CB1D728304BA8CB1E2B125991AE5BD51F09 (MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealitySpeechCommandsProfile__ctor_mD6870CB1D728304BA8CB1E2B125991AE5BD51F09_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealitySpeechCommandsProfile__ctor_mD6870CB1D728304BA8CB1E2B125991AE5BD51F09_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26501));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26502));
	{
		// private AutoStartBehavior startBehavior = AutoStartBehavior.AutoStart;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26503));
		__this->set_startBehavior_5(0);
		// private RecognitionConfidenceLevel recognitionConfidenceLevel = RecognitionConfidenceLevel.Medium;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26504));
		__this->set_recognitionConfidenceLevel_6(1);
		// private SpeechCommands[] speechCommands = System.Array.Empty<SpeechCommands>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26505));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26506));
		SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* L_0 = Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_inline(/*hidden argument*/Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26506));
		__this->set_speechCommands_7(L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26507));
		BaseMixedRealityProfile__ctor_mC73E9360DB114F72FBC08703A0A9ABA78168B78A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26507));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.MouseControllerDefinition::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E (MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25598));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25599));
	{
		// public MouseControllerDefinition() : base(Handedness.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25603));
		BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D(__this, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25603));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25601));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25602));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.MouseControllerDefinition::get_DefaultMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* MouseControllerDefinition_get_DefaultMappings_m7EF7ECB5F5503867EB09A3E4EA8082907919B866 (MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseControllerDefinition_get_DefaultMappings_m7EF7ECB5F5503867EB09A3E4EA8082907919B866_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseControllerDefinition_get_DefaultMappings_m7EF7ECB5F5503867EB09A3E4EA8082907919B866_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25604));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25605));
	{
		// protected override MixedRealityInputActionMapping[] DefaultMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("Spatial Mouse Position", AxisType.SixDof, DeviceInputType.SpatialPointer),
		//     new MixedRealityInputActionMapping("Mouse Delta Position", AxisType.DualAxis, DeviceInputType.PointerPosition),
		//     new MixedRealityInputActionMapping("Mouse Scroll Position", AxisType.DualAxis, DeviceInputType.Scroll),
		//     new MixedRealityInputActionMapping("Left Mouse Button", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Right Mouse Button", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Mouse Button 2", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Mouse Button 3", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Mouse Button 4", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Mouse Button 5", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Mouse Button 6", AxisType.Digital, DeviceInputType.ButtonPress),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25606));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)((int32_t)10));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25607));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteral6B3FED9B04FECD70B95D853F5BA5BA9EE0A05138, 7, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25607));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25608));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteralBE3A69641719C82A0346149022F30010B875EF38, 4, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25608));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25609));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_6 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_6, _stringLiteral5D55589F65E143B227E3C086A040D08278E9810D, 4, ((int32_t)50), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25609));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_6);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25610));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_8 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_8, _stringLiteral4A247A5D4261C04753C459F90887FA1602AD1092, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25610));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_8);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25611));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_10 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_10, _stringLiteral9C9A5C6A957D4F2265042CD8B5B4BD9903436DC8, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25611));
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_10);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25612));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_12 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_12, _stringLiteral0B00E71ECE847B4119EFBB0AFBFE6915BD9DA3C3, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25612));
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(5), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_12);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25613));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_14 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_14, _stringLiteral4B1F8CB79B5361F54B20780F0B261EDEDED54945, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25613));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(6), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_14);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25614));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_16 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_16, _stringLiteralE5D93B49F138108E73899C063D797C414A902597, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25614));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_16);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(7), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_16);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_17 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25615));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_18 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_18, _stringLiteral056B3BC98792010367C5AFAE60918EAA30303D62, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25615));
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_18);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(8), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_18);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_19 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25616));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_20 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_20, _stringLiteral7B6BB76A88E0023DEAD12D83B749EE7F209F469C, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25616));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_20);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_20);
		return L_19;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.OculusRemoteControllerDefinition::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OculusRemoteControllerDefinition__ctor_m96E71128286C34D5B4F11A794D8161F2CFD7EBE5 (OculusRemoteControllerDefinition_t3D22BBCDBCD365FCCD1FD8EE1C6F4F86CFD32DF9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OculusRemoteControllerDefinition__ctor_m96E71128286C34D5B4F11A794D8161F2CFD7EBE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OculusRemoteControllerDefinition__ctor_m96E71128286C34D5B4F11A794D8161F2CFD7EBE5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25617));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25618));
	{
		// public OculusRemoteControllerDefinition() : base(Handedness.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25619));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25622));
		BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D(__this, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25622));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25620));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25621));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.OculusRemoteControllerDefinition::get_DefaultMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* OculusRemoteControllerDefinition_get_DefaultMappings_mA53721E2183AD2F31FC38098B764D603DE020440 (OculusRemoteControllerDefinition_t3D22BBCDBCD365FCCD1FD8EE1C6F4F86CFD32DF9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OculusRemoteControllerDefinition_get_DefaultMappings_mA53721E2183AD2F31FC38098B764D603DE020440_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OculusRemoteControllerDefinition_get_DefaultMappings_mA53721E2183AD2F31FC38098B764D603DE020440_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25623));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25624));
	{
		// protected override MixedRealityInputActionMapping[] DefaultMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("D-Pad Position", AxisType.DualAxis, DeviceInputType.DirectionalPad),
		//     new MixedRealityInputActionMapping("Button.One", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Button.Two", AxisType.Digital, DeviceInputType.ButtonPress),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25625));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)3);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25626));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteral1B71A18ED3E9993B0A28105B128830780EC8C318, 4, ((int32_t)49), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25626));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25627));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteral9C44182EB81FF343CEE2C9734433ADD711E79D21, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25627));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25628));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_6 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_6, _stringLiteral6D97E87A7B278B947C98CC75ADAEBAD7C90FD353, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25628));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_6);
		return L_5;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.OculusTouchControllerDefinition::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OculusTouchControllerDefinition__ctor_m9B8032ED418BABA305FA05EF88C2B0D9F060F9B7 (OculusTouchControllerDefinition_tC9642682696715D95E748D1705E01C287490FF99 * __this, uint8_t ___handedness0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OculusTouchControllerDefinition__ctor_m9B8032ED418BABA305FA05EF88C2B0D9F060F9B7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OculusTouchControllerDefinition__ctor_m9B8032ED418BABA305FA05EF88C2B0D9F060F9B7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25629));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25630));
	int32_t G_B3_0 = 0;
	{
		// public OculusTouchControllerDefinition(Handedness handedness) : base(handedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25631));
		uint8_t L_0 = ___handedness0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25638));
		BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25638));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25632));
		// if ((handedness != Handedness.Left) &&
		//     (handedness != Handedness.Right))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25633));
		uint8_t L_1 = ___handedness0;
		if ((((int32_t)L_1) == ((int32_t)1)))
		{
			goto IL_0016;
		}
	}
	{
		uint8_t L_2 = ___handedness0;
		G_B3_0 = ((((int32_t)((((int32_t)L_2) == ((int32_t)2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25634));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25635));
		// throw new System.ArgumentException($"Unsupported Handedness ({handedness}). The OculusTouchControllerDefinition supports Left and Right.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25636));
		uint8_t L_4 = ___handedness0;
		uint8_t L_5 = L_4;
		RuntimeObject * L_6 = Box(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_il2cpp_TypeInfo_var, &L_5);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25639));
		String_t* L_7 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral96D88A78DB47254993B8BEDDCE220C9F5D9C15BB, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25639));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25640));
		ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1 * L_8 = (ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1 *)il2cpp_codegen_object_new(ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1_il2cpp_TypeInfo_var);
		ArgumentException__ctor_m9A85EF7FEFEC21DDD525A67E831D77278E5165B7(L_8, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25640));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_8, OculusTouchControllerDefinition__ctor_m9B8032ED418BABA305FA05EF88C2B0D9F060F9B7_RuntimeMethod_var);
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25637));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.OculusTouchControllerDefinition::get_DefaultLeftHandedMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* OculusTouchControllerDefinition_get_DefaultLeftHandedMappings_m5917901468278FCE944079924D336FA35EE94D45 (OculusTouchControllerDefinition_tC9642682696715D95E748D1705E01C287490FF99 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OculusTouchControllerDefinition_get_DefaultLeftHandedMappings_m5917901468278FCE944079924D336FA35EE94D45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OculusTouchControllerDefinition_get_DefaultLeftHandedMappings_m5917901468278FCE944079924D336FA35EE94D45_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25641));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25642));
	{
		// protected override MixedRealityInputActionMapping[] DefaultLeftHandedMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("Spatial Pointer", AxisType.SixDof, DeviceInputType.SpatialPointer),
		//     new MixedRealityInputActionMapping("Axis1D.PrimaryIndexTrigger", AxisType.SingleAxis, DeviceInputType.Trigger),
		//     new MixedRealityInputActionMapping("Axis1D.PrimaryIndexTrigger Touch", AxisType.Digital, DeviceInputType.TriggerTouch),
		//     new MixedRealityInputActionMapping("Axis1D.PrimaryIndexTrigger Near Touch", AxisType.Digital, DeviceInputType.TriggerNearTouch),
		//     new MixedRealityInputActionMapping("Axis1D.PrimaryIndexTrigger Press", AxisType.Digital, DeviceInputType.TriggerPress),
		//     new MixedRealityInputActionMapping("Axis1D.PrimaryHandTrigger Press", AxisType.SingleAxis, DeviceInputType.GripPress),
		//     new MixedRealityInputActionMapping("Axis2D.PrimaryThumbstick", AxisType.DualAxis, DeviceInputType.ThumbStick),
		//     new MixedRealityInputActionMapping("Button.PrimaryThumbstick Touch", AxisType.Digital, DeviceInputType.ThumbStickTouch),
		//     new MixedRealityInputActionMapping("Button.PrimaryThumbstick Near Touch", AxisType.Digital, DeviceInputType.ThumbNearTouch),
		//     new MixedRealityInputActionMapping("Button.PrimaryThumbstick Press", AxisType.Digital, DeviceInputType.ThumbStickPress),
		//     new MixedRealityInputActionMapping("Button.Three Press", AxisType.Digital, DeviceInputType.PrimaryButtonPress),
		//     new MixedRealityInputActionMapping("Button.Four Press", AxisType.Digital, DeviceInputType.SecondaryButtonPress),
		//     new MixedRealityInputActionMapping("Button.Start Press", AxisType.Digital, DeviceInputType.Menu),
		//     new MixedRealityInputActionMapping("Button.Three Touch", AxisType.Digital, DeviceInputType.PrimaryButtonTouch),
		//     new MixedRealityInputActionMapping("Button.Four Touch", AxisType.Digital, DeviceInputType.SecondaryButtonTouch),
		//     new MixedRealityInputActionMapping("Touch.PrimaryThumbRest Touch", AxisType.Digital, DeviceInputType.ThumbTouch),
		//     new MixedRealityInputActionMapping("Touch.PrimaryThumbRest Near Touch", AxisType.Digital, DeviceInputType.ThumbNearTouch),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25643));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)((int32_t)17));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25644));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteral0F9D13B1C31A5F4C68D0EEA587D21588F757084E, 7, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25644));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25645));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteral9CB08DC0ACF6D46CAB170F605604E304D97EBC74, 3, ((int32_t)10), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25645));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25646));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_6 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_6, _stringLiteral51F3B2EE9B97B2EF33D3F509A8473295A1E92EE9, 2, ((int32_t)11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25646));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_6);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25647));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_8 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_8, _stringLiteralCBA5457BDCABFEAA29B1FF68C1AFB7EC38379224, 2, ((int32_t)12), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25647));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_8);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25648));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_10 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_10, _stringLiteralDAFED0D7742E207A0850BCF7B75B78DCCF28BF7A, 2, ((int32_t)13), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25648));
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_10);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25649));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_12 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_12, _stringLiteral59CD0DFFEED085A4807F289746848F13DF2EC40B, 3, ((int32_t)60), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25649));
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(5), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_12);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25650));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_14 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_14, _stringLiteral457E989E00F6A99FBBBB4FD7334A3235F20E538A, 4, ((int32_t)17), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25650));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(6), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_14);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25651));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_16 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_16, _stringLiteral0957326BD9199091B642BF0CD6AA6600B50CF258, 2, ((int32_t)19), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25651));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_16);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(7), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_16);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_17 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25652));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_18 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_18, _stringLiteral106F1A34948BC9FB59B142222011038C66E8D87B, 2, ((int32_t)31), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25652));
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_18);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(8), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_18);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_19 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25653));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_20 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_20, _stringLiteralA839C5A27FE72B3244E8502E5C29CF8D95649D14, 2, ((int32_t)18), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25653));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_20);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_20);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_21 = L_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25654));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_22 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_22, _stringLiteralCC4299750360DE9674D82B609CE1B9991E169CA6, 2, ((int32_t)51), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25654));
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_22);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)10)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_22);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_23 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25655));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_24 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_24, _stringLiteralF825D6866DE69320DBBECFA75BE5218E0FEE9A07, 2, ((int32_t)54), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25655));
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_24);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)11)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_24);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_25 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25656));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_26 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_26, _stringLiteral31E1A9E6CFF6074546DAF449DDCE91F89C782683, 2, ((int32_t)27), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25656));
		NullCheck(L_25);
		ArrayElementTypeCheck (L_25, L_26);
		(L_25)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)12)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_26);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_27 = L_25;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25657));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_28 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_28, _stringLiteral15758E5B89585EBF8F8D346C942E99DF131DBCEF, 2, ((int32_t)52), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25657));
		NullCheck(L_27);
		ArrayElementTypeCheck (L_27, L_28);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)13)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_28);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_29 = L_27;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25658));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_30 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_30, _stringLiteral62451FBAE8C624EC16B53E2B8B5A94636DB8204B, 2, ((int32_t)55), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25658));
		NullCheck(L_29);
		ArrayElementTypeCheck (L_29, L_30);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)14)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_30);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_31 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25659));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_32 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_32, _stringLiteralC3EE37116CA604A95B2D60FC79EB227D914DB1E6, 2, ((int32_t)30), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25659));
		NullCheck(L_31);
		ArrayElementTypeCheck (L_31, L_32);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)15)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_32);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_33 = L_31;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25660));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_34 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_34, _stringLiteralCC93706187D66F9E507CF7C5A64899EF0FD87ECD, 2, ((int32_t)31), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25660));
		NullCheck(L_33);
		ArrayElementTypeCheck (L_33, L_34);
		(L_33)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)16)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_34);
		return L_33;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.OculusTouchControllerDefinition::get_DefaultRightHandedMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* OculusTouchControllerDefinition_get_DefaultRightHandedMappings_m1D3BFC65AD861C7A7E48C55752E4CBE304765163 (OculusTouchControllerDefinition_tC9642682696715D95E748D1705E01C287490FF99 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OculusTouchControllerDefinition_get_DefaultRightHandedMappings_m1D3BFC65AD861C7A7E48C55752E4CBE304765163_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OculusTouchControllerDefinition_get_DefaultRightHandedMappings_m1D3BFC65AD861C7A7E48C55752E4CBE304765163_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25661));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25662));
	{
		// protected override MixedRealityInputActionMapping[] DefaultRightHandedMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("Spatial Pointer", AxisType.SixDof, DeviceInputType.SpatialPointer),
		//     new MixedRealityInputActionMapping("Axis1D.SecondaryIndexTrigger", AxisType.SingleAxis, DeviceInputType.Trigger),
		//     new MixedRealityInputActionMapping("Axis1D.SecondaryIndexTrigger Touch", AxisType.Digital, DeviceInputType.TriggerTouch),
		//     new MixedRealityInputActionMapping("Axis1D.SecondaryIndexTrigger Near Touch", AxisType.Digital, DeviceInputType.TriggerNearTouch),
		//     new MixedRealityInputActionMapping("Axis1D.SecondaryIndexTrigger Press", AxisType.Digital, DeviceInputType.TriggerPress),
		//     new MixedRealityInputActionMapping("Axis1D.SecondaryHandTrigger Press", AxisType.SingleAxis, DeviceInputType.GripPress),
		//     new MixedRealityInputActionMapping("Axis2D.SecondaryThumbstick", AxisType.DualAxis, DeviceInputType.ThumbStick),
		//     new MixedRealityInputActionMapping("Button.SecondaryThumbstick Touch", AxisType.Digital, DeviceInputType.ThumbStickTouch),
		//     new MixedRealityInputActionMapping("Button.SecondaryThumbstick Near Touch", AxisType.Digital, DeviceInputType.ThumbNearTouch),
		//     new MixedRealityInputActionMapping("Button.SecondaryThumbstick Press", AxisType.Digital, DeviceInputType.ThumbStickPress),
		//     new MixedRealityInputActionMapping("Button.One Press", AxisType.Digital, DeviceInputType.PrimaryButtonPress),
		//     new MixedRealityInputActionMapping("Button.Two Press", AxisType.Digital, DeviceInputType.SecondaryButtonPress),
		//     new MixedRealityInputActionMapping("Button.One Touch", AxisType.Digital, DeviceInputType.PrimaryButtonTouch),
		//     new MixedRealityInputActionMapping("Button.Two Touch", AxisType.Digital, DeviceInputType.SecondaryButtonTouch),
		//     new MixedRealityInputActionMapping("Touch.SecondaryThumbRest Touch", AxisType.Digital, DeviceInputType.ThumbTouch),
		//     new MixedRealityInputActionMapping("Touch.SecondaryThumbRest Near Touch", AxisType.Digital, DeviceInputType.ThumbNearTouch),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25663));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)((int32_t)16));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25664));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteral0F9D13B1C31A5F4C68D0EEA587D21588F757084E, 7, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25664));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25665));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteral64D9EE1F43D368115457FB30F1A17D7C92563305, 3, ((int32_t)10), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25665));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25666));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_6 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_6, _stringLiteral6ED8D91246C58ABCC5DDEB00EAC56E94A9B046DD, 2, ((int32_t)11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25666));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_6);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25667));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_8 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_8, _stringLiteralF683313BD533409E1704E06D2A97B5CE5BCC7B4A, 2, ((int32_t)12), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25667));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_8);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25668));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_10 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_10, _stringLiteral4468B5733BBDF8B9FA64F38D318118FC9793EDDC, 2, ((int32_t)13), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25668));
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_10);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25669));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_12 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_12, _stringLiteralC00134BCFFA05DD4FF4A1868C2C8BA9290A5B71B, 3, ((int32_t)60), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25669));
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(5), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_12);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25670));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_14 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_14, _stringLiteralCFC1F9E31329EEECF4CD35DD100BB63DBD05A4E4, 4, ((int32_t)17), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25670));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(6), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_14);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25671));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_16 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_16, _stringLiteral60A60C524FFE620011ACC85A62321A2FDF4B57F3, 2, ((int32_t)19), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25671));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_16);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(7), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_16);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_17 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25672));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_18 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_18, _stringLiteralB4B23EAB9DB662B174AF7913A54AEF0F104E2A51, 2, ((int32_t)31), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25672));
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_18);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(8), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_18);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_19 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25673));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_20 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_20, _stringLiteralED172DA14313D0353CA5064B9F762F0DFCECFF17, 2, ((int32_t)18), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25673));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_20);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_20);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_21 = L_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25674));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_22 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_22, _stringLiteralB09532BE24B61EA3DB13D1DC5124B8828D798CE8, 2, ((int32_t)51), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25674));
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_22);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)10)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_22);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_23 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25675));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_24 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_24, _stringLiteralF9BA3224DDE923BCBB695A2A34CE59F4045E0324, 2, ((int32_t)54), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25675));
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_24);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)11)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_24);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_25 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25676));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_26 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_26, _stringLiteral203DA333F71D786E4BC6F5673CDA14AF8DD1FE53, 2, ((int32_t)52), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25676));
		NullCheck(L_25);
		ArrayElementTypeCheck (L_25, L_26);
		(L_25)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)12)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_26);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_27 = L_25;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25677));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_28 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_28, _stringLiteral767DC8E1BFF946141D583CFBDDD63C8909250D51, 2, ((int32_t)55), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25677));
		NullCheck(L_27);
		ArrayElementTypeCheck (L_27, L_28);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)13)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_28);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_29 = L_27;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25678));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_30 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_30, _stringLiteralA4D8F2F82AF4A72233434AF862F5603D5E0121DA, 2, ((int32_t)30), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25678));
		NullCheck(L_29);
		ArrayElementTypeCheck (L_29, L_30);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)14)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_30);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_31 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25679));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_32 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_32, _stringLiteralA8F8625B9FBA6D4FEBC5CA11B8FCB336747BE2B9, 2, ((int32_t)31), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25679));
		NullCheck(L_31);
		ArrayElementTypeCheck (L_31, L_32);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)15)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_32);
		return L_31;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.PointerOption
IL2CPP_EXTERN_C void PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshal_pinvoke(const PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109& unmarshaled, PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_pinvoke& marshaled)
{
	Exception_t* ___pointerPrefab_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointerPrefab' of type 'PointerOption': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointerPrefab_2Exception, NULL);
}
IL2CPP_EXTERN_C void PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshal_pinvoke_back(const PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_pinvoke& marshaled, PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109& unmarshaled)
{
	Exception_t* ___pointerPrefab_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointerPrefab' of type 'PointerOption': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointerPrefab_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.PointerOption
IL2CPP_EXTERN_C void PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshal_pinvoke_cleanup(PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.PointerOption
IL2CPP_EXTERN_C void PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshal_com(const PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109& unmarshaled, PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_com& marshaled)
{
	Exception_t* ___pointerPrefab_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointerPrefab' of type 'PointerOption': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointerPrefab_2Exception, NULL);
}
IL2CPP_EXTERN_C void PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshal_com_back(const PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_com& marshaled, PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109& unmarshaled)
{
	Exception_t* ___pointerPrefab_2Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointerPrefab' of type 'PointerOption': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointerPrefab_2Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.PointerOption
IL2CPP_EXTERN_C void PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshal_com_cleanup(PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_marshaled_com& marshaled)
{
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerOption::.ctor(Microsoft.MixedReality.Toolkit.Input.SupportedControllerType,Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, int32_t ___controllerType0, uint8_t ___handedness1, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointerPrefab2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___controllerType0), (&___handedness1), (&___pointerPrefab2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26508));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26509));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26510));
		// this.controllerType = controllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26511));
		int32_t L_0 = ___controllerType0;
		__this->set_controllerType_0(L_0);
		// this.handedness = handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26512));
		uint8_t L_1 = ___handedness1;
		__this->set_handedness_1(L_1);
		// this.pointerPrefab = pointerPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26513));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = ___pointerPrefab2;
		__this->set_pointerPrefab_2(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26514));
		return;
	}
}
IL2CPP_EXTERN_C  void PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC_AdjustorThunk (RuntimeObject * __this, int32_t ___controllerType0, uint8_t ___handedness1, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___pointerPrefab2, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * _thisAdjusted = reinterpret_cast<PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 *>(__this + _offset);
	PointerOption__ctor_mBC6BE106CA036EB16A1330BF9BC158F0081F3ECC(_thisAdjusted, ___controllerType0, ___handedness1, ___pointerPrefab2, method);
}
// Microsoft.MixedReality.Toolkit.Input.SupportedControllerType Microsoft.MixedReality.Toolkit.Input.PointerOption::get_ControllerType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26515));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26516));
	{
		// public SupportedControllerType ControllerType => controllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26517));
		int32_t L_0 = __this->get_controllerType_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C  int32_t PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * _thisAdjusted = reinterpret_cast<PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 *>(__this + _offset);
	return PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_inline(_thisAdjusted, method);
}
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.PointerOption::get_Handedness()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26518));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26519));
	{
		// public Handedness Handedness => handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26520));
		uint8_t L_0 = __this->get_handedness_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C  uint8_t PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * _thisAdjusted = reinterpret_cast<PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 *>(__this + _offset);
	return PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_inline(_thisAdjusted, method);
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PointerOption::get_PointerPrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410 (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26521));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26522));
	{
		// public GameObject PointerPrefab => pointerPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26523));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_pointerPrefab_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * _thisAdjusted = reinterpret_cast<PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 *>(__this + _offset);
	return PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_inline(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrimaryPointerChangedHandler__ctor_m6C9BB2B096B39308FC9F523F86C3B013ED4DFC43 (PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler::Invoke(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrimaryPointerChangedHandler_Invoke_m5D0470464C6D56240DC7DA1522B2194CBB22AC3F (PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * __this, RuntimeObject* ___oldPointer0, RuntimeObject* ___newPointer1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (RuntimeObject*, RuntimeObject*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___oldPointer0, ___newPointer1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, RuntimeObject*, RuntimeObject*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___oldPointer0, ___newPointer1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(targetMethod, ___oldPointer0, ___newPointer1);
					else
						GenericVirtActionInvoker1< RuntimeObject* >::Invoke(targetMethod, ___oldPointer0, ___newPointer1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< RuntimeObject* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___oldPointer0, ___newPointer1);
					else
						VirtActionInvoker1< RuntimeObject* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___oldPointer0, ___newPointer1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___newPointer1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (RuntimeObject*, RuntimeObject*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___oldPointer0, ___newPointer1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(targetMethod, targetThis, ___oldPointer0, ___newPointer1);
					else
						GenericVirtActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(targetMethod, targetThis, ___oldPointer0, ___newPointer1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___oldPointer0, ___newPointer1);
					else
						VirtActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___oldPointer0, ___newPointer1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___oldPointer0) - 1), ___newPointer1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___oldPointer0, ___newPointer1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, RuntimeObject*, RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___oldPointer0, ___newPointer1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler::BeginInvoke(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PrimaryPointerChangedHandler_BeginInvoke_mE8D8C2DBE908BCB618CBDF18AF10E57498917374 (PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * __this, RuntimeObject* ___oldPointer0, RuntimeObject* ___newPointer1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	void *__d_args[3] = {0};
	__d_args[0] = ___oldPointer0;
	__d_args[1] = ___newPointer1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrimaryPointerChangedHandler_EndInvoke_m272BF7611E16986B13D8E1E16FB427856CF8331A (PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486 (SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F * __this, uint8_t ___handedness0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25680));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25681));
	{
		// public SimpleHandDefinition(Handedness handedness) : base(handedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25682));
		uint8_t L_0 = ___handedness0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25685));
		BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25685));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25683));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25684));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition::get_DefaultMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* SimpleHandDefinition_get_DefaultMappings_m06E20C5986CCDF17622C785772E3F2FC6056D45A (SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimpleHandDefinition_get_DefaultMappings_m06E20C5986CCDF17622C785772E3F2FC6056D45A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimpleHandDefinition_get_DefaultMappings_m06E20C5986CCDF17622C785772E3F2FC6056D45A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25686));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25687));
	{
		// protected override MixedRealityInputActionMapping[] DefaultMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("Select", AxisType.Digital, DeviceInputType.Select),
		//     new MixedRealityInputActionMapping("Grip Pose", AxisType.SixDof, DeviceInputType.SpatialGrip),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25688));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25689));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteral8598222918D3C6E513D63060CF55E2971DED729A, 2, ((int32_t)25), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25689));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25690));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteral66654F3A427908EF2AB0102919620271D634DA8A, 7, ((int32_t)14), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25690));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		return L_3;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::get_Controller()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26842));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26843));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26844));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_5();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217 (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26845));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26846));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26847));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CControllerU3Ek__BackingField_5(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::.ctor(UnityEngine.EventSystems.EventSystem)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SourceStateEventData__ctor_m22F7E9CFCD56B0DF9CDA1DE40A34C1142B945C51 (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData__ctor_m22F7E9CFCD56B0DF9CDA1DE40A34C1142B945C51_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventSystem0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData__ctor_m22F7E9CFCD56B0DF9CDA1DE40A34C1142B945C51_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26848));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26849));
	{
		// public SourceStateEventData(EventSystem eventSystem) : base(eventSystem) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26850));
		EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_0 = ___eventSystem0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26853));
		BaseInputEventData__ctor_mEBF558B276C1066D066D7C6AEBE8147E19EF5F73(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26853));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26851));
		// public SourceStateEventData(EventSystem eventSystem) : base(eventSystem) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26852));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::Initialize(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SourceStateEventData_Initialize_m48195FDCEF647EDA8F7234F78309E11229C47590 (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, RuntimeObject* ___inputSource0, RuntimeObject* ___controller1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_Initialize_m48195FDCEF647EDA8F7234F78309E11229C47590_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___controller1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_Initialize_m48195FDCEF647EDA8F7234F78309E11229C47590_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26854));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26855));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26856));
		// BaseInitialize(inputSource, MixedRealityInputAction.None);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26857));
		RuntimeObject* L_0 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26860));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26860));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26861));
		BaseInputEventData_BaseInitialize_mB2F424D21461AB89B95CCB03E14405375FACC25C(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26861));
		// Controller = controller;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26858));
		RuntimeObject* L_2 = ___controller1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26862));
		SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_inline(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26862));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26859));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif


// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.SpeechCommands
IL2CPP_EXTERN_C void SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshal_pinvoke(const SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B& unmarshaled, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke& marshaled)
{
	marshaled.___localizationKey_0 = il2cpp_codegen_marshal_string(unmarshaled.get_localizationKey_0());
	marshaled.___localizedKeyword_1 = il2cpp_codegen_marshal_string(unmarshaled.get_localizedKeyword_1());
	marshaled.___keyword_2 = il2cpp_codegen_marshal_string(unmarshaled.get_keyword_2());
	marshaled.___keyCode_3 = unmarshaled.get_keyCode_3();
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_pinvoke(unmarshaled.get_action_4(), marshaled.___action_4);
}
IL2CPP_EXTERN_C void SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshal_pinvoke_back(const SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke& marshaled, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B& unmarshaled)
{
	unmarshaled.set_localizationKey_0(il2cpp_codegen_marshal_string_result(marshaled.___localizationKey_0));
	unmarshaled.set_localizedKeyword_1(il2cpp_codegen_marshal_string_result(marshaled.___localizedKeyword_1));
	unmarshaled.set_keyword_2(il2cpp_codegen_marshal_string_result(marshaled.___keyword_2));
	int32_t unmarshaled_keyCode_temp_3 = 0;
	unmarshaled_keyCode_temp_3 = marshaled.___keyCode_3;
	unmarshaled.set_keyCode_3(unmarshaled_keyCode_temp_3);
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  unmarshaled_action_temp_4;
	memset((&unmarshaled_action_temp_4), 0, sizeof(unmarshaled_action_temp_4));
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_pinvoke_back(marshaled.___action_4, unmarshaled_action_temp_4);
	unmarshaled.set_action_4(unmarshaled_action_temp_4);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.SpeechCommands
IL2CPP_EXTERN_C void SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshal_pinvoke_cleanup(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke& marshaled)
{
	il2cpp_codegen_marshal_free(marshaled.___localizationKey_0);
	marshaled.___localizationKey_0 = NULL;
	il2cpp_codegen_marshal_free(marshaled.___localizedKeyword_1);
	marshaled.___localizedKeyword_1 = NULL;
	il2cpp_codegen_marshal_free(marshaled.___keyword_2);
	marshaled.___keyword_2 = NULL;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_pinvoke_cleanup(marshaled.___action_4);
}


// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.SpeechCommands
IL2CPP_EXTERN_C void SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshal_com(const SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B& unmarshaled, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com& marshaled)
{
	marshaled.___localizationKey_0 = il2cpp_codegen_marshal_bstring(unmarshaled.get_localizationKey_0());
	marshaled.___localizedKeyword_1 = il2cpp_codegen_marshal_bstring(unmarshaled.get_localizedKeyword_1());
	marshaled.___keyword_2 = il2cpp_codegen_marshal_bstring(unmarshaled.get_keyword_2());
	marshaled.___keyCode_3 = unmarshaled.get_keyCode_3();
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_com(unmarshaled.get_action_4(), marshaled.___action_4);
}
IL2CPP_EXTERN_C void SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshal_com_back(const SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com& marshaled, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B& unmarshaled)
{
	unmarshaled.set_localizationKey_0(il2cpp_codegen_marshal_bstring_result(marshaled.___localizationKey_0));
	unmarshaled.set_localizedKeyword_1(il2cpp_codegen_marshal_bstring_result(marshaled.___localizedKeyword_1));
	unmarshaled.set_keyword_2(il2cpp_codegen_marshal_bstring_result(marshaled.___keyword_2));
	int32_t unmarshaled_keyCode_temp_3 = 0;
	unmarshaled_keyCode_temp_3 = marshaled.___keyCode_3;
	unmarshaled.set_keyCode_3(unmarshaled_keyCode_temp_3);
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  unmarshaled_action_temp_4;
	memset((&unmarshaled_action_temp_4), 0, sizeof(unmarshaled_action_temp_4));
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_com_back(marshaled.___action_4, unmarshaled_action_temp_4);
	unmarshaled.set_action_4(unmarshaled_action_temp_4);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.SpeechCommands
IL2CPP_EXTERN_C void SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshal_com_cleanup(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com& marshaled)
{
	il2cpp_codegen_marshal_free_bstring(marshaled.___localizationKey_0);
	marshaled.___localizationKey_0 = NULL;
	il2cpp_codegen_marshal_free_bstring(marshaled.___localizedKeyword_1);
	marshaled.___localizedKeyword_1 = NULL;
	il2cpp_codegen_marshal_free_bstring(marshaled.___keyword_2);
	marshaled.___keyword_2 = NULL;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshal_com_cleanup(marshaled.___action_4);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechCommands::.ctor(System.String,UnityEngine.KeyCode,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, String_t* ___keyword0, int32_t ___keyCode1, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action2, String_t* ___localizationKey3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___keyword0), (&___keyCode1), (&___action2), (&___localizationKey3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26524));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26525));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26526));
		// this.keyword = keyword;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26527));
		String_t* L_0 = ___keyword0;
		__this->set_keyword_2(L_0);
		// this.keyCode = keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26528));
		int32_t L_1 = ___keyCode1;
		__this->set_keyCode_3(L_1);
		// this.action = action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26529));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = ___action2;
		__this->set_action_4(L_2);
		// this.localizationKey = localizationKey;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26530));
		String_t* L_3 = ___localizationKey3;
		__this->set_localizationKey_0(L_3);
		// this.localizedKeyword = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26531));
		__this->set_localizedKeyword_1((String_t*)NULL);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26532));
		return;
	}
}
IL2CPP_EXTERN_C  void SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934_AdjustorThunk (RuntimeObject * __this, String_t* ___keyword0, int32_t ___keyCode1, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action2, String_t* ___localizationKey3, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * _thisAdjusted = reinterpret_cast<SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *>(__this + _offset);
	SpeechCommands__ctor_mFDBC739E68B3977028CD36A4E2E9DD2D6F766934(_thisAdjusted, ___keyword0, ___keyCode1, ___action2, ___localizationKey3, method);
}
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_LocalizedKeyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7 * V_1 = NULL;
	Exception_t * V_2 = NULL;
	String_t* V_3 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26533));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26534));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B3_0 = 0;
	String_t* G_B11_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26535));
		// if (!string.IsNullOrWhiteSpace(localizationKey) && string.IsNullOrWhiteSpace(localizedKeyword))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26536));
		String_t* L_0 = __this->get_localizationKey_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26550));
		bool L_1 = String_IsNullOrWhiteSpace_m62102CA65546AE151DC8254B72110F4AA48E2135(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26550));
		if (L_1)
		{
			goto IL_001b;
		}
	}
	{
		String_t* L_2 = __this->get_localizedKeyword_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26551));
		bool L_3 = String_IsNullOrWhiteSpace_m62102CA65546AE151DC8254B72110F4AA48E2135(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26551));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26537));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0059;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26538));
	}

IL_0021:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26539));
		// var resourceLoader = global::Windows.ApplicationModel.Resources.ResourceLoader.GetForViewIndependentUse();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26540));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26552));
		ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7 * L_5 = ResourceLoader_GetForViewIndependentUse_mE4720FC4004660F31458F37540685A14332D0323(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26552));
		V_1 = L_5;
		// localizedKeyword = resourceLoader.GetString(localizationKey);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26541));
		ResourceLoader_tCA219CCC141834B11783B5C72C448C34B05421C7 * L_6 = V_1;
		String_t* L_7 = __this->get_localizationKey_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26553));
		NullCheck(L_6);
		String_t* L_8 = ResourceLoader_GetString_m8586C7138823D162F671D6958F3F245C17E6B628(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26553));
		__this->set_localizedKeyword_1(L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26542));
		goto IL_0058;
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__exception_local = (Exception_t *)e.ex;
		if(il2cpp_codegen_class_is_assignable_from (Exception_t_il2cpp_TypeInfo_var, il2cpp_codegen_object_class(e.ex)))
			goto CATCH_003d;
		throw e;
	}

CATCH_003d:
	{ // begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		// catch (System.Exception e)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26543));
		V_2 = ((Exception_t *)__exception_local);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26544));
		// Debug.LogError("GetLocalizedKeywordException: " + e.Message);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26545));
		Exception_t * L_9 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26554));
		NullCheck(L_9);
		String_t* L_10 = VirtFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26554));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26555));
		String_t* L_11 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral28546FFD601E0EE6024B29BEC3070E44223D1E9F, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26555));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26556));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26556));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26546));
		goto IL_0058;
	} // end catch (depth: 1)

IL_0058:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26547));
	}

IL_0059:
	{
		// return string.IsNullOrWhiteSpace(localizedKeyword) ? keyword : localizedKeyword;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26548));
		String_t* L_12 = __this->get_localizedKeyword_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26557));
		bool L_13 = String_IsNullOrWhiteSpace_m62102CA65546AE151DC8254B72110F4AA48E2135(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26557));
		if (L_13)
		{
			goto IL_006e;
		}
	}
	{
		String_t* L_14 = __this->get_localizedKeyword_1();
		G_B11_0 = L_14;
		goto IL_0074;
	}

IL_006e:
	{
		String_t* L_15 = __this->get_keyword_2();
		G_B11_0 = L_15;
	}

IL_0074:
	{
		V_3 = G_B11_0;
		goto IL_0077;
	}

IL_0077:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26549));
		String_t* L_16 = V_3;
		return L_16;
	}
}
IL2CPP_EXTERN_C  String_t* SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * _thisAdjusted = reinterpret_cast<SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *>(__this + _offset);
	return SpeechCommands_get_LocalizedKeyword_m5CB14BEDBB6125BD45E76EA4EB6E66A9D8C6781D(_thisAdjusted, method);
}
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Keyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26558));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26559));
	String_t* G_B3_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26560));
		// return string.IsNullOrWhiteSpace(keyword) ? localizationKey : keyword;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26561));
		String_t* L_0 = __this->get_keyword_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26563));
		bool L_1 = String_IsNullOrWhiteSpace_m62102CA65546AE151DC8254B72110F4AA48E2135(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26563));
		if (L_1)
		{
			goto IL_0016;
		}
	}
	{
		String_t* L_2 = __this->get_keyword_2();
		G_B3_0 = L_2;
		goto IL_001c;
	}

IL_0016:
	{
		String_t* L_3 = __this->get_localizationKey_0();
		G_B3_0 = L_3;
	}

IL_001c:
	{
		V_0 = G_B3_0;
		goto IL_001f;
	}

IL_001f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26562));
		String_t* L_4 = V_0;
		return L_4;
	}
}
IL2CPP_EXTERN_C  String_t* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * _thisAdjusted = reinterpret_cast<SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *>(__this + _offset);
	return SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53(_thisAdjusted, method);
}
// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_KeyCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26564));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26565));
	{
		// public KeyCode KeyCode => keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26566));
		int32_t L_0 = __this->get_keyCode_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C  int32_t SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * _thisAdjusted = reinterpret_cast<SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *>(__this + _offset);
	return SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_inline(_thisAdjusted, method);
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Action()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26567));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26568));
	{
		// public MixedRealityInputAction Action => action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26569));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_action_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C  MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * _thisAdjusted = reinterpret_cast<SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *>(__this + _offset);
	return SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_inline(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.TimeSpan Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_PhraseDuration()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  SpeechEventData_get_PhraseDuration_mAF65ED068651949A4636D8BE436BC76CC298F408 (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_PhraseDuration_mAF65ED068651949A4636D8BE436BC76CC298F408_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_PhraseDuration_mAF65ED068651949A4636D8BE436BC76CC298F408_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26863));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26864));
	{
		// public TimeSpan PhraseDuration { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26865));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_0 = __this->get_U3CPhraseDurationU3Ek__BackingField_5();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_PhraseDuration(System.TimeSpan)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687 (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26866));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26867));
	{
		// public TimeSpan PhraseDuration { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26868));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_0 = ___value0;
		__this->set_U3CPhraseDurationU3Ek__BackingField_5(L_0);
		return;
	}
}
// System.DateTime Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_PhraseStartTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  SpeechEventData_get_PhraseStartTime_m6E06AC0E405E060918B1F24ED02FDC4644428AA3 (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_PhraseStartTime_m6E06AC0E405E060918B1F24ED02FDC4644428AA3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_PhraseStartTime_m6E06AC0E405E060918B1F24ED02FDC4644428AA3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26869));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26870));
	{
		// public DateTime PhraseStartTime { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26871));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = __this->get_U3CPhraseStartTimeU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_PhraseStartTime(System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26872));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26873));
	{
		// public DateTime PhraseStartTime { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26874));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = ___value0;
		__this->set_U3CPhraseStartTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_Command()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26875));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26876));
	{
		// public SpeechCommands Command { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26877));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_0 = __this->get_U3CCommandU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_Command(Microsoft.MixedReality.Toolkit.Input.SpeechCommands)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26878));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26879));
	{
		// public SpeechCommands Command { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26880));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_0 = ___value0;
		__this->set_U3CCommandU3Ek__BackingField_7(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_Confidence()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SpeechEventData_get_Confidence_mAD712C67AEA3766430BD3D6C987708D3809D158E (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_Confidence_mAD712C67AEA3766430BD3D6C987708D3809D158E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_Confidence_mAD712C67AEA3766430BD3D6C987708D3809D158E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26881));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26882));
	{
		// public RecognitionConfidenceLevel Confidence { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26883));
		int32_t L_0 = __this->get_U3CConfidenceU3Ek__BackingField_8();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::set_Confidence(Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6 (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26884));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26885));
	{
		// public RecognitionConfidenceLevel Confidence { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26886));
		int32_t L_0 = ___value0;
		__this->set_U3CConfidenceU3Ek__BackingField_8(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::.ctor(UnityEngine.EventSystems.EventSystem)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechEventData__ctor_mB4E5D7BD3AB3D7158F659D63231CCD8D8A9CE0A5 (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData__ctor_mB4E5D7BD3AB3D7158F659D63231CCD8D8A9CE0A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventSystem0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData__ctor_mB4E5D7BD3AB3D7158F659D63231CCD8D8A9CE0A5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26887));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26888));
	{
		// public SpeechEventData(EventSystem eventSystem) : base(eventSystem) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26889));
		EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_0 = ___eventSystem0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26892));
		BaseInputEventData__ctor_mEBF558B276C1066D066D7C6AEBE8147E19EF5F73(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26892));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26890));
		// public SpeechEventData(EventSystem eventSystem) : base(eventSystem) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26891));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SpeechEventData::Initialize(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel,System.TimeSpan,System.DateTime,Microsoft.MixedReality.Toolkit.Input.SpeechCommands)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechEventData_Initialize_m13B54C1ABECBD301660C299F4BB63FC6780E0ABB (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, RuntimeObject* ___inputSource0, int32_t ___confidence1, TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___phraseDuration2, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___phraseStartTime3, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___command4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_Initialize_m13B54C1ABECBD301660C299F4BB63FC6780E0ABB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___confidence1), (&___phraseDuration2), (&___phraseStartTime3), (&___command4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_Initialize_m13B54C1ABECBD301660C299F4BB63FC6780E0ABB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26893));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26894));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26895));
		// BaseInitialize(inputSource, command.Action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26896));
		RuntimeObject* L_0 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26902));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_inline((SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *)(&___command4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26903));
		BaseInputEventData_BaseInitialize_mB2F424D21461AB89B95CCB03E14405375FACC25C(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26903));
		// Confidence = confidence;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26897));
		int32_t L_2 = ___confidence1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26904));
		SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_inline(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26904));
		// PhraseDuration = phraseDuration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26898));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_3 = ___phraseDuration2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26905));
		SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26905));
		// PhraseStartTime = phraseStartTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26899));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_4 = ___phraseStartTime3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26906));
		SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_inline(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26906));
		// Command = command;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26900));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_5 = ___command4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26907));
		SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_inline(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26907));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26901));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SupportedControllerTypeExtensions::IsMaskSet(Microsoft.MixedReality.Toolkit.Input.SupportedControllerType,Microsoft.MixedReality.Toolkit.Input.SupportedControllerType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SupportedControllerTypeExtensions_IsMaskSet_m5AF5B1AE6B2140DDA223AA06F7F64336B53C3A91 (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SupportedControllerTypeExtensions_IsMaskSet_m5AF5B1AE6B2140DDA223AA06F7F64336B53C3A91_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___a0), (&___b1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SupportedControllerTypeExtensions_IsMaskSet_m5AF5B1AE6B2140DDA223AA06F7F64336B53C3A91_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25691));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25692));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25693));
		// return (a & b) == b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25694));
		int32_t L_0 = ___a0;
		int32_t L_1 = ___b1;
		int32_t L_2 = ___b1;
		V_0 = (bool)((((int32_t)((int32_t)((int32_t)L_0&(int32_t)L_1))) == ((int32_t)L_2))? 1 : 0);
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25695));
		bool L_3 = V_0;
		return L_3;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.TouchScreenDefinition::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E (TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25696));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25697));
	{
		// public TouchScreenDefinition() : base(Handedness.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25701));
		BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D(__this, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25701));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25699));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25700));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.TouchScreenDefinition::get_DefaultMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* TouchScreenDefinition_get_DefaultMappings_mFD52AB386376E58C4CB93E0975C5AAC7F716F0F1 (TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TouchScreenDefinition_get_DefaultMappings_mFD52AB386376E58C4CB93E0975C5AAC7F716F0F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TouchScreenDefinition_get_DefaultMappings_mFD52AB386376E58C4CB93E0975C5AAC7F716F0F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25702));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25703));
	{
		// protected override MixedRealityInputActionMapping[] DefaultMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("Touch Pointer Delta", AxisType.DualAxis, DeviceInputType.PointerPosition),
		//     new MixedRealityInputActionMapping("Touch Pointer Position", AxisType.SixDof, DeviceInputType.SpatialPointer),
		//     new MixedRealityInputActionMapping("Touch Press", AxisType.Digital, DeviceInputType.PointerClick),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25704));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)3);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25705));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteralD01DE6A2ADEF7A6D19EBCCE32840732F330F400B, 4, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25705));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25706));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteral275E1B4617651F82B33FFBF62CF7873AE1D25FDC, 7, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25706));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25707));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_6 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_6, _stringLiteralA4DBC3E998BCA45C68C2D8EB209D483C15B4F9CB, 2, 6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25707));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_6);
		return L_5;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController__ctor_m362C0B541A088E9FD5A4E2CD7C1FD3DA337D80E5 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController__ctor_m362C0B541A088E9FD5A4E2CD7C1FD3DA337D80E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController__ctor_m362C0B541A088E9FD5A4E2CD7C1FD3DA337D80E5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29359));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29360));
	{
		// : this(trackingState, controllerHandedness, null, inputSource, interactions)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29361));
		int32_t L_0 = ___trackingState0;
		uint8_t L_1 = ___controllerHandedness1;
		RuntimeObject* L_2 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_3 = ___interactions3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29364));
		GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A(__this, L_0, L_1, (RuntimeObject*)NULL, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29364));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29362));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29363));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___definition2, RuntimeObject* ___inputSource3, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * V_1 = NULL;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * V_4 = NULL;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___definition2), (&___inputSource3), (&___interactions4));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29365));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29366));
	int32_t G_B3_0 = 0;
	{
		// public virtual float PointerOffsetAngle { get; protected set; } = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29367));
		__this->set_U3CPointerOffsetAngleU3Ek__BackingField_12((0.0f));
		// private Vector2 dualAxisPosition = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29368));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29406));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29406));
		__this->set_dualAxisPosition_13(L_0);
		// private MixedRealityPose pointerOffsetPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29369));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29407));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_1 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29407));
		__this->set_pointerOffsetPose_14(L_1);
		// protected Vector3 CurrentControllerPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29370));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29408));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29408));
		__this->set_CurrentControllerPosition_15(L_2);
		// protected Quaternion CurrentControllerRotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29371));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29409));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29409));
		__this->set_CurrentControllerRotation_16(L_3);
		// protected MixedRealityPose LastControllerPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29372));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29410));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_4 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29410));
		__this->set_LastControllerPose_17(L_4);
		// protected MixedRealityPose CurrentControllerPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29373));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29411));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_5 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29411));
		__this->set_CurrentControllerPose_18(L_5);
		// protected virtual MixedRealityInteractionMappingLegacyInput[] LegacyInputSupport { get; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29374));
		__this->set_U3CLegacyInputSupportU3Ek__BackingField_19((MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)NULL);
		// protected virtual MixedRealityInteractionMappingLegacyInput[] LeftHandedLegacyInputSupport { get; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29375));
		__this->set_U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20((MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)NULL);
		// protected virtual MixedRealityInteractionMappingLegacyInput[] RightHandedLegacyInputSupport { get; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29376));
		__this->set_U3CRightHandedLegacyInputSupportU3Ek__BackingField_21((MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)NULL);
		// : base(trackingState, controllerHandedness, inputSource, interactions, definition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29377));
		int32_t L_6 = ___trackingState0;
		uint8_t L_7 = ___controllerHandedness1;
		RuntimeObject* L_8 = ___inputSource3;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_9 = ___interactions4;
		RuntimeObject* L_10 = ___definition2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29412));
		BaseController__ctor_m6B509BCC8DF752AD27011E3C23E91DFB17C8F6AE(__this, L_6, L_7, L_8, L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29412));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29378));
		// if (PointerOffsetAngle != 0f && Interactions != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29379));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29413));
		float L_11 = VirtFuncInvoker0< float >::Invoke(25 /* System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_PointerOffsetAngle() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29413));
		if ((((float)L_11) == ((float)(0.0f))))
		{
			goto IL_0089;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29414));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_12 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29414));
		G_B3_0 = ((!(((RuntimeObject*)(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)L_12) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_008a;
	}

IL_0089:
	{
		G_B3_0 = 0;
	}

IL_008a:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29380));
		bool L_13 = V_0;
		if (!L_13)
		{
			goto IL_0124;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29381));
		// MixedRealityInteractionMapping pointerMapping = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29382));
		V_1 = (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)NULL;
		// for (int i = 0; i < Interactions.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29383));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29384));
		goto IL_00be;
	}

IL_0098:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29385));
		// MixedRealityInteractionMapping mapping = Interactions[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29386));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29415));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_14 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29415));
		int32_t L_15 = V_3;
		NullCheck(L_14);
		int32_t L_16 = L_15;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_17 = (L_14)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
		V_4 = L_17;
		// if (mapping.InputType == DeviceInputType.SpatialPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29387));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_18 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29416));
		NullCheck(L_18);
		int32_t L_19 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29416));
		V_5 = (bool)((((int32_t)L_19) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29388));
		bool L_20 = V_5;
		if (!L_20)
		{
			goto IL_00b9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29389));
		// pointerMapping = mapping;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29390));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_21 = V_4;
		V_1 = L_21;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29391));
		goto IL_00cf;
	}

IL_00b9:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29392));
		// for (int i = 0; i < Interactions.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29393));
		int32_t L_22 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_22, (int32_t)1));
	}

IL_00be:
	{
		// for (int i = 0; i < Interactions.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29394));
		int32_t L_23 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29417));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_24 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29417));
		NullCheck(L_24);
		V_6 = (bool)((((int32_t)L_23) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_24)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29395));
		bool L_25 = V_6;
		if (L_25)
		{
			goto IL_0098;
		}
	}

IL_00cf:
	{
		// if (pointerMapping == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29396));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_26 = V_1;
		V_7 = (bool)((((RuntimeObject*)(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)L_26) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29397));
		bool L_27 = V_7;
		if (!L_27)
		{
			goto IL_00f2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29398));
		// Debug.LogWarning($"A pointer offset is defined for {GetType()}, but no spatial pointer mapping could be found.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29399));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29418));
		Type_t * L_28 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29418));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29419));
		String_t* L_29 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralC3D586F426A98B96AAD74DEC01DCA29835D892BD, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29419));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29420));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29420));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29400));
		goto IL_0124;
	}

IL_00f2:
	{
		// MixedRealityPose startingRotation = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29401));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29421));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_30 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29421));
		V_2 = L_30;
		// startingRotation.Rotation *= Quaternion.AngleAxis(PointerOffsetAngle, Vector3.left);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29402));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_31 = (&V_2);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29422));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_32 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29422));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29423));
		float L_33 = VirtFuncInvoker0< float >::Invoke(25 /* System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_PointerOffsetAngle() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29423));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29424));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Vector3_get_left_m74B52D8CFD8C62138067B2EB6846B6E9E51B7C20(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29424));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29425));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_35 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_33, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29426));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_36 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_32, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29426));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29427));
		MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_31, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29427));
		// pointerMapping.PoseData = startingRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29403));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_37 = V_1;
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_38 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29428));
		NullCheck(L_37);
		MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_37, L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29428));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29404));
	}

IL_0124:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29405));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_PointerOffsetAngle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float GenericJoystickController_get_PointerOffsetAngle_mF87BE6BF8E30F723FC0D94C7452E6C1A2413CDE1 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_PointerOffsetAngle_mF87BE6BF8E30F723FC0D94C7452E6C1A2413CDE1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_PointerOffsetAngle_mF87BE6BF8E30F723FC0D94C7452E6C1A2413CDE1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29429));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29430));
	{
		// public virtual float PointerOffsetAngle { get; protected set; } = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29431));
		float L_0 = __this->get_U3CPointerOffsetAngleU3Ek__BackingField_12();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::set_PointerOffsetAngle(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_set_PointerOffsetAngle_m5D4684EB9F6A170D2CF38F6FEC777F35E7C5404E (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_set_PointerOffsetAngle_m5D4684EB9F6A170D2CF38F6FEC777F35E7C5404E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_set_PointerOffsetAngle_m5D4684EB9F6A170D2CF38F6FEC777F35E7C5404E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29432));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29433));
	{
		// public virtual float PointerOffsetAngle { get; protected set; } = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29434));
		float L_0 = ___value0;
		__this->set_U3CPointerOffsetAngleU3Ek__BackingField_12(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_DefaultInteractions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* GenericJoystickController_get_DefaultInteractions_mF7D5A9668EF263061B29D96CE3FB9E06FD9041E7 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_DefaultInteractions_mF7D5A9668EF263061B29D96CE3FB9E06FD9041E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_DefaultInteractions_mF7D5A9668EF263061B29D96CE3FB9E06FD9041E7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29435));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29436));
	RuntimeObject* G_B2_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B2_1 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B1_1 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B3_1 = NULL;
	{
		// public override MixedRealityInteractionMapping[] DefaultInteractions => BuildInteractions(Definition?.GetDefaultMappings(ControllerHandedness), LegacyInputSupport);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29437));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29438));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(20 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition Microsoft.MixedReality.Toolkit.Input.BaseController::get_Definition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29438));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		G_B1_1 = __this;
		if (L_1)
		{
			G_B2_0 = L_1;
			G_B2_1 = __this;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((RuntimeObject*)(NULL));
		G_B3_1 = G_B1_1;
		goto IL_0019;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29439));
		uint8_t L_2 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29439));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29440));
		NullCheck(G_B2_0);
		RuntimeObject* L_3 = InterfaceFuncInvoker1< RuntimeObject*, uint8_t >::Invoke(0 /* System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition::GetDefaultMappings(Microsoft.MixedReality.Toolkit.Utilities.Handedness) */, IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91_il2cpp_TypeInfo_var, G_B2_0, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29440));
		G_B3_0 = L_3;
		G_B3_1 = G_B2_1;
	}

IL_0019:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29441));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_4 = VirtFuncInvoker0< MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* >::Invoke(27 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_LegacyInputSupport() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29442));
		NullCheck(G_B3_1);
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_5 = GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB(G_B3_1, G_B3_0, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29442));
		return L_5;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_LegacyInputSupport()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* GenericJoystickController_get_LegacyInputSupport_mE9B90A08DCEDD43400BAB283EDBCC5DCFD90E0D7 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_LegacyInputSupport_mE9B90A08DCEDD43400BAB283EDBCC5DCFD90E0D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_LegacyInputSupport_mE9B90A08DCEDD43400BAB283EDBCC5DCFD90E0D7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29443));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29444));
	{
		// protected virtual MixedRealityInteractionMappingLegacyInput[] LegacyInputSupport { get; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29445));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_0 = __this->get_U3CLegacyInputSupportU3Ek__BackingField_19();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_DefaultLeftHandedInteractions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* GenericJoystickController_get_DefaultLeftHandedInteractions_m4F855F6CE5291B2B2F68BD01F482BD6A6CD8830D (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_DefaultLeftHandedInteractions_m4F855F6CE5291B2B2F68BD01F482BD6A6CD8830D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_DefaultLeftHandedInteractions_m4F855F6CE5291B2B2F68BD01F482BD6A6CD8830D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29446));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29447));
	RuntimeObject* G_B2_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B2_1 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B1_1 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B3_1 = NULL;
	{
		// public override MixedRealityInteractionMapping[] DefaultLeftHandedInteractions => BuildInteractions(Definition?.GetDefaultMappings(Handedness.Left), LeftHandedLegacyInputSupport);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29448));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29449));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(20 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition Microsoft.MixedReality.Toolkit.Input.BaseController::get_Definition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29449));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		G_B1_1 = __this;
		if (L_1)
		{
			G_B2_0 = L_1;
			G_B2_1 = __this;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((RuntimeObject*)(NULL));
		G_B3_1 = G_B1_1;
		goto IL_0014;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29450));
		NullCheck(G_B2_0);
		RuntimeObject* L_2 = InterfaceFuncInvoker1< RuntimeObject*, uint8_t >::Invoke(0 /* System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition::GetDefaultMappings(Microsoft.MixedReality.Toolkit.Utilities.Handedness) */, IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91_il2cpp_TypeInfo_var, G_B2_0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29450));
		G_B3_0 = L_2;
		G_B3_1 = G_B2_1;
	}

IL_0014:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29451));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_3 = VirtFuncInvoker0< MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* >::Invoke(28 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_LeftHandedLegacyInputSupport() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29451));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29452));
		NullCheck(G_B3_1);
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_4 = GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB(G_B3_1, G_B3_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29452));
		return L_4;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_LeftHandedLegacyInputSupport()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* GenericJoystickController_get_LeftHandedLegacyInputSupport_mC877601AB4E6FB4C8585763415D9B108F26ACDE0 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_LeftHandedLegacyInputSupport_mC877601AB4E6FB4C8585763415D9B108F26ACDE0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_LeftHandedLegacyInputSupport_mC877601AB4E6FB4C8585763415D9B108F26ACDE0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29453));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29454));
	{
		// protected virtual MixedRealityInteractionMappingLegacyInput[] LeftHandedLegacyInputSupport { get; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29455));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_0 = __this->get_U3CLeftHandedLegacyInputSupportU3Ek__BackingField_20();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_DefaultRightHandedInteractions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* GenericJoystickController_get_DefaultRightHandedInteractions_mE208E11288D0A8371CB82B964AB2EA231D686560 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_DefaultRightHandedInteractions_mE208E11288D0A8371CB82B964AB2EA231D686560_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_DefaultRightHandedInteractions_mE208E11288D0A8371CB82B964AB2EA231D686560_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29456));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29457));
	RuntimeObject* G_B2_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B2_1 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B1_1 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B3_1 = NULL;
	{
		// public override MixedRealityInteractionMapping[] DefaultRightHandedInteractions => BuildInteractions(Definition?.GetDefaultMappings(Handedness.Right), RightHandedLegacyInputSupport);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29459));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(20 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition Microsoft.MixedReality.Toolkit.Input.BaseController::get_Definition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29459));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		G_B1_1 = __this;
		if (L_1)
		{
			G_B2_0 = L_1;
			G_B2_1 = __this;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((RuntimeObject*)(NULL));
		G_B3_1 = G_B1_1;
		goto IL_0014;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29460));
		NullCheck(G_B2_0);
		RuntimeObject* L_2 = InterfaceFuncInvoker1< RuntimeObject*, uint8_t >::Invoke(0 /* System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition::GetDefaultMappings(Microsoft.MixedReality.Toolkit.Utilities.Handedness) */, IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91_il2cpp_TypeInfo_var, G_B2_0, 2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29460));
		G_B3_0 = L_2;
		G_B3_1 = G_B2_1;
	}

IL_0014:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29461));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_3 = VirtFuncInvoker0< MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* >::Invoke(29 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_RightHandedLegacyInputSupport() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29461));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29462));
		NullCheck(G_B3_1);
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_4 = GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB(G_B3_1, G_B3_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29462));
		return L_4;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_RightHandedLegacyInputSupport()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* GenericJoystickController_get_RightHandedLegacyInputSupport_mB083CBFF49B6A8EE2F3FA1D807C6ACA7C11AF3D5 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_get_RightHandedLegacyInputSupport_mB083CBFF49B6A8EE2F3FA1D807C6ACA7C11AF3D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_get_RightHandedLegacyInputSupport_mB083CBFF49B6A8EE2F3FA1D807C6ACA7C11AF3D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29463));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29464));
	{
		// protected virtual MixedRealityInteractionMappingLegacyInput[] RightHandedLegacyInputSupport { get; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29465));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_0 = __this->get_U3CRightHandedLegacyInputSupportU3Ek__BackingField_21();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::BuildInteractions(System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, RuntimeObject* ___definitionInteractions0, MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* ___legacyInputs1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* V_0 = NULL;
	bool V_1 = false;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* V_2 = NULL;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___definitionInteractions0), (&___legacyInputs1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_BuildInteractions_mAAD40898A948BBC950AA5293ACAA95C0E22EFFCB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29466));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29467));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29468));
		// if (definitionInteractions == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29469));
		RuntimeObject* L_0 = ___definitionInteractions0;
		V_1 = (bool)((((RuntimeObject*)(RuntimeObject*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29470));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29471));
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29472));
		V_2 = (MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)NULL;
		goto IL_00bc;
	}

IL_0011:
	{
		// if (legacyInputs != null && definitionInteractions.Count != legacyInputs.Length)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29473));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_2 = ___legacyInputs1;
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		RuntimeObject* L_3 = ___definitionInteractions0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29496));
		NullCheck(L_3);
		int32_t L_4 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Count() */, IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29496));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_5 = ___legacyInputs1;
		NullCheck(L_5);
		G_B5_0 = ((((int32_t)((((int32_t)L_4) == ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_5)->max_length))))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0025;
	}

IL_0024:
	{
		G_B5_0 = 0;
	}

IL_0025:
	{
		V_3 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29474));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29475));
		// Debug.LogWarning($"Legacy input mappings are being used, but an incorrect number of mappings were provided. Interaction count {definitionInteractions.Count}. Legacy count {legacyInputs.Length}.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29476));
		RuntimeObject* L_7 = ___definitionInteractions0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29497));
		NullCheck(L_7);
		int32_t L_8 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Count() */, IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29497));
		int32_t L_9 = L_8;
		RuntimeObject * L_10 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_9);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_11 = ___legacyInputs1;
		NullCheck(L_11);
		int32_t L_12 = (((int32_t)((int32_t)(((RuntimeArray*)L_11)->max_length))));
		RuntimeObject * L_13 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_12);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29498));
		String_t* L_14 = String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A(_stringLiteral0F835DF4D4EB91CAAA508B52518573853048231D, L_10, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29498));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29499));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29499));
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29477));
		V_2 = (MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)NULL;
		goto IL_00bc;
	}

IL_0051:
	{
		// MixedRealityInteractionMapping[] defaultInteractions = new MixedRealityInteractionMapping[definitionInteractions.Count];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29478));
		RuntimeObject* L_15 = ___definitionInteractions0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29500));
		NullCheck(L_15);
		int32_t L_16 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Count() */, IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var, L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29500));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_17 = (MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)SZArrayNew(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA_il2cpp_TypeInfo_var, (uint32_t)L_16);
		V_0 = L_17;
		// for (int i = 0; i < definitionInteractions.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29479));
		V_4 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29480));
		goto IL_00a8;
	}

IL_0062:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29481));
		// if (legacyInputs != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29482));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_18 = ___legacyInputs1;
		V_5 = (bool)((!(((RuntimeObject*)(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)L_18) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29483));
		bool L_19 = V_5;
		if (!L_19)
		{
			goto IL_008c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29484));
		// defaultInteractions[i] = new MixedRealityInteractionMapping((uint)i, definitionInteractions[i], legacyInputs[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29485));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_20 = V_0;
		int32_t L_21 = V_4;
		int32_t L_22 = V_4;
		RuntimeObject* L_23 = ___definitionInteractions0;
		int32_t L_24 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29501));
		NullCheck(L_23);
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_25 = InterfaceFuncInvoker1< MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *, int32_t >::Invoke(0 /* !0 System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Item(System.Int32) */, IReadOnlyList_1_t9358DECEA3E357EDBDBA29CE97CA97FC5569817C_il2cpp_TypeInfo_var, L_23, L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29501));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_26 = ___legacyInputs1;
		int32_t L_27 = V_4;
		NullCheck(L_26);
		int32_t L_28 = L_27;
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_29 = (L_26)->GetAt(static_cast<il2cpp_array_size_t>(L_28));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29502));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_30 = (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)il2cpp_codegen_object_new(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_il2cpp_TypeInfo_var);
		MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6(L_30, L_22, L_25, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29502));
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_30);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(L_21), (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29486));
		goto IL_00a1;
	}

IL_008c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29487));
		// defaultInteractions[i] = new MixedRealityInteractionMapping((uint)i, definitionInteractions[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29488));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_31 = V_0;
		int32_t L_32 = V_4;
		int32_t L_33 = V_4;
		RuntimeObject* L_34 = ___definitionInteractions0;
		int32_t L_35 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29503));
		NullCheck(L_34);
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_36 = InterfaceFuncInvoker1< MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *, int32_t >::Invoke(0 /* !0 System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Item(System.Int32) */, IReadOnlyList_1_t9358DECEA3E357EDBDBA29CE97CA97FC5569817C_il2cpp_TypeInfo_var, L_34, L_35);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29503));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29504));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_37 = (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)il2cpp_codegen_object_new(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_il2cpp_TypeInfo_var);
		MixedRealityInteractionMapping__ctor_m99CD54A7E81F0A20297D425B55FBCAB6427AA12F(L_37, L_33, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29504));
		NullCheck(L_31);
		ArrayElementTypeCheck (L_31, L_37);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(L_32), (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)L_37);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29489));
	}

IL_00a1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29490));
		// for (int i = 0; i < definitionInteractions.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29491));
		int32_t L_38 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_38, (int32_t)1));
	}

IL_00a8:
	{
		// for (int i = 0; i < definitionInteractions.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29492));
		int32_t L_39 = V_4;
		RuntimeObject* L_40 = ___definitionInteractions0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29505));
		NullCheck(L_40);
		int32_t L_41 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Count() */, IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var, L_40);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29505));
		V_6 = (bool)((((int32_t)L_39) < ((int32_t)L_41))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29493));
		bool L_42 = V_6;
		if (L_42)
		{
			goto IL_0062;
		}
	}
	{
		// return defaultInteractions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29494));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_43 = V_0;
		V_2 = L_43;
		goto IL_00bc;
	}

IL_00bc:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29495));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_44 = V_2;
		return L_44;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateController()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateController_mAAF4BF2FF4CF85429DF562F819FA9C18F7E29CEC (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_UpdateController_mAAF4BF2FF4CF85429DF562F819FA9C18F7E29CEC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  V_7;
	memset((&V_7), 0, sizeof(V_7));
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  V_8;
	memset((&V_8), 0, sizeof(V_8));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_UpdateController_mAAF4BF2FF4CF85429DF562F819FA9C18F7E29CEC_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29506));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29507));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* G_B17_0 = NULL;
	int32_t G_B17_1 = 0;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* G_B16_0 = NULL;
	int32_t G_B16_1 = 0;
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  G_B18_0;
	memset((&G_B18_0), 0, sizeof(G_B18_0));
	int32_t G_B18_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29508));
		// using (UpdateControllerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29509));
		IL2CPP_RUNTIME_CLASS_INIT(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->get_UpdateControllerPerfMarker_22();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29544));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29544));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29510));
			// if (!Enabled) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29511));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29545));
			bool L_2 = BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29545));
			V_2 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29512));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_0023;
			}
		}

IL_001d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29513));
			// if (!Enabled) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29514));
			IL2CPP_LEAVE(0x165, FINALLY_0156);
		}

IL_0023:
		{
			// if (Interactions == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29515));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29546));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_4 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29546));
			V_3 = (bool)((((RuntimeObject*)(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)L_4) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29516));
			bool L_5 = V_3;
			if (!L_5)
			{
				goto IL_0055;
			}
		}

IL_0030:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29517));
			// Debug.LogError($"No interaction configuration for {GetType().Name}");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29518));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29547));
			Type_t * L_6 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29547));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29548));
			NullCheck(L_6);
			String_t* L_7 = VirtFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29548));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29549));
			String_t* L_8 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteralBEC3A1EB621F66A9977AE9420F50B054C58D000C, L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29549));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29550));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29550));
			// Enabled = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29519));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29551));
			BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6_inline(__this, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29551));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29520));
		}

IL_0055:
		{
			// for (int i = 0; i < Interactions?.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29521));
			V_4 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29522));
			goto IL_0118;
		}

IL_005d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29523));
			// switch (Interactions[i].AxisType)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29524));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29552));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_9 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29552));
			int32_t L_10 = V_4;
			NullCheck(L_9);
			int32_t L_11 = L_10;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_12 = (L_9)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29553));
			NullCheck(L_12);
			int32_t L_13 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29553));
			V_5 = L_13;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29525));
			int32_t L_14 = V_5;
			switch (L_14)
			{
				case 0:
				{
					goto IL_0097;
				}
				case 1:
				{
					goto IL_00e1;
				}
				case 2:
				{
					goto IL_0099;
				}
				case 3:
				{
					goto IL_00ab;
				}
				case 4:
				{
					goto IL_00bd;
				}
				case 5:
				{
					goto IL_00e1;
				}
				case 6:
				{
					goto IL_00e1;
				}
				case 7:
				{
					goto IL_00cf;
				}
			}
		}

IL_0095:
		{
			goto IL_00e1;
		}

IL_0097:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29526));
			goto IL_0111;
		}

IL_0099:
		{
			// UpdateButtonData(Interactions[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29527));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29554));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_15 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29554));
			int32_t L_16 = V_4;
			NullCheck(L_15);
			int32_t L_17 = L_16;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_18 = (L_15)->GetAt(static_cast<il2cpp_array_size_t>(L_17));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29555));
			GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486(__this, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29555));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29528));
			goto IL_0111;
		}

IL_00ab:
		{
			// UpdateSingleAxisData(Interactions[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29529));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29556));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_19 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29556));
			int32_t L_20 = V_4;
			NullCheck(L_19);
			int32_t L_21 = L_20;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_22 = (L_19)->GetAt(static_cast<il2cpp_array_size_t>(L_21));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29557));
			GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72(__this, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29557));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29530));
			goto IL_0111;
		}

IL_00bd:
		{
			// UpdateDualAxisData(Interactions[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29531));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29558));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_23 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29558));
			int32_t L_24 = V_4;
			NullCheck(L_23);
			int32_t L_25 = L_24;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_26 = (L_23)->GetAt(static_cast<il2cpp_array_size_t>(L_25));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29559));
			GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2(__this, L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29559));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29532));
			goto IL_0111;
		}

IL_00cf:
		{
			// UpdatePoseData(Interactions[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29533));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29560));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_27 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29560));
			int32_t L_28 = V_4;
			NullCheck(L_27);
			int32_t L_29 = L_28;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_30 = (L_27)->GetAt(static_cast<il2cpp_array_size_t>(L_29));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29561));
			GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4(__this, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29561));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29534));
			goto IL_0111;
		}

IL_00e1:
		{
			// Debug.LogError($"Input [{Interactions[i].InputType}] is not handled for this controller [{GetType().Name}]");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29535));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29562));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_31 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29562));
			int32_t L_32 = V_4;
			NullCheck(L_31);
			int32_t L_33 = L_32;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_34 = (L_31)->GetAt(static_cast<il2cpp_array_size_t>(L_33));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29563));
			NullCheck(L_34);
			int32_t L_35 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29563));
			int32_t L_36 = L_35;
			RuntimeObject * L_37 = Box(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_il2cpp_TypeInfo_var, &L_36);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29564));
			Type_t * L_38 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29564));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29565));
			NullCheck(L_38);
			String_t* L_39 = VirtFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_38);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29565));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29566));
			String_t* L_40 = String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A(_stringLiteral6161DB73C1776456F22798D656A2CC60A77D3F79, L_37, L_39, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29566));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29567));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_40, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29567));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29536));
			goto IL_0111;
		}

IL_0111:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29537));
			// for (int i = 0; i < Interactions?.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29538));
			int32_t L_41 = V_4;
			V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_41, (int32_t)1));
		}

IL_0118:
		{
			// for (int i = 0; i < Interactions?.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29539));
			int32_t L_42 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29568));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_43 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29568));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_44 = L_43;
			G_B16_0 = L_44;
			G_B16_1 = L_42;
			if (L_44)
			{
				G_B17_0 = L_44;
				G_B17_1 = L_42;
				goto IL_0130;
			}
		}

IL_0123:
		{
			il2cpp_codegen_initobj((&V_8), sizeof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB ));
			Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  L_45 = V_8;
			G_B18_0 = L_45;
			G_B18_1 = G_B16_1;
			goto IL_0137;
		}

IL_0130:
		{
			NullCheck(G_B17_0);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29569));
			Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  L_46;
			memset((&L_46), 0, sizeof(L_46));
			Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2((&L_46), (((int32_t)((int32_t)(((RuntimeArray*)G_B17_0)->max_length)))), /*hidden argument*/Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29569));
			G_B18_0 = L_46;
			G_B18_1 = G_B17_1;
		}

IL_0137:
		{
			V_7 = G_B18_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29570));
			int32_t L_47 = Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_inline((Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *)(&V_7), /*hidden argument*/Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29570));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29571));
			bool L_48 = Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_inline((Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *)(&V_7), /*hidden argument*/Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29571));
			V_6 = (bool)((int32_t)((int32_t)((((int32_t)G_B18_1) < ((int32_t)L_47))? 1 : 0)&(int32_t)L_48));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29540));
			bool L_49 = V_6;
			if (L_49)
			{
				goto IL_005d;
			}
		}

IL_0153:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29541));
			IL2CPP_LEAVE(0x165, FINALLY_0156);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0156;
	}

FINALLY_0156:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29542));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29572));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29572));
		IL2CPP_END_FINALLY(342)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(342)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x165, IL_0165)
	}

IL_0165:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29543));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateButtonData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	float V_3 = 0.0f;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___interactionMapping0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_UpdateButtonData_mFAB72F1AF0DD6B363E66D55D9349A7954E91B486_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29573));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29574));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B20_0 = NULL;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B19_0 = NULL;
	int32_t G_B21_0 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B21_1 = NULL;
	RuntimeObject* G_B27_0 = NULL;
	RuntimeObject* G_B26_0 = NULL;
	RuntimeObject* G_B31_0 = NULL;
	RuntimeObject* G_B30_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29575));
		// using (UpdateButtonDataPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29576));
		IL2CPP_RUNTIME_CLASS_INIT(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->get_UpdateButtonDataPerfMarker_23();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29602));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29602));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29577));
			// Debug.Assert(interactionMapping.AxisType == AxisType.Digital);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29578));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_2 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29603));
			NullCheck(L_2);
			int32_t L_3 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29603));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29604));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_3) == ((int32_t)2))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29604));
			// switch (interactionMapping.InputType)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29579));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_4 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29605));
			NullCheck(L_4);
			int32_t L_5 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29605));
			V_2 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29580));
			int32_t L_6 = V_2;
			if ((((int32_t)L_6) > ((int32_t)((int32_t)31))))
			{
				goto IL_0042;
			}
		}

IL_002b:
		{
			int32_t L_7 = V_2;
			if ((!(((uint32_t)((int32_t)il2cpp_codegen_subtract((int32_t)L_7, (int32_t)((int32_t)11)))) > ((uint32_t)1))))
			{
				goto IL_0084;
			}
		}

IL_0032:
		{
			goto IL_0034;
		}

IL_0034:
		{
			int32_t L_8 = V_2;
			if ((((int32_t)L_8) == ((int32_t)((int32_t)13))))
			{
				goto IL_0063;
			}
		}

IL_0039:
		{
			goto IL_003b;
		}

IL_003b:
		{
			int32_t L_9 = V_2;
			if ((((int32_t)L_9) == ((int32_t)((int32_t)31))))
			{
				goto IL_0084;
			}
		}

IL_0040:
		{
			goto IL_00bd;
		}

IL_0042:
		{
			int32_t L_10 = V_2;
			if ((((int32_t)L_10) > ((int32_t)((int32_t)39))))
			{
				goto IL_0055;
			}
		}

IL_0047:
		{
			int32_t L_11 = V_2;
			if ((((int32_t)L_11) == ((int32_t)((int32_t)35))))
			{
				goto IL_0084;
			}
		}

IL_004c:
		{
			goto IL_004e;
		}

IL_004e:
		{
			int32_t L_12 = V_2;
			if ((((int32_t)L_12) == ((int32_t)((int32_t)39))))
			{
				goto IL_0084;
			}
		}

IL_0053:
		{
			goto IL_00bd;
		}

IL_0055:
		{
			int32_t L_13 = V_2;
			if ((((int32_t)L_13) == ((int32_t)((int32_t)43))))
			{
				goto IL_0084;
			}
		}

IL_005a:
		{
			goto IL_005c;
		}

IL_005c:
		{
			int32_t L_14 = V_2;
			if ((((int32_t)L_14) == ((int32_t)((int32_t)47))))
			{
				goto IL_0084;
			}
		}

IL_0061:
		{
			goto IL_00bd;
		}

IL_0063:
		{
			// interactionMapping.BoolData = UInput.GetAxisRaw(interactionMapping.AxisCodeX).Equals(1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29581));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_15 = ___interactionMapping0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_16 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29606));
			NullCheck(L_16);
			String_t* L_17 = MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_inline(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29606));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29607));
			float L_18 = Input_GetAxisRaw_mC68301A9D93702F0C393E45C6337348062EACE21(L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29607));
			V_3 = L_18;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29608));
			bool L_19 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)(&V_3), (1.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29608));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29609));
			NullCheck(L_15);
			MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_15, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29609));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29582));
			goto IL_00d1;
		}

IL_0084:
		{
			// interactionMapping.BoolData = interactionMapping.KeyCode == KeyCode.None ?
			//     !UInput.GetAxisRaw(interactionMapping.AxisCodeX).Equals(0) :
			//     UInput.GetKey(interactionMapping.KeyCode);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29583));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_20 = ___interactionMapping0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_21 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29610));
			NullCheck(L_21);
			int32_t L_22 = MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_inline(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29610));
			G_B19_0 = L_20;
			if (!L_22)
			{
				G_B20_0 = L_20;
				goto IL_009a;
			}
		}

IL_008d:
		{
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_23 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29611));
			NullCheck(L_23);
			int32_t L_24 = MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_inline(L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29611));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29612));
			bool L_25 = Input_GetKey_m46AA83E14F9C3A75E06FE0A8C55740D47B2DB784(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29612));
			G_B21_0 = ((int32_t)(L_25));
			G_B21_1 = G_B19_0;
			goto IL_00b5;
		}

IL_009a:
		{
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_26 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29613));
			NullCheck(L_26);
			String_t* L_27 = MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_inline(L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29613));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29614));
			float L_28 = Input_GetAxisRaw_mC68301A9D93702F0C393E45C6337348062EACE21(L_27, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29614));
			V_3 = L_28;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29615));
			bool L_29 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)(&V_3), (0.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29615));
			G_B21_0 = ((((int32_t)L_29) == ((int32_t)0))? 1 : 0);
			G_B21_1 = G_B20_0;
		}

IL_00b5:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29616));
			NullCheck(G_B21_1);
			MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(G_B21_1, (bool)G_B21_0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29616));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29584));
			goto IL_00d1;
		}

IL_00bd:
		{
			// interactionMapping.BoolData = UInput.GetKey(interactionMapping.KeyCode);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29585));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_30 = ___interactionMapping0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_31 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29617));
			NullCheck(L_31);
			int32_t L_32 = MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_inline(L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29617));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29618));
			bool L_33 = Input_GetKey_m46AA83E14F9C3A75E06FE0A8C55740D47B2DB784(L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29618));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29619));
			NullCheck(L_30);
			MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_30, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29619));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29586));
			goto IL_00d1;
		}

IL_00d1:
		{
			// if (interactionMapping.Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29587));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_34 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29620));
			NullCheck(L_34);
			bool L_35 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29620));
			V_4 = L_35;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29588));
			bool L_36 = V_4;
			if (!L_36)
			{
				goto IL_0137;
			}
		}

IL_00dd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29589));
			// if (interactionMapping.BoolData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29590));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_37 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29621));
			NullCheck(L_37);
			bool L_38 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_37, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29621));
			V_5 = L_38;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29591));
			bool L_39 = V_5;
			if (!L_39)
			{
				goto IL_0111;
			}
		}

IL_00ea:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29592));
			// CoreServices.InputSystem?.RaiseOnInputDown(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29593));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29622));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_40 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29622));
			RuntimeObject* L_41 = L_40;
			G_B26_0 = L_41;
			if (L_41)
			{
				G_B27_0 = L_41;
				goto IL_00f6;
			}
		}

IL_00f3:
		{
			goto IL_010e;
		}

IL_00f6:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29623));
			RuntimeObject* L_42 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29623));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29624));
			uint8_t L_43 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29624));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_44 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29625));
			NullCheck(L_44);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_45 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_44, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29625));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29626));
			NullCheck(G_B27_0);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B27_0, L_42, L_43, L_45);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29626));
		}

IL_010e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29594));
			goto IL_0136;
		}

IL_0111:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29595));
			// CoreServices.InputSystem?.RaiseOnInputUp(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29596));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29627));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_46 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29627));
			RuntimeObject* L_47 = L_46;
			G_B30_0 = L_47;
			if (L_47)
			{
				G_B31_0 = L_47;
				goto IL_011d;
			}
		}

IL_011a:
		{
			goto IL_0135;
		}

IL_011d:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29628));
			RuntimeObject* L_48 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29628));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29629));
			uint8_t L_49 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29629));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_50 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29630));
			NullCheck(L_50);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_51 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_50, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29630));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29631));
			NullCheck(G_B31_0);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B31_0, L_48, L_49, L_51);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29631));
		}

IL_0135:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29597));
		}

IL_0136:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29598));
		}

IL_0137:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29599));
			IL2CPP_LEAVE(0x149, FINALLY_013a);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_013a;
	}

FINALLY_013a:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29632));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29632));
		IL2CPP_END_FINALLY(314)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(314)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x149, IL_0149)
	}

IL_0149:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29601));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateSingleAxisData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___interactionMapping0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_UpdateSingleAxisData_m473B8D3D313BCC9C0F72B3C837665208F581CB72_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29633));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29634));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	RuntimeObject* G_B9_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B13_0 = NULL;
	RuntimeObject* G_B12_0 = NULL;
	RuntimeObject* G_B20_0 = NULL;
	RuntimeObject* G_B19_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29635));
		// using (UpdateSingleAxisDataPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29636));
		IL2CPP_RUNTIME_CLASS_INIT(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->get_UpdateSingleAxisDataPerfMarker_24();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29668));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29668));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29637));
			// Debug.Assert(interactionMapping.AxisType == AxisType.SingleAxis);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29638));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_2 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29669));
			NullCheck(L_2);
			int32_t L_3 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29669));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29670));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_3) == ((int32_t)3))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29670));
			// var singleAxisValue = UInput.GetAxisRaw(interactionMapping.AxisCodeX);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29639));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_4 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29671));
			NullCheck(L_4);
			String_t* L_5 = MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_inline(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29671));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29672));
			float L_6 = Input_GetAxisRaw_mC68301A9D93702F0C393E45C6337348062EACE21(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29672));
			V_2 = L_6;
			// if (interactionMapping.InputType == DeviceInputType.TriggerPress || interactionMapping.InputType == DeviceInputType.GripPress)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29640));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_7 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29673));
			NullCheck(L_7);
			int32_t L_8 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29673));
			if ((((int32_t)L_8) == ((int32_t)((int32_t)13))))
			{
				goto IL_0041;
			}
		}

IL_0035:
		{
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_9 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29674));
			NullCheck(L_9);
			int32_t L_10 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29674));
			G_B4_0 = ((((int32_t)L_10) == ((int32_t)((int32_t)60)))? 1 : 0);
			goto IL_0042;
		}

IL_0041:
		{
			G_B4_0 = 1;
		}

IL_0042:
		{
			V_3 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29641));
			bool L_11 = V_3;
			if (!L_11)
			{
				goto IL_00c3;
			}
		}

IL_0046:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29642));
			// interactionMapping.BoolData = singleAxisValue.Equals(1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29643));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_12 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29675));
			bool L_13 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)(&V_2), (1.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29675));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29676));
			NullCheck(L_12);
			MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_12, L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29676));
			// if (interactionMapping.Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29644));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_14 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29677));
			NullCheck(L_14);
			bool L_15 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29677));
			V_4 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29645));
			bool L_16 = V_4;
			if (!L_16)
			{
				goto IL_00c0;
			}
		}

IL_0066:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29646));
			// if (interactionMapping.BoolData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29647));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_17 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29678));
			NullCheck(L_17);
			bool L_18 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29678));
			V_5 = L_18;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29648));
			bool L_19 = V_5;
			if (!L_19)
			{
				goto IL_009a;
			}
		}

IL_0073:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29649));
			// CoreServices.InputSystem?.RaiseOnInputDown(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29650));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29679));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_20 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29679));
			RuntimeObject* L_21 = L_20;
			G_B8_0 = L_21;
			if (L_21)
			{
				G_B9_0 = L_21;
				goto IL_007f;
			}
		}

IL_007c:
		{
			goto IL_0097;
		}

IL_007f:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29680));
			RuntimeObject* L_22 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29680));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29681));
			uint8_t L_23 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29681));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_24 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29682));
			NullCheck(L_24);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_25 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29682));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29683));
			NullCheck(G_B9_0);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B9_0, L_22, L_23, L_25);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29683));
		}

IL_0097:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29651));
			goto IL_00bf;
		}

IL_009a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29652));
			// CoreServices.InputSystem?.RaiseOnInputUp(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29653));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29684));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_26 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29684));
			RuntimeObject* L_27 = L_26;
			G_B12_0 = L_27;
			if (L_27)
			{
				G_B13_0 = L_27;
				goto IL_00a6;
			}
		}

IL_00a3:
		{
			goto IL_00be;
		}

IL_00a6:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29685));
			RuntimeObject* L_28 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29685));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29686));
			uint8_t L_29 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29686));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_30 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29687));
			NullCheck(L_30);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_31 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29687));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29688));
			NullCheck(G_B13_0);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B13_0, L_28, L_29, L_31);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29688));
		}

IL_00be:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29654));
		}

IL_00bf:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29655));
		}

IL_00c0:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29656));
			goto IL_0104;
		}

IL_00c3:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29657));
			// interactionMapping.FloatData = singleAxisValue;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29658));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_32 = ___interactionMapping0;
			float L_33 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29689));
			NullCheck(L_32);
			MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B(L_32, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29689));
			// if (interactionMapping.Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29659));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_34 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29690));
			NullCheck(L_34);
			bool L_35 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29690));
			V_6 = L_35;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29660));
			bool L_36 = V_6;
			if (!L_36)
			{
				goto IL_0103;
			}
		}

IL_00d8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29661));
			// CoreServices.InputSystem?.RaiseFloatInputChanged(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction, interactionMapping.FloatData);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29662));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29691));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_37 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29691));
			RuntimeObject* L_38 = L_37;
			G_B19_0 = L_38;
			if (L_38)
			{
				G_B20_0 = L_38;
				goto IL_00e4;
			}
		}

IL_00e1:
		{
			goto IL_0102;
		}

IL_00e4:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29692));
			RuntimeObject* L_39 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29692));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29693));
			uint8_t L_40 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29693));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_41 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29694));
			NullCheck(L_41);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_42 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_41, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29694));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_43 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29695));
			NullCheck(L_43);
			float L_44 = MixedRealityInteractionMapping_get_FloatData_mEDC3169549D0E6C0769B1AD5DB7AED106FF8E44C(L_43, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29695));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29696));
			NullCheck(G_B20_0);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , float >::Invoke(41 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFloatInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Single) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B20_0, L_39, L_40, L_42, L_44);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29696));
		}

IL_0102:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29663));
		}

IL_0103:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29664));
		}

IL_0104:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29665));
			IL2CPP_LEAVE(0x116, FINALLY_0107);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0107;
	}

FINALLY_0107:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29697));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29697));
		IL2CPP_END_FINALLY(263)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(263)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x116, IL_0116)
	}

IL_0116:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29667));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateDualAxisData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___interactionMapping0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_UpdateDualAxisData_mAF72FB6F33B67721791BF109C3612DB51DA734B2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29698));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29699));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29700));
		// using (UpdateDualAxisDataPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29701));
		IL2CPP_RUNTIME_CLASS_INIT(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->get_UpdateDualAxisDataPerfMarker_25();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29715));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29715));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29702));
			// Debug.Assert(interactionMapping.AxisType == AxisType.DualAxis);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29703));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_2 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29716));
			NullCheck(L_2);
			int32_t L_3 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29716));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29717));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_3) == ((int32_t)4))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29717));
			// dualAxisPosition.x = UInput.GetAxisRaw(interactionMapping.AxisCodeX);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29704));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_4 = __this->get_address_of_dualAxisPosition_13();
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_5 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29718));
			NullCheck(L_5);
			String_t* L_6 = MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_inline(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29718));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29719));
			float L_7 = Input_GetAxisRaw_mC68301A9D93702F0C393E45C6337348062EACE21(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29719));
			L_4->set_x_0(L_7);
			// dualAxisPosition.y = UInput.GetAxisRaw(interactionMapping.AxisCodeY);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29705));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_8 = __this->get_address_of_dualAxisPosition_13();
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_9 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29720));
			NullCheck(L_9);
			String_t* L_10 = MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_inline(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29720));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29721));
			float L_11 = Input_GetAxisRaw_mC68301A9D93702F0C393E45C6337348062EACE21(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29721));
			L_8->set_y_1(L_11);
			// interactionMapping.Vector2Data = dualAxisPosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29706));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_12 = ___interactionMapping0;
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_13 = __this->get_dualAxisPosition_13();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29722));
			NullCheck(L_12);
			MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB(L_12, L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29722));
			// if (interactionMapping.Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29707));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_14 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29723));
			NullCheck(L_14);
			bool L_15 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29723));
			V_2 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29708));
			bool L_16 = V_2;
			if (!L_16)
			{
				goto IL_008d;
			}
		}

IL_0062:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29709));
			// CoreServices.InputSystem?.RaisePositionInputChanged(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction, interactionMapping.Vector2Data);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29710));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29724));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_17 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29724));
			RuntimeObject* L_18 = L_17;
			G_B3_0 = L_18;
			if (L_18)
			{
				G_B4_0 = L_18;
				goto IL_006e;
			}
		}

IL_006b:
		{
			goto IL_008c;
		}

IL_006e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29725));
			RuntimeObject* L_19 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29725));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29726));
			uint8_t L_20 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29726));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_21 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29727));
			NullCheck(L_21);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_22 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29727));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_23 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29728));
			NullCheck(L_23);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_24 = MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650(L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29728));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29729));
			NullCheck(G_B4_0);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(42 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePositionInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B4_0, L_19, L_20, L_22, L_24);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29729));
		}

IL_008c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29711));
		}

IL_008d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29712));
			IL2CPP_LEAVE(0x9F, FINALLY_0090);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0090;
	}

FINALLY_0090:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29713));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29730));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29730));
		IL2CPP_END_FINALLY(144)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(144)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x9F, IL_009f)
	}

IL_009f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29714));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdatePoseData(Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4 (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * __this, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * ___interactionMapping0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___interactionMapping0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController_UpdatePoseData_m9381962188D323E7F6151DB8868CF7190C5F4BC4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29731));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29732));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B9_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29733));
		// using (UpdatePoseDataPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29734));
		IL2CPP_RUNTIME_CLASS_INIT(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->get_UpdatePoseDataPerfMarker_26();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29760));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29760));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29735));
			// Debug.Assert(interactionMapping.AxisType == AxisType.SixDof);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29736));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_2 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29761));
			NullCheck(L_2);
			int32_t L_3 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29761));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29762));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_3) == ((int32_t)7))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29762));
			// if (interactionMapping.InputType == DeviceInputType.SpatialPointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29737));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_4 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29763));
			NullCheck(L_4);
			int32_t L_5 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29763));
			V_2 = (bool)((((int32_t)L_5) == ((int32_t)3))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29738));
			bool L_6 = V_2;
			if (!L_6)
			{
				goto IL_0080;
			}
		}

IL_002c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29739));
			// pointerOffsetPose.Position = CurrentControllerPose.Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29740));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_7 = __this->get_address_of_pointerOffsetPose_14();
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_8 = __this->get_address_of_CurrentControllerPose_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29764));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29764));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29765));
			MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_7, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29765));
			// pointerOffsetPose.Rotation = CurrentControllerPose.Rotation * Quaternion.AngleAxis(PointerOffsetAngle, Vector3.left);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29741));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_10 = __this->get_address_of_pointerOffsetPose_14();
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_11 = __this->get_address_of_CurrentControllerPose_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29766));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29766));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29767));
			float L_13 = VirtFuncInvoker0< float >::Invoke(25 /* System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::get_PointerOffsetAngle() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29767));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29768));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_get_left_m74B52D8CFD8C62138067B2EB6846B6E9E51B7C20(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29768));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29769));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_13, L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29769));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29770));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_12, L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29770));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29771));
			MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_10, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29771));
			// interactionMapping.PoseData = pointerOffsetPose;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29742));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_17 = ___interactionMapping0;
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_18 = __this->get_pointerOffsetPose_14();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29772));
			NullCheck(L_17);
			MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_17, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29772));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29743));
			goto IL_00ad;
		}

IL_0080:
		{
			// else if (interactionMapping.InputType == DeviceInputType.SpatialGrip)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29744));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_19 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29773));
			NullCheck(L_19);
			int32_t L_20 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29773));
			V_3 = (bool)((((int32_t)L_20) == ((int32_t)((int32_t)14)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29745));
			bool L_21 = V_3;
			if (!L_21)
			{
				goto IL_009f;
			}
		}

IL_008e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29746));
			// interactionMapping.PoseData = CurrentControllerPose;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29747));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_22 = ___interactionMapping0;
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_23 = __this->get_CurrentControllerPose_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29774));
			NullCheck(L_22);
			MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_22, L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29774));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29748));
			goto IL_00ad;
		}

IL_009f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29749));
			// Debug.LogWarning("Unhandled Interaction");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29750));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29775));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteralECFBD0D7C84BE309392B74650DFE2BD7CA3BF4DC, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29775));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29751));
			IL2CPP_LEAVE(0xF6, FINALLY_00e7);
		}

IL_00ad:
		{
			// if (interactionMapping.Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29752));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_24 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29776));
			NullCheck(L_24);
			bool L_25 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29776));
			V_4 = L_25;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29753));
			bool L_26 = V_4;
			if (!L_26)
			{
				goto IL_00e4;
			}
		}

IL_00b9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29754));
			// CoreServices.InputSystem?.RaisePoseInputChanged(InputSource, ControllerHandedness, interactionMapping.MixedRealityInputAction, interactionMapping.PoseData);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29755));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29777));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_27 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29777));
			RuntimeObject* L_28 = L_27;
			G_B8_0 = L_28;
			if (L_28)
			{
				G_B9_0 = L_28;
				goto IL_00c5;
			}
		}

IL_00c2:
		{
			goto IL_00e3;
		}

IL_00c5:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29778));
			RuntimeObject* L_29 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29778));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29779));
			uint8_t L_30 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29779));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_31 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29780));
			NullCheck(L_31);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_32 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29780));
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_33 = ___interactionMapping0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29781));
			NullCheck(L_33);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_34 = MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F(L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29781));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29782));
			NullCheck(G_B9_0);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(45 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePoseInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B9_0, L_29, L_30, L_32, L_34);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29782));
		}

IL_00e3:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29756));
		}

IL_00e4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29757));
			IL2CPP_LEAVE(0xF6, FINALLY_00e7);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00e7;
	}

FINALLY_00e7:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29758));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29783));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29783));
		IL2CPP_END_FINALLY(231)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(231)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xF6, IL_00f6)
	}

IL_00f6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29759));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericJoystickController__cctor_m501805257E2E3DCFD8DEBB0F110B202C400E42DA (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericJoystickController__cctor_m501805257E2E3DCFD8DEBB0F110B202C400E42DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericJoystickController__cctor_m501805257E2E3DCFD8DEBB0F110B202C400E42DA_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29784));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29785));
	{
		// private static readonly ProfilerMarker UpdateControllerPerfMarker = new ProfilerMarker("[MRTK] GenericJoystickController.UpdateController");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29786));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29791));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralFAC55957006045DAAB160CA173A879B303A99B33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29791));
		((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->set_UpdateControllerPerfMarker_22(L_0);
		// private static readonly ProfilerMarker UpdateButtonDataPerfMarker = new ProfilerMarker("[MRTK] GenericJoystickController.UpdateButtonData");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29787));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29792));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral4B7CE41792A4716B37BC3CBD3D12805EFAD3CA89, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29792));
		((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->set_UpdateButtonDataPerfMarker_23(L_1);
		// private static readonly ProfilerMarker UpdateSingleAxisDataPerfMarker = new ProfilerMarker("[MRTK] GenericJoystickController.UpdateSingleAxisData");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29788));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29793));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral59955982BCDC9F05C43EE91BE0638935E20F9E7B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29793));
		((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->set_UpdateSingleAxisDataPerfMarker_24(L_2);
		// private static readonly ProfilerMarker UpdateDualAxisDataPerfMarker = new ProfilerMarker("[MRTK] GenericJoystickController.UpdateDualAxisData");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29789));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29794));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteralE000862658F39C5D07E4089084F69D0EA518B5F8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29794));
		((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->set_UpdateDualAxisDataPerfMarker_25(L_3);
		// private static readonly ProfilerMarker UpdatePoseDataPerfMarker = new ProfilerMarker("[MRTK] GenericJoystickController.UpdatePoseData");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29790));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29795));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral974235C44BB7E804020E4FE46DD329F69F735D85, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29795));
		((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_StaticFields*)il2cpp_codegen_static_fields_for(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var))->set_UpdatePoseDataPerfMarker_26(L_4);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29796));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29797));
	{
		// private MixedRealityPose controllerPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29798));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29803));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29803));
		__this->set_controllerPose_13(L_0);
		// private IMixedRealityMouseDeviceManager mouseDeviceManager = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29799));
		__this->set_mouseDeviceManager_14((RuntimeObject*)NULL);
		// : base(trackingState, controllerHandedness, inputSource, interactions, new MouseControllerDefinition())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29800));
		int32_t L_1 = ___trackingState0;
		uint8_t L_2 = ___controllerHandedness1;
		RuntimeObject* L_3 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_4 = ___interactions3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29804));
		MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B * L_5 = (MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B *)il2cpp_codegen_object_new(MouseControllerDefinition_tC448F953962C3CD67641EBDC387C72240D4AF64B_il2cpp_TypeInfo_var);
		MouseControllerDefinition__ctor_mD8CA8A0B0632057FA0BD4B7CBB640CE92B868F8E(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29804));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29805));
		BaseController__ctor_m6B509BCC8DF752AD27011E3C23E91DFB17C8F6AE(__this, L_1, L_2, L_3, L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29805));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29801));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29802));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::get_DefaultInteractions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* MouseController_get_DefaultInteractions_m852788FAB995ED6BF7BC45D4963E40119302AA86 (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseController_get_DefaultInteractions_m852788FAB995ED6BF7BC45D4963E40119302AA86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* V_1 = NULL;
	int32_t V_2 = 0;
	bool V_3 = false;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* V_4 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseController_get_DefaultInteractions_m852788FAB995ED6BF7BC45D4963E40119302AA86_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29806));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29807));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29808));
		// System.Collections.Generic.IReadOnlyList<MixedRealityInputActionMapping> definitionInteractions = Definition?.GetDefaultMappings(ControllerHandedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29809));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29821));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(20 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition Microsoft.MixedReality.Toolkit.Input.BaseController::get_Definition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29821));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((RuntimeObject*)(NULL));
		goto IL_0019;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29822));
		uint8_t L_2 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29822));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29823));
		NullCheck(G_B2_0);
		RuntimeObject* L_3 = InterfaceFuncInvoker1< RuntimeObject*, uint8_t >::Invoke(0 /* System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition::GetDefaultMappings(Microsoft.MixedReality.Toolkit.Utilities.Handedness) */, IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91_il2cpp_TypeInfo_var, G_B2_0, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29823));
		G_B3_0 = L_3;
	}

IL_0019:
	{
		V_0 = G_B3_0;
		// MixedRealityInteractionMapping[] defaultInteractions = new MixedRealityInteractionMapping[definitionInteractions.Count];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29810));
		RuntimeObject* L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29824));
		NullCheck(L_4);
		int32_t L_5 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Count() */, IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29824));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_6 = (MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)SZArrayNew(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA_il2cpp_TypeInfo_var, (uint32_t)L_5);
		V_1 = L_6;
		// for (int i = 0; i < definitionInteractions.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29811));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29812));
		goto IL_004b;
	}

IL_002a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29813));
		// defaultInteractions[i] = new MixedRealityInteractionMapping((uint)i, definitionInteractions[i], LegacyInputSupport[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29814));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_7 = V_1;
		int32_t L_8 = V_2;
		int32_t L_9 = V_2;
		RuntimeObject* L_10 = V_0;
		int32_t L_11 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29825));
		NullCheck(L_10);
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_12 = InterfaceFuncInvoker1< MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *, int32_t >::Invoke(0 /* !0 System.Collections.Generic.IReadOnlyList`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Item(System.Int32) */, IReadOnlyList_1_t9358DECEA3E357EDBDBA29CE97CA97FC5569817C_il2cpp_TypeInfo_var, L_10, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29825));
		IL2CPP_RUNTIME_CLASS_INIT(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_13 = ((MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields*)il2cpp_codegen_static_fields_for(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var))->get_LegacyInputSupport_12();
		int32_t L_14 = V_2;
		NullCheck(L_13);
		int32_t L_15 = L_14;
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_16 = (L_13)->GetAt(static_cast<il2cpp_array_size_t>(L_15));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29826));
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_17 = (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)il2cpp_codegen_object_new(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_il2cpp_TypeInfo_var);
		MixedRealityInteractionMapping__ctor_m8FAD7C21E460AF3461A6C224D3D15AC47460E6C6(L_17, L_9, L_12, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29826));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_17);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(L_8), (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 *)L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29815));
		// for (int i = 0; i < definitionInteractions.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29816));
		int32_t L_18 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_18, (int32_t)1));
	}

IL_004b:
	{
		// for (int i = 0; i < definitionInteractions.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29817));
		int32_t L_19 = V_2;
		RuntimeObject* L_20 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29827));
		NullCheck(L_20);
		int32_t L_21 = InterfaceFuncInvoker0< int32_t >::Invoke(0 /* System.Int32 System.Collections.Generic.IReadOnlyCollection`1<Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping>::get_Count() */, IReadOnlyCollection_1_t9A3DD939CD895D2189BEC23441C0BC452212C0FE_il2cpp_TypeInfo_var, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29827));
		V_3 = (bool)((((int32_t)L_19) < ((int32_t)L_21))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29818));
		bool L_22 = V_3;
		if (L_22)
		{
			goto IL_002a;
		}
	}
	{
		// return defaultInteractions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29819));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_23 = V_1;
		V_4 = L_23;
		goto IL_005d;
	}

IL_005d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29820));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_24 = V_4;
		return L_24;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	bool V_16 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_17;
	memset((&V_17), 0, sizeof(V_17));
	bool V_18 = false;
	bool V_19 = false;
	bool V_20 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_5), (&V_7), (&V_13), (&V_17));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29828));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29829));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B10_0 = 0;
	int32_t G_B16_0 = 0;
	RuntimeObject* G_B23_0 = NULL;
	RuntimeObject* G_B22_0 = NULL;
	RuntimeObject* G_B29_0 = NULL;
	RuntimeObject* G_B28_0 = NULL;
	RuntimeObject* G_B38_0 = NULL;
	RuntimeObject* G_B37_0 = NULL;
	RuntimeObject* G_B42_0 = NULL;
	RuntimeObject* G_B41_0 = NULL;
	RuntimeObject* G_B52_0 = NULL;
	RuntimeObject* G_B51_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29830));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29831));
		IL2CPP_RUNTIME_CLASS_INIT(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields*)il2cpp_codegen_static_fields_for(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_15();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29922));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29922));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29832));
			// if (!UInput.mousePresent) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29833));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29923));
			bool L_2 = Input_get_mousePresent_m84357E5B596CD17272874EF83E2D2F2864580E05(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29923));
			V_2 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29834));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_0022;
			}
		}

IL_001c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29835));
			// if (!UInput.mousePresent) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29836));
			IL2CPP_LEAVE(0x3BF, FINALLY_03b0);
		}

IL_0022:
		{
			// if (mouseDeviceManager == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29837));
			RuntimeObject* L_4 = __this->get_mouseDeviceManager_14();
			V_3 = (bool)((((RuntimeObject*)(RuntimeObject*)L_4) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29838));
			bool L_5 = V_3;
			if (!L_5)
			{
				goto IL_003c;
			}
		}

IL_002f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29839));
			// mouseDeviceManager = CoreServices.GetInputSystemDataProvider<IMixedRealityMouseDeviceManager>();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29840));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29924));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_6 = CoreServices_GetInputSystemDataProvider_TisIMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_m6678BE77DBD2504AFD9C5F6CB1F9512DBA4297C1(/*hidden argument*/CoreServices_GetInputSystemDataProvider_TisIMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_m6678BE77DBD2504AFD9C5F6CB1F9512DBA4297C1_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29924));
			__this->set_mouseDeviceManager_14(L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29841));
		}

IL_003c:
		{
			// if (UInput.mousePosition.x < 0 ||
			//     UInput.mousePosition.y < 0 ||
			//     UInput.mousePosition.x > Screen.width ||
			//     UInput.mousePosition.y > Screen.height)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29842));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29925));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29925));
			float L_8 = L_7.get_x_2();
			if ((((float)L_8) < ((float)(0.0f))))
			{
				goto IL_0084;
			}
		}

IL_004d:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29926));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29926));
			float L_10 = L_9.get_y_3();
			if ((((float)L_10) < ((float)(0.0f))))
			{
				goto IL_0084;
			}
		}

IL_005e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29927));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29927));
			float L_12 = L_11.get_x_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29928));
			int32_t L_13 = Screen_get_width_m8ECCEF7FF17395D1237BC0193D7A6640A3FEEAD3(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29928));
			if ((((float)L_12) > ((float)(((float)((float)L_13))))))
			{
				goto IL_0084;
			}
		}

IL_0070:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29929));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Input_get_mousePosition_m1F6706785983B41FE8D5CBB81B5F15F68EBD9A53(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29929));
			float L_15 = L_14.get_y_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29930));
			int32_t L_16 = Screen_get_height_mF5B64EBC4CDE0EAAA5713C1452ED2CE475F25150(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29930));
			G_B10_0 = ((((float)L_15) > ((float)(((float)((float)L_16)))))? 1 : 0);
			goto IL_0085;
		}

IL_0084:
		{
			G_B10_0 = 1;
		}

IL_0085:
		{
			V_4 = (bool)G_B10_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29843));
			bool L_17 = V_4;
			if (!L_17)
			{
				goto IL_0091;
			}
		}

IL_008b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29844));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29845));
			IL2CPP_LEAVE(0x3BF, FINALLY_03b0);
		}

IL_0091:
		{
			// for (int i = 0; i < Interactions.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29846));
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29847));
			goto IL_0398;
		}

IL_0099:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29848));
			// if ((Interactions[i].InputType == DeviceInputType.SpatialPointer) ||
			//     (Interactions[i].InputType == DeviceInputType.PointerPosition))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29849));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29931));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_18 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29931));
			int32_t L_19 = V_5;
			NullCheck(L_18);
			int32_t L_20 = L_19;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_21 = (L_18)->GetAt(static_cast<il2cpp_array_size_t>(L_20));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29932));
			NullCheck(L_21);
			int32_t L_22 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29932));
			if ((((int32_t)L_22) == ((int32_t)3)))
			{
				goto IL_00be;
			}
		}

IL_00ab:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29933));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_23 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29933));
			int32_t L_24 = V_5;
			NullCheck(L_23);
			int32_t L_25 = L_24;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_26 = (L_23)->GetAt(static_cast<il2cpp_array_size_t>(L_25));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29934));
			NullCheck(L_26);
			int32_t L_27 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29934));
			G_B16_0 = ((((int32_t)L_27) == ((int32_t)4))? 1 : 0);
			goto IL_00bf;
		}

IL_00be:
		{
			G_B16_0 = 1;
		}

IL_00bf:
		{
			V_6 = (bool)G_B16_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29850));
			bool L_28 = V_6;
			if (!L_28)
			{
				goto IL_0220;
			}
		}

IL_00c8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29851));
			// Vector3 mouseDelta = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29852));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29935));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29935));
			V_7 = L_29;
			// mouseDelta.x = -UInput.GetAxis("Mouse Y");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29853));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29936));
			float L_30 = Input_GetAxis_m6454498C755B9A2C964875927FB557CA9E75D387(_stringLiteral1E88AB05D76FF253F292B74866D32460BB3836E2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29936));
			(&V_7)->set_x_2(((-L_30)));
			// mouseDelta.y = UInput.GetAxis("Mouse X");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29854));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29937));
			float L_31 = Input_GetAxis_m6454498C755B9A2C964875927FB557CA9E75D387(_stringLiteral294D359ECE148A430F19981912277E5154CA19E0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29937));
			(&V_7)->set_y_3(L_31);
			// if (mouseDeviceManager != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29855));
			RuntimeObject* L_32 = __this->get_mouseDeviceManager_14();
			V_8 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_32) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29856));
			bool L_33 = V_8;
			if (!L_33)
			{
				goto IL_0118;
			}
		}

IL_0102:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29857));
			// mouseDelta *= mouseDeviceManager.CursorSpeed;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29858));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = V_7;
			RuntimeObject* L_35 = __this->get_mouseDeviceManager_14();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29938));
			NullCheck(L_35);
			float L_36 = InterfaceFuncInvoker0< float >::Invoke(1 /* System.Single Microsoft.MixedReality.Toolkit.Input.IMixedRealityMouseDeviceManager::get_CursorSpeed() */, IMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_il2cpp_TypeInfo_var, L_35);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29938));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29939));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_34, L_36, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29939));
			V_7 = L_37;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29859));
		}

IL_0118:
		{
			// if (Interactions[i].InputType == DeviceInputType.SpatialPointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29860));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29940));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_38 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29940));
			int32_t L_39 = V_5;
			NullCheck(L_38);
			int32_t L_40 = L_39;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_41 = (L_38)->GetAt(static_cast<il2cpp_array_size_t>(L_40));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29941));
			NullCheck(L_41);
			int32_t L_42 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_41, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29941));
			V_9 = (bool)((((int32_t)L_42) == ((int32_t)3))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29861));
			bool L_43 = V_9;
			if (!L_43)
			{
				goto IL_01b8;
			}
		}

IL_0132:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29862));
			// controllerPose = MixedRealityPose.ZeroIdentity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29863));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29942));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_44 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29942));
			__this->set_controllerPose_13(L_44);
			// controllerPose.Rotation = Quaternion.Euler(mouseDelta);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29864));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_45 = __this->get_address_of_controllerPose_13();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_46 = V_7;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29943));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_47 = Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B(L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29943));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29944));
			MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_45, L_47, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29944));
			// Interactions[i].PoseData = controllerPose;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29865));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29945));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_48 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29945));
			int32_t L_49 = V_5;
			NullCheck(L_48);
			int32_t L_50 = L_49;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_51 = (L_48)->GetAt(static_cast<il2cpp_array_size_t>(L_50));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_52 = __this->get_controllerPose_13();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29946));
			NullCheck(L_51);
			MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_51, L_52, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29946));
			// if (Interactions[i].Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29866));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29947));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_53 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29947));
			int32_t L_54 = V_5;
			NullCheck(L_53);
			int32_t L_55 = L_54;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_56 = (L_53)->GetAt(static_cast<il2cpp_array_size_t>(L_55));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29948));
			NullCheck(L_56);
			bool L_57 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_56, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29948));
			V_10 = L_57;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29867));
			bool L_58 = V_10;
			if (!L_58)
			{
				goto IL_01b5;
			}
		}

IL_017a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29868));
			// CoreServices.InputSystem?.RaisePoseInputChanged(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction, Interactions[i].PoseData);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29869));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29949));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_59 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29949));
			RuntimeObject* L_60 = L_59;
			G_B22_0 = L_60;
			if (L_60)
			{
				G_B23_0 = L_60;
				goto IL_0186;
			}
		}

IL_0183:
		{
			goto IL_01b4;
		}

IL_0186:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29950));
			RuntimeObject* L_61 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29950));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29951));
			uint8_t L_62 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29951));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29952));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_63 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29952));
			int32_t L_64 = V_5;
			NullCheck(L_63);
			int32_t L_65 = L_64;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_66 = (L_63)->GetAt(static_cast<il2cpp_array_size_t>(L_65));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29953));
			NullCheck(L_66);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_67 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_66, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29953));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29954));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_68 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29954));
			int32_t L_69 = V_5;
			NullCheck(L_68);
			int32_t L_70 = L_69;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_71 = (L_68)->GetAt(static_cast<il2cpp_array_size_t>(L_70));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29955));
			NullCheck(L_71);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_72 = MixedRealityInteractionMapping_get_PoseData_mFA28DE0DB1CB2EE393BFA1BDD8EC48411C143F7F(L_71, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29955));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29956));
			NullCheck(G_B23_0);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(45 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePoseInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B23_0, L_61, L_62, L_67, L_72);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29956));
		}

IL_01b4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29870));
		}

IL_01b5:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29871));
			goto IL_021f;
		}

IL_01b8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29872));
			// Interactions[i].Vector2Data = mouseDelta;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29873));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29957));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_73 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29957));
			int32_t L_74 = V_5;
			NullCheck(L_73);
			int32_t L_75 = L_74;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_76 = (L_73)->GetAt(static_cast<il2cpp_array_size_t>(L_75));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_77 = V_7;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29958));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_78 = Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28(L_77, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29958));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29959));
			NullCheck(L_76);
			MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB(L_76, L_78, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29959));
			// if (Interactions[i].Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29874));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29960));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_79 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29960));
			int32_t L_80 = V_5;
			NullCheck(L_79);
			int32_t L_81 = L_80;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_82 = (L_79)->GetAt(static_cast<il2cpp_array_size_t>(L_81));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29961));
			NullCheck(L_82);
			bool L_83 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_82, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29961));
			V_11 = L_83;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29875));
			bool L_84 = V_11;
			if (!L_84)
			{
				goto IL_021e;
			}
		}

IL_01e3:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29876));
			// CoreServices.InputSystem?.RaisePositionInputChanged(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction, Interactions[i].Vector2Data);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29877));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29962));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_85 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29962));
			RuntimeObject* L_86 = L_85;
			G_B28_0 = L_86;
			if (L_86)
			{
				G_B29_0 = L_86;
				goto IL_01ef;
			}
		}

IL_01ec:
		{
			goto IL_021d;
		}

IL_01ef:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29963));
			RuntimeObject* L_87 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29963));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29964));
			uint8_t L_88 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29964));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29965));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_89 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29965));
			int32_t L_90 = V_5;
			NullCheck(L_89);
			int32_t L_91 = L_90;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_92 = (L_89)->GetAt(static_cast<il2cpp_array_size_t>(L_91));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29966));
			NullCheck(L_92);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_93 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_92, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29966));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29967));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_94 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29967));
			int32_t L_95 = V_5;
			NullCheck(L_94);
			int32_t L_96 = L_95;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_97 = (L_94)->GetAt(static_cast<il2cpp_array_size_t>(L_96));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29968));
			NullCheck(L_97);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_98 = MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650(L_97, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29968));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29969));
			NullCheck(G_B29_0);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(42 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePositionInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B29_0, L_87, L_88, L_93, L_98);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29969));
		}

IL_021d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29878));
		}

IL_021e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29879));
		}

IL_021f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29880));
		}

IL_0220:
		{
			// if (Interactions[i].AxisType == AxisType.Digital)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29881));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29970));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_99 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29970));
			int32_t L_100 = V_5;
			NullCheck(L_99);
			int32_t L_101 = L_100;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_102 = (L_99)->GetAt(static_cast<il2cpp_array_size_t>(L_101));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29971));
			NullCheck(L_102);
			int32_t L_103 = MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline(L_102, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29971));
			V_12 = (bool)((((int32_t)L_103) == ((int32_t)2))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29882));
			bool L_104 = V_12;
			if (!L_104)
			{
				goto IL_02e8;
			}
		}

IL_023a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29883));
			// var keyButton = UInput.GetKey(Interactions[i].KeyCode);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29884));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29972));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_105 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29972));
			int32_t L_106 = V_5;
			NullCheck(L_105);
			int32_t L_107 = L_106;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_108 = (L_105)->GetAt(static_cast<il2cpp_array_size_t>(L_107));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29973));
			NullCheck(L_108);
			int32_t L_109 = MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_inline(L_108, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29973));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29974));
			bool L_110 = Input_GetKey_m46AA83E14F9C3A75E06FE0A8C55740D47B2DB784(L_109, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29974));
			V_13 = L_110;
			// Interactions[i].BoolData = keyButton;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29885));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29975));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_111 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29975));
			int32_t L_112 = V_5;
			NullCheck(L_111);
			int32_t L_113 = L_112;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_114 = (L_111)->GetAt(static_cast<il2cpp_array_size_t>(L_113));
			bool L_115 = V_13;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29976));
			NullCheck(L_114);
			MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_114, L_115, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29976));
			// if (Interactions[i].Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29886));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29977));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_116 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29977));
			int32_t L_117 = V_5;
			NullCheck(L_116);
			int32_t L_118 = L_117;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_119 = (L_116)->GetAt(static_cast<il2cpp_array_size_t>(L_118));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29978));
			NullCheck(L_119);
			bool L_120 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_119, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29978));
			V_14 = L_120;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29887));
			bool L_121 = V_14;
			if (!L_121)
			{
				goto IL_02e7;
			}
		}

IL_0275:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29888));
			// if (Interactions[i].BoolData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29889));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29979));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_122 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29979));
			int32_t L_123 = V_5;
			NullCheck(L_122);
			int32_t L_124 = L_123;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_125 = (L_122)->GetAt(static_cast<il2cpp_array_size_t>(L_124));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29980));
			NullCheck(L_125);
			bool L_126 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_125, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29980));
			V_15 = L_126;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29890));
			bool L_127 = V_15;
			if (!L_127)
			{
				goto IL_02b9;
			}
		}

IL_028a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29891));
			// CoreServices.InputSystem?.RaiseOnInputDown(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29892));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29981));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_128 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29981));
			RuntimeObject* L_129 = L_128;
			G_B37_0 = L_129;
			if (L_129)
			{
				G_B38_0 = L_129;
				goto IL_0296;
			}
		}

IL_0293:
		{
			goto IL_02b6;
		}

IL_0296:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29982));
			RuntimeObject* L_130 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29982));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29983));
			uint8_t L_131 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29983));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29984));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_132 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29984));
			int32_t L_133 = V_5;
			NullCheck(L_132);
			int32_t L_134 = L_133;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_135 = (L_132)->GetAt(static_cast<il2cpp_array_size_t>(L_134));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29985));
			NullCheck(L_135);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_136 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_135, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29985));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29986));
			NullCheck(G_B38_0);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B38_0, L_130, L_131, L_136);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29986));
		}

IL_02b6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29893));
			goto IL_02e6;
		}

IL_02b9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29894));
			// CoreServices.InputSystem?.RaiseOnInputUp(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29895));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29987));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_137 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29987));
			RuntimeObject* L_138 = L_137;
			G_B41_0 = L_138;
			if (L_138)
			{
				G_B42_0 = L_138;
				goto IL_02c5;
			}
		}

IL_02c2:
		{
			goto IL_02e5;
		}

IL_02c5:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29988));
			RuntimeObject* L_139 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29988));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29989));
			uint8_t L_140 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29989));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29990));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_141 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29990));
			int32_t L_142 = V_5;
			NullCheck(L_141);
			int32_t L_143 = L_142;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_144 = (L_141)->GetAt(static_cast<il2cpp_array_size_t>(L_143));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29991));
			NullCheck(L_144);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_145 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_144, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29991));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29992));
			NullCheck(G_B42_0);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B42_0, L_139, L_140, L_145);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29992));
		}

IL_02e5:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29896));
		}

IL_02e6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29897));
		}

IL_02e7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29898));
		}

IL_02e8:
		{
			// if (Interactions[i].InputType == DeviceInputType.Scroll)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29899));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29993));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_146 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29993));
			int32_t L_147 = V_5;
			NullCheck(L_146);
			int32_t L_148 = L_147;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_149 = (L_146)->GetAt(static_cast<il2cpp_array_size_t>(L_148));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29994));
			NullCheck(L_149);
			int32_t L_150 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_149, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29994));
			V_16 = (bool)((((int32_t)L_150) == ((int32_t)((int32_t)50)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29900));
			bool L_151 = V_16;
			if (!L_151)
			{
				goto IL_0391;
			}
		}

IL_0303:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29901));
			// Vector2 wheelDelta = UInput.mouseScrollDelta;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29902));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29995));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_152 = Input_get_mouseScrollDelta_m66F785090C429CE7DCDEF09C92CDBDD08FCDE98D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29995));
			V_17 = L_152;
			// if (mouseDeviceManager != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29903));
			RuntimeObject* L_153 = __this->get_mouseDeviceManager_14();
			V_18 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_153) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29904));
			bool L_154 = V_18;
			if (!L_154)
			{
				goto IL_0330;
			}
		}

IL_031a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29905));
			// wheelDelta *= mouseDeviceManager.WheelSpeed;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29906));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_155 = V_17;
			RuntimeObject* L_156 = __this->get_mouseDeviceManager_14();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29996));
			NullCheck(L_156);
			float L_157 = InterfaceFuncInvoker0< float >::Invoke(3 /* System.Single Microsoft.MixedReality.Toolkit.Input.IMixedRealityMouseDeviceManager::get_WheelSpeed() */, IMixedRealityMouseDeviceManager_tD751F99AF61C16E1CD209018D32A3EE80E30ED0E_il2cpp_TypeInfo_var, L_156);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29996));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29997));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_158 = Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56(L_155, L_157, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29997));
			V_17 = L_158;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29907));
		}

IL_0330:
		{
			// Interactions[i].Vector2Data = wheelDelta;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29908));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29998));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_159 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29998));
			int32_t L_160 = V_5;
			NullCheck(L_159);
			int32_t L_161 = L_160;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_162 = (L_159)->GetAt(static_cast<il2cpp_array_size_t>(L_161));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_163 = V_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29999));
			NullCheck(L_162);
			MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB(L_162, L_163, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29999));
			// if (Interactions[i].Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29909));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30000));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_164 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30000));
			int32_t L_165 = V_5;
			NullCheck(L_164);
			int32_t L_166 = L_165;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_167 = (L_164)->GetAt(static_cast<il2cpp_array_size_t>(L_166));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30001));
			NullCheck(L_167);
			bool L_168 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_167, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30001));
			V_19 = L_168;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29910));
			bool L_169 = V_19;
			if (!L_169)
			{
				goto IL_0390;
			}
		}

IL_0355:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29911));
			// CoreServices.InputSystem?.RaisePositionInputChanged(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction, Interactions[i].Vector2Data);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29912));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30002));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_170 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30002));
			RuntimeObject* L_171 = L_170;
			G_B51_0 = L_171;
			if (L_171)
			{
				G_B52_0 = L_171;
				goto IL_0361;
			}
		}

IL_035e:
		{
			goto IL_038f;
		}

IL_0361:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30003));
			RuntimeObject* L_172 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30003));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30004));
			uint8_t L_173 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30004));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30005));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_174 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30005));
			int32_t L_175 = V_5;
			NullCheck(L_174);
			int32_t L_176 = L_175;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_177 = (L_174)->GetAt(static_cast<il2cpp_array_size_t>(L_176));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30006));
			NullCheck(L_177);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_178 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_177, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30006));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30007));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_179 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30007));
			int32_t L_180 = V_5;
			NullCheck(L_179);
			int32_t L_181 = L_180;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_182 = (L_179)->GetAt(static_cast<il2cpp_array_size_t>(L_181));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30008));
			NullCheck(L_182);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_183 = MixedRealityInteractionMapping_get_Vector2Data_m5C4FDA726DEC05433E3A243AFF5DFD5422FAA650(L_182, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30008));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30009));
			NullCheck(G_B52_0);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(42 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePositionInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B52_0, L_172, L_173, L_178, L_183);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30009));
		}

IL_038f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29913));
		}

IL_0390:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29914));
		}

IL_0391:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29915));
			// for (int i = 0; i < Interactions.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29916));
			int32_t L_184 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_184, (int32_t)1));
		}

IL_0398:
		{
			// for (int i = 0; i < Interactions.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29917));
			int32_t L_185 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30010));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_186 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30010));
			NullCheck(L_186);
			V_20 = (bool)((((int32_t)L_185) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_186)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29918));
			bool L_187 = V_20;
			if (L_187)
			{
				goto IL_0099;
			}
		}

IL_03ad:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29919));
			IL2CPP_LEAVE(0x3BF, FINALLY_03b0);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_03b0;
	}

FINALLY_03b0:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29920));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30011));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30011));
		IL2CPP_END_FINALLY(944)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(944)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x3BF, IL_03bf)
	}

IL_03bf:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29921));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseController__cctor_mD2F02D905783BF807B093427BF0196A3BF29C6F8 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseController__cctor_mD2F02D905783BF807B093427BF0196A3BF29C6F8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseController__cctor_mD2F02D905783BF807B093427BF0196A3BF29C6F8_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30012));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30013));
	{
		// private static readonly MixedRealityInteractionMappingLegacyInput[] LegacyInputSupport = new[]
		// {
		//     new MixedRealityInteractionMappingLegacyInput(), // Spatial Mouse Position
		//     new MixedRealityInteractionMappingLegacyInput(), // Mouse Delta Position
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_3), // Mouse Scroll Position
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse0), // Left Mouse Button
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse1), // Right Mouse Button
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse2), // Mouse Button 2
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse3), // Mouse Button 3
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse4), // Mouse Button 4
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse5), // Mouse Button 5
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.Mouse6), // Mouse Button 6
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30014));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_0 = (MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)SZArrayNew(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C_il2cpp_TypeInfo_var, (uint32_t)((int32_t)10));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30016));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_2;
		memset((&L_2), 0, sizeof(L_2));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_2), 0, _stringLiteral656DE1F988407C087F04D6D4B010279AEFAB457D, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30016));
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_2);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30017));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_4;
		memset((&L_4), 0, sizeof(L_4));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_4), ((int32_t)323), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30017));
		NullCheck(L_3);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(3), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_4);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30018));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_6;
		memset((&L_6), 0, sizeof(L_6));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_6), ((int32_t)324), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30018));
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(4), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_6);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30019));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_8;
		memset((&L_8), 0, sizeof(L_8));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_8), ((int32_t)325), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30019));
		NullCheck(L_7);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(5), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_8);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30020));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_10;
		memset((&L_10), 0, sizeof(L_10));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_10), ((int32_t)326), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30020));
		NullCheck(L_9);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(6), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_10);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30021));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_12;
		memset((&L_12), 0, sizeof(L_12));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_12), ((int32_t)327), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30021));
		NullCheck(L_11);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(7), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_12);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30022));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_14;
		memset((&L_14), 0, sizeof(L_14));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_14), ((int32_t)328), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30022));
		NullCheck(L_13);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(8), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_14);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30023));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_16;
		memset((&L_16), 0, sizeof(L_16));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_16), ((int32_t)329), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30023));
		NullCheck(L_15);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_16);
		((MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields*)il2cpp_codegen_static_fields_for(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var))->set_LegacyInputSupport_12(L_15);
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] MouseController.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30015));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30024));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_17;
		memset((&L_17), 0, sizeof(L_17));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_17), _stringLiteral587D31C728BABB75EBD8560EDC7B82CF3D423526, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30024));
		((MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_StaticFields*)il2cpp_codegen_static_fields_for(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_15(L_17);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager__ctor_m6EB7FF7462475F9A9C2E158C93E665E7A7B1CF68 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, RuntimeObject* ___registrar0, RuntimeObject* ___inputSystem1, String_t* ___name2, uint32_t ___priority3, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager__ctor_m6EB7FF7462475F9A9C2E158C93E665E7A7B1CF68_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___registrar0), (&___inputSystem1), (&___name2), (&___priority3), (&___profile4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager__ctor_m6EB7FF7462475F9A9C2E158C93E665E7A7B1CF68_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30025));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30026));
	{
		// BaseMixedRealityProfile profile = null) : this(inputSystem, name, priority, profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30027));
		RuntimeObject* L_0 = ___inputSystem1;
		String_t* L_1 = ___name2;
		uint32_t L_2 = ___priority3;
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_3 = ___profile4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30031));
		MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF(__this, L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30031));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30028));
		// Registrar = registrar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30029));
		RuntimeObject* L_4 = ___registrar0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30032));
		BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_inline(__this, L_4, /*hidden argument*/BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30032));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30030));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSystem0), (&___name1), (&___priority2), (&___profile3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager__ctor_mE504DD6A5793DC7915FF8C52C3A1FB085C2455CF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30034));
	{
		// private float cursorSpeed = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30035));
		__this->set_cursorSpeed_23((1.0f));
		// private float wheelSpeed = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30036));
		__this->set_wheelSpeed_24((1.0f));
		// BaseMixedRealityProfile profile = null) : base(inputSystem, name, priority, profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30037));
		RuntimeObject* L_0 = ___inputSystem0;
		String_t* L_1 = ___name1;
		uint32_t L_2 = ___priority2;
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_3 = ___profile3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30040));
		IL2CPP_RUNTIME_CLASS_INIT(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_il2cpp_TypeInfo_var);
		BaseInputDeviceManager__ctor_m1746D3A8EBE4F327683713A37AF88FF94969DD1B(__this, L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30040));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30038));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30039));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityMouseInputProfile Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::get_MouseInputProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * MouseDeviceManager_get_MouseInputProfile_m9AC02DC0078B74BCDC27A957EC41F3F7B054340E (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_get_MouseInputProfile_m9AC02DC0078B74BCDC27A957EC41F3F7B054340E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_get_MouseInputProfile_m9AC02DC0078B74BCDC27A957EC41F3F7B054340E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30041));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30042));
	{
		// public MixedRealityMouseInputProfile MouseInputProfile => ConfigurationProfile as MixedRealityMouseInputProfile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30043));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30044));
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_0 = VirtFuncInvoker0< BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * >::Invoke(22 /* Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile Microsoft.MixedReality.Toolkit.BaseService::get_ConfigurationProfile() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30044));
		return ((MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC *)IsInstClass((RuntimeObject*)L_0, MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC_il2cpp_TypeInfo_var));
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::get_CursorSpeed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MouseDeviceManager_get_CursorSpeed_m07DD4EF9A30BE0ADB3512A31828FF6A72BA4DBA9 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_get_CursorSpeed_m07DD4EF9A30BE0ADB3512A31828FF6A72BA4DBA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_get_CursorSpeed_m07DD4EF9A30BE0ADB3512A31828FF6A72BA4DBA9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30046));
	{
		// get => cursorSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30047));
		float L_0 = __this->get_cursorSpeed_23();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::set_CursorSpeed(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30049));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30050));
		// if (value != cursorSpeed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30051));
		float L_0 = ___value0;
		float L_1 = __this->get_cursorSpeed_23();
		V_0 = (bool)((((int32_t)((((float)L_0) == ((float)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30052));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30053));
		// cursorSpeed = Mathf.Clamp(value, MinSpeedMultiplier, MaxSpeedMultiplier);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30054));
		float L_3 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30057));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_4 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_3, (0.1f), (10.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30057));
		__this->set_cursorSpeed_23(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30055));
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30056));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::get_WheelSpeed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MouseDeviceManager_get_WheelSpeed_m10628B386DE10423D1D01706D64C3FB92CB65826 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_get_WheelSpeed_m10628B386DE10423D1D01706D64C3FB92CB65826_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_get_WheelSpeed_m10628B386DE10423D1D01706D64C3FB92CB65826_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30058));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30059));
	{
		// get => wheelSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30060));
		float L_0 = __this->get_wheelSpeed_24();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::set_WheelSpeed(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30061));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30062));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30063));
		// if (value != wheelSpeed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30064));
		float L_0 = ___value0;
		float L_1 = __this->get_wheelSpeed_24();
		V_0 = (bool)((((int32_t)((((float)L_0) == ((float)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30065));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30066));
		// wheelSpeed = Mathf.Clamp(value, MinSpeedMultiplier, MaxSpeedMultiplier);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30067));
		float L_3 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30070));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_4 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_3, (0.1f), (10.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30070));
		__this->set_wheelSpeed_24(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30068));
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30069));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::get_Controller()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30071));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30072));
	{
		// public MouseController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30073));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_0 = __this->get_U3CControllerU3Ek__BackingField_25();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::set_Controller(Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30074));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30075));
	{
		// public MouseController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30076));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_0 = ___value0;
		__this->set_U3CControllerU3Ek__BackingField_25(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_Initialize_m35E86B0049510BF374BF2124D745BCE1722EB96C (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_Initialize_m35E86B0049510BF374BF2124D745BCE1722EB96C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_Initialize_m35E86B0049510BF374BF2124D745BCE1722EB96C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30077));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30078));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30079));
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30080));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30083));
		BaseInputDeviceManager_Initialize_m225122D3D7BCF0BBBD6DEE1E4F8CA3E238CB71DC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30083));
		// ReadProfile();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30084));
		MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30084));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30082));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::Enable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_Enable_m9CBAE43364362D2389AEC1B0360CBE692CC7A664 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_Enable_m9CBAE43364362D2389AEC1B0360CBE692CC7A664_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	Type_t * V_1 = NULL;
	MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* V_6 = NULL;
	bool V_7 = false;
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* V_8 = NULL;
	bool V_9 = false;
	int32_t V_10 = 0;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_6), (&V_8), (&V_10));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_Enable_m9CBAE43364362D2389AEC1B0360CBE692CC7A664_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30085));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30086));
	int32_t G_B8_0 = 0;
	RuntimeObject* G_B18_0 = NULL;
	RuntimeObject* G_B17_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30087));
		// base.Enable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30129));
		BaseService_Enable_m04CE0EA9BE41F36575F1B7FBDAE7CB7514EFEB49(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30129));
		// if (!UInput.mousePresent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30089));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30130));
		bool L_0 = Input_get_mousePresent_m84357E5B596CD17272874EF83E2D2F2864580E05(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30130));
		V_3 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30090));
		bool L_1 = V_3;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30091));
		// Disable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30131));
		VirtActionInvoker0::Invoke(29 /* System.Void Microsoft.MixedReality.Toolkit.BaseService::Disable() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30131));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30093));
		goto IL_0126;
	}

IL_0021:
	{
		// if (Controller != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30132));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_2 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30132));
		V_4 = (bool)((!(((RuntimeObject*)(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30095));
		bool L_3 = V_4;
		if (!L_3)
		{
			goto IL_0036;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30096));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30097));
		goto IL_0126;
	}

IL_0036:
	{
		// IMixedRealityInputSource mouseInputSource = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30098));
		V_0 = (RuntimeObject*)NULL;
		// MixedRealityRaycaster.DebugEnabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30099));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
		((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->set_DebugEnabled_0((bool)1);
		// System.Type controllerType = typeof(MouseController);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30100));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_4 = { reinterpret_cast<intptr_t> (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30133));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_5 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30133));
		V_1 = L_5;
		// var controllerAttribute = MixedRealityControllerAttribute.Find(controllerType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30101));
		Type_t * L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30134));
		MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * L_7 = MixedRealityControllerAttribute_Find_mE7629886DC03917866AF6BA137963D97A83A331F(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30134));
		V_2 = L_7;
		// if (controllerAttribute != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30102));
		MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * L_8 = V_2;
		V_5 = (bool)((!(((RuntimeObject*)(MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D *)L_8) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30103));
		bool L_9 = V_5;
		if (!L_9)
		{
			goto IL_0080;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30104));
		// Handedness[] handednesses = controllerAttribute.SupportedHandedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30105));
		MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30135));
		NullCheck(L_10);
		HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* L_11 = MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1_inline(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30135));
		V_6 = L_11;
		// Debug.Assert(
		//     handednesses.Length == 1 && handednesses[0] == Handedness.Any,
		//     "Unexpected mouse handedness declared in MixedRealityControllerAttribute");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30106));
		HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* L_12 = V_6;
		NullCheck(L_12);
		if ((!(((uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_12)->max_length))))) == ((uint32_t)1))))
		{
			goto IL_0073;
		}
	}
	{
		HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* L_13 = V_6;
		NullCheck(L_13);
		int32_t L_14 = 0;
		uint8_t L_15 = (uint8_t)(L_13)->GetAt(static_cast<il2cpp_array_size_t>(L_14));
		G_B8_0 = ((((int32_t)L_15) == ((int32_t)7))? 1 : 0);
		goto IL_0074;
	}

IL_0073:
	{
		G_B8_0 = 0;
	}

IL_0074:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30136));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)G_B8_0, _stringLiteral4629BC1F6F7ED9DCC419998FC11B1B6B896A7C1D, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30136));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30107));
	}

IL_0080:
	{
		// if (Service != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30108));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30137));
		RuntimeObject* L_16 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30137));
		V_7 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_16) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30109));
		bool L_17 = V_7;
		if (!L_17)
		{
			goto IL_00b3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30110));
		// var pointers = RequestPointers(SupportedControllerType.Mouse, handedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30111));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30138));
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_18 = VirtFuncInvoker2< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*, int32_t, uint8_t >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::RequestPointers(Microsoft.MixedReality.Toolkit.Input.SupportedControllerType,Microsoft.MixedReality.Toolkit.Utilities.Handedness) */, __this, ((int32_t)512), 7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30138));
		V_8 = L_18;
		// mouseInputSource = Service.RequestNewGenericInputSource("Mouse Input", pointers);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30112));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30139));
		RuntimeObject* L_19 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30139));
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_20 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30140));
		NullCheck(L_19);
		RuntimeObject* L_21 = InterfaceFuncInvoker3< RuntimeObject*, String_t*, IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*, int32_t >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RequestNewGenericInputSource(System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[],Microsoft.MixedReality.Toolkit.Input.InputSourceType) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_19, _stringLiteral25939F72D787A122BF99C3514878B0C24DAFB7D8, L_20, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30140));
		V_0 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30113));
	}

IL_00b3:
	{
		// Controller = new MouseController(TrackingState.NotApplicable, handedness, mouseInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30114));
		RuntimeObject* L_22 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30141));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_23 = (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F *)il2cpp_codegen_object_new(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F_il2cpp_TypeInfo_var);
		MouseController__ctor_m4EFE4D2CACBA096C1E8B84DC974DFF57C14B130A(L_23, 0, 7, L_22, (MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30142));
		MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_inline(__this, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30142));
		// if (mouseInputSource != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30115));
		RuntimeObject* L_24 = V_0;
		V_9 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_24) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30116));
		bool L_25 = V_9;
		if (!L_25)
		{
			goto IL_0103;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30117));
		// for (int i = 0; i < mouseInputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30118));
		V_10 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30119));
		goto IL_00f0;
	}

IL_00d3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30120));
		// mouseInputSource.Pointers[i].Controller = Controller;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30121));
		RuntimeObject* L_26 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30143));
		NullCheck(L_26);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_27 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30143));
		int32_t L_28 = V_10;
		NullCheck(L_27);
		int32_t L_29 = L_28;
		RuntimeObject* L_30 = (L_27)->GetAt(static_cast<il2cpp_array_size_t>(L_29));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30144));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_31 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30144));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30145));
		NullCheck(L_30);
		InterfaceActionInvoker1< RuntimeObject* >::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_30, L_31);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30145));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30122));
		// for (int i = 0; i < mouseInputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30123));
		int32_t L_32 = V_10;
		V_10 = ((int32_t)il2cpp_codegen_add((int32_t)L_32, (int32_t)1));
	}

IL_00f0:
	{
		// for (int i = 0; i < mouseInputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30124));
		int32_t L_33 = V_10;
		RuntimeObject* L_34 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30146));
		NullCheck(L_34);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_35 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_34);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30146));
		NullCheck(L_35);
		V_11 = (bool)((((int32_t)L_33) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_35)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30125));
		bool L_36 = V_11;
		if (L_36)
		{
			goto IL_00d3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30126));
	}

IL_0103:
	{
		// Service?.RaiseSourceDetected(Controller.InputSource, Controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30127));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30147));
		RuntimeObject* L_37 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30147));
		RuntimeObject* L_38 = L_37;
		G_B17_0 = L_38;
		if (L_38)
		{
			G_B18_0 = L_38;
			goto IL_010f;
		}
	}
	{
		goto IL_0126;
	}

IL_010f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30148));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_39 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30149));
		NullCheck(L_39);
		RuntimeObject* L_40 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30149));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30150));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_41 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30150));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30151));
		NullCheck(G_B18_0);
		InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(24 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceDetected(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B18_0, L_40, L_41);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30151));
	}

IL_0126:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30128));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_Update_mC81D420BA6FB5B3D59FCE8F4D9A375CBCDB24F92 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_Update_mC81D420BA6FB5B3D59FCE8F4D9A375CBCDB24F92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_Update_mC81D420BA6FB5B3D59FCE8F4D9A375CBCDB24F92_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30152));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30153));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * G_B8_0 = NULL;
	MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30154));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30155));
		IL2CPP_RUNTIME_CLASS_INIT(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_StaticFields*)il2cpp_codegen_static_fields_for(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_26();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30167));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30167));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30156));
			// base.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30157));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30168));
			BaseService_Update_mAE9EBAC35F456E318362A34CA0ED90722C6C6F42(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30168));
			// if (UInput.mousePresent && Controller == null) { Enable(); }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30158));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30169));
			bool L_2 = Input_get_mousePresent_m84357E5B596CD17272874EF83E2D2F2864580E05(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30169));
			if (!L_2)
			{
				goto IL_0029;
			}
		}

IL_001e:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30170));
			MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_3 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30170));
			G_B4_0 = ((((RuntimeObject*)(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F *)L_3) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			goto IL_002a;
		}

IL_0029:
		{
			G_B4_0 = 0;
		}

IL_002a:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30159));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0037;
			}
		}

IL_002e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30160));
			// if (UInput.mousePresent && Controller == null) { Enable(); }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30161));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30171));
			VirtActionInvoker0::Invoke(26 /* System.Void Microsoft.MixedReality.Toolkit.BaseService::Enable() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30171));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30162));
		}

IL_0037:
		{
			// Controller?.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30163));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30172));
			MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_5 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30172));
			MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_6 = L_5;
			G_B7_0 = L_6;
			if (L_6)
			{
				G_B8_0 = L_6;
				goto IL_0043;
			}
		}

IL_0040:
		{
			goto IL_0049;
		}

IL_0043:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30173));
			NullCheck(G_B8_0);
			MouseController_Update_m9E8DEA88E6575330E4C8DB12DAB2CE5AE7569C2D(G_B8_0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30173));
		}

IL_0049:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30164));
			IL2CPP_LEAVE(0x5B, FINALLY_004c);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_004c;
	}

FINALLY_004c:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30165));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30174));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30174));
		IL2CPP_END_FINALLY(76)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(76)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x5B, IL_005b)
	}

IL_005b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30166));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::Disable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_Disable_m53B9DD07A43E4727524288D4D0379FAFECB82498 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_Disable_m53B9DD07A43E4727524288D4D0379FAFECB82498_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_Disable_m53B9DD07A43E4727524288D4D0379FAFECB82498_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30175));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30176));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30177));
		// base.Disable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30187));
		BaseService_Disable_m349524E2ECE37A703BC12D77419612C9162EC92A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30187));
		// if (Controller != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30179));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30188));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_0 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30188));
		V_0 = (bool)((!(((RuntimeObject*)(MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30180));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0054;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30181));
		// Service?.RaiseSourceLost(Controller.InputSource, Controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30182));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30189));
		RuntimeObject* L_2 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30189));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0022;
		}
	}
	{
		goto IL_0039;
	}

IL_0022:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30190));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_4 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30190));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30191));
		NullCheck(L_4);
		RuntimeObject* L_5 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30191));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30192));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_6 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30192));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30193));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(25 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceLost(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, L_5, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30193));
	}

IL_0039:
	{
		// RecyclePointers(Controller.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30183));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30194));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_7 = MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30194));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30195));
		NullCheck(L_7);
		RuntimeObject* L_8 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30195));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30196));
		VirtActionInvoker1< RuntimeObject* >::Invoke(41 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::RecyclePointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, __this, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30196));
		// Controller = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30184));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30197));
		MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_inline(__this, (MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30197));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30185));
	}

IL_0054:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30186));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::ReadProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309 (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_ReadProfile_mF798E01CB07FB8F472D44EE7C78A80BA206CD309_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30198));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30199));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30200));
		// MixedRealityMouseInputProfile profile = ConfigurationProfile as MixedRealityMouseInputProfile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30201));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30205));
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_0 = VirtFuncInvoker0< BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * >::Invoke(22 /* Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile Microsoft.MixedReality.Toolkit.BaseService::get_ConfigurationProfile() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30205));
		V_0 = ((MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC *)IsInstClass((RuntimeObject*)L_0, MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC_il2cpp_TypeInfo_var));
		// CursorSpeed = profile.CursorSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30202));
		MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30206));
		NullCheck(L_1);
		float L_2 = MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30206));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30207));
		MouseDeviceManager_set_CursorSpeed_m8B7ECA618CED12BED8F96891BE7C6C9C08221D0A(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30207));
		// WheelSpeed = profile.WheelSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30203));
		MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30208));
		NullCheck(L_3);
		float L_4 = MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30208));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30209));
		MouseDeviceManager_set_WheelSpeed_mB531685A313B8F2F00D4E9C4C160ACC4E172FFA6(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30209));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30204));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.MouseDeviceManager::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MouseDeviceManager__cctor_m345E8A0EF1BB48043F646729526855AB1CFB52C4 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager__cctor_m345E8A0EF1BB48043F646729526855AB1CFB52C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager__cctor_m345E8A0EF1BB48043F646729526855AB1CFB52C4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30210));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30211));
	{
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] MouseDeviceManager.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30212));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30213));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral6AC05709BF5AD71C0F65FEDDE4171594C3ACC763, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30213));
		((MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_StaticFields*)il2cpp_codegen_static_fields_for(MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_26(L_0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::.ctor(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager__ctor_m4DDE66FDDE5DB1EE78F75A3882467E0B66ED337F (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, RuntimeObject* ___registrar0, RuntimeObject* ___inputSystem1, String_t* ___name2, uint32_t ___priority3, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager__ctor_m4DDE66FDDE5DB1EE78F75A3882467E0B66ED337F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___registrar0), (&___inputSystem1), (&___name2), (&___priority3), (&___profile4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager__ctor_m4DDE66FDDE5DB1EE78F75A3882467E0B66ED337F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30214));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30215));
	{
		// BaseMixedRealityProfile profile = null) : this(inputSystem, name, priority, profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30216));
		RuntimeObject* L_0 = ___inputSystem1;
		String_t* L_1 = ___name2;
		uint32_t L_2 = ___priority3;
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_3 = ___profile4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30220));
		UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51(__this, L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30220));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30217));
		// Registrar = registrar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30218));
		RuntimeObject* L_4 = ___registrar0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30221));
		BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_inline(__this, L_4, /*hidden argument*/BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30221));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30219));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSystem0), (&___name1), (&___priority2), (&___profile3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager__ctor_mA57C48E6F6FD4490221BDCA6EB6BE5E50C810D51_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30222));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30223));
	{
		// BaseMixedRealityProfile profile = null) : base(inputSystem, name, priority, profile) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30224));
		RuntimeObject* L_0 = ___inputSystem0;
		String_t* L_1 = ___name1;
		uint32_t L_2 = ___priority2;
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_3 = ___profile3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30227));
		IL2CPP_RUNTIME_CLASS_INIT(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_il2cpp_TypeInfo_var);
		BaseInputDeviceManager__ctor_m1746D3A8EBE4F327683713A37AF88FF94969DD1B(__this, L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30227));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30225));
		// BaseMixedRealityProfile profile = null) : base(inputSystem, name, priority, profile) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30226));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager_Update_m99D4BF6A93A272108DA1385BE10780DB6D28C403 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_Update_m99D4BF6A93A272108DA1385BE10780DB6D28C403_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011  V_3;
	memset((&V_3), 0, sizeof(V_3));
	KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_Update_m99D4BF6A93A272108DA1385BE10780DB6D28C403_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30229));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B7_0 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * G_B6_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30230));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30231));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_25();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30253));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30253));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30232));
			// base.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30233));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30254));
			BaseService_Update_mAE9EBAC35F456E318362A34CA0ED90722C6C6F42(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30254));
			// deviceRefreshTimer += Time.unscaledDeltaTime;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30234));
			float L_2 = __this->get_deviceRefreshTimer_23();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30255));
			float L_3 = Time_get_unscaledDeltaTime_mA0AE7A144C88AE8AABB42DF17B0F3F0714BA06B2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30255));
			__this->set_deviceRefreshTimer_23(((float)il2cpp_codegen_add((float)L_2, (float)L_3)));
			// if (deviceRefreshTimer >= DeviceRefreshInterval)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30235));
			float L_4 = __this->get_deviceRefreshTimer_23();
			V_2 = (bool)((((int32_t)((!(((float)L_4) >= ((float)(3.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30236));
			bool L_5 = V_2;
			if (!L_5)
			{
				goto IL_0051;
			}
		}

IL_003d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30237));
			// deviceRefreshTimer = 0.0f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30238));
			__this->set_deviceRefreshTimer_23((0.0f));
			// RefreshDevices();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30239));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30256));
			UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30256));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30240));
		}

IL_0051:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30241));
			// foreach (var controller in ActiveControllers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30242));
			IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
			Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_6 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30257));
			NullCheck(L_6);
			Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011  L_7 = Dictionary_2_GetEnumerator_m8FF1FB6216734271E1D7757714BBF0BBCC63A85C(L_6, /*hidden argument*/Dictionary_2_GetEnumerator_m8FF1FB6216734271E1D7757714BBF0BBCC63A85C_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30257));
			V_3 = L_7;
		}

IL_005d:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30243));
				goto IL_007d;
			}

IL_005f:
			{
				// foreach (var controller in ActiveControllers)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30244));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30258));
				KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  L_8 = Enumerator_get_Current_m580CCFE476343A034A018DC5D713BE06CD47F5C5_inline((Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *)(&V_3), /*hidden argument*/Enumerator_get_Current_m580CCFE476343A034A018DC5D713BE06CD47F5C5_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30258));
				V_4 = L_8;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30245));
				// controller.Value?.UpdateController();
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30246));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30259));
				GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_9 = KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_inline((KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A *)(&V_4), /*hidden argument*/KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30259));
				GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_10 = L_9;
				G_B6_0 = L_10;
				if (L_10)
				{
					G_B7_0 = L_10;
					goto IL_0076;
				}
			}

IL_0073:
			{
				goto IL_007c;
			}

IL_0076:
			{
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30260));
				NullCheck(G_B7_0);
				VirtActionInvoker0::Invoke(30 /* System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController::UpdateController() */, G_B7_0);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30260));
			}

IL_007c:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30247));
			}

IL_007d:
			{
				// foreach (var controller in ActiveControllers)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30248));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30261));
				bool L_11 = Enumerator_MoveNext_mC6E0E3541F0A87B9F9FFDC157E3CE05B68AA1268((Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *)(&V_3), /*hidden argument*/Enumerator_MoveNext_mC6E0E3541F0A87B9F9FFDC157E3CE05B68AA1268_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30261));
				if (L_11)
				{
					goto IL_005f;
				}
			}

IL_0086:
			{
				IL2CPP_LEAVE(0x97, FINALLY_0088);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_0088;
		}

FINALLY_0088:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30249));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30262));
			Enumerator_Dispose_mA9EEA8ACD842AAE42972E735B4ED02DB80DCFAC6((Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *)(&V_3), /*hidden argument*/Enumerator_Dispose_mA9EEA8ACD842AAE42972E735B4ED02DB80DCFAC6_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30262));
			IL2CPP_END_FINALLY(136)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(136)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0x97, IL_0097)
		}

IL_0097:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30250));
			IL2CPP_LEAVE(0xA9, FINALLY_009a);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_009a;
	}

FINALLY_009a:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30263));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30263));
		IL2CPP_END_FINALLY(154)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(154)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xA9, IL_00a9)
	}

IL_00a9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30252));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::Disable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager_Disable_m0FD46FBB69911D57D1C807D96F316C3DA60597F9 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_Disable_m0FD46FBB69911D57D1C807D96F316C3DA60597F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011  V_0;
	memset((&V_0), 0, sizeof(V_0));
	KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_Disable_m0FD46FBB69911D57D1C807D96F316C3DA60597F9_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30264));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30265));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30266));
		// base.Disable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30267));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30283));
		BaseService_Disable_m349524E2ECE37A703BC12D77419612C9162EC92A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30283));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30268));
		// foreach (var genericJoystick in ActiveControllers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30269));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_0 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30284));
		NullCheck(L_0);
		Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011  L_1 = Dictionary_2_GetEnumerator_m8FF1FB6216734271E1D7757714BBF0BBCC63A85C(L_0, /*hidden argument*/Dictionary_2_GetEnumerator_m8FF1FB6216734271E1D7757714BBF0BBCC63A85C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30284));
		V_0 = L_1;
	}

IL_0014:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30270));
			goto IL_0055;
		}

IL_0016:
		{
			// foreach (var genericJoystick in ActiveControllers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30271));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30285));
			KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A  L_2 = Enumerator_get_Current_m580CCFE476343A034A018DC5D713BE06CD47F5C5_inline((Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *)(&V_0), /*hidden argument*/Enumerator_get_Current_m580CCFE476343A034A018DC5D713BE06CD47F5C5_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30285));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30272));
			// if (genericJoystick.Value != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30273));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30286));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_3 = KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_inline((KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30286));
			V_2 = (bool)((!(((RuntimeObject*)(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)L_3) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30274));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0054;
			}
		}

IL_002d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30275));
			// Service?.RaiseSourceLost(genericJoystick.Value.InputSource, genericJoystick.Value);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30276));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30287));
			RuntimeObject* L_5 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30287));
			RuntimeObject* L_6 = L_5;
			G_B4_0 = L_6;
			if (L_6)
			{
				G_B5_0 = L_6;
				goto IL_003a;
			}
		}

IL_0037:
		{
			goto IL_0053;
		}

IL_003a:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30288));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_7 = KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_inline((KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30288));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30289));
			NullCheck(L_7);
			RuntimeObject* L_8 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30289));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30290));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_9 = KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_inline((KeyValuePair_2_tE404EC8DE350193DF1CD0E219CDFA905CEABEB0A *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_m1BF8B00D93D7AEA6D0EDC473224BA928A0238978_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30290));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30291));
			NullCheck(G_B5_0);
			InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(25 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceLost(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B5_0, L_8, L_9);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30291));
		}

IL_0053:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30277));
		}

IL_0054:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30278));
		}

IL_0055:
		{
			// foreach (var genericJoystick in ActiveControllers)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30279));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30292));
			bool L_10 = Enumerator_MoveNext_mC6E0E3541F0A87B9F9FFDC157E3CE05B68AA1268((Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_mC6E0E3541F0A87B9F9FFDC157E3CE05B68AA1268_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30292));
			if (L_10)
			{
				goto IL_0016;
			}
		}

IL_005e:
		{
			IL2CPP_LEAVE(0x6F, FINALLY_0060);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0060;
	}

FINALLY_0060:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30280));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30293));
		Enumerator_Dispose_mA9EEA8ACD842AAE42972E735B4ED02DB80DCFAC6((Enumerator_tF74B0EE05DEB76869C7FCFD3D816529D35324011 *)(&V_0), /*hidden argument*/Enumerator_Dispose_mA9EEA8ACD842AAE42972E735B4ED02DB80DCFAC6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30293));
		IL2CPP_END_FINALLY(96)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(96)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x6F, IL_006f)
	}

IL_006f:
	{
		// ActiveControllers.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30281));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_11 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30294));
		NullCheck(L_11);
		Dictionary_2_Clear_m9FD6C20A778F2D2F0F63681D63EF9DA51AC5F1A2(L_11, /*hidden argument*/Dictionary_2_Clear_m9FD6C20A778F2D2F0F63681D63EF9DA51AC5F1A2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30294));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30282));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController[] Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetActiveControllers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* UnityJoystickManager_GetActiveControllers_m0F3F99F4414281BB0131F41FF7A33D197D2951F1 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_GetActiveControllers_m0F3F99F4414281BB0131F41FF7A33D197D2951F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* V_2 = NULL;
	IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* V_3 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_GetActiveControllers_m0F3F99F4414281BB0131F41FF7A33D197D2951F1_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30295));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30296));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30297));
		// using (GetActiveControllersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30298));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_GetActiveControllersPerfMarker_26();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30304));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30304));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30299));
		// IMixedRealityController[] controllers = ActiveControllers.Values.ToArray<IMixedRealityController>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30300));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_2 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30305));
		NullCheck(L_2);
		ValueCollection_tBE1C1A951F0AC80402C333F64776C64B2F209A5A * L_3 = Dictionary_2_get_Values_m8B00A65ACFC01906741611CB7601750B9BCB2CDF(L_2, /*hidden argument*/Dictionary_2_get_Values_m8B00A65ACFC01906741611CB7601750B9BCB2CDF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30305));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30306));
		IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* L_4 = Enumerable_ToArray_TisIMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_m4B0F45E6D631135CAE99179B9ABEC8C860AB0C44(L_3, /*hidden argument*/Enumerable_ToArray_TisIMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_m4B0F45E6D631135CAE99179B9ABEC8C860AB0C44_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30306));
		V_2 = L_4;
		// return controllers;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30301));
		IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* L_5 = V_2;
		V_3 = L_5;
		IL2CPP_LEAVE(0x33, FINALLY_0024);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0024;
	}

FINALLY_0024:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30307));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30307));
		IL2CPP_END_FINALLY(36)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(36)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x33, IL_0033)
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30303));
		IMixedRealityControllerU5BU5D_tF705FA9DF924DC15F2335921A8A733B011BE9C81* L_6 = V_3;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::RefreshDevices()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * V_8 = NULL;
	bool V_9 = false;
	bool V_10 = false;
	int32_t V_11 = 0;
	bool V_12 = false;
	bool V_13 = false;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * V_14 = NULL;
	bool V_15 = false;
	bool V_16 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_5), (&V_8), (&V_11), (&V_14));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_RefreshDevices_mB27746F6500421C0E55CDC49469863F337131439_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30308));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30309));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B6_0 = 0;
	RuntimeObject* G_B14_0 = NULL;
	RuntimeObject* G_B13_0 = NULL;
	RuntimeObject* G_B28_0 = NULL;
	RuntimeObject* G_B27_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30310));
		// using (RefreshDevicesPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30311));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_RefreshDevicesPerfMarker_27();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30369));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30369));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30312));
			// var joystickNames = UInput.GetJoystickNames();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30313));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30370));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_2 = Input_GetJoystickNames_m99559CDAA21A390D9D10E9B82F65397C32424C32(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30370));
			V_2 = L_2;
			// if (joystickNames.Length <= 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30314));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_3 = V_2;
			NullCheck(L_3);
			V_3 = (bool)((((int32_t)(((RuntimeArray*)L_3)->max_length)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30315));
			bool L_4 = V_3;
			if (!L_4)
			{
				goto IL_0025;
			}
		}

IL_001f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30316));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30317));
			IL2CPP_LEAVE(0x17E, FINALLY_016f);
		}

IL_0025:
		{
			// if (lastDeviceList != null && joystickNames.Length == lastDeviceList.Length)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30318));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = __this->get_lastDeviceList_24();
			if (!L_5)
			{
				goto IL_003c;
			}
		}

IL_002d:
		{
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = V_2;
			NullCheck(L_6);
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = __this->get_lastDeviceList_24();
			NullCheck(L_7);
			G_B6_0 = ((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_6)->max_length))))) == ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_7)->max_length))))))? 1 : 0);
			goto IL_003d;
		}

IL_003c:
		{
			G_B6_0 = 0;
		}

IL_003d:
		{
			V_4 = (bool)G_B6_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30319));
			bool L_8 = V_4;
			if (!L_8)
			{
				goto IL_00ec;
			}
		}

IL_0046:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30320));
			// for (int i = 0; i < lastDeviceList.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30321));
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30322));
			goto IL_00d6;
		}

IL_004f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30323));
			// if (joystickNames[i].Equals(lastDeviceList[i])) { continue; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30324));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = V_2;
			int32_t L_10 = V_5;
			NullCheck(L_9);
			int32_t L_11 = L_10;
			String_t* L_12 = (L_9)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = __this->get_lastDeviceList_24();
			int32_t L_14 = V_5;
			NullCheck(L_13);
			int32_t L_15 = L_14;
			String_t* L_16 = (L_13)->GetAt(static_cast<il2cpp_array_size_t>(L_15));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30371));
			NullCheck(L_12);
			bool L_17 = String_Equals_m9C4D78DFA0979504FE31429B64A4C26DF48020D1(L_12, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30371));
			V_6 = L_17;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30325));
			bool L_18 = V_6;
			if (!L_18)
			{
				goto IL_006b;
			}
		}

IL_0068:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30326));
			// if (joystickNames[i].Equals(lastDeviceList[i])) { continue; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30327));
			goto IL_00d0;
		}

IL_006b:
		{
			// if (ActiveControllers.ContainsKey(lastDeviceList[i]))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30328));
			IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
			Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_19 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = __this->get_lastDeviceList_24();
			int32_t L_21 = V_5;
			NullCheck(L_20);
			int32_t L_22 = L_21;
			String_t* L_23 = (L_20)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30372));
			NullCheck(L_19);
			bool L_24 = Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571(L_19, L_23, /*hidden argument*/Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30372));
			V_7 = L_24;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30329));
			bool L_25 = V_7;
			if (!L_25)
			{
				goto IL_00cf;
			}
		}

IL_0084:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30330));
			// var controller = GetOrAddController(lastDeviceList[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30331));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_26 = __this->get_lastDeviceList_24();
			int32_t L_27 = V_5;
			NullCheck(L_26);
			int32_t L_28 = L_27;
			String_t* L_29 = (L_26)->GetAt(static_cast<il2cpp_array_size_t>(L_28));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30373));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_30 = VirtFuncInvoker1< GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *, String_t* >::Invoke(42 /* Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetOrAddController(System.String) */, __this, L_29);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30373));
			V_8 = L_30;
			// if (controller != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30332));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_31 = V_8;
			V_9 = (bool)((!(((RuntimeObject*)(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)L_31) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30333));
			bool L_32 = V_9;
			if (!L_32)
			{
				goto IL_00be;
			}
		}

IL_00a1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30334));
			// Service?.RaiseSourceLost(controller.InputSource, controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30335));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30374));
			RuntimeObject* L_33 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30374));
			RuntimeObject* L_34 = L_33;
			G_B13_0 = L_34;
			if (L_34)
			{
				G_B14_0 = L_34;
				goto IL_00ae;
			}
		}

IL_00ab:
		{
			goto IL_00bd;
		}

IL_00ae:
		{
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_35 = V_8;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30375));
			NullCheck(L_35);
			RuntimeObject* L_36 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30375));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_37 = V_8;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30376));
			NullCheck(G_B14_0);
			InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(25 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceLost(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B14_0, L_36, L_37);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30376));
		}

IL_00bd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30336));
		}

IL_00be:
		{
			// RemoveController(lastDeviceList[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30337));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_38 = __this->get_lastDeviceList_24();
			int32_t L_39 = V_5;
			NullCheck(L_38);
			int32_t L_40 = L_39;
			String_t* L_41 = (L_38)->GetAt(static_cast<il2cpp_array_size_t>(L_40));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30377));
			VirtActionInvoker1< String_t* >::Invoke(43 /* System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::RemoveController(System.String) */, __this, L_41);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30377));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30338));
		}

IL_00cf:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30339));
		}

IL_00d0:
		{
			// for (int i = 0; i < lastDeviceList.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30340));
			int32_t L_42 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
		}

IL_00d6:
		{
			// for (int i = 0; i < lastDeviceList.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30341));
			int32_t L_43 = V_5;
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_44 = __this->get_lastDeviceList_24();
			NullCheck(L_44);
			V_10 = (bool)((((int32_t)L_43) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_44)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30342));
			bool L_45 = V_10;
			if (L_45)
			{
				goto IL_004f;
			}
		}

IL_00eb:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30343));
		}

IL_00ec:
		{
			// for (var i = 0; i < joystickNames.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30344));
			V_11 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30345));
			goto IL_0158;
		}

IL_00f1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30346));
			// if (string.IsNullOrEmpty(joystickNames[i]))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30347));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_46 = V_2;
			int32_t L_47 = V_11;
			NullCheck(L_46);
			int32_t L_48 = L_47;
			String_t* L_49 = (L_46)->GetAt(static_cast<il2cpp_array_size_t>(L_48));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30378));
			bool L_50 = String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229(L_49, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30378));
			V_12 = L_50;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30348));
			bool L_51 = V_12;
			if (!L_51)
			{
				goto IL_0104;
			}
		}

IL_0101:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30349));
			// continue;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30350));
			goto IL_0152;
		}

IL_0104:
		{
			// if (!ActiveControllers.ContainsKey(joystickNames[i]))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30351));
			IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
			Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_52 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_53 = V_2;
			int32_t L_54 = V_11;
			NullCheck(L_53);
			int32_t L_55 = L_54;
			String_t* L_56 = (L_53)->GetAt(static_cast<il2cpp_array_size_t>(L_55));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30379));
			NullCheck(L_52);
			bool L_57 = Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571(L_52, L_56, /*hidden argument*/Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30379));
			V_13 = (bool)((((int32_t)L_57) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30352));
			bool L_58 = V_13;
			if (!L_58)
			{
				goto IL_0151;
			}
		}

IL_011b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30353));
			// var controller = GetOrAddController(joystickNames[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30354));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_59 = V_2;
			int32_t L_60 = V_11;
			NullCheck(L_59);
			int32_t L_61 = L_60;
			String_t* L_62 = (L_59)->GetAt(static_cast<il2cpp_array_size_t>(L_61));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30380));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_63 = VirtFuncInvoker1< GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *, String_t* >::Invoke(42 /* Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetOrAddController(System.String) */, __this, L_62);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30380));
			V_14 = L_63;
			// if (controller != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30355));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_64 = V_14;
			V_15 = (bool)((!(((RuntimeObject*)(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)L_64) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30356));
			bool L_65 = V_15;
			if (!L_65)
			{
				goto IL_0150;
			}
		}

IL_0133:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30357));
			// Service?.RaiseSourceDetected(controller.InputSource, controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30358));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30381));
			RuntimeObject* L_66 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30381));
			RuntimeObject* L_67 = L_66;
			G_B27_0 = L_67;
			if (L_67)
			{
				G_B28_0 = L_67;
				goto IL_0140;
			}
		}

IL_013d:
		{
			goto IL_014f;
		}

IL_0140:
		{
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_68 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30382));
			NullCheck(L_68);
			RuntimeObject* L_69 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_68, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30382));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_70 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30383));
			NullCheck(G_B28_0);
			InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(24 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceDetected(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B28_0, L_69, L_70);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30383));
		}

IL_014f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30359));
		}

IL_0150:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30360));
		}

IL_0151:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30361));
		}

IL_0152:
		{
			// for (var i = 0; i < joystickNames.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30362));
			int32_t L_71 = V_11;
			V_11 = ((int32_t)il2cpp_codegen_add((int32_t)L_71, (int32_t)1));
		}

IL_0158:
		{
			// for (var i = 0; i < joystickNames.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30363));
			int32_t L_72 = V_11;
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_73 = V_2;
			NullCheck(L_73);
			V_16 = (bool)((((int32_t)L_72) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_73)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30364));
			bool L_74 = V_16;
			if (L_74)
			{
				goto IL_00f1;
			}
		}

IL_0165:
		{
			// lastDeviceList = joystickNames;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30365));
			StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_75 = V_2;
			__this->set_lastDeviceList_24(L_75);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30366));
			IL2CPP_LEAVE(0x17E, FINALLY_016f);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_016f;
	}

FINALLY_016f:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30367));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30384));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30384));
		IL2CPP_END_FINALLY(367)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(367)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x17E, IL_017e)
	}

IL_017e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30368));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.UnityInput.GenericJoystickController Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetOrAddController(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * UnityJoystickManager_GetOrAddController_m2A788FF049103104D007F7C9018F4D9EB0C862A9 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, String_t* ___joystickName0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_GetOrAddController_m2A788FF049103104D007F7C9018F4D9EB0C862A9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Type_t * V_2 = NULL;
	RuntimeObject* V_3 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * V_4 = NULL;
	bool V_5 = false;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * V_6 = NULL;
	GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * V_7 = NULL;
	int32_t V_8 = 0;
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joystickName0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_4), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_GetOrAddController_m2A788FF049103104D007F7C9018F4D9EB0C862A9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30385));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30386));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 4);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B12_0 = NULL;
	RuntimeObject* G_B11_0 = NULL;
	RuntimeObject* G_B13_0 = NULL;
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30387));
		// using (GetOrAddControllerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30388));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_GetOrAddControllerPerfMarker_28();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30414));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30414));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30389));
			// if (ActiveControllers.ContainsKey(joystickName))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30390));
			IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
			Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_2 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
			String_t* L_3 = ___joystickName0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30415));
			NullCheck(L_2);
			bool L_4 = Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571(L_2, L_3, /*hidden argument*/Dictionary_2_ContainsKey_m5233070FF28299FBBDE97FB048A2201DAA9E9571_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30415));
			V_5 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30391));
			bool L_5 = V_5;
			if (!L_5)
			{
				goto IL_0043;
			}
		}

IL_0021:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30392));
			// var controller = ActiveControllers[joystickName];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30393));
			IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
			Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_6 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
			String_t* L_7 = ___joystickName0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30416));
			NullCheck(L_6);
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_8 = Dictionary_2_get_Item_m0696A60D09B1FAA461A45B2C28B3FB371C4F941C(L_6, L_7, /*hidden argument*/Dictionary_2_get_Item_m0696A60D09B1FAA461A45B2C28B3FB371C4F941C_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30416));
			V_6 = L_8;
			// Debug.Assert(controller != null);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30394));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_9 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30417));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((!(((RuntimeObject*)(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)L_9) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30417));
			// return controller;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30395));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_10 = V_6;
			V_7 = L_10;
			IL2CPP_LEAVE(0x12A, FINALLY_011b);
		}

IL_0043:
		{
			// switch (GetCurrentControllerType(joystickName))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30396));
			String_t* L_11 = ___joystickName0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30418));
			int32_t L_12 = VirtFuncInvoker1< int32_t, String_t* >::Invoke(44 /* Microsoft.MixedReality.Toolkit.Input.SupportedControllerType Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetCurrentControllerType(System.String) */, __this, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30418));
			V_8 = L_12;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30397));
			int32_t L_13 = V_8;
			if ((((int32_t)L_13) == ((int32_t)((int32_t)64))))
			{
				goto IL_0067;
			}
		}

IL_0052:
		{
			goto IL_0054;
		}

IL_0054:
		{
			int32_t L_14 = V_8;
			if ((((int32_t)L_14) == ((int32_t)((int32_t)128))))
			{
				goto IL_0074;
			}
		}

IL_005d:
		{
			goto IL_005f;
		}

IL_005f:
		{
			// return null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30398));
			V_7 = (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)NULL;
			IL2CPP_LEAVE(0x12A, FINALLY_011b);
		}

IL_0067:
		{
			// controllerType = typeof(GenericJoystickController);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30399));
			RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_15 = { reinterpret_cast<intptr_t> (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_0_0_0_var) };
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30419));
			IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
			Type_t * L_16 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30419));
			V_2 = L_16;
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30400));
			goto IL_0081;
		}

IL_0074:
		{
			// controllerType = typeof(XboxController);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30401));
			RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_17 = { reinterpret_cast<intptr_t> (XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD_0_0_0_var) };
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30420));
			IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
			Type_t * L_18 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30420));
			V_2 = L_18;
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30402));
			goto IL_0081;
		}

IL_0081:
		{
			// IMixedRealityInputSource inputSource = Service?.RequestNewGenericInputSource($"{controllerType.Name} Controller", sourceType: InputSourceType.Controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30403));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30421));
			RuntimeObject* L_19 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30421));
			RuntimeObject* L_20 = L_19;
			G_B11_0 = L_20;
			if (L_20)
			{
				G_B12_0 = L_20;
				goto IL_008e;
			}
		}

IL_008a:
		{
			G_B13_0 = ((RuntimeObject*)(NULL));
			goto IL_00a5;
		}

IL_008e:
		{
			Type_t * L_21 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30422));
			NullCheck(L_21);
			String_t* L_22 = VirtFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_21);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30422));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30423));
			String_t* L_23 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_22, _stringLiteral8A568A1FB9B8EC33F67F2DE8407E314209A38D0C, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30423));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30424));
			NullCheck(G_B12_0);
			RuntimeObject* L_24 = InterfaceFuncInvoker3< RuntimeObject*, String_t*, IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*, int32_t >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RequestNewGenericInputSource(System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[],Microsoft.MixedReality.Toolkit.Input.InputSourceType) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B12_0, L_23, (IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)NULL, 2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30424));
			G_B13_0 = L_24;
		}

IL_00a5:
		{
			V_3 = G_B13_0;
			// GenericJoystickController detectedController = Activator.CreateInstance(controllerType, TrackingState.NotTracked, Handedness.None, inputSource, null) as GenericJoystickController;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30404));
			Type_t * L_25 = V_2;
			ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_26 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)SZArrayNew(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A_il2cpp_TypeInfo_var, (uint32_t)4);
			ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_27 = L_26;
			int32_t L_28 = ((int32_t)1);
			RuntimeObject * L_29 = Box(TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA_il2cpp_TypeInfo_var, &L_28);
			NullCheck(L_27);
			ArrayElementTypeCheck (L_27, L_29);
			(L_27)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject *)L_29);
			ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_30 = L_27;
			uint8_t L_31 = ((uint8_t)0);
			RuntimeObject * L_32 = Box(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_il2cpp_TypeInfo_var, &L_31);
			NullCheck(L_30);
			ArrayElementTypeCheck (L_30, L_32);
			(L_30)->SetAt(static_cast<il2cpp_array_size_t>(1), (RuntimeObject *)L_32);
			ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_33 = L_30;
			RuntimeObject* L_34 = V_3;
			NullCheck(L_33);
			ArrayElementTypeCheck (L_33, L_34);
			(L_33)->SetAt(static_cast<il2cpp_array_size_t>(2), (RuntimeObject *)L_34);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30425));
			RuntimeObject * L_35 = Activator_CreateInstance_mEE50708E1E8AAD4E5021A2FFDB992DDF65727E17(L_25, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30425));
			V_4 = ((GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)IsInstClass((RuntimeObject*)L_35, GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var));
			// if (detectedController == null || !detectedController.Enabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30405));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_36 = V_4;
			if (!L_36)
			{
				goto IL_00df;
			}
		}

IL_00d3:
		{
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_37 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30426));
			NullCheck(L_37);
			bool L_38 = BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78_inline(L_37, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30426));
			G_B16_0 = ((((int32_t)L_38) == ((int32_t)0))? 1 : 0);
			goto IL_00e0;
		}

IL_00df:
		{
			G_B16_0 = 1;
		}

IL_00e0:
		{
			V_9 = (bool)G_B16_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30406));
			bool L_39 = V_9;
			if (!L_39)
			{
				goto IL_0107;
			}
		}

IL_00e6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30407));
			// Debug.LogError($"Failed to create {controllerType.Name} controller");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30408));
			Type_t * L_40 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30427));
			NullCheck(L_40);
			String_t* L_41 = VirtFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_40);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30427));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30428));
			String_t* L_42 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralBFC251F0EE7E738E9803C51B96A0610EF66A88F3, L_41, _stringLiteral41DC700A22938E6F7AF528592CEA8E869DAC445E, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30428));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30429));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30429));
			// return null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30409));
			V_7 = (GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 *)NULL;
			IL2CPP_LEAVE(0x12A, FINALLY_011b);
		}

IL_0107:
		{
			// ActiveControllers.Add(joystickName, detectedController);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30410));
			IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
			Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_43 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
			String_t* L_44 = ___joystickName0;
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_45 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30430));
			NullCheck(L_43);
			Dictionary_2_Add_m9C52F46BB4751273EEB9FBE1CB2B1E35D3540A7C(L_43, L_44, L_45, /*hidden argument*/Dictionary_2_Add_m9C52F46BB4751273EEB9FBE1CB2B1E35D3540A7C_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30430));
			// return detectedController;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30411));
			GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_46 = V_4;
			V_7 = L_46;
			IL2CPP_LEAVE(0x12A, FINALLY_011b);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_011b;
	}

FINALLY_011b:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30412));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30431));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30431));
		IL2CPP_END_FINALLY(283)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(283)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x12A, IL_012a)
	}

IL_012a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30413));
		GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845 * L_47 = V_7;
		return L_47;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::RemoveController(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager_RemoveController_m1F45A0CD261B3AE0BC040D7B90A280196F2A5601 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, String_t* ___joystickName0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_RemoveController_m1F45A0CD261B3AE0BC040D7B90A280196F2A5601_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joystickName0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_RemoveController_m1F45A0CD261B3AE0BC040D7B90A280196F2A5601_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30432));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30433));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30434));
		// ActiveControllers.Remove(joystickName);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30435));
		IL2CPP_RUNTIME_CLASS_INIT(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var);
		Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_0 = ((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->get_ActiveControllers_22();
		String_t* L_1 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30437));
		NullCheck(L_0);
		Dictionary_2_Remove_mE0031EE54F04BC349BAE2FCFC9FCDD0FF4FD8E3C(L_0, L_1, /*hidden argument*/Dictionary_2_Remove_mE0031EE54F04BC349BAE2FCFC9FCDD0FF4FD8E3C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30437));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30436));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SupportedControllerType Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::GetCurrentControllerType(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t UnityJoystickManager_GetCurrentControllerType_m81A64D49CD656F5C4F94800D0732E16CB5DBD6D1 (UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2 * __this, String_t* ___joystickName0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager_GetCurrentControllerType_m81A64D49CD656F5C4F94800D0732E16CB5DBD6D1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joystickName0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager_GetCurrentControllerType_m81A64D49CD656F5C4F94800D0732E16CB5DBD6D1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30438));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30439));
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30440));
		// if (string.IsNullOrEmpty(joystickName) ||
		//     joystickName.Contains("OpenVR") || // This catches input sources from legacy OpenVR
		//     joystickName.Contains("OpenXR") || // This catches input sources from OpenXR Plugin
		//     joystickName.Contains("Oculus") || // This catches controllers from Oculus XR Plugin
		//     joystickName.Contains("Hand - ") || // This catches HoloLens hands from Windows XR Plugin
		//     joystickName.Contains("Spatial")) // This catches controllers from Windows XR Plugin and all input sources from legacy WMR
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30441));
		String_t* L_0 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30452));
		bool L_1 = String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30452));
		if (L_1)
		{
			goto IL_004a;
		}
	}
	{
		String_t* L_2 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30453));
		NullCheck(L_2);
		bool L_3 = String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B(L_2, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30453));
		if (L_3)
		{
			goto IL_004a;
		}
	}
	{
		String_t* L_4 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30454));
		NullCheck(L_4);
		bool L_5 = String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B(L_4, _stringLiteral5CB44880126DDB804A069EE4DFAD186E290CC2CD, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30454));
		if (L_5)
		{
			goto IL_004a;
		}
	}
	{
		String_t* L_6 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30455));
		NullCheck(L_6);
		bool L_7 = String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B(L_6, _stringLiteral51984F4C8A58B2412727FEC81BE236DB0C1BF8A2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30455));
		if (L_7)
		{
			goto IL_004a;
		}
	}
	{
		String_t* L_8 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30456));
		NullCheck(L_8);
		bool L_9 = String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B(L_8, _stringLiteralF23BF77E29407B6FCD302C93F0299BC519EAFE31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30456));
		if (L_9)
		{
			goto IL_004a;
		}
	}
	{
		String_t* L_10 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30457));
		NullCheck(L_10);
		bool L_11 = String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B(L_10, _stringLiteral729AC18CABA43BF0EC0D3CF1D034733763675EBB, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30457));
		G_B7_0 = ((int32_t)(L_11));
		goto IL_004b;
	}

IL_004a:
	{
		G_B7_0 = 1;
	}

IL_004b:
	{
		V_0 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30442));
		bool L_12 = V_0;
		if (!L_12)
		{
			goto IL_0054;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30443));
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30444));
		V_1 = 0;
		goto IL_0087;
	}

IL_0054:
	{
		// if (joystickName.ToLower().Contains("xbox"))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30445));
		String_t* L_13 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30458));
		NullCheck(L_13);
		String_t* L_14 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30459));
		NullCheck(L_14);
		bool L_15 = String_Contains_m4488034AF8CB3EEA9A205EB8A1F25D438FF8704B(L_14, _stringLiteral682E113198B41B8B3429A7BA36840E99C886CBA6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30459));
		V_2 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30446));
		bool L_16 = V_2;
		if (!L_16)
		{
			goto IL_0071;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30447));
		// return SupportedControllerType.Xbox;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30448));
		V_1 = ((int32_t)128);
		goto IL_0087;
	}

IL_0071:
	{
		// Debug.Log($"{joystickName} does not have a defined controller type, falling back to generic controller type");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30449));
		String_t* L_17 = ___joystickName0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30460));
		String_t* L_18 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_17, _stringLiteralC577C6AB98A4D18F7740145FB4769D96C375A2B2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30460));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30461));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30461));
		// return SupportedControllerType.GenericUnity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30450));
		V_1 = ((int32_t)64);
		goto IL_0087;
	}

IL_0087:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30451));
		int32_t L_19 = V_1;
		return L_19;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityJoystickManager::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityJoystickManager__cctor_mB1ED339A9A8A01FEDED23C546C6617728BCD1C69 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityJoystickManager__cctor_mB1ED339A9A8A01FEDED23C546C6617728BCD1C69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityJoystickManager__cctor_mB1ED339A9A8A01FEDED23C546C6617728BCD1C69_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30462));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30463));
	{
		// protected static readonly Dictionary<string, GenericJoystickController> ActiveControllers = new Dictionary<string, GenericJoystickController>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30464));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30469));
		Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 * L_0 = (Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5 *)il2cpp_codegen_object_new(Dictionary_2_tD64D4A3D6AE56F507A72F08E8C9CAF0AFC356CD5_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m6AFD8CFDF30BA488E5D39AD0F76C0694353487B8(L_0, /*hidden argument*/Dictionary_2__ctor_m6AFD8CFDF30BA488E5D39AD0F76C0694353487B8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30469));
		((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->set_ActiveControllers_22(L_0);
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] UnityJoystickManager.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30465));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30470));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral7728F0C88C76D8DD950F1C815CE0B63B916A017F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30470));
		((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_25(L_1);
		// private static readonly ProfilerMarker GetActiveControllersPerfMarker = new ProfilerMarker("[MRTK] UnityJoystickManager.GetActiveControllers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30466));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30471));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteralE6F6FF708C4924DF021F6ADE19E5004ECF5D13E9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30471));
		((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->set_GetActiveControllersPerfMarker_26(L_2);
		// private static readonly ProfilerMarker RefreshDevicesPerfMarker = new ProfilerMarker("[MRTK] UnityJoystickManager.RefreshDevices");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30467));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30472));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteral4B8C20D6E86130A8812D91631E57BE39DA04F0B2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30472));
		((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->set_RefreshDevicesPerfMarker_27(L_3);
		// private static readonly ProfilerMarker GetOrAddControllerPerfMarker = new ProfilerMarker("[MRTK] UnityJoystickManager.GetOrAddController");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30468));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30473));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral3DCF82ABAFAB13E329B400F4BA9711EE79CB4683, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30473));
		((UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_StaticFields*)il2cpp_codegen_static_fields_for(UnityJoystickManager_tBAEEC1A13276CBD19FAE5BE2337C63D2EB9375C2_il2cpp_TypeInfo_var))->set_GetOrAddControllerPerfMarker_28(L_4);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30474));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30475));
	{
		// public float MaxTapContactTime { get; set; } = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30476));
		__this->set_U3CMaxTapContactTimeU3Ek__BackingField_12((0.5f));
		// public float ManipulationThreshold { get; set; } = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30477));
		__this->set_U3CManipulationThresholdU3Ek__BackingField_13((5.0f));
		// public float Lifetime { get; private set; } = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30478));
		__this->set_U3CLifetimeU3Ek__BackingField_16((0.0f));
		// private MixedRealityPose lastPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30479));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30484));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30484));
		__this->set_lastPose_22(L_0);
		// private bool isNewController = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30480));
		__this->set_isNewController_23((bool)0);
		// : base(trackingState, controllerHandedness, inputSource, interactions, new TouchScreenDefinition())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30481));
		int32_t L_1 = ___trackingState0;
		uint8_t L_2 = ___controllerHandedness1;
		RuntimeObject* L_3 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_4 = ___interactions3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30485));
		TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482 * L_5 = (TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482 *)il2cpp_codegen_object_new(TouchScreenDefinition_t4884EFB67448CFC6FCFA50E0D0F88AC9B2C13482_il2cpp_TypeInfo_var);
		TouchScreenDefinition__ctor_m1D2E4923DDD7B89F1DAB2A08F206611A8F11251E(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30485));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30486));
		BaseController__ctor_m6B509BCC8DF752AD27011E3C23E91DFB17C8F6AE(__this, L_1, L_2, L_3, L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30486));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30482));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30483));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_MaxTapContactTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30487));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30488));
	{
		// public float MaxTapContactTime { get; set; } = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30489));
		float L_0 = __this->get_U3CMaxTapContactTimeU3Ek__BackingField_12();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_MaxTapContactTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_set_MaxTapContactTime_mD21DB0072711AD637DCC28D89C4F4A811FEBE19B (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_MaxTapContactTime_mD21DB0072711AD637DCC28D89C4F4A811FEBE19B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_MaxTapContactTime_mD21DB0072711AD637DCC28D89C4F4A811FEBE19B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30490));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30491));
	{
		// public float MaxTapContactTime { get; set; } = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30492));
		float L_0 = ___value0;
		__this->set_U3CMaxTapContactTimeU3Ek__BackingField_12(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_ManipulationThreshold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30493));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30494));
	{
		// public float ManipulationThreshold { get; set; } = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30495));
		float L_0 = __this->get_U3CManipulationThresholdU3Ek__BackingField_13();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_ManipulationThreshold(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_set_ManipulationThreshold_mC5D064139A6E5C1D3C9671707F1F239B270D003B (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_ManipulationThreshold_mC5D064139A6E5C1D3C9671707F1F239B270D003B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_ManipulationThreshold_mC5D064139A6E5C1D3C9671707F1F239B270D003B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30496));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30497));
	{
		// public float ManipulationThreshold { get; set; } = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30498));
		float L_0 = ___value0;
		__this->set_U3CManipulationThresholdU3Ek__BackingField_13(L_0);
		return;
	}
}
// UnityEngine.Touch Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_TouchData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30499));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30500));
	{
		// public Touch TouchData { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30501));
		Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_0 = __this->get_U3CTouchDataU3Ek__BackingField_14();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_TouchData(UnityEngine.Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30503));
	{
		// public Touch TouchData { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30504));
		Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_0 = ___value0;
		__this->set_U3CTouchDataU3Ek__BackingField_14(L_0);
		return;
	}
}
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_ScreenPointRay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  UnityTouchController_get_ScreenPointRay_mB8C75CA782463EB0AF62EBA1E7C4E9674B17C12D (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_ScreenPointRay_mB8C75CA782463EB0AF62EBA1E7C4E9674B17C12D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_ScreenPointRay_mB8C75CA782463EB0AF62EBA1E7C4E9674B17C12D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30505));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30506));
	{
		// public Ray ScreenPointRay { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30507));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = __this->get_U3CScreenPointRayU3Ek__BackingField_15();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_ScreenPointRay(UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30508));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30509));
	{
		// public Ray ScreenPointRay { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30510));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = ___value0;
		__this->set_U3CScreenPointRayU3Ek__BackingField_15(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::get_Lifetime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30511));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30512));
	{
		// public float Lifetime { get; private set; } = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30513));
		float L_0 = __this->get_U3CLifetimeU3Ek__BackingField_16();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::set_Lifetime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30514));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30515));
	{
		// public float Lifetime { get; private set; } = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30516));
		float L_0 = ___value0;
		__this->set_U3CLifetimeU3Ek__BackingField_16(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::SetupDefaultInteractions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_SetupDefaultInteractions_m23A9AE8A93B27241041303B745FE57964DED5674 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_SetupDefaultInteractions_m23A9AE8A93B27241041303B745FE57964DED5674_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* V_1 = NULL;
	int32_t V_2 = 0;
	MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  V_3;
	memset((&V_3), 0, sizeof(V_3));
	int32_t V_4 = 0;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_SetupDefaultInteractions_m23A9AE8A93B27241041303B745FE57964DED5674_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30517));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30518));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * G_B3_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30519));
		// base.SetupDefaultInteractions();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30520));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30541));
		BaseController_SetupDefaultInteractions_mA62F23BA33A0C35AD25BF4F19363CAAE853DD2A2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30541));
		// if (CoreServices.InputSystem?.InputSystemProfile.GesturesProfile != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30521));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30542));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30542));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_0014;
		}
	}
	{
		G_B3_0 = ((MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 *)(NULL));
		goto IL_001e;
	}

IL_0014:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30543));
		NullCheck(G_B2_0);
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_2 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30543));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30544));
		NullCheck(L_2);
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_3 = MixedRealityInputSystemProfile_get_GesturesProfile_mA8F275BA8A5AE96D3A95350F698A7343D72E5129(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30544));
		G_B3_0 = L_3;
	}

IL_001e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30545));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B3_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30545));
		V_0 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30522));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0092;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30523));
		// var gestures = CoreServices.InputSystem.InputSystemProfile.GesturesProfile.Gestures;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30524));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30546));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_6 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30546));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30547));
		NullCheck(L_6);
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_7 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30547));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30548));
		NullCheck(L_7);
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_8 = MixedRealityInputSystemProfile_get_GesturesProfile_mA8F275BA8A5AE96D3A95350F698A7343D72E5129(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30548));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30549));
		NullCheck(L_8);
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_9 = MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30549));
		V_1 = L_9;
		// for (int i = 0; i < gestures.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30525));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30526));
		goto IL_0085;
	}

IL_0042:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30527));
		// var gesture = gestures[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30528));
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_10 = V_1;
		int32_t L_11 = V_2;
		NullCheck(L_10);
		int32_t L_12 = L_11;
		MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  L_13 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		V_3 = L_13;
		// switch (gesture.GestureType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30529));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30550));
		int32_t L_14 = MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30550));
		V_4 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30530));
		int32_t L_15 = V_4;
		if ((((int32_t)L_15) == ((int32_t)1)))
		{
			goto IL_0062;
		}
	}
	{
		goto IL_005b;
	}

IL_005b:
	{
		int32_t L_16 = V_4;
		if ((((int32_t)L_16) == ((int32_t)3)))
		{
			goto IL_0071;
		}
	}
	{
		goto IL_0080;
	}

IL_0062:
	{
		// holdingAction = gesture.Action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30531));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30551));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_17 = MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30551));
		__this->set_holdingAction_18(L_17);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30532));
		goto IL_0080;
	}

IL_0071:
	{
		// manipulationAction = gesture.Action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30533));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30552));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_18 = MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30552));
		__this->set_manipulationAction_20(L_18);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30534));
		goto IL_0080;
	}

IL_0080:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30535));
		// for (int i = 0; i < gestures.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30536));
		int32_t L_19 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1));
	}

IL_0085:
	{
		// for (int i = 0; i < gestures.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30537));
		int32_t L_20 = V_2;
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_21 = V_1;
		NullCheck(L_21);
		V_5 = (bool)((((int32_t)L_20) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30538));
		bool L_22 = V_5;
		if (L_22)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30539));
	}

IL_0092:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30540));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::StartTouch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30553));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30554));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30555));
		// isNewController = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30556));
		__this->set_isNewController_23((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30557));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30558));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30559));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30560));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30561));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_24();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30621));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30621));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30562));
			// var inputSystem = CoreServices.InputSystem;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30563));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30622));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30622));
			V_2 = L_2;
			// if (inputSystem == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30564));
			RuntimeObject* L_3 = V_2;
			V_3 = (bool)((((RuntimeObject*)(RuntimeObject*)L_3) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30565));
			bool L_4 = V_3;
			if (!L_4)
			{
				goto IL_0024;
			}
		}

IL_001e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30566));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30567));
			IL2CPP_LEAVE(0x2C3, FINALLY_02b4);
		}

IL_0024:
		{
			// if (isNewController)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30568));
			bool L_5 = __this->get_isNewController_23();
			V_4 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30569));
			bool L_6 = V_4;
			if (!L_6)
			{
				goto IL_0093;
			}
		}

IL_0030:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30570));
			// isNewController = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30571));
			__this->set_isNewController_23((bool)0);
			// inputSystem.RaiseOnInputDown(InputSource, Handedness.None, Interactions[2].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30572));
			RuntimeObject* L_7 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30623));
			RuntimeObject* L_8 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30623));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30624));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_9 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30624));
			NullCheck(L_9);
			int32_t L_10 = 2;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_11 = (L_9)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30625));
			NullCheck(L_11);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_12 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30625));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30626));
			NullCheck(L_7);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_7, L_8, 0, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30626));
			// inputSystem.RaisePointerDown(InputSource.Pointers[0], Interactions[2].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30573));
			RuntimeObject* L_13 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30627));
			RuntimeObject* L_14 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30627));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30628));
			NullCheck(L_14);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_15 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30628));
			NullCheck(L_15);
			int32_t L_16 = 0;
			RuntimeObject* L_17 = (L_15)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30629));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_18 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30629));
			NullCheck(L_18);
			int32_t L_19 = 2;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_20 = (L_18)->GetAt(static_cast<il2cpp_array_size_t>(L_19));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30630));
			NullCheck(L_20);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_21 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30630));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30631));
			NullCheck(L_13);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(35 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_13, L_17, L_21, 0, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30631));
			// isTouched = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30574));
			__this->set_isTouched_17((bool)1);
			// inputSystem.RaiseGestureStarted(this, holdingAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30575));
			RuntimeObject* L_22 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_23 = __this->get_holdingAction_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30632));
			NullCheck(L_22);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(46 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureStarted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_22, __this, L_23);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30632));
			// isHolding = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30576));
			__this->set_isHolding_19((bool)1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30577));
		}

IL_0093:
		{
			// if (!isTouched)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30578));
			bool L_24 = __this->get_isTouched_17();
			V_5 = (bool)((((int32_t)L_24) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30579));
			bool L_25 = V_5;
			if (!L_25)
			{
				goto IL_00a8;
			}
		}

IL_00a2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30580));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30581));
			IL2CPP_LEAVE(0x2C3, FINALLY_02b4);
		}

IL_00a8:
		{
			// Lifetime += Time.deltaTime;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30582));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30633));
			float L_26 = UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30633));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30634));
			float L_27 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30634));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30635));
			UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_inline(__this, ((float)il2cpp_codegen_add((float)L_26, (float)L_27)), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30635));
			// if (TouchData.phase == TouchPhase.Moved)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30583));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30636));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_28 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30636));
			V_7 = L_28;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30637));
			int32_t L_29 = Touch_get_phase_m759A61477ECBBD90A57E36F1166EB9340A0FE349((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30637));
			V_6 = (bool)((((int32_t)L_29) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30584));
			bool L_30 = V_6;
			if (!L_30)
			{
				goto IL_02b1;
			}
		}

IL_00d6:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30585));
			// Interactions[0].Vector2Data = TouchData.deltaPosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30586));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30638));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_31 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30638));
			NullCheck(L_31);
			int32_t L_32 = 0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_33 = (L_31)->GetAt(static_cast<il2cpp_array_size_t>(L_32));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30639));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_34 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30639));
			V_7 = L_34;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30640));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_35 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30640));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30641));
			NullCheck(L_33);
			MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB(L_33, L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30641));
			// if (Interactions[0].Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30587));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30642));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_36 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30642));
			NullCheck(L_36);
			int32_t L_37 = 0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_38 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_37));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30643));
			NullCheck(L_38);
			bool L_39 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_38, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30643));
			V_8 = L_39;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30588));
			bool L_40 = V_8;
			if (!L_40)
			{
				goto IL_0138;
			}
		}

IL_0107:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30589));
			// inputSystem.RaisePositionInputChanged(InputSource, ControllerHandedness, Interactions[0].MixedRealityInputAction, TouchData.deltaPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30590));
			RuntimeObject* L_41 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30644));
			RuntimeObject* L_42 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30644));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30645));
			uint8_t L_43 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30645));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30646));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_44 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30646));
			NullCheck(L_44);
			int32_t L_45 = 0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_46 = (L_44)->GetAt(static_cast<il2cpp_array_size_t>(L_45));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30647));
			NullCheck(L_46);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_47 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30647));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30648));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_48 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30648));
			V_7 = L_48;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30649));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_49 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30649));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30650));
			NullCheck(L_41);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(42 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePositionInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_41, L_42, L_43, L_47, L_49);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30650));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30591));
		}

IL_0138:
		{
			// lastPose.Position = InputSource.Pointers[0].Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30592));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_50 = __this->get_address_of_lastPose_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30651));
			RuntimeObject* L_51 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30651));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30652));
			NullCheck(L_51);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_52 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_51);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30652));
			NullCheck(L_52);
			int32_t L_53 = 0;
			RuntimeObject* L_54 = (L_52)->GetAt(static_cast<il2cpp_array_size_t>(L_53));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30653));
			NullCheck(L_54);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_54);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30653));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30654));
			MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_50, L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30654));
			// lastPose.Rotation = InputSource.Pointers[0].Rotation;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30593));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_56 = __this->get_address_of_lastPose_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30655));
			RuntimeObject* L_57 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30655));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30656));
			NullCheck(L_57);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_58 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_57);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30656));
			NullCheck(L_58);
			int32_t L_59 = 0;
			RuntimeObject* L_60 = (L_58)->GetAt(static_cast<il2cpp_array_size_t>(L_59));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30657));
			NullCheck(L_60);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_61 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_60);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30657));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30658));
			MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_56, L_61, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30658));
			// inputSystem.RaiseSourcePoseChanged(InputSource, this, lastPose);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30594));
			RuntimeObject* L_62 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30659));
			RuntimeObject* L_63 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30659));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_64 = __this->get_lastPose_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30660));
			NullCheck(L_62);
			InterfaceActionInvoker3< RuntimeObject*, RuntimeObject*, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(30 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_62, L_63, __this, L_64);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30660));
			// Interactions[1].PoseData = lastPose;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30595));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30661));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_65 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30661));
			NullCheck(L_65);
			int32_t L_66 = 1;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_67 = (L_65)->GetAt(static_cast<il2cpp_array_size_t>(L_66));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_68 = __this->get_lastPose_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30662));
			NullCheck(L_67);
			MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_67, L_68, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30662));
			// if (Interactions[1].Changed)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30596));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30663));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_69 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30663));
			NullCheck(L_69);
			int32_t L_70 = 1;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_71 = (L_69)->GetAt(static_cast<il2cpp_array_size_t>(L_70));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30664));
			NullCheck(L_71);
			bool L_72 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_71, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30664));
			V_9 = L_72;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30597));
			bool L_73 = V_9;
			if (!L_73)
			{
				goto IL_01d7;
			}
		}

IL_01af:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30598));
			// inputSystem.RaisePoseInputChanged(InputSource, ControllerHandedness, Interactions[1].MixedRealityInputAction, lastPose);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30599));
			RuntimeObject* L_74 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30665));
			RuntimeObject* L_75 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30665));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30666));
			uint8_t L_76 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30666));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30667));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_77 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30667));
			NullCheck(L_77);
			int32_t L_78 = 1;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_79 = (L_77)->GetAt(static_cast<il2cpp_array_size_t>(L_78));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30668));
			NullCheck(L_79);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_80 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_79, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30668));
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_81 = __this->get_lastPose_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30669));
			NullCheck(L_74);
			InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(45 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePoseInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_74, L_75, L_76, L_80, L_81);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30669));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30600));
		}

IL_01d7:
		{
			// if (!isManipulating)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30601));
			bool L_82 = __this->get_isManipulating_21();
			V_10 = (bool)((((int32_t)L_82) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30602));
			bool L_83 = V_10;
			if (!L_83)
			{
				goto IL_026e;
			}
		}

IL_01e9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30603));
			// if (Mathf.Abs(TouchData.deltaPosition.x) > ManipulationThreshold ||
			//     Mathf.Abs(TouchData.deltaPosition.y) > ManipulationThreshold)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30604));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30670));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_84 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30670));
			V_7 = L_84;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30671));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_85 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30671));
			float L_86 = L_85.get_x_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30672));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			float L_87 = fabsf(L_86);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30672));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30673));
			float L_88 = UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30673));
			if ((((float)L_87) > ((float)L_88)))
			{
				goto IL_022e;
			}
		}

IL_020b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30674));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_89 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30674));
			V_7 = L_89;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30675));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_90 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30675));
			float L_91 = L_90.get_y_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30676));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			float L_92 = fabsf(L_91);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30676));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30677));
			float L_93 = UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30677));
			G_B16_0 = ((((float)L_92) > ((float)L_93))? 1 : 0);
			goto IL_022f;
		}

IL_022e:
		{
			G_B16_0 = 1;
		}

IL_022f:
		{
			V_11 = (bool)G_B16_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30605));
			bool L_94 = V_11;
			if (!L_94)
			{
				goto IL_026b;
			}
		}

IL_0235:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30606));
			// inputSystem?.RaiseGestureCanceled(this, holdingAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30607));
			RuntimeObject* L_95 = V_2;
			if (L_95)
			{
				goto IL_023b;
			}
		}

IL_0239:
		{
			goto IL_0249;
		}

IL_023b:
		{
			RuntimeObject* L_96 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_97 = __this->get_holdingAction_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30678));
			NullCheck(L_96);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(57 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCanceled(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_96, __this, L_97);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30678));
		}

IL_0249:
		{
			// isHolding = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30608));
			__this->set_isHolding_19((bool)0);
			// inputSystem?.RaiseGestureStarted(this, manipulationAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30609));
			RuntimeObject* L_98 = V_2;
			if (L_98)
			{
				goto IL_0255;
			}
		}

IL_0253:
		{
			goto IL_0263;
		}

IL_0255:
		{
			RuntimeObject* L_99 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_100 = __this->get_manipulationAction_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30679));
			NullCheck(L_99);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(46 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureStarted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_99, __this, L_100);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30679));
		}

IL_0263:
		{
			// isManipulating = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30610));
			__this->set_isManipulating_21((bool)1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30611));
		}

IL_026b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30612));
			goto IL_028d;
		}

IL_026e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30613));
			// inputSystem.RaiseGestureUpdated(this, manipulationAction, TouchData.deltaPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30614));
			RuntimeObject* L_101 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_102 = __this->get_manipulationAction_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30680));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_103 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30680));
			V_7 = L_103;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30681));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_104 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30681));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30682));
			NullCheck(L_101);
			InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(48 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureUpdated(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_101, __this, L_102, L_104);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30682));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30615));
		}

IL_028d:
		{
			// inputSystem.RaisePointerDragged(InputSource.Pointers[0], Interactions[1].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30616));
			RuntimeObject* L_105 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30683));
			RuntimeObject* L_106 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30683));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30684));
			NullCheck(L_106);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_107 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_106);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30684));
			NullCheck(L_107);
			int32_t L_108 = 0;
			RuntimeObject* L_109 = (L_107)->GetAt(static_cast<il2cpp_array_size_t>(L_108));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30685));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_110 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30685));
			NullCheck(L_110);
			int32_t L_111 = 1;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_112 = (L_110)->GetAt(static_cast<il2cpp_array_size_t>(L_111));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30686));
			NullCheck(L_112);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_113 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_112, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30686));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30687));
			NullCheck(L_105);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(36 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDragged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_105, L_109, L_113, 0, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30687));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30617));
		}

IL_02b1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30618));
			IL2CPP_LEAVE(0x2C3, FINALLY_02b4);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_02b4;
	}

FINALLY_02b4:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30619));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30688));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30688));
		IL2CPP_END_FINALLY(692)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(692)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x2C3, IL_02c3)
	}

IL_02c3:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30620));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::EndTouch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94 (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30689));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30690));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30691));
		// using (EndTouchPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30692));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var))->get_EndTouchPerfMarker_25();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30755));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30755));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30693));
			// var inputSystem = CoreServices.InputSystem;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30694));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30756));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30756));
			V_2 = L_2;
			// if (inputSystem == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30695));
			RuntimeObject* L_3 = V_2;
			V_3 = (bool)((((RuntimeObject*)(RuntimeObject*)L_3) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30696));
			bool L_4 = V_3;
			if (!L_4)
			{
				goto IL_0024;
			}
		}

IL_001e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30697));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30698));
			IL2CPP_LEAVE(0x220, FINALLY_0211);
		}

IL_0024:
		{
			// if (TouchData.phase == TouchPhase.Ended)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30699));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30757));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_5 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30757));
			V_5 = L_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30758));
			int32_t L_6 = Touch_get_phase_m759A61477ECBBD90A57E36F1166EB9340A0FE349((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30758));
			V_4 = (bool)((((int32_t)L_6) == ((int32_t)3))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30700));
			bool L_7 = V_4;
			if (!L_7)
			{
				goto IL_0124;
			}
		}

IL_003f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30701));
			// if (Lifetime < MaxTapContactTime)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30702));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30759));
			float L_8 = UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30759));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30760));
			float L_9 = UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30760));
			V_6 = (bool)((((float)L_8) < ((float)L_9))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30703));
			bool L_10 = V_6;
			if (!L_10)
			{
				goto IL_00ce;
			}
		}

IL_0054:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30704));
			// if (isHolding)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30705));
			bool L_11 = __this->get_isHolding_19();
			V_7 = L_11;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30706));
			bool L_12 = V_7;
			if (!L_12)
			{
				goto IL_0078;
			}
		}

IL_0061:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30707));
			// inputSystem.RaiseGestureCanceled(this, holdingAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30708));
			RuntimeObject* L_13 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_14 = __this->get_holdingAction_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30761));
			NullCheck(L_13);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(57 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCanceled(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_13, __this, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30761));
			// isHolding = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30709));
			__this->set_isHolding_19((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30710));
		}

IL_0078:
		{
			// if (isManipulating)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30711));
			bool L_15 = __this->get_isManipulating_21();
			V_8 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30712));
			bool L_16 = V_8;
			if (!L_16)
			{
				goto IL_009b;
			}
		}

IL_0084:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30713));
			// inputSystem.RaiseGestureCanceled(this, manipulationAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30714));
			RuntimeObject* L_17 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_18 = __this->get_manipulationAction_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30762));
			NullCheck(L_17);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(57 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCanceled(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_17, __this, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30762));
			// isManipulating = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30715));
			__this->set_isManipulating_21((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30716));
		}

IL_009b:
		{
			// inputSystem.RaisePointerClicked(InputSource.Pointers[0], Interactions[2].MixedRealityInputAction, TouchData.tapCount);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30717));
			RuntimeObject* L_19 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30763));
			RuntimeObject* L_20 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30763));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30764));
			NullCheck(L_20);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_20);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30764));
			NullCheck(L_21);
			int32_t L_22 = 0;
			RuntimeObject* L_23 = (L_21)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30765));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_24 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30765));
			NullCheck(L_24);
			int32_t L_25 = 2;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_26 = (L_24)->GetAt(static_cast<il2cpp_array_size_t>(L_25));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30766));
			NullCheck(L_26);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_27 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30766));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30767));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_28 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30767));
			V_5 = L_28;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30768));
			int32_t L_29 = Touch_get_tapCount_m05E8AD1DD071603EA806087E42A7BC6FFA18C5F9((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30768));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30769));
			NullCheck(L_19);
			InterfaceActionInvoker5< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , int32_t, uint8_t, RuntimeObject* >::Invoke(37 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerClicked(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Int32,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_19, L_23, L_27, L_29, 0, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30769));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30718));
		}

IL_00ce:
		{
			// if (isHolding)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30719));
			bool L_30 = __this->get_isHolding_19();
			V_9 = L_30;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30720));
			bool L_31 = V_9;
			if (!L_31)
			{
				goto IL_00f1;
			}
		}

IL_00da:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30721));
			// inputSystem.RaiseGestureCompleted(this, holdingAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30722));
			RuntimeObject* L_32 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_33 = __this->get_holdingAction_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30770));
			NullCheck(L_32);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(52 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_32, __this, L_33);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30770));
			// isHolding = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30723));
			__this->set_isHolding_19((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30724));
		}

IL_00f1:
		{
			// if (isManipulating)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30725));
			bool L_34 = __this->get_isManipulating_21();
			V_10 = L_34;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30726));
			bool L_35 = V_10;
			if (!L_35)
			{
				goto IL_0123;
			}
		}

IL_00fd:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30727));
			// inputSystem.RaiseGestureCompleted(this, manipulationAction, TouchData.deltaPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30728));
			RuntimeObject* L_36 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_37 = __this->get_manipulationAction_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30771));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_38 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30771));
			V_5 = L_38;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30772));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_39 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30772));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30773));
			NullCheck(L_36);
			InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(53 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_36, __this, L_37, L_39);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30773));
			// isManipulating = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30729));
			__this->set_isManipulating_21((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30730));
		}

IL_0123:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30731));
		}

IL_0124:
		{
			// if (isHolding)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30732));
			bool L_40 = __this->get_isHolding_19();
			V_11 = L_40;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30733));
			bool L_41 = V_11;
			if (!L_41)
			{
				goto IL_0147;
			}
		}

IL_0130:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30734));
			// inputSystem.RaiseGestureCompleted(this, holdingAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30735));
			RuntimeObject* L_42 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_43 = __this->get_holdingAction_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30774));
			NullCheck(L_42);
			InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(52 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_42, __this, L_43);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30774));
			// isHolding = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30736));
			__this->set_isHolding_19((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30737));
		}

IL_0147:
		{
			// Debug.Assert(!isHolding);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30738));
			bool L_44 = __this->get_isHolding_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30775));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_44) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30775));
			// if (isManipulating)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30739));
			bool L_45 = __this->get_isManipulating_21();
			V_12 = L_45;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30740));
			bool L_46 = V_12;
			if (!L_46)
			{
				goto IL_0188;
			}
		}

IL_0162:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30741));
			// inputSystem.RaiseGestureCompleted(this, manipulationAction, TouchData.deltaPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30742));
			RuntimeObject* L_47 = V_2;
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_48 = __this->get_manipulationAction_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30776));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_49 = UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30776));
			V_5 = L_49;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30777));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_50 = Touch_get_deltaPosition_m4AAD6521D88FE10B3786039892B1BB9438ED2D64((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30777));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30778));
			NullCheck(L_47);
			InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(53 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector2) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_47, __this, L_48, L_50);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30778));
			// isManipulating = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30743));
			__this->set_isManipulating_21((bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30744));
		}

IL_0188:
		{
			// Debug.Assert(!isManipulating);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30745));
			bool L_51 = __this->get_isManipulating_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30779));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_51) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30779));
			// inputSystem.RaiseOnInputUp(InputSource, Handedness.None, Interactions[2].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30746));
			RuntimeObject* L_52 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30780));
			RuntimeObject* L_53 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30780));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30781));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_54 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30781));
			NullCheck(L_54);
			int32_t L_55 = 2;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_56 = (L_54)->GetAt(static_cast<il2cpp_array_size_t>(L_55));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30782));
			NullCheck(L_56);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_57 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_56, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30782));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30783));
			NullCheck(L_52);
			InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_52, L_53, 0, L_57);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30783));
			// inputSystem.RaisePointerUp(InputSource.Pointers[0], Interactions[2].MixedRealityInputAction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30747));
			RuntimeObject* L_58 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30784));
			RuntimeObject* L_59 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30784));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30785));
			NullCheck(L_59);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_60 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_59);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30785));
			NullCheck(L_60);
			int32_t L_61 = 0;
			RuntimeObject* L_62 = (L_60)->GetAt(static_cast<il2cpp_array_size_t>(L_61));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30786));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_63 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30786));
			NullCheck(L_63);
			int32_t L_64 = 2;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_65 = (L_63)->GetAt(static_cast<il2cpp_array_size_t>(L_64));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30787));
			NullCheck(L_65);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_66 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_65, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30787));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30788));
			NullCheck(L_58);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(38 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_58, L_62, L_66, 0, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30788));
			// Lifetime = 0.0f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30748));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30789));
			UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_inline(__this, (0.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30789));
			// isTouched = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30749));
			__this->set_isTouched_17((bool)0);
			// Interactions[1].PoseData = MixedRealityPose.ZeroIdentity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30750));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30790));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_67 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30790));
			NullCheck(L_67);
			int32_t L_68 = 1;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_69 = (L_67)->GetAt(static_cast<il2cpp_array_size_t>(L_68));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30791));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
			MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_70 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30791));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30792));
			NullCheck(L_69);
			MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_69, L_70, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30792));
			// Interactions[0].Vector2Data = Vector2.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30751));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30793));
			MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_71 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30793));
			NullCheck(L_71);
			int32_t L_72 = 0;
			MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_73 = (L_71)->GetAt(static_cast<il2cpp_array_size_t>(L_72));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30794));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_74 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30794));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30795));
			NullCheck(L_73);
			MixedRealityInteractionMapping_set_Vector2Data_m87BCF9A7E5ADDB105D5CBBD4930ABF8BA3C9ABBB(L_73, L_74, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30795));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30752));
			IL2CPP_LEAVE(0x220, FINALLY_0211);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0211;
	}

FINALLY_0211:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30753));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30796));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30796));
		IL2CPP_END_FINALLY(529)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(529)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x220, IL_0220)
	}

IL_0220:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30754));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchController::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchController__cctor_m4DF64F0BA55F22DA58CAD86BF654C027694E2243 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController__cctor_m4DF64F0BA55F22DA58CAD86BF654C027694E2243_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController__cctor_m4DF64F0BA55F22DA58CAD86BF654C027694E2243_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30798));
	{
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] UnityTouchController.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30799));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30801));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral188E72867D40866EDC45372E1B0708E67AAD8C21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30801));
		((UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_24(L_0);
		// private static readonly ProfilerMarker EndTouchPerfMarker = new ProfilerMarker("[MRTK] UnityTouchController.EndTouch");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30802));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral98C4F18076684F6635FACB8581378E95739E8AEF, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30802));
		((UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var))->set_EndTouchPerfMarker_25(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager__ctor_m6AC10B189F643EFCDC17DBB4B5A06112DF54F6C5 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, RuntimeObject* ___registrar0, RuntimeObject* ___inputSystem1, String_t* ___name2, uint32_t ___priority3, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager__ctor_m6AC10B189F643EFCDC17DBB4B5A06112DF54F6C5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___registrar0), (&___inputSystem1), (&___name2), (&___priority3), (&___profile4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager__ctor_m6AC10B189F643EFCDC17DBB4B5A06112DF54F6C5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30803));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30804));
	{
		// BaseMixedRealityProfile profile = null) : this(inputSystem, name, priority, profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30805));
		RuntimeObject* L_0 = ___inputSystem1;
		String_t* L_1 = ___name2;
		uint32_t L_2 = ___priority3;
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_3 = ___profile4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30809));
		UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536(__this, L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30809));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30806));
		// Registrar = registrar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30807));
		RuntimeObject* L_4 = ___registrar0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30810));
		BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_inline(__this, L_4, /*hidden argument*/BaseDataProvider_1_set_Registrar_mDC9CD576EF5625AEDF0D99C96B7069097D2B9A05_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30810));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30808));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem,System.String,System.UInt32,Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, RuntimeObject* ___inputSystem0, String_t* ___name1, uint32_t ___priority2, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSystem0), (&___name1), (&___priority2), (&___profile3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager__ctor_m93C72438763B2A116D1765D2E90ACC0C9A569536_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30811));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30812));
	{
		// private List<UnityTouchController> touchesToRemove = new List<UnityTouchController>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30813));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30817));
		List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * L_0 = (List_1_t2A40CCD444FF66B1871D49626E273B4347465641 *)il2cpp_codegen_object_new(List_1_t2A40CCD444FF66B1871D49626E273B4347465641_il2cpp_TypeInfo_var);
		List_1__ctor_mB8C580D84B1E55A95131F82A4FC55A236DDE2734(L_0, /*hidden argument*/List_1__ctor_mB8C580D84B1E55A95131F82A4FC55A236DDE2734_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30817));
		__this->set_touchesToRemove_22(L_0);
		// BaseMixedRealityProfile profile = null) : base(inputSystem, name, priority, profile) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30814));
		RuntimeObject* L_1 = ___inputSystem0;
		String_t* L_2 = ___name1;
		uint32_t L_3 = ___priority2;
		BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * L_4 = ___profile3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30818));
		IL2CPP_RUNTIME_CLASS_INIT(BaseInputDeviceManager_tCD5F43919EB70924527B13AD5992798946BF83AC_il2cpp_TypeInfo_var);
		BaseInputDeviceManager__ctor_m1746D3A8EBE4F327683713A37AF88FF94969DD1B(__this, L_1, L_2, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30818));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30815));
		// BaseMixedRealityProfile profile = null) : base(inputSystem, name, priority, profile) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30816));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_Update_m894F1B418C66E0079CCD7E34E5CDEA95BF56B226 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager_Update_m894F1B418C66E0079CCD7E34E5CDEA95BF56B226_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	bool V_3 = false;
	int32_t V_4 = 0;
	RuntimeObject* V_5 = NULL;
	bool V_6 = false;
	int32_t V_7 = 0;
	Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  V_8;
	memset((&V_8), 0, sizeof(V_8));
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_9;
	memset((&V_9), 0, sizeof(V_9));
	int32_t V_10 = 0;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_4), (&V_5), (&V_7), (&V_8), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager_Update_m894F1B418C66E0079CCD7E34E5CDEA95BF56B226_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30819));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30820));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B6_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30821));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30822));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_23();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30860));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30860));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30823));
			// if (!IsEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30824));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30861));
			bool L_2 = VirtFuncInvoker0< bool >::Invoke(33 /* System.Boolean Microsoft.MixedReality.Toolkit.BaseService::get_IsEnabled() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30861));
			V_3 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30825));
			bool L_3 = V_3;
			if (!L_3)
			{
				goto IL_0023;
			}
		}

IL_001d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30826));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30827));
			IL2CPP_LEAVE(0x126, FINALLY_0117);
		}

IL_0023:
		{
			// base.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30828));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30862));
			BaseService_Update_mAE9EBAC35F456E318362A34CA0ED90722C6C6F42(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30862));
			// for (int i = 0; i < touchesToRemove.Count; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30829));
			V_4 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30830));
			goto IL_0061;
		}

IL_002f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30831));
			// IMixedRealityController controller = touchesToRemove[i];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30832));
			List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * L_4 = __this->get_touchesToRemove_22();
			int32_t L_5 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30863));
			NullCheck(L_4);
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_6 = List_1_get_Item_m902E064E7124DC92A785E2B9A4E0834340DFDD8A_inline(L_4, L_5, /*hidden argument*/List_1_get_Item_m902E064E7124DC92A785E2B9A4E0834340DFDD8A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30863));
			V_5 = L_6;
			// Service?.RaiseSourceLost(controller.InputSource, controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30833));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30864));
			RuntimeObject* L_7 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30864));
			RuntimeObject* L_8 = L_7;
			G_B5_0 = L_8;
			if (L_8)
			{
				G_B6_0 = L_8;
				goto IL_004b;
			}
		}

IL_0048:
		{
			goto IL_005a;
		}

IL_004b:
		{
			RuntimeObject* L_9 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30865));
			NullCheck(L_9);
			RuntimeObject* L_10 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_InputSource() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_9);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30865));
			RuntimeObject* L_11 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30866));
			NullCheck(G_B6_0);
			InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(25 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceLost(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B6_0, L_10, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30866));
		}

IL_005a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30834));
			// for (int i = 0; i < touchesToRemove.Count; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30835));
			int32_t L_12 = V_4;
			V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
		}

IL_0061:
		{
			// for (int i = 0; i < touchesToRemove.Count; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30836));
			int32_t L_13 = V_4;
			List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * L_14 = __this->get_touchesToRemove_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30867));
			NullCheck(L_14);
			int32_t L_15 = List_1_get_Count_mF49B7896BD967B3666158CEEE7BB82DBFCC78770_inline(L_14, /*hidden argument*/List_1_get_Count_mF49B7896BD967B3666158CEEE7BB82DBFCC78770_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30867));
			V_6 = (bool)((((int32_t)L_13) < ((int32_t)L_15))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30837));
			bool L_16 = V_6;
			if (L_16)
			{
				goto IL_002f;
			}
		}

IL_0076:
		{
			// touchesToRemove.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30838));
			List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * L_17 = __this->get_touchesToRemove_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30868));
			NullCheck(L_17);
			List_1_Clear_m73FE262EDA97C22B87F4852530316000528DA335(L_17, /*hidden argument*/List_1_Clear_m73FE262EDA97C22B87F4852530316000528DA335_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30868));
			// int touchCount = UInput.touchCount;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30839));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30869));
			int32_t L_18 = Input_get_touchCount_m497E19AA4FA22DB659F631B20FAEF65572D1B44E(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30869));
			V_2 = L_18;
			// for (int i = 0; i < touchCount; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30840));
			V_7 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30841));
			goto IL_0106;
		}

IL_008d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30842));
			// Touch touch = UInput.touches[i];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30843));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30870));
			TouchU5BU5D_t0207B72FD95EF1F56E7A6C9F0A42896B03D2BD5D* L_19 = Input_get_touches_mD31418E8B2487DBC9641A15677B41B459859011A(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30870));
			int32_t L_20 = V_7;
			NullCheck(L_19);
			int32_t L_21 = L_20;
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_22 = (L_19)->GetAt(static_cast<il2cpp_array_size_t>(L_21));
			V_8 = L_22;
			// Ray ray = CameraCache.Main.ScreenPointToRay(touch.position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30844));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30871));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_23 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30871));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30872));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_24 = Touch_get_position_m2E60676112DA3628CF2DC76418A275C7FE521D8F((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30872));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30873));
			IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Vector2_op_Implicit_mD152B6A34B4DB7FFECC2844D74718568FE867D6F(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30873));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30874));
			NullCheck(L_23);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_26 = Camera_ScreenPointToRay_m27638E78502DB6D6D7113F81AF7C210773B828F3(L_23, L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30874));
			V_9 = L_26;
			// switch (touch.phase)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30845));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30875));
			int32_t L_27 = Touch_get_phase_m759A61477ECBBD90A57E36F1166EB9340A0FE349((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&V_8), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30875));
			V_10 = L_27;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30846));
			int32_t L_28 = V_10;
			switch (L_28)
			{
				case 0:
				{
					goto IL_00da;
				}
				case 1:
				{
					goto IL_00e7;
				}
				case 2:
				{
					goto IL_00e7;
				}
				case 3:
				{
					goto IL_00f4;
				}
				case 4:
				{
					goto IL_00f4;
				}
			}
		}

IL_00d8:
		{
			goto IL_00ff;
		}

IL_00da:
		{
			// AddTouchController(touch, ray);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30847));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_29 = V_8;
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_30 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30876));
			UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C(__this, L_29, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30876));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30848));
			goto IL_00ff;
		}

IL_00e7:
		{
			// UpdateTouchData(touch, ray);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30849));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_31 = V_8;
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_32 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30877));
			UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092(__this, L_31, L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30877));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30850));
			goto IL_00ff;
		}

IL_00f4:
		{
			// RemoveTouchController(touch);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30851));
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_33 = V_8;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30878));
			UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF(__this, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30878));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30852));
			goto IL_00ff;
		}

IL_00ff:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30853));
			// for (int i = 0; i < touchCount; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30854));
			int32_t L_34 = V_7;
			V_7 = ((int32_t)il2cpp_codegen_add((int32_t)L_34, (int32_t)1));
		}

IL_0106:
		{
			// for (int i = 0; i < touchCount; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30855));
			int32_t L_35 = V_7;
			int32_t L_36 = V_2;
			V_11 = (bool)((((int32_t)L_35) < ((int32_t)L_36))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30856));
			bool L_37 = V_11;
			if (L_37)
			{
				goto IL_008d;
			}
		}

IL_0114:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30857));
			IL2CPP_LEAVE(0x126, FINALLY_0117);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0117;
	}

FINALLY_0117:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30858));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30879));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30879));
		IL2CPP_END_FINALLY(279)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(279)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x126, IL_0126)
	}

IL_0126:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30859));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::Disable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_Disable_m9A4855DD017F948DABF3FBDB5956B29788518549 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager_Disable_m9A4855DD017F948DABF3FBDB5956B29788518549_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t302202D6382013588B561A500FF7B594704FCCDA  V_0;
	memset((&V_0), 0, sizeof(V_0));
	KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  V_3;
	memset((&V_3), 0, sizeof(V_3));
	RuntimeObject* V_4 = NULL;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager_Disable_m9A4855DD017F948DABF3FBDB5956B29788518549_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30880));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30881));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30882));
		// base.Disable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30883));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30911));
		BaseService_Disable_m349524E2ECE37A703BC12D77419612C9162EC92A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30911));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30884));
		// foreach (var controller in ActiveTouches)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30885));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
		Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_0 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30912));
		NullCheck(L_0);
		Enumerator_t302202D6382013588B561A500FF7B594704FCCDA  L_1 = Dictionary_2_GetEnumerator_mC56F3FFF67E6CD1A08088FF4C7B165CA69702B8D(L_0, /*hidden argument*/Dictionary_2_GetEnumerator_mC56F3FFF67E6CD1A08088FF4C7B165CA69702B8D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30912));
		V_0 = L_1;
	}

IL_0014:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30886));
			goto IL_00b9;
		}

IL_0019:
		{
			// foreach (var controller in ActiveTouches)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30887));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30913));
			KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D  L_2 = Enumerator_get_Current_mDCF3615CD5DB835933BF9CBD12589BD70D73B088_inline((Enumerator_t302202D6382013588B561A500FF7B594704FCCDA *)(&V_0), /*hidden argument*/Enumerator_get_Current_mDCF3615CD5DB835933BF9CBD12589BD70D73B088_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30913));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30888));
			// if (controller.Value == null || Service == null) { continue; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30889));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30914));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_3 = KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_inline((KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30914));
			if (!L_3)
			{
				goto IL_0036;
			}
		}

IL_002b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30915));
			RuntimeObject* L_4 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30915));
			G_B5_0 = ((((RuntimeObject*)(RuntimeObject*)L_4) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			goto IL_0037;
		}

IL_0036:
		{
			G_B5_0 = 1;
		}

IL_0037:
		{
			V_2 = (bool)G_B5_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30890));
			bool L_5 = V_2;
			if (!L_5)
			{
				goto IL_003e;
			}
		}

IL_003b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30891));
			// if (controller.Value == null || Service == null) { continue; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30892));
			goto IL_00b9;
		}

IL_003e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30893));
			// foreach (var inputSource in Service.DetectedInputSources)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30894));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30916));
			RuntimeObject* L_6 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30916));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30917));
			NullCheck(L_6);
			HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * L_7 = InterfaceFuncInvoker0< HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * >::Invoke(4 /* System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_DetectedInputSources() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30917));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30918));
			NullCheck(L_7);
			Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  L_8 = HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE(L_7, /*hidden argument*/HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30918));
			V_3 = L_8;
		}

IL_0050:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30895));
				goto IL_009e;
			}

IL_0052:
			{
				// foreach (var inputSource in Service.DetectedInputSources)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30896));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30919));
				RuntimeObject* L_9 = Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_inline((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)(&V_3), /*hidden argument*/Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30919));
				V_4 = L_9;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30897));
				// if (inputSource.SourceId == controller.Value.InputSource.SourceId)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30898));
				RuntimeObject* L_10 = V_4;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30920));
				NullCheck(L_10);
				uint32_t L_11 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_10);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30920));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30921));
				UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_12 = KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_inline((KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30921));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30922));
				NullCheck(L_12);
				RuntimeObject* L_13 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_12, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30922));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30923));
				NullCheck(L_13);
				uint32_t L_14 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_13);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30923));
				V_5 = (bool)((((int32_t)L_11) == ((int32_t)L_14))? 1 : 0);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30899));
				bool L_15 = V_5;
				if (!L_15)
				{
					goto IL_009d;
				}
			}

IL_007c:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30900));
				// Service.RaiseSourceLost(controller.Value.InputSource, controller.Value);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30901));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30924));
				RuntimeObject* L_16 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30924));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30925));
				UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_17 = KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_inline((KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30925));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30926));
				NullCheck(L_17);
				RuntimeObject* L_18 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_17, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30926));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30927));
				UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_19 = KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_inline((KeyValuePair_2_t2FEC2E505CBB04A0DD9E58E74AFCE51E3E14BB9D *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_mCD028212DCD22CDF68AE32060DA079DA67AAE10D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30927));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30928));
				NullCheck(L_16);
				InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(25 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceLost(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_16, L_18, L_19);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30928));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30902));
			}

IL_009d:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30903));
			}

IL_009e:
			{
				// foreach (var inputSource in Service.DetectedInputSources)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30904));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30929));
				bool L_20 = Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)(&V_3), /*hidden argument*/Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30929));
				if (L_20)
				{
					goto IL_0052;
				}
			}

IL_00a7:
			{
				IL2CPP_LEAVE(0xB8, FINALLY_00a9);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_00a9;
		}

FINALLY_00a9:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30905));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30930));
			Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)(&V_3), /*hidden argument*/Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30930));
			IL2CPP_END_FINALLY(169)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(169)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0xB8, IL_00b8)
		}

IL_00b8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30906));
		}

IL_00b9:
		{
			// foreach (var controller in ActiveTouches)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30907));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30931));
			bool L_21 = Enumerator_MoveNext_mE0DB4245D460F7AF6C5BF327AC8E5DD06F95662A((Enumerator_t302202D6382013588B561A500FF7B594704FCCDA *)(&V_0), /*hidden argument*/Enumerator_MoveNext_mE0DB4245D460F7AF6C5BF327AC8E5DD06F95662A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30931));
			if (L_21)
			{
				goto IL_0019;
			}
		}

IL_00c5:
		{
			IL2CPP_LEAVE(0xD6, FINALLY_00c7);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00c7;
	}

FINALLY_00c7:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30908));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30932));
		Enumerator_Dispose_m39A511596ACB5BBD01500520D94056D7DDF1CE13((Enumerator_t302202D6382013588B561A500FF7B594704FCCDA *)(&V_0), /*hidden argument*/Enumerator_Dispose_m39A511596ACB5BBD01500520D94056D7DDF1CE13_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30932));
		IL2CPP_END_FINALLY(199)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(199)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xD6, IL_00d6)
	}

IL_00d6:
	{
		// ActiveTouches.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30909));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
		Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_22 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30933));
		NullCheck(L_22);
		Dictionary_2_Clear_m5BC780B1E0C90700EA1D5062A3260A265EF78A80(L_22, /*hidden argument*/Dictionary_2_Clear_m5BC780B1E0C90700EA1D5062A3260A265EF78A80_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30933));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30910));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::AddTouchController(UnityEngine.Touch,UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___touch0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___ray1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * V_2 = NULL;
	bool V_3 = false;
	RuntimeObject* V_4 = NULL;
	bool V_5 = false;
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* V_6 = NULL;
	bool V_7 = false;
	int32_t V_8 = 0;
	RuntimeObject* V_9 = NULL;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___touch0), (&___ray1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_4), (&V_6), (&V_8), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager_AddTouchController_m110C6714C627DF84AA83DCA7968B037FAB97057C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30934));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30935));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B12_0 = NULL;
	RuntimeObject* G_B11_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30936));
		// using (AddTouchControllerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30937));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_AddTouchControllerPerfMarker_24();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30973));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30973));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30938));
			// if (!ActiveTouches.TryGetValue(touch.fingerId, out controller))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30939));
			IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
			Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_2 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30974));
			int32_t L_3 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30974));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30975));
			NullCheck(L_2);
			bool L_4 = Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04(L_2, L_3, (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 **)(&V_2), /*hidden argument*/Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30975));
			V_3 = (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30940));
			bool L_5 = V_3;
			if (!L_5)
			{
				goto IL_00fc;
			}
		}

IL_002d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30941));
			// IMixedRealityInputSource inputSource = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30942));
			V_4 = (RuntimeObject*)NULL;
			// if (Service != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30943));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30976));
			RuntimeObject* L_6 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30976));
			V_5 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30944));
			bool L_7 = V_5;
			if (!L_7)
			{
				goto IL_0076;
			}
		}

IL_0040:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30945));
			// var pointers = RequestPointers(SupportedControllerType.TouchScreen, Handedness.Any);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30946));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30977));
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_8 = VirtFuncInvoker2< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*, int32_t, uint8_t >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::RequestPointers(Microsoft.MixedReality.Toolkit.Input.SupportedControllerType,Microsoft.MixedReality.Toolkit.Utilities.Handedness) */, __this, ((int32_t)256), 7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30977));
			V_6 = L_8;
			// inputSource = Service.RequestNewGenericInputSource($"Touch {touch.fingerId}", pointers);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30947));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30978));
			RuntimeObject* L_9 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30978));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30979));
			int32_t L_10 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30979));
			int32_t L_11 = L_10;
			RuntimeObject * L_12 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_11);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30980));
			String_t* L_13 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral80DDC1364C0999AD6B42A6503CC3A25895B61997, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30980));
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_14 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30981));
			NullCheck(L_9);
			RuntimeObject* L_15 = InterfaceFuncInvoker3< RuntimeObject*, String_t*, IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*, int32_t >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RequestNewGenericInputSource(System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[],Microsoft.MixedReality.Toolkit.Input.InputSourceType) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_9, L_13, L_14, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30981));
			V_4 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30948));
		}

IL_0076:
		{
			// controller = new UnityTouchController(TrackingState.NotApplicable, Handedness.Any, inputSource);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30949));
			RuntimeObject* L_16 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30982));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_17 = (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 *)il2cpp_codegen_object_new(UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5_il2cpp_TypeInfo_var);
			UnityTouchController__ctor_mEF5731D6C9307D221785F7C633B0D0AB59C30738(L_17, 0, 7, L_16, (MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA*)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30982));
			V_2 = L_17;
			// if (inputSource != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30950));
			RuntimeObject* L_18 = V_4;
			V_7 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_18) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30951));
			bool L_19 = V_7;
			if (!L_19)
			{
				goto IL_00e8;
			}
		}

IL_008c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30952));
			// for (int i = 0; i < inputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30953));
			V_8 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30954));
			goto IL_00d4;
		}

IL_0092:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30955));
			// inputSource.Pointers[i].Controller = controller;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30956));
			RuntimeObject* L_20 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30983));
			NullCheck(L_20);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_20);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30983));
			int32_t L_22 = V_8;
			NullCheck(L_21);
			int32_t L_23 = L_22;
			RuntimeObject* L_24 = (L_21)->GetAt(static_cast<il2cpp_array_size_t>(L_23));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_25 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30984));
			NullCheck(L_24);
			InterfaceActionInvoker1< RuntimeObject* >::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_24, L_25);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30984));
			// var touchPointer = (IMixedRealityTouchPointer)inputSource.Pointers[i];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30957));
			RuntimeObject* L_26 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30985));
			NullCheck(L_26);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_27 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_26);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30985));
			int32_t L_28 = V_8;
			NullCheck(L_27);
			int32_t L_29 = L_28;
			RuntimeObject* L_30 = (L_27)->GetAt(static_cast<il2cpp_array_size_t>(L_29));
			V_9 = ((RuntimeObject*)Castclass((RuntimeObject*)L_30, IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_il2cpp_TypeInfo_var));
			// touchPointer.TouchRay = ray;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30958));
			RuntimeObject* L_31 = V_9;
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_32 = ___ray1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30986));
			NullCheck(L_31);
			InterfaceActionInvoker1< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(3 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchPointer::set_TouchRay(UnityEngine.Ray) */, IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_il2cpp_TypeInfo_var, L_31, L_32);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30986));
			// touchPointer.FingerId = touch.fingerId;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30959));
			RuntimeObject* L_33 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30987));
			int32_t L_34 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30987));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30988));
			NullCheck(L_33);
			InterfaceActionInvoker1< int32_t >::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchPointer::set_FingerId(System.Int32) */, IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_il2cpp_TypeInfo_var, L_33, L_34);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30988));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30960));
			// for (int i = 0; i < inputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30961));
			int32_t L_35 = V_8;
			V_8 = ((int32_t)il2cpp_codegen_add((int32_t)L_35, (int32_t)1));
		}

IL_00d4:
		{
			// for (int i = 0; i < inputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30962));
			int32_t L_36 = V_8;
			RuntimeObject* L_37 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30989));
			NullCheck(L_37);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_38 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_37);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30989));
			NullCheck(L_38);
			V_10 = (bool)((((int32_t)L_36) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_38)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30963));
			bool L_39 = V_10;
			if (L_39)
			{
				goto IL_0092;
			}
		}

IL_00e7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30964));
		}

IL_00e8:
		{
			// ActiveTouches.Add(touch.fingerId, controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30965));
			IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
			Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_40 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30990));
			int32_t L_41 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30990));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_42 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30991));
			NullCheck(L_40);
			Dictionary_2_Add_m3FC788FC7B8816967B9EC77354AC2FAD9550FF9D(L_40, L_41, L_42, /*hidden argument*/Dictionary_2_Add_m3FC788FC7B8816967B9EC77354AC2FAD9550FF9D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30991));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30966));
		}

IL_00fc:
		{
			// Service?.RaiseSourceDetected(controller.InputSource, controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30967));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30992));
			RuntimeObject* L_43 = BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_inline(__this, /*hidden argument*/BaseDataProvider_1_get_Service_m7EC337C959E1DC2ED760B4572120C2C82EFC7B17_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30992));
			RuntimeObject* L_44 = L_43;
			G_B11_0 = L_44;
			if (L_44)
			{
				G_B12_0 = L_44;
				goto IL_0108;
			}
		}

IL_0105:
		{
			goto IL_0115;
		}

IL_0108:
		{
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_45 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30993));
			NullCheck(L_45);
			RuntimeObject* L_46 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_45, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30993));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_47 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30994));
			NullCheck(G_B12_0);
			InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(24 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceDetected(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B12_0, L_46, L_47);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30994));
		}

IL_0115:
		{
			// controller.TouchData = touch;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30968));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_48 = V_2;
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_49 = ___touch0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30995));
			NullCheck(L_48);
			UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_inline(L_48, L_49, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30995));
			// controller.StartTouch();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30969));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_50 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30996));
			NullCheck(L_50);
			UnityTouchController_StartTouch_m6DBD03074BCF6F6F70898FFA4CBAE65DBE19207D(L_50, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30996));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30970));
			IL2CPP_LEAVE(0x136, FINALLY_0127);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0127;
	}

FINALLY_0127:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30971));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30997));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30997));
		IL2CPP_END_FINALLY(295)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(295)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x136, IL_0136)
	}

IL_0136:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30972));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::UpdateTouchData(UnityEngine.Touch,UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092 (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___touch0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___ray1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * V_2 = NULL;
	RuntimeObject* V_3 = NULL;
	bool V_4 = false;
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___touch0), (&___ray1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager_UpdateTouchData_m732AE08A35BFEB3494336133C9525704E97A0092_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30999));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31000));
		// using (UpdateTouchDataPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31001));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_UpdateTouchDataPerfMarker_25();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31014));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31014));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31002));
			// if (!ActiveTouches.TryGetValue(touch.fingerId, out controller))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31003));
			IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
			Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_2 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31015));
			int32_t L_3 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31015));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31016));
			NullCheck(L_2);
			bool L_4 = Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04(L_2, L_3, (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 **)(&V_2), /*hidden argument*/Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31016));
			V_4 = (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31004));
			bool L_5 = V_4;
			if (!L_5)
			{
				goto IL_002f;
			}
		}

IL_002c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31005));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31006));
			IL2CPP_LEAVE(0x77, FINALLY_0068);
		}

IL_002f:
		{
			// controller.TouchData = touch;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31007));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_6 = V_2;
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_7 = ___touch0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31017));
			NullCheck(L_6);
			UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_inline(L_6, L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31017));
			// var pointer = (IMixedRealityTouchPointer)controller.InputSource.Pointers[0];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31008));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_8 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31018));
			NullCheck(L_8);
			RuntimeObject* L_9 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31018));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31019));
			NullCheck(L_9);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_10 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_9);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31019));
			NullCheck(L_10);
			int32_t L_11 = 0;
			RuntimeObject* L_12 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_11));
			V_3 = ((RuntimeObject*)Castclass((RuntimeObject*)L_12, IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_il2cpp_TypeInfo_var));
			// controller.ScreenPointRay = pointer.TouchRay = ray;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31009));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_13 = V_2;
			RuntimeObject* L_14 = V_3;
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_15 = ___ray1;
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_16 = L_15;
			V_5 = L_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31020));
			NullCheck(L_14);
			InterfaceActionInvoker1< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(3 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchPointer::set_TouchRay(UnityEngine.Ray) */, IMixedRealityTouchPointer_tA99EE3CDCBC2F549792405E2A36841EBDC135588_il2cpp_TypeInfo_var, L_14, L_16);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31020));
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_17 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31021));
			NullCheck(L_13);
			UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_inline(L_13, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31021));
			// controller.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31010));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_18 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31022));
			NullCheck(L_18);
			UnityTouchController_Update_mE9BB3F0FFC80754789B5087F71C8AADA18FAA840(L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31022));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31011));
			IL2CPP_LEAVE(0x77, FINALLY_0068);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0068;
	}

FINALLY_0068:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31012));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31023));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31023));
		IL2CPP_END_FINALLY(104)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(104)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x77, IL_0077)
	}

IL_0077:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31013));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::RemoveTouchController(UnityEngine.Touch)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF (UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___touch0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * V_2 = NULL;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___touch0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager_RemoveTouchController_m2137F35B9FBFD40481DF6782ED226D9447236BCF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31024));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31025));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31026));
		// using (RemoveTouchControllerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31027));
		IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_RemoveTouchControllerPerfMarker_26();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31041));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31041));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31028));
			// if (!ActiveTouches.TryGetValue(touch.fingerId, out controller))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31029));
			IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
			Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_2 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31042));
			int32_t L_3 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31042));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31043));
			NullCheck(L_2);
			bool L_4 = Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04(L_2, L_3, (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 **)(&V_2), /*hidden argument*/Dictionary_2_TryGetValue_mF15C1DB370CEEC63011DB268A1E77D0119353F04_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31043));
			V_3 = (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31030));
			bool L_5 = V_3;
			if (!L_5)
			{
				goto IL_002d;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31031));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31032));
			IL2CPP_LEAVE(0x7A, FINALLY_006b);
		}

IL_002d:
		{
			// RecyclePointers(controller.InputSource);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31033));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_6 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31044));
			NullCheck(L_6);
			RuntimeObject* L_7 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31044));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31045));
			VirtActionInvoker1< RuntimeObject* >::Invoke(41 /* System.Void Microsoft.MixedReality.Toolkit.Input.BaseInputDeviceManager::RecyclePointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, __this, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31045));
			// controller.TouchData = touch;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31034));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_8 = V_2;
			Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_9 = ___touch0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31046));
			NullCheck(L_8);
			UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_inline(L_8, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31046));
			// controller.EndTouch();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31035));
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_10 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31047));
			NullCheck(L_10);
			UnityTouchController_EndTouch_mBB0C8FF0D1B4CC5BF3C1C986F1B134E8FCDCBA94(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31047));
			// touchesToRemove.Add(controller);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31036));
			List_1_t2A40CCD444FF66B1871D49626E273B4347465641 * L_11 = __this->get_touchesToRemove_22();
			UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * L_12 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31048));
			NullCheck(L_11);
			List_1_Add_m71AFC3161B8141E5CC800EDB1F481131F3E9F720(L_11, L_12, /*hidden argument*/List_1_Add_m71AFC3161B8141E5CC800EDB1F481131F3E9F720_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31048));
			// ActiveTouches.Remove(touch.fingerId);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31037));
			IL2CPP_RUNTIME_CLASS_INIT(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var);
			Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_13 = ((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->get_ActiveTouches_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31049));
			int32_t L_14 = Touch_get_fingerId_m2EF0EF2E6E388C8D9D38C58EF5D03EA30E568E1D((Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8 *)(&___touch0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31049));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31050));
			NullCheck(L_13);
			Dictionary_2_Remove_m6DB227679C4A31F46514CAD78DD69AA39EAA4134(L_13, L_14, /*hidden argument*/Dictionary_2_Remove_m6DB227679C4A31F46514CAD78DD69AA39EAA4134_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31050));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31038));
			IL2CPP_LEAVE(0x7A, FINALLY_006b);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_006b;
	}

FINALLY_006b:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31039));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31051));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31051));
		IL2CPP_END_FINALLY(107)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(107)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x7A, IL_007a)
	}

IL_007a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31040));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.UnityTouchDeviceManager::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityTouchDeviceManager__cctor_mFB0EDF5BD4D39B291147D32B25A232C0EA7DA280 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchDeviceManager__cctor_mFB0EDF5BD4D39B291147D32B25A232C0EA7DA280_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchDeviceManager__cctor_mFB0EDF5BD4D39B291147D32B25A232C0EA7DA280_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31052));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31053));
	{
		// private static readonly Dictionary<int, UnityTouchController> ActiveTouches = new Dictionary<int, UnityTouchController>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31054));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31059));
		Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD * L_0 = (Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD *)il2cpp_codegen_object_new(Dictionary_2_tC4B8B39F4CE340BDCD7FC43FED192444B2789CCD_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_mDC48879027B12DEEF5A5FDBEB8ACA6D4F865884F(L_0, /*hidden argument*/Dictionary_2__ctor_mDC48879027B12DEEF5A5FDBEB8ACA6D4F865884F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31059));
		((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->set_ActiveTouches_21(L_0);
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] UnityTouchDeviceManager.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31055));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31060));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral21FB34F4DAA656F758F1ADDBAE425CF36A75C27E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31060));
		((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_23(L_1);
		// private static readonly ProfilerMarker AddTouchControllerPerfMarker = new ProfilerMarker("[MRTK] UnityTouchDeviceManager.AddTouchController");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31056));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31061));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral4EB8D65397E0EA7D5F983E64A14766E94CA509BA, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31061));
		((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->set_AddTouchControllerPerfMarker_24(L_2);
		// private static readonly ProfilerMarker UpdateTouchDataPerfMarker = new ProfilerMarker("[MRTK] UnityTouchDeviceManager.UpdateTouchData");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31057));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31062));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteral8DBD45BEC618F8791EA0C57E9FCA86B8D1263EF1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31062));
		((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->set_UpdateTouchDataPerfMarker_25(L_3);
		// private static readonly ProfilerMarker RemoveTouchControllerPerfMarker = new ProfilerMarker("[MRTK] UnityTouchDeviceManager.RemoveTouchController");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31058));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31063));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral28A44F30741C541824259E2E5481D0EA59A5D422, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31063));
		((UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_StaticFields*)il2cpp_codegen_static_fields_for(UnityTouchDeviceManager_t8B3D9B74B1351069B72E24FEB55FD24CE98A6963_il2cpp_TypeInfo_var))->set_RemoveTouchControllerPerfMarker_26(L_4);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.UnityInput.XboxController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XboxController__ctor_mEB26934DF010AB9131EE9E7CC6DBE3F86C42D573 (XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (XboxController__ctor_mEB26934DF010AB9131EE9E7CC6DBE3F86C42D573_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, XboxController__ctor_mEB26934DF010AB9131EE9E7CC6DBE3F86C42D573_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31064));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31065));
	{
		// protected override MixedRealityInteractionMappingLegacyInput[] LegacyInputSupport { get; } = new[]
		// {
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_1, axisCodeY: ControllerMappingLibrary.AXIS_2, invertYAxis: true), // Left Thumbstick
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton8), // Left Thumbstick Click
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_4, axisCodeY: ControllerMappingLibrary.AXIS_5, invertYAxis: true), // Right Thumbstick
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton9), // Right Thumbstick Click
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_6, axisCodeY: ControllerMappingLibrary.AXIS_7, invertYAxis: true), // D-Pad
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_3), // Shared Trigger
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_9), // Left Trigger
		//     new MixedRealityInteractionMappingLegacyInput(axisCodeX: ControllerMappingLibrary.AXIS_10), // Right Trigger
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton6), // View
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton7), // Menu
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton4), // Left Bumper
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton5), // Right Bumper
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton0), // A
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton1), // B
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton2), // X
		//     new MixedRealityInteractionMappingLegacyInput(keyCode: KeyCode.JoystickButton3), // Y
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31066));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_0 = (MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C*)SZArrayNew(MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C_il2cpp_TypeInfo_var, (uint32_t)((int32_t)16));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31070));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_2;
		memset((&L_2), 0, sizeof(L_2));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_2), 0, _stringLiteralC128F6DF6A1EE17EA1BE8D8816E6A349F1DE0923, _stringLiteral55557B0A6D6B32A25091D912CACFE3B06B07C1D0, (bool)0, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31070));
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_2);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31071));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_4;
		memset((&L_4), 0, sizeof(L_4));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_4), ((int32_t)338), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31071));
		NullCheck(L_3);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_4);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31072));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_6;
		memset((&L_6), 0, sizeof(L_6));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_6), 0, _stringLiteral8B7970623A806CC748C1B218861BE920B011B98C, _stringLiteral04734178D407F1573AAACEB7E086B11BCFABD7FF, (bool)0, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31072));
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_6);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31073));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_8;
		memset((&L_8), 0, sizeof(L_8));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_8), ((int32_t)339), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31073));
		NullCheck(L_7);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_8);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31074));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_10;
		memset((&L_10), 0, sizeof(L_10));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_10), 0, _stringLiteralA3C990A4BA4B686203D4582C21ECAAFEF25CC3F7, _stringLiteral913CD5CDA7750EC4C845F32CFB033E1369B179B3, (bool)0, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31074));
		NullCheck(L_9);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_10);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31075));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_12;
		memset((&L_12), 0, sizeof(L_12));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_12), 0, _stringLiteral656DE1F988407C087F04D6D4B010279AEFAB457D, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31075));
		NullCheck(L_11);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(5), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_12);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31076));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_14;
		memset((&L_14), 0, sizeof(L_14));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_14), 0, _stringLiteralB7DF14D3D4609EC0F4A2F59741330D5CE07BA0BF, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31076));
		NullCheck(L_13);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(6), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_14);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31077));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_16;
		memset((&L_16), 0, sizeof(L_16));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_16), 0, _stringLiteralAB20906877EEE3FDB9EDE86DA207757C3CAB1135, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31077));
		NullCheck(L_15);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(7), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_16);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_17 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31078));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_18;
		memset((&L_18), 0, sizeof(L_18));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_18), ((int32_t)336), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31078));
		NullCheck(L_17);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(8), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_18);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_19 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31079));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_20;
		memset((&L_20), 0, sizeof(L_20));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_20), ((int32_t)337), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31079));
		NullCheck(L_19);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_20);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_21 = L_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31080));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_22;
		memset((&L_22), 0, sizeof(L_22));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_22), ((int32_t)334), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31080));
		NullCheck(L_21);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)10)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_22);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_23 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31081));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_24;
		memset((&L_24), 0, sizeof(L_24));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_24), ((int32_t)335), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31081));
		NullCheck(L_23);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)11)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_24);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_25 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31082));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_26;
		memset((&L_26), 0, sizeof(L_26));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_26), ((int32_t)330), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31082));
		NullCheck(L_25);
		(L_25)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)12)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_26);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_27 = L_25;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31083));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_28;
		memset((&L_28), 0, sizeof(L_28));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_28), ((int32_t)331), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31083));
		NullCheck(L_27);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)13)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_28);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_29 = L_27;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31084));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_30;
		memset((&L_30), 0, sizeof(L_30));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_30), ((int32_t)332), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31084));
		NullCheck(L_29);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)14)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_30);
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_31 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31085));
		MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146  L_32;
		memset((&L_32), 0, sizeof(L_32));
		MixedRealityInteractionMappingLegacyInput__ctor_m7ABD9B3DDE9A1073A5541484DE96BAE051A060DC((&L_32), ((int32_t)333), _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, (bool)0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31085));
		NullCheck(L_31);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)15)), (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 )L_32);
		__this->set_U3CLegacyInputSupportU3Ek__BackingField_27(L_31);
		// : base(trackingState, controllerHandedness, new XboxControllerDefinition(), inputSource, interactions)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31067));
		int32_t L_33 = ___trackingState0;
		uint8_t L_34 = ___controllerHandedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31086));
		XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359 * L_35 = (XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359 *)il2cpp_codegen_object_new(XboxControllerDefinition_t6D26B4DD149B5271EFBBA4792B1A1259185D2359_il2cpp_TypeInfo_var);
		XboxControllerDefinition__ctor_m0EBBFA2B2E65D98B60D8583F844B3666B2579120(L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31086));
		RuntimeObject* L_36 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_37 = ___interactions3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31087));
		IL2CPP_RUNTIME_CLASS_INIT(GenericJoystickController_t7F5D67AE01835CF2A3BA48EF25334F3585E80845_il2cpp_TypeInfo_var);
		GenericJoystickController__ctor_mD8F4DE1276EA3B3495BEC65A6386B7E2438C719A(__this, L_33, L_34, L_35, L_36, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31087));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31068));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31069));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMappingLegacyInput[] Microsoft.MixedReality.Toolkit.Input.UnityInput.XboxController::get_LegacyInputSupport()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* XboxController_get_LegacyInputSupport_mFEE8C5627D4318DA4820607E4ADB84A028D7079C (XboxController_t8ECC0E3719DF94DE296F9A7C9EB38BD5DA3A66BD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (XboxController_get_LegacyInputSupport_mFEE8C5627D4318DA4820607E4ADB84A028D7079C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, XboxController_get_LegacyInputSupport_mFEE8C5627D4318DA4820607E4ADB84A028D7079C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31088));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31089));
	{
		// protected override MixedRealityInteractionMappingLegacyInput[] LegacyInputSupport { get; } = new[]
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 31090));
		MixedRealityInteractionMappingLegacyInputU5BU5D_t2DD2EB527782848292CB08E992E582F48E69291C* L_0 = __this->get_U3CLegacyInputSupportU3Ek__BackingField_27();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.ViveKnucklesControllerDefinition::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ViveKnucklesControllerDefinition__ctor_m3D93365EC1E071D9179C0D2CBD6D70CC5884551C (ViveKnucklesControllerDefinition_tA63DFCEBFAD95F32D30B544F68CC3280748FA912 * __this, uint8_t ___handedness0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ViveKnucklesControllerDefinition__ctor_m3D93365EC1E071D9179C0D2CBD6D70CC5884551C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ViveKnucklesControllerDefinition__ctor_m3D93365EC1E071D9179C0D2CBD6D70CC5884551C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25708));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25709));
	int32_t G_B3_0 = 0;
	{
		// public ViveKnucklesControllerDefinition(Handedness handedness) : base(handedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25710));
		uint8_t L_0 = ___handedness0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25717));
		BaseInputSourceDefinition__ctor_m3AE7DF7A2F318F719B88DDCEAB53B008CDCA0E3D(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25717));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25711));
		// if ((handedness != Handedness.Left) &&
		//     (handedness != Handedness.Right))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25712));
		uint8_t L_1 = ___handedness0;
		if ((((int32_t)L_1) == ((int32_t)1)))
		{
			goto IL_0016;
		}
	}
	{
		uint8_t L_2 = ___handedness0;
		G_B3_0 = ((((int32_t)((((int32_t)L_2) == ((int32_t)2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25713));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25714));
		// throw new System.ArgumentException($"Unsupported Handedness ({handedness}). The ViveKnucklesControllerDefinition supports Left and Right.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25715));
		uint8_t L_4 = ___handedness0;
		uint8_t L_5 = L_4;
		RuntimeObject * L_6 = Box(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_il2cpp_TypeInfo_var, &L_5);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25718));
		String_t* L_7 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralAB2BB40748121CF37DA5E0282CC37DC27B029080, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25718));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25719));
		ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1 * L_8 = (ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1 *)il2cpp_codegen_object_new(ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1_il2cpp_TypeInfo_var);
		ArgumentException__ctor_m9A85EF7FEFEC21DDD525A67E831D77278E5165B7(L_8, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25719));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_8, ViveKnucklesControllerDefinition__ctor_m3D93365EC1E071D9179C0D2CBD6D70CC5884551C_RuntimeMethod_var);
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25716));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionMapping[] Microsoft.MixedReality.Toolkit.Input.ViveKnucklesControllerDefinition::get_DefaultMappings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* ViveKnucklesControllerDefinition_get_DefaultMappings_m2BB6A448979A36275E7C16DE212EF67E4250C899 (ViveKnucklesControllerDefinition_tA63DFCEBFAD95F32D30B544F68CC3280748FA912 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ViveKnucklesControllerDefinition_get_DefaultMappings_m2BB6A448979A36275E7C16DE212EF67E4250C899_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ViveKnucklesControllerDefinition_get_DefaultMappings_m2BB6A448979A36275E7C16DE212EF67E4250C899_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25720));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25721));
	{
		// protected override MixedRealityInputActionMapping[] DefaultMappings => new[]
		// {
		//     new MixedRealityInputActionMapping("Spatial Pointer", AxisType.SixDof, DeviceInputType.SpatialPointer),
		//     new MixedRealityInputActionMapping("Trigger Position", AxisType.SingleAxis, DeviceInputType.Trigger),
		//     new MixedRealityInputActionMapping("Trigger Press (Select)", AxisType.Digital, DeviceInputType.Select),
		//     new MixedRealityInputActionMapping("Trigger Touch", AxisType.Digital, DeviceInputType.TriggerTouch),
		//     new MixedRealityInputActionMapping("Grip Average", AxisType.SingleAxis, DeviceInputType.Trigger),
		//     new MixedRealityInputActionMapping("Trackpad Position", AxisType.DualAxis, DeviceInputType.Touchpad),
		//     new MixedRealityInputActionMapping("Trackpad Touch", AxisType.Digital, DeviceInputType.TouchpadTouch),
		//     new MixedRealityInputActionMapping("Trackpad Press", AxisType.Digital, DeviceInputType.TouchpadPress),
		//     new MixedRealityInputActionMapping("Inner Face Button", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Outer Face Button", AxisType.Digital, DeviceInputType.ButtonPress),
		//     new MixedRealityInputActionMapping("Index Finger Cap Sensor", AxisType.SingleAxis, DeviceInputType.IndexFinger),
		//     new MixedRealityInputActionMapping("Middle Finger Cap Sensor", AxisType.SingleAxis, DeviceInputType.MiddleFinger),
		//     new MixedRealityInputActionMapping("Ring Finger Cap Sensor", AxisType.SingleAxis, DeviceInputType.RingFinger),
		//     new MixedRealityInputActionMapping("Pinky Finger Cap Sensor", AxisType.SingleAxis, DeviceInputType.PinkyFinger),
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25722));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_0 = (MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA*)SZArrayNew(MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA_il2cpp_TypeInfo_var, (uint32_t)((int32_t)14));
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25723));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_2 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_2, _stringLiteral0F9D13B1C31A5F4C68D0EEA587D21588F757084E, 7, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25723));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_2);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25724));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_4 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_4, _stringLiteral389C31E60DD0E577273C009A47D71D79B84A138C, 3, ((int32_t)10), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25724));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_4);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25725));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_6 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_6, _stringLiteral66E3998641BA92B9A789AE078DDAF008AE3C3881, 2, ((int32_t)25), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25725));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_6);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_7 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25726));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_8 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_8, _stringLiteral95EFCD8A09FF0DFDCCBB845A6A8357BA36522BF3, 2, ((int32_t)11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25726));
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_8);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_9 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25727));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_10 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_10, _stringLiteral1E4850764A9CD7B8BCFAFBA165A9885423D24F56, 3, ((int32_t)10), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25727));
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_10);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_11 = L_9;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25728));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_12 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_12, _stringLiteral01FD3AAC7F11CC7F6594833D76B910FB4805D560, 4, ((int32_t)21), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25728));
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(5), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_12);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_13 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25729));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_14 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_14, _stringLiteralC3D412B022C729047A3D0A7EF95B8E0F9A7E5DC5, 2, ((int32_t)22), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25729));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(6), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_14);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_15 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25730));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_16 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_16, _stringLiteralA3EEA3403E74D1D76ADADD79641A30AC00A9ED76, 2, ((int32_t)24), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25730));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_16);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(7), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_16);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_17 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25731));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_18 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_18, _stringLiteralF61219430ADB6DAF41DEB37CBCCD31B790D89026, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25731));
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_18);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(8), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_18);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_19 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25732));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_20 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_20, _stringLiteralF1357DB265A92BBB6D1D47A0E99634C06E522DC1, 2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25732));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_20);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_20);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_21 = L_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25733));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_22 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_22, _stringLiteral8FEAC14DA484CAF7B9EEE0BE17699EBE9BC2C093, 3, ((int32_t)33), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25733));
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_22);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)10)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_22);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_23 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25734));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_24 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_24, _stringLiteralE9385D48D9D0F106119D7E40570281511CBE54B7, 3, ((int32_t)37), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25734));
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_24);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)11)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_24);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_25 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25735));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_26 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_26, _stringLiteralABAC81EB87F7C90922F66FD5618A7B497DEC587B, 3, ((int32_t)41), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25735));
		NullCheck(L_25);
		ArrayElementTypeCheck (L_25, L_26);
		(L_25)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)12)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_26);
		MixedRealityInputActionMappingU5BU5D_tD8A9185D042285DEDCC2C66652D2F96A8F49BDAA* L_27 = L_25;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25736));
		MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * L_28 = (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)il2cpp_codegen_object_new(MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044_il2cpp_TypeInfo_var);
		MixedRealityInputActionMapping__ctor_mAEFE671F22EE162107C3C01F78241A90F824B032(L_28, _stringLiteral48C19D7517421E7E0771F84827A99574BB437A9F, 3, ((int32_t)45), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25736));
		NullCheck(L_27);
		ArrayElementTypeCheck (L_27, L_28);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)13)), (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 *)L_28);
		return L_27;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547ADMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9772));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9773));
	{
		// public static MixedRealityPose ZeroIdentity { get; } = new MixedRealityPose(Vector3.zero, Quaternion.identity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9774));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = ((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var))->get_U3CZeroIdentityU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_KeyCode_m79E1B5F6F3728CA8F78404994B2B8A224A583484_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25574));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25575));
	{
		// public KeyCode KeyCode { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25576));
		int32_t L_0 = __this->get_U3CKeyCodeU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_AxisCodeX_m37931B164E8D840CEA79053E41AA5F813C825857_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25577));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25578));
	{
		// public string AxisCodeX { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25579));
		String_t* L_0 = __this->get_U3CAxisCodeXU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_AxisCodeY_mDC8DEE822CBE14A113A78420995B9B3B9CAFF271_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25580));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25581));
	{
		// public string AxisCodeY { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25582));
		String_t* L_0 = __this->get_U3CAxisCodeYU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_InvertXAxis_m475CBB1ECDEC49CBAC8D223F40B03FCF7974B0F7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25583));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25584));
	{
		// public bool InvertXAxis { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25585));
		bool L_0 = __this->get_U3CInvertXAxisU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_inline (MixedRealityInteractionMappingLegacyInput_t0BECC3B45B1E66DC18ED036682C35467186DD146 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMappingLegacyInput_get_InvertYAxis_m678B2D7490E7C95B1103A244AB2545BC53A37EF8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25586));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25587));
	{
		// public bool InvertYAxis { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25588));
		bool L_0 = __this->get_U3CInvertYAxisU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106A_inline (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106AMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputActionMapping_get_Description_m579CF89734B60B72EA1E6E525EC78F9F97A0106A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25214));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25215));
	{
		// public string Description => description;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25216));
		String_t* L_0 = __this->get_description_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FD_inline (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FDMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputActionMapping_get_AxisType_m804C388D3BA8F9B790E7ED4839B2B554294B07FD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25217));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25218));
	{
		// public AxisType AxisType => axisType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25219));
		int32_t L_0 = __this->get_axisType_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6_inline (MixedRealityInputActionMapping_t2E2EBECBD22F355DA309B903CD5327B285CDD044 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputActionMapping_get_InputType_mD289BC51D8C02002718299B86FC660F9734C07F6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25220));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25221));
	{
		// public DeviceInputType InputType => inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25222));
		int32_t L_0 = __this->get_inputType_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052DMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_AxisType_mABE186767788C369755C45C43795CB9F51E5052D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25325));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25326));
	{
		// public AxisType AxisType => axisType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25327));
		int32_t L_0 = __this->get_axisType_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CDMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25329));
	{
		// public DeviceInputType InputType => inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25330));
		int32_t L_0 = __this->get_inputType_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715DMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_set_Pointer_m08EEA90D4FBC92987AF27A57DB333A224F23715D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26777));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26778));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26779));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CPointerU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CCMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_set_Count_m42A722503C48B9872037BC5B34A9A17853B115CC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26783));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26784));
	{
		// public int Count { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26785));
		int32_t L_0 = ___value0;
		__this->set_U3CCountU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_inline (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90AMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption_get_ControllerType_mF518B43F8225969913CE86CEF387127CF3FAF90A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26515));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26516));
	{
		// public SupportedControllerType ControllerType => controllerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26517));
		int32_t L_0 = __this->get_controllerType_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_inline (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEFMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption_get_Handedness_mB50764164DA4E592DCEEF860608677767BEE4AEF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26518));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26519));
	{
		// public Handedness Handedness => handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26520));
		uint8_t L_0 = __this->get_handedness_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_inline (PointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerOption_get_PointerPrefab_m11CEB5E46B2CDFB57D2A561E8A53F3BD5A601410_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26521));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26522));
	{
		// public GameObject PointerPrefab => pointerPrefab;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26523));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_pointerPrefab_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_set_Controller_mCAEA7C7A999165BB3A3E62A6F66B88D4FC4DE217_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26845));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26846));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26847));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CControllerU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_inline (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11AMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands_get_KeyCode_m57FD6DCFF88FC2282A875DA0F22A262F37FAD11A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26564));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26565));
	{
		// public KeyCode KeyCode => keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26566));
		int32_t L_0 = __this->get_keyCode_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_inline (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechCommands_get_Action_m1F207D59A7C0B211D89000BD38A14130A5ADFB89_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26567));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26568));
	{
		// public MixedRealityInputAction Action => action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26569));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_action_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_Confidence_mE5E0E6F5192264C339816D9F1DF841C77D8B42D6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26884));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26885));
	{
		// public RecognitionConfidenceLevel Confidence { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26886));
		int32_t L_0 = ___value0;
		__this->set_U3CConfidenceU3Ek__BackingField_8(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_PhraseDuration_mDC1BA9770CFAFF75355A8108E130AC8395C96687_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26866));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26867));
	{
		// public TimeSpan PhraseDuration { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26868));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_0 = ___value0;
		__this->set_U3CPhraseDurationU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0EMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_PhraseStartTime_mFD9200AC3DE0246080CBAE5CB8E93128BA036F0E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26872));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26873));
	{
		// public DateTime PhraseStartTime { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26874));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = ___value0;
		__this->set_U3CPhraseStartTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEFMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_set_Command_mD443E8DC1F18C638ED24C2DF47B53BBB54CECBEF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26878));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26879));
	{
		// public SpeechCommands Command { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26880));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_0 = ___value0;
		__this->set_U3CCommandU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27106));
	{
		// public MixedRealityInteractionMapping[] Interactions { get; private set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27107));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_0 = __this->get_U3CInteractionsU3Ek__BackingField_9();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995AMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27075));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27076));
	{
		// public Handedness ControllerHandedness { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27077));
		uint8_t L_0 = __this->get_U3CControllerHandednessU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 43));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 44));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 45));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 46));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1;
		memset((&L_1), 0, sizeof(L_1));
		AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline((&L_1), (intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 47));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_2 = V_0;
		return L_2;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_Enabled_m27A5493C062C23CE0DBE56575232986FAEB9AD78_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27064));
	{
		// public bool Enabled { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27065));
		bool L_0 = __this->get_U3CEnabledU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_set_Enabled_m74B4D40E82319EBCD68624418DDCCB48D61247B6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27066));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27067));
	{
		// public bool Enabled { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27068));
		bool L_0 = ___value0;
		__this->set_U3CEnabledU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 56));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 57));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 58));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 59));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A((intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 60));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7EDMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_AxisCodeX_m2DAF58D56838E68530E683A5D4A7D59291ABB7ED_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25344));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25345));
	{
		// public string AxisCodeX => axisCodeX;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25346));
		String_t* L_0 = __this->get_axisCodeX_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8BMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_KeyCode_m113EBC32F2F16CE11E55B08EEC6D05EA2109CC8B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25342));
	{
		// public KeyCode KeyCode => keyCode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25343));
		int32_t L_0 = __this->get_keyCode_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFDMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27078));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27079));
	{
		// public IMixedRealityInputSource InputSource { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27080));
		RuntimeObject* L_0 = __this->get_U3CInputSourceU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52BMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_AxisCodeY_m6F653E85049348D9E671DCCC677711795A30B52B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25347));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25348));
	{
		// public string AxisCodeY => axisCodeY;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25349));
		String_t* L_0 = __this->get_axisCodeY_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___name0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 25));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 26));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 27));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 28));
		String_t* L_0 = ___name0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		intptr_t L_1 = ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370(L_0, (uint16_t)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		__this->set_m_Ptr_0((intptr_t)L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 29));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_inline (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16BMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_get_Controller_mE5FE5DBBEA0653D3B626F873101857CABDF1E16B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30071));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30072));
	{
		// public MouseController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30073));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_0 = __this->get_U3CControllerU3Ek__BackingField_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1_inline (MixedRealityControllerAttribute_t272BEB7345806302811A499A74F732DB84A0BE8D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityControllerAttribute_get_SupportedHandedness_m301BD6567F7EE7357C9CADD0EBA014C6E3AF76C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 24138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 24139));
	{
		// public Handedness[] SupportedHandedness { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 24140));
		HandednessU5BU5D_tDC6CE4C09D492E2F7F69670E0C52BE239B1F323B* L_0 = __this->get_U3CSupportedHandednessU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_inline (MouseDeviceManager_t7B41DD723891FD580FD565633C257B4693077268 * __this, MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MouseDeviceManager_set_Controller_m0B461C4818CDE7B92392CE4BCB994A9B5154DEE5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30074));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30075));
	{
		// public MouseController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30076));
		MouseController_t32773387F694F8A6F61C09191E64D3CFD0A24D5F * L_0 = ___value0;
		__this->set_U3CControllerU3Ek__BackingField_25(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_inline (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityMouseInputProfile_get_CursorSpeed_m622E2CE6FA6C9301F82DA2661E83168C192A4302_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29348));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29349));
	{
		// public float CursorSpeed => cursorSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29350));
		float L_0 = __this->get_cursorSpeed_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_inline (MixedRealityMouseInputProfile_t505CFABE866444FCA79D7B37FF61992706D8A9DC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568EMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityMouseInputProfile_get_WheelSpeed_mA651DF0AF262A02348F981895F2D0FA1CC1D568E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29351));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29352));
	{
		// public float WheelSpeed => wheelSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 29353));
		float L_0 = __this->get_wheelSpeed_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25973));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25974));
	{
		// public MixedRealityGestureMapping[] Gestures => gestures;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25975));
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_0 = __this->get_gestures_10();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25953));
	{
		// public GestureInputType GestureType => gestureType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25954));
		int32_t L_0 = __this->get_gestureType_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25955));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25956));
	{
		// public MixedRealityInputAction Action => action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25957));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_action_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0DMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_Lifetime_mC66CB091074591866D20CC0F294C7CF269DABE0D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30511));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30512));
	{
		// public float Lifetime { get; private set; } = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30513));
		float L_0 = __this->get_U3CLifetimeU3Ek__BackingField_16();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_Lifetime_m6684A8195DD8C03689FC40EB36FF5BE188B3FC78_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30514));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30515));
	{
		// public float Lifetime { get; private set; } = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30516));
		float L_0 = ___value0;
		__this->set_U3CLifetimeU3Ek__BackingField_16(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_TouchData_m87C1C4416A4D77D89A6B51E1B0F87F4603040AB2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30499));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30500));
	{
		// public Touch TouchData { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30501));
		Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_0 = __this->get_U3CTouchDataU3Ek__BackingField_14();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_ManipulationThreshold_m6CF2CE752D1E832DD9B9A6C9A1B3E98D6C448D93_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30493));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30494));
	{
		// public float ManipulationThreshold { get; set; } = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30495));
		float L_0 = __this->get_U3CManipulationThresholdU3Ek__BackingField_13();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_get_MaxTapContactTime_mB20613C897C9BA70891F4A37393D3A7A9C43A301_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30487));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30488));
	{
		// public float MaxTapContactTime { get; set; } = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30489));
		float L_0 = __this->get_U3CMaxTapContactTimeU3Ek__BackingField_12();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_TouchData_mAF081C3208B82FF5C62D2529EE47AEC04F26E924_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30502));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30503));
	{
		// public Touch TouchData { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30504));
		Touch_tAACD32535FF3FE5DD91125E0B6987B93C68D2DE8  L_0 = ___value0;
		__this->set_U3CTouchDataU3Ek__BackingField_14(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_inline (UnityTouchController_tA24165ECA673D0762BF353237A7175505C1412E5 * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1BMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UnityTouchController_set_ScreenPointRay_m4EF5EBD17B1398E4CD9AC5ECEC23526B534E5D1B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30508));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30509));
	{
		// public Ray ScreenPointRay { get; internal set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 30510));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = ___value0;
		__this->set_U3CScreenPointRayU3Ek__BackingField_15(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* Array_Empty_TisPointerOption_t1FA5E38BDEFB69C08A29A33BDA3721B0EE6F4109_mF9F66011D5045DE60A11CF78DD342158F92ABBB5_gshared_inline (const RuntimeMethod* method)
{
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, method, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(IL2CPP_RGCTX_DATA(method->rgctx_data, 0));
		PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* L_0 = ((EmptyArray_1_t9D6B26C61D63F2FB04A21B84D8E6B49B40C77F5E_StaticFields*)il2cpp_codegen_static_fields_for(IL2CPP_RGCTX_DATA(method->rgctx_data, 0)))->get_Value_0();
		return (PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E*)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* Array_Empty_TisSpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_mC0B94C75F5B5BEC5644C81EB6F0DD3944D89A97F_gshared_inline (const RuntimeMethod* method)
{
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, method, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		IL2CPP_RUNTIME_CLASS_INIT(IL2CPP_RGCTX_DATA(method->rgctx_data, 0));
		SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3* L_0 = ((EmptyArray_1_t7FBED657CACCBD55797E008928568C43768E418E_StaticFields*)il2cpp_codegen_static_fields_for(IL2CPP_RGCTX_DATA(method->rgctx_data, 0)))->get_Value_0();
		return (SpeechCommandsU5BU5D_t78420D7B2EBEAB886AC40221CA5E4C7B5FA675C3*)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get_value_0();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR void BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209_gshared_inline (BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseDataProvider_1_set_Registrar_mF8F5077D3E3EC83D5E1E3DA46E824EA25F74B209_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3504));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3505));
	{
		// protected IMixedRealityServiceRegistrar Registrar { get; set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3506));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CRegistrarU3Ek__BackingField_12(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2C_gshared_inline (BaseDataProvider_1_t50F72FDA386766E084CAF43074D4580D23686278 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2CMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseDataProvider_1_get_Service_m6FE3FC2A780FCF338E18510675CC1282F7907D2C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3507));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3508));
	{
		// protected T Service { get; set; } = default(T);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3509));
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_U3CServiceU3Ek__BackingField_13();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_gshared_inline (Enumerator_tED23DFBF3911229086C71CCE7A54D56F5FFB34CB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m5B32A9FC8294CB723DCD1171744B32E1775B6318_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE  L_0 = (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE )__this->get_current_3();
		return (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_gshared_inline (KeyValuePair_2_t23481547E419E16E3B96A303578C1EB685C99EEE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AECMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_m8C7B882C4D425535288FAAD08EAF11D289A43AEC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_value_1();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_2 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)__this->get__items_1();
		int32_t L_3 = ___index0;
		RuntimeObject * L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)L_2, (int32_t)L_3);
		return (RuntimeObject *)L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE  Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553_gshared_inline (Enumerator_t9A2E00C583A23B1B5B7D051DF98EBA95FA7174AF * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_mD6B1E9D5866E377F8CAD19D88CECDB8AA7016553_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE  L_0 = (KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE )__this->get_current_3();
		return (KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8E_gshared_inline (KeyValuePair_2_t86464C52F9602337EAC68825E6BE06951D7530CE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8EMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_m6111F7FFB9F9E80C559084882040115B4F3DFF8E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_value_1();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get__current_3();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___markerPtr0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 49));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 50));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 51));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 52));
		intptr_t L_0 = ___markerPtr0;
		__this->set_m_Ptr_0((intptr_t)L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 53));
		intptr_t L_1 = ___markerPtr0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5((intptr_t)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 54));
		return;
	}
}
