#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct VirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer
struct AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback
struct UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController
struct UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze
struct MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera
struct MoveWithCamera_t4BD7E330C0418C95D3D36F7BC3A9751995ABFD66;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene
struct OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze
struct OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController
struct OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase
struct PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78
struct U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf
struct PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture
struct PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf
struct PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture
struct PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap
struct ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData
struct ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData[]
struct ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir
struct RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf
struct ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture
struct ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo
struct SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback
struct SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText
struct StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs
struct TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1;
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial
struct TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A;
// Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler
struct BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget
struct EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32;
// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider
struct IMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider
struct IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeSaccadeProvider
struct IMixedRealityEyeSaccadeProvider_tC6911CB1724D128897B6D143DB261F75A4DC737C;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem
struct IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>
struct InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Object>
struct InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction[]
struct MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7;
// System.Action
struct Action_t591D2A86165F896B4B800BB5C25CE18672A55579;
// System.Action`1<UnityEngine.AsyncOperation>
struct Action_1_tCBF754C290FAE894631BED8FD56E9E22C4C187F9;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>
struct List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>
struct List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A;
// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D;
// System.Collections.Generic.List`1<UnityEngine.GameObject>
struct List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Collections.IEnumerator
struct IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.EventArgs
struct EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.String
struct String_t;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.AsyncOperation
struct AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D;
// UnityEngine.AudioClip
struct AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051;
// UnityEngine.AudioClip/PCMReaderCallback
struct PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB;
// UnityEngine.AudioClip/PCMSetPositionCallback
struct PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801;
// UnityEngine.AudioSource
struct AudioSource_t5196F862B4E60F404613361C90D87FBDD041E93C;
// UnityEngine.BoxCollider
struct BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA;
// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.GameObject[]
struct GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520;
// UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A;
// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598;
// UnityEngine.Material[]
struct MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.ParticleSystem
struct ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D;
// UnityEngine.ParticleSystem/Particle[]
struct ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513;
// UnityEngine.RectTransform
struct RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20;
// UnityEngine.RectTransform/ReapplyDrivenProperties
struct ReapplyDrivenProperties_t431F4FBD9C59AE097FE33C4354CC6251B01B527D;
// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4;
// UnityEngine.Rigidbody
struct Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5;
// UnityEngine.TextMesh
struct TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK[];
IL2CPP_EXTERN_C RuntimeClass* Action_t591D2A86165F896B4B800BB5C25CE18672A55579_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AssertionException_t2E33237ABD721A57D41FC8745BCA4573DB40626E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEyeSaccadeProvider_tC6911CB1724D128897B6D143DB261F75A4DC737C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SceneManager_t68A7070D2AD3860C3EE327C94F38270E49AFB489_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral12556386DFAA448A48BEFF050EA51E0C3E4A1419;
IL2CPP_EXTERN_C String_t* _stringLiteral12DDC6C246C33D620A53CB93999148F7F894EBBC;
IL2CPP_EXTERN_C String_t* _stringLiteral1E5C2F367F02E47A8C160CDA1CD9D91DECBAC441;
IL2CPP_EXTERN_C String_t* _stringLiteral314CD1C72B3CA3AD0B1C14114D2D635596FAAA4F;
IL2CPP_EXTERN_C String_t* _stringLiteral47C92F6481F3E59085C6288135ABB79FF1D65F6D;
IL2CPP_EXTERN_C String_t* _stringLiteral521B667439127627B456DADB3691F7093A8CD8E8;
IL2CPP_EXTERN_C String_t* _stringLiteral57A5148BECED418F40EB302C5682E87B7511F839;
IL2CPP_EXTERN_C String_t* _stringLiteral5884DBF8FD35C0F3AF29A837AE9F9125CCBA6D57;
IL2CPP_EXTERN_C String_t* _stringLiteral59A60488ADD39244816D3811EE3D7A60A490419A;
IL2CPP_EXTERN_C String_t* _stringLiteral6EAE3A5B062C6D0D79F070C26E6D62486B40CB46;
IL2CPP_EXTERN_C String_t* _stringLiteral94A946619141279A1FFFFF0FD015FB243C63A901;
IL2CPP_EXTERN_C String_t* _stringLiteral982D2E9847B19C5DA204C4A7B5584CF83A8A97A3;
IL2CPP_EXTERN_C String_t* _stringLiteralBA986AEE14F7BCDC0B371864E0D77ABAC5FF0735;
IL2CPP_EXTERN_C String_t* _stringLiteralC510EA100EEE1C261FE63B56E1F3390BFB85F481;
IL2CPP_EXTERN_C String_t* _stringLiteralD53CCE2D2C885443C7CCAD611FAFDF83B2C9D001;
IL2CPP_EXTERN_C String_t* _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
IL2CPP_EXTERN_C String_t* _stringLiteralE132401F04ECCBC18D7C1DC3504A703C1644EC0E;
IL2CPP_EXTERN_C String_t* _stringLiteralEB67F80363F602C0EADE8733539ED94BEA9F6F2C;
IL2CPP_EXTERN_C const RuntimeMethod* AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_m8E4D670176BB9E92BC5BDD726E38CCA571D94239_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D_mA6EBF435A59643B674086A2F309F6A4DCB263452_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* CoreServices_GetInputSystemDataProvider_TisIMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA_m22BF11C0357D953FEE7BD3CB7FBF94EA0909A41A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m0C9F007B48F37CD7F09430C3C1B407ACE6213812_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_mD7A7C49379527533124821D1B6C6E959321A327A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m774CA65723516595B6E22D200D19ADBE8C3E7969_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m926AB6D529397E01E894BC48A4B1EC66A276105F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m6C0BE2971AF7991C469272BC300664B8BAF8D800_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m9EF792037917F6C550D7D9CD33BD97A38C82D709_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponentInChildren_TisTextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A_m9E4D7FFDEA6E42F7B15ABD2843855CF150415620_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A_mB2E029A9BEB11D7E5ACB883CCC9A8905E935B25E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m3F7B0DBB84912A2D10FB3328CF93B90917C7C687_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m731030C9624FD2128A48ED76EE4BE9F9E0F16720_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_GetEnumerator_m3E7042AE58561530C10A47E4F39B8368CFCB693B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_GetEnumerator_m42F98C64BAED0F47AB5E97E391776E62E1B8DE83_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_mF1C925F80A9A65691072AC47AB75E6EB2E16BF15_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m23BDA1112566B2E9149D885E4061EA3063EEDA60_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m34226F6B737610432345A8C4C6857E773B20E012_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_set_Item_m3862705BC601E074C5F1B2B910808F5FCA887B52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57C15B11ADBB2244628F530D564C40E0693C8811_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m771F66C581858199AC12053C90E2223FF1139583_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m51292C38190C7808D21CB7BCB81B53DBFBDA931F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m7C9BCFDA67C9DDAC4368F9211B03087D38540C22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF081561D788FDD14DBD1AEF7F53B55398C6DF565_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_mED8BD860AA0D056A183E809B20533A419626E1B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_m4A3F4DEEF214F29B84AA5351131AAE43925CA9EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mA5D96319DEC6CEEA9EF3360593EE3AB49C9C086D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Start_mED7B15C1C88FA34CD44B32C7E6AA1EC09D8A8037_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_Update_m1ABDA77EDDCF4ED2295C32EAE803A9659D59B6C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze__cctor_m50B9FBB26366B7B328A5409E6A0151DC54153F3B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze__ctor_mAE2AB58A689E21312FC47C6CE796D517A7C3F74F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveWithCamera_Update_m84453B97F8DCA494F4F8768B5FBB6C91F80DACCD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveWithCamera__ctor_mCB935D4A4CE2F487EE23F369008629B67C715008_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m7A569670D8A55E7D133344F8395F551394359C78_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisStatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_m0D12AE2AAF1CD03C6D9B2CE08E0F2385F64DD641_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLoadStartScene_Start_mA7DDB3EB1FCFCF2B8146E5F1604A941CDAD5B9EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLoadStartScene__ctor_mC10A9B104F20EA281B4DEC6B5060C3E5BD8FD9B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLookAtRotateByEyeGaze_OnEyeFocusStay_mDD4E5E47CAA30CF116EF57B8D1D70EF1DC067A8C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnLookAtRotateByEyeGaze__ctor_m514112D022BF34DBC48EADE08F36ED469981C8DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController_Awake_m7EFBA9C22E6CF24833638E5F2B8697973243A65E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m2A80E3637806B75EC4AF32BAF49B5F6C99D7C831_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mD2271168A5EB6BB881F34599B6238BE9B5F03F2F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mCFFC85EC5CC9C2564E0C2C67A074EAAEF87D3055_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m7F2C9E92174CFE8D0091FAD8D1FA3CC92CFACFAC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* OnSelectVisualizerInputController__ctor_m05A49D7083F5D19F8D091438F5240870DA34795F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_ComputePanSpeed_mCA43DC21C566CC1BC555A725889DC7071840A606_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_Initialize_mDCD64BFF82A96B562EAA64CCBB124BA23110C519_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_UpdateCursorPosInHitBox_mBCA4534A82AF7D807A5128EE4130547D3F51310B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_UpdatePanZoom_m83353C01FD2D09C003A1DB2D724BE0E61F1A011D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_ZoomDir_mF66C319EEE829391B5133240D2FC7CDC06587BD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_ZoomIn_m5B27704D6AB71949EAA30D3A589D38C7660999FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_ZoomOut_mE8334F1F113D5EF442AE7BE29B9A69DE46EA83EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_ComputePanSpeed_m7DA2DDB21A887B7280B3CD72F9B3485DD98B6D2D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_Initialize_mCFE17F1C05062592F2707BE630F513E88549FAB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_UpdateCursorPosInHitBox_m1BC9CBDCA8BFDE858AC59C0EA900D10142B071EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_UpdatePanZoom_mBD748BDEA92BD2B564BE6014F8DD693B725F99C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_ZoomDir_mE5C715080FA4C1B08016EE4DD2CA5909C81C274A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_ZoomIn_m6E7E401773DB9EAA655FDD764EF512352E1C3F0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_ZoomOut_mEFEAABDE72ACA5C1F7DD588214EF68A2BA96FC9B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_get_TextureShaderProperty_m3A749A1F9159EA12E0ABA1582E0552E93D56A57D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBaseTexture_set_TextureShaderProperty_m9020EF5F2CEDA280BF6810BD03C84F0FADD0078E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_DisableHandZoom_m40D967C6CBE9A22698829B77F126321BB2023A1E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_EnableHandZoom_m4E462584A04ADFAE571930D0B89219C446E24A92_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_LateUpdate_mDFBD76B5480F81B1A2200607361D209002309C4D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_m43BB24C696924FDAF214ADA82ED2747D50297F1A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mF631029DD0FD040BCAC8B3AAF27A819C9B36CD17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57A2E1C96A5C0DC86F9601DFAD094F7E8943487F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAD01885E7B419604F0DD9110C0F9E37B95B45064_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mCFE03DDA43A7EC34B28270BD5F799DAA5A24CBAA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mAB369C57C4251DF1D897BDD7A9E579A27EA51AE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m6B3E9CC012AC8865169962EA2AA05285EE536839_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m07B9309FA58BC37E4AEFB7BCB8F299FE6FFABFAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mD8B2142CEE210806FFA3954870C4873DF4D2088B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_PanLeftRight_mB40616E7456A17FA2C95E221BF8F3C4FF5B739E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_PanUpDown_m48637C91D434DA0D2C522A308CA229D2C1FE58DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ResetScroll_OnSaccade_m52F6654EDA406B8DCE96AC130BBAEAA5BC58B034_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_StartFocusing_m959C7C6596810E852E6FB23AEDA87F628F856338_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateValues_TisNullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_m4362AF10F04D277C0F495E6501B2555C3AE2CE7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateValues_TisRectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20_m0986A0E9A9C40D5871F32C6013F1A119254EE243_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateValues_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mF431D17971643FF8B971CC71970CF69F38E4C3A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomIn_Timed_m4598F3D42F293BBE29BB037DF8F541A83F8CC6BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomOut_Timed_m1065A23AD665D67C98EF22C1D68E2E5A348D0ABE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomRectTransf_Start_m15F3F920924C918A6C742C4A0BEBBFA2D7EC2523_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomRectTransf_Update_mEAA684DD81C5C01D14F9F27651C4462AF3C3D16C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomRectTransf__ctor_mC2432E8E567FCAD869C544E41DBBB3229537EB3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomTexture_Start_mAC392E1F8A26EC23DB72E84B8BDD7B2930368399_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomTexture_Update_mE5F2C025855941D14B6D2C0F37E8A8D886C5D64B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanZoomTexture__ctor_m99882119C0740D5FF4FB6733B5E88C90278E7E75_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_DisplayParticles_m0B30A71A54AB6445324B0976DA11C777142CFA4D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_GetPositionOfParticle_mA114FBA53A8522D08C72536751CC85C1B29949C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_HideHeatmap_m4B26EED245CF467A1E876C05F5A0BF022BFE672C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_SetParticle_mB7F67715D72B681732DECD63731E9E86E2E5B065_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_ShowHeatmap_m86344918A9A496239AA6E8DB4D537F4986266ABF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_Start_m539BA4F1AFB4C3A7C83E0F90EF58590071299ED2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_UpdateColorForAllParticles_mA0D223548D977852786EB677BDD57571420702DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap__ctor_m61E1CBB11275858837F16E4DDED7D245EEDADDDF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RotateWithConstSpeedDir_RotateTarget_m0CB85267A40556C1A41556AB999291B98A2AF291_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RotateWithConstSpeedDir__ctor_mB262D658E29D3A1449331F2A4EA668333B4469CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollRectTransf_Start_m76C2D3084EA1371CEFF0AFC59A79200D283590B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollRectTransf_Update_mEC76D0B4B1C573C3447EC06B1776B402B2DBAD47_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollRectTransf__ctor_m215A75AEF079F45AE3A7F8795BF424950E8ABCB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollTexture_Start_m477A67C6C3433037C471989D20E854BB9147E532_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollTexture_Update_m93C04352DE3F66BA923BFE8C082AA5E6133F5B95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ScrollTexture__ctor_m8E4E756225AA681194B856B6E35E668F20C044EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SnapTo__ctor_m9AA9BAD3AE9F57031C53529B50B7A71C2F464096_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechVisualFeedback_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mB3E99F59F71C773FE3BCE50DA4B34B9EA1DCB55A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechVisualFeedback_Update_mDE6E5EDFB424742042C6531596FAD83FA5C822EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechVisualFeedback__ctor_m127485527CC1AA14105B102E65CC930047155739_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StatusText_Awake_m600ADED9FC8497B9D4B8029856D783385918537B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StatusText_Start_mF0E5DC9CB3279E63A8C71DD576ABA478945BDCB6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StatusText__ctor_mA977F88533AA268E8803DD0EC4A8ED6C83C16197_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetEventArgs__ctor_m3C40A03810DB73994D7CD2F5206A9A98CABA38BB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetEventArgs_get_HitTarget_m27AC2AE7B41B0F5A3C74B63CF085BE457E698A39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_Start_mB4C412B31F2DD78F02C937BA5EE3F8858192A8D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_Update_m0E9EE1194B14EE7B00AB588542A7516392494208_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial__ctor_m3C296D4D4F34D7EB8DF14D55D4B8315C972B5889_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TargetGroupCreatorRadial_get_InstantiatedObjects_m4980FD31641B861744A101E47D0BB0A56026C9D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CZoomAndStopU3Ed__78_MoveNext_mC5A85BB73134DB7B3E3CD9A542C6D8388CAC84F5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CZoomAndStopU3Ed__78_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m9FFD57AFE886777B99E176DE9582F5AA39F5CAFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_Reset_m80409250B2FCCD442213ACBCF3DBA31A19B5490C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_get_Current_mB05B0637AC8D59840ABA2AADF5A0937F73E04DCF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CZoomAndStopU3Ed__78_System_IDisposable_Dispose_mBDB67B01F0543CEDFAC9438D6E671A4A45E604EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_LoadData_mE8D3B345FA0D0C30B04D965D96AC8338B9A7AA95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_PauseReplay_m9F1FC6EABE7CDE43D72D7E4D3DD7B83A34B23FCD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_StartRecording_m9D0D289EA771C46B8F7A1005ABD4472B03382601_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_StartReplay_mC3B310F0410ABFC4F609BF527A821B343045C9D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_StopRecording_m64431CDDDC44A193D471C8872FDAC6D8575E0A74_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback_Update_m151D9F5C7B14165541F2BB381D847CE4E4ABA85A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderFeedback__ctor_mA429AF32DAAC6ECD5BCC4E7F4765E7B70F140085_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_LoadData_m0C6EC91736FC9409EAA4FB66CD291E92FC5FAF5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_PauseReplay_m9DE49D3ECC3926998D189EAB3825938DA2363439_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_StartRecording_m64DBDD7C9AA1DCF6CFCBAE53D7F5797276EAE441_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_StartReplay_m458F175F7BDCCDF9C52FB1A18D4404ECDECB1D44_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_Start_m13986F7F342561F0ACDBA51D328049B3D0E6AADE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController_StopRecording_m4BDCB4E852A0BE89861BB9F90FA8D7E00F0256BB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UserInputRecorderUIController__ctor_mAD7D44684F098392405C81D148E8BEF196EBCDBB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityEyeSaccadeProvider_tC6911CB1724D128897B6D143DB261F75A4DC737C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_1_tB7CFFF4084649FE066002BB179F7CC250E6A8968_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MoveWithCamera_t4BD7E330C0418C95D3D36F7BC3A9751995ABFD66_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Rect_t35B976DE901B5423C11705E156938EA27AB402CE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897EMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55CMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453DMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CEMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57C15B11ADBB2244628F530D564C40E0693C8811_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m771F66C581858199AC12053C90E2223FF1139583_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m51292C38190C7808D21CB7BCB81B53DBFBDA931F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m7C9BCFDA67C9DDAC4368F9211B03087D38540C22_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF081561D788FDD14DBD1AEF7F53B55398C6DF565_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_mED8BD860AA0D056A183E809B20533A419626E1B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_m4A3F4DEEF214F29B84AA5351131AAE43925CA9EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mA5D96319DEC6CEEA9EF3360593EE3AB49C9C086D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Start_mED7B15C1C88FA34CD44B32C7E6AA1EC09D8A8037_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_Update_m1ABDA77EDDCF4ED2295C32EAE803A9659D59B6C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze__cctor_m50B9FBB26366B7B328A5409E6A0151DC54153F3B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze__ctor_mAE2AB58A689E21312FC47C6CE796D517A7C3F74F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveWithCamera_Update_m84453B97F8DCA494F4F8768B5FBB6C91F80DACCD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveWithCamera__ctor_mCB935D4A4CE2F487EE23F369008629B67C715008_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1DMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLoadStartScene_Start_mA7DDB3EB1FCFCF2B8146E5F1604A941CDAD5B9EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLoadStartScene__ctor_mC10A9B104F20EA281B4DEC6B5060C3E5BD8FD9B1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLookAtRotateByEyeGaze_OnEyeFocusStay_mDD4E5E47CAA30CF116EF57B8D1D70EF1DC067A8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnLookAtRotateByEyeGaze__ctor_m514112D022BF34DBC48EADE08F36ED469981C8DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController_Awake_m7EFBA9C22E6CF24833638E5F2B8697973243A65E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m2A80E3637806B75EC4AF32BAF49B5F6C99D7C831_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mD2271168A5EB6BB881F34599B6238BE9B5F03F2F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mCFFC85EC5CC9C2564E0C2C67A074EAAEF87D3055_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m7F2C9E92174CFE8D0091FAD8D1FA3CC92CFACFAC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t OnSelectVisualizerInputController__ctor_m05A49D7083F5D19F8D091438F5240870DA34795F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_ComputePanSpeed_mCA43DC21C566CC1BC555A725889DC7071840A606_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_Initialize_mDCD64BFF82A96B562EAA64CCBB124BA23110C519_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_UpdateCursorPosInHitBox_mBCA4534A82AF7D807A5128EE4130547D3F51310B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_UpdatePanZoom_m83353C01FD2D09C003A1DB2D724BE0E61F1A011D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_ZoomDir_mF66C319EEE829391B5133240D2FC7CDC06587BD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_ZoomIn_m5B27704D6AB71949EAA30D3A589D38C7660999FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_ZoomOut_mE8334F1F113D5EF442AE7BE29B9A69DE46EA83EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_ComputePanSpeed_m7DA2DDB21A887B7280B3CD72F9B3485DD98B6D2D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_Initialize_mCFE17F1C05062592F2707BE630F513E88549FAB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_UpdateCursorPosInHitBox_m1BC9CBDCA8BFDE858AC59C0EA900D10142B071EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_UpdatePanZoom_mBD748BDEA92BD2B564BE6014F8DD693B725F99C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_ZoomDir_mE5C715080FA4C1B08016EE4DD2CA5909C81C274A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_ZoomIn_m6E7E401773DB9EAA655FDD764EF512352E1C3F0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_ZoomOut_mEFEAABDE72ACA5C1F7DD588214EF68A2BA96FC9B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_get_TextureShaderProperty_m3A749A1F9159EA12E0ABA1582E0552E93D56A57D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBaseTexture_set_TextureShaderProperty_m9020EF5F2CEDA280BF6810BD03C84F0FADD0078E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_DisableHandZoom_m40D967C6CBE9A22698829B77F126321BB2023A1E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_EnableHandZoom_m4E462584A04ADFAE571930D0B89219C446E24A92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_LateUpdate_mDFBD76B5480F81B1A2200607361D209002309C4D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_m43BB24C696924FDAF214ADA82ED2747D50297F1A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mF631029DD0FD040BCAC8B3AAF27A819C9B36CD17_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57A2E1C96A5C0DC86F9601DFAD094F7E8943487F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAD01885E7B419604F0DD9110C0F9E37B95B45064_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mCFE03DDA43A7EC34B28270BD5F799DAA5A24CBAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mAB369C57C4251DF1D897BDD7A9E579A27EA51AE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m6B3E9CC012AC8865169962EA2AA05285EE536839_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m07B9309FA58BC37E4AEFB7BCB8F299FE6FFABFAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mD8B2142CEE210806FFA3954870C4873DF4D2088B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_PanLeftRight_mB40616E7456A17FA2C95E221BF8F3C4FF5B739E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_PanUpDown_m48637C91D434DA0D2C522A308CA229D2C1FE58DF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ResetScroll_OnSaccade_m52F6654EDA406B8DCE96AC130BBAEAA5BC58B034_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_StartFocusing_m959C7C6596810E852E6FB23AEDA87F628F856338_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomIn_Timed_m4598F3D42F293BBE29BB037DF8F541A83F8CC6BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomOut_Timed_m1065A23AD665D67C98EF22C1D68E2E5A348D0ABE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomRectTransf_Start_m15F3F920924C918A6C742C4A0BEBBFA2D7EC2523_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomRectTransf_Update_mEAA684DD81C5C01D14F9F27651C4462AF3C3D16C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomRectTransf__ctor_mC2432E8E567FCAD869C544E41DBBB3229537EB3A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomTexture_Start_mAC392E1F8A26EC23DB72E84B8BDD7B2930368399_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomTexture_Update_mE5F2C025855941D14B6D2C0F37E8A8D886C5D64B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanZoomTexture__ctor_m99882119C0740D5FF4FB6733B5E88C90278E7E75_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_DisplayParticles_m0B30A71A54AB6445324B0976DA11C777142CFA4D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_GetPositionOfParticle_mA114FBA53A8522D08C72536751CC85C1B29949C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_HideHeatmap_m4B26EED245CF467A1E876C05F5A0BF022BFE672C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_SetParticle_mB7F67715D72B681732DECD63731E9E86E2E5B065_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_ShowHeatmap_m86344918A9A496239AA6E8DB4D537F4986266ABF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_Start_m539BA4F1AFB4C3A7C83E0F90EF58590071299ED2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_UpdateColorForAllParticles_mA0D223548D977852786EB677BDD57571420702DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap__ctor_m61E1CBB11275858837F16E4DDED7D245EEDADDDF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RotateWithConstSpeedDir_RotateTarget_m0CB85267A40556C1A41556AB999291B98A2AF291_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RotateWithConstSpeedDir__ctor_mB262D658E29D3A1449331F2A4EA668333B4469CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollRectTransf_Start_m76C2D3084EA1371CEFF0AFC59A79200D283590B6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollRectTransf_Update_mEC76D0B4B1C573C3447EC06B1776B402B2DBAD47_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollRectTransf__ctor_m215A75AEF079F45AE3A7F8795BF424950E8ABCB7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollTexture_Start_m477A67C6C3433037C471989D20E854BB9147E532_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollTexture_Update_m93C04352DE3F66BA923BFE8C082AA5E6133F5B95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ScrollTexture__ctor_m8E4E756225AA681194B856B6E35E668F20C044EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SnapTo__ctor_m9AA9BAD3AE9F57031C53529B50B7A71C2F464096_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FFMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechVisualFeedback_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mB3E99F59F71C773FE3BCE50DA4B34B9EA1DCB55A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechVisualFeedback_Update_mDE6E5EDFB424742042C6531596FAD83FA5C822EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechVisualFeedback__ctor_m127485527CC1AA14105B102E65CC930047155739_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StatusText_Awake_m600ADED9FC8497B9D4B8029856D783385918537B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StatusText_Start_mF0E5DC9CB3279E63A8C71DD576ABA478945BDCB6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StatusText__ctor_mA977F88533AA268E8803DD0EC4A8ED6C83C16197_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetEventArgs__ctor_m3C40A03810DB73994D7CD2F5206A9A98CABA38BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetEventArgs_get_HitTarget_m27AC2AE7B41B0F5A3C74B63CF085BE457E698A39_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1BMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_Start_mB4C412B31F2DD78F02C937BA5EE3F8858192A8D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_Update_m0E9EE1194B14EE7B00AB588542A7516392494208_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial__ctor_m3C296D4D4F34D7EB8DF14D55D4B8315C972B5889_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TargetGroupCreatorRadial_get_InstantiatedObjects_m4980FD31641B861744A101E47D0BB0A56026C9D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CZoomAndStopU3Ed__78_MoveNext_mC5A85BB73134DB7B3E3CD9A542C6D8388CAC84F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CZoomAndStopU3Ed__78_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m9FFD57AFE886777B99E176DE9582F5AA39F5CAFF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_Reset_m80409250B2FCCD442213ACBCF3DBA31A19B5490C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_get_Current_mB05B0637AC8D59840ABA2AADF5A0937F73E04DCF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CZoomAndStopU3Ed__78_System_IDisposable_Dispose_mBDB67B01F0543CEDFAC9438D6E671A4A45E604EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_LoadData_mE8D3B345FA0D0C30B04D965D96AC8338B9A7AA95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_PauseReplay_m9F1FC6EABE7CDE43D72D7E4D3DD7B83A34B23FCD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_StartRecording_m9D0D289EA771C46B8F7A1005ABD4472B03382601_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_StartReplay_mC3B310F0410ABFC4F609BF527A821B343045C9D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_StopRecording_m64431CDDDC44A193D471C8872FDAC6D8575E0A74_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback_Update_m151D9F5C7B14165541F2BB381D847CE4E4ABA85A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderFeedback__ctor_mA429AF32DAAC6ECD5BCC4E7F4765E7B70F140085_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_LoadData_m0C6EC91736FC9409EAA4FB66CD291E92FC5FAF5F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_PauseReplay_m9DE49D3ECC3926998D189EAB3825938DA2363439_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_StartRecording_m64DBDD7C9AA1DCF6CFCBAE53D7F5797276EAE441_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_StartReplay_m458F175F7BDCCDF9C52FB1A18D4404ECDECB1D44_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_Start_m13986F7F342561F0ACDBA51D328049B3D0E6AADE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController_StopRecording_m4BDCB4E852A0BE89861BB9F90FA8D7E00F0256BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UserInputRecorderUIController__ctor_mAD7D44684F098392405C81D148E8BEF196EBCDBB_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520;
struct MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398;
struct ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78
struct U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::<>2__current
	RuntimeObject * ___U3CU3E2__current_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::zoomIn
	bool ___zoomIn_2;
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::<>4__this
	PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * ___U3CU3E4__this_3;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9, ___U3CU3E2__current_1)); }
	inline RuntimeObject * get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject ** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject * value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_zoomIn_2() { return static_cast<int32_t>(offsetof(U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9, ___zoomIn_2)); }
	inline bool get_zoomIn_2() const { return ___zoomIn_2; }
	inline bool* get_address_of_zoomIn_2() { return &___zoomIn_2; }
	inline void set_zoomIn_2(bool value)
	{
		___zoomIn_2 = value;
	}

	inline static int32_t get_offset_of_U3CU3E4__this_3() { return static_cast<int32_t>(offsetof(U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9, ___U3CU3E4__this_3)); }
	inline PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * get_U3CU3E4__this_3() const { return ___U3CU3E4__this_3; }
	inline PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 ** get_address_of_U3CU3E4__this_3() { return &___U3CU3E4__this_3; }
	inline void set_U3CU3E4__this_3(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * value)
	{
		___U3CU3E4__this_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_3), (void*)value);
	}
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>
struct List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720, ____items_1)); }
	inline ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74* get__items_1() const { return ____items_1; }
	inline ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720_StaticFields, ____emptyArray_5)); }
	inline ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ParticleHeatmapParticleDataU5BU5D_t19776CAEDFFD596C59E3DCBE6AC28531C0E51C74* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____items_1)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__items_1() const { return ____items_1; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields, ____emptyArray_5)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<UnityEngine.GameObject>
struct List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0, ____items_1)); }
	inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* get__items_1() const { return ____items_1; }
	inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0_StaticFields, ____emptyArray_5)); }
	inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* get__emptyArray_5() const { return ____emptyArray_5; }
	inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.EventArgs
struct EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E  : public RuntimeObject
{
public:

public:
};

struct EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E_StaticFields
{
public:
	// System.EventArgs System.EventArgs::Empty
	EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E * ___Empty_0;

public:
	inline static int32_t get_offset_of_Empty_0() { return static_cast<int32_t>(offsetof(EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E_StaticFields, ___Empty_0)); }
	inline EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E * get_Empty_0() const { return ___Empty_0; }
	inline EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E ** get_address_of_Empty_0() { return &___Empty_0; }
	inline void set_Empty_0(EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E * value)
	{
		___Empty_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_0), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// UnityEngine.Events.UnityEventBase
struct UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
};

// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs
struct TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1  : public EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E
{
public:
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs::<HitTarget>k__BackingField
	EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___U3CHitTargetU3Ek__BackingField_1;

public:
	inline static int32_t get_offset_of_U3CHitTargetU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1, ___U3CHitTargetU3Ek__BackingField_1)); }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * get_U3CHitTargetU3Ek__BackingField_1() const { return ___U3CHitTargetU3Ek__BackingField_1; }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 ** get_address_of_U3CHitTargetU3Ek__BackingField_1() { return &___U3CHitTargetU3Ek__BackingField_1; }
	inline void set_U3CHitTargetU3Ek__BackingField_1(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * value)
	{
		___U3CHitTargetU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CHitTargetU3Ek__BackingField_1), (void*)value);
	}
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>
struct Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 
{
public:
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::list
	List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * ___list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::version
	int32_t ___version_2;
	// T System.Collections.Generic.List`1/Enumerator::current
	ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * ___current_3;

public:
	inline static int32_t get_offset_of_list_0() { return static_cast<int32_t>(offsetof(Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482, ___list_0)); }
	inline List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * get_list_0() const { return ___list_0; }
	inline List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 ** get_address_of_list_0() { return &___list_0; }
	inline void set_list_0(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * value)
	{
		___list_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___list_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482, ___current_3)); }
	inline ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * get_current_3() const { return ___current_3; }
	inline ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 ** get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___current_3), (void*)value);
	}
};


// System.Collections.Generic.List`1/Enumerator<System.Object>
struct Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD 
{
public:
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::list
	List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * ___list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::version
	int32_t ___version_2;
	// T System.Collections.Generic.List`1/Enumerator::current
	RuntimeObject * ___current_3;

public:
	inline static int32_t get_offset_of_list_0() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___list_0)); }
	inline List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * get_list_0() const { return ___list_0; }
	inline List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D ** get_address_of_list_0() { return &___list_0; }
	inline void set_list_0(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * value)
	{
		___list_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___list_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD, ___current_3)); }
	inline RuntimeObject * get_current_3() const { return ___current_3; }
	inline RuntimeObject ** get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(RuntimeObject * value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___current_3), (void*)value);
	}
};


// System.Collections.Generic.List`1/Enumerator<UnityEngine.GameObject>
struct Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 
{
public:
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::list
	List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * ___list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::version
	int32_t ___version_2;
	// T System.Collections.Generic.List`1/Enumerator::current
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___current_3;

public:
	inline static int32_t get_offset_of_list_0() { return static_cast<int32_t>(offsetof(Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053, ___list_0)); }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * get_list_0() const { return ___list_0; }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 ** get_address_of_list_0() { return &___list_0; }
	inline void set_list_0(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * value)
	{
		___list_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___list_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053, ___current_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_current_3() const { return ___current_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___current_3), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Double
struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409 
{
public:
	// System.Double System.Double::m_value
	double ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409, ___m_value_0)); }
	inline double get_m_value_0() const { return ___m_value_0; }
	inline double* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(double value)
	{
		___m_value_0 = value;
	}
};

struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields
{
public:
	// System.Double System.Double::NegativeZero
	double ___NegativeZero_7;

public:
	inline static int32_t get_offset_of_NegativeZero_7() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields, ___NegativeZero_7)); }
	inline double get_NegativeZero_7() const { return ___NegativeZero_7; }
	inline double* get_address_of_NegativeZero_7() { return &___NegativeZero_7; }
	inline void set_NegativeZero_7(double value)
	{
		___NegativeZero_7 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Color
struct Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 
{
public:
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};


// UnityEngine.Color32
struct Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// System.Int32 UnityEngine.Color32::rgba
			int32_t ___rgba_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			int32_t ___rgba_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// System.Byte UnityEngine.Color32::r
			uint8_t ___r_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			uint8_t ___r_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			char ___g_2_OffsetPadding[1];
			// System.Byte UnityEngine.Color32::g
			uint8_t ___g_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			char ___g_2_OffsetPadding_forAlignmentOnly[1];
			uint8_t ___g_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			char ___b_3_OffsetPadding[2];
			// System.Byte UnityEngine.Color32::b
			uint8_t ___b_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			char ___b_3_OffsetPadding_forAlignmentOnly[2];
			uint8_t ___b_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			char ___a_4_OffsetPadding[3];
			// System.Byte UnityEngine.Color32::a
			uint8_t ___a_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			char ___a_4_OffsetPadding_forAlignmentOnly[3];
			uint8_t ___a_4_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_rgba_0() { return static_cast<int32_t>(offsetof(Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23, ___rgba_0)); }
	inline int32_t get_rgba_0() const { return ___rgba_0; }
	inline int32_t* get_address_of_rgba_0() { return &___rgba_0; }
	inline void set_rgba_0(int32_t value)
	{
		___rgba_0 = value;
	}

	inline static int32_t get_offset_of_r_1() { return static_cast<int32_t>(offsetof(Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23, ___r_1)); }
	inline uint8_t get_r_1() const { return ___r_1; }
	inline uint8_t* get_address_of_r_1() { return &___r_1; }
	inline void set_r_1(uint8_t value)
	{
		___r_1 = value;
	}

	inline static int32_t get_offset_of_g_2() { return static_cast<int32_t>(offsetof(Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23, ___g_2)); }
	inline uint8_t get_g_2() const { return ___g_2; }
	inline uint8_t* get_address_of_g_2() { return &___g_2; }
	inline void set_g_2(uint8_t value)
	{
		___g_2 = value;
	}

	inline static int32_t get_offset_of_b_3() { return static_cast<int32_t>(offsetof(Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23, ___b_3)); }
	inline uint8_t get_b_3() const { return ___b_3; }
	inline uint8_t* get_address_of_b_3() { return &___b_3; }
	inline void set_b_3(uint8_t value)
	{
		___b_3 = value;
	}

	inline static int32_t get_offset_of_a_4() { return static_cast<int32_t>(offsetof(Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23, ___a_4)); }
	inline uint8_t get_a_4() const { return ___a_4; }
	inline uint8_t* get_address_of_a_4() { return &___a_4; }
	inline void set_a_4(uint8_t value)
	{
		___a_4 = value;
	}
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.ParticleSystem/EmissionModule
struct EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 
{
public:
	// UnityEngine.ParticleSystem UnityEngine.ParticleSystem/EmissionModule::m_ParticleSystem
	ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * ___m_ParticleSystem_0;

public:
	inline static int32_t get_offset_of_m_ParticleSystem_0() { return static_cast<int32_t>(offsetof(EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1, ___m_ParticleSystem_0)); }
	inline ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * get_m_ParticleSystem_0() const { return ___m_ParticleSystem_0; }
	inline ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D ** get_address_of_m_ParticleSystem_0() { return &___m_ParticleSystem_0; }
	inline void set_m_ParticleSystem_0(ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * value)
	{
		___m_ParticleSystem_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ParticleSystem_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.ParticleSystem/EmissionModule
struct EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1_marshaled_pinvoke
{
	ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * ___m_ParticleSystem_0;
};
// Native definition for COM marshalling of UnityEngine.ParticleSystem/EmissionModule
struct EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1_marshaled_com
{
	ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * ___m_ParticleSystem_0;
};

// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Rect
struct Rect_t35B976DE901B5423C11705E156938EA27AB402CE 
{
public:
	// System.Single UnityEngine.Rect::m_XMin
	float ___m_XMin_0;
	// System.Single UnityEngine.Rect::m_YMin
	float ___m_YMin_1;
	// System.Single UnityEngine.Rect::m_Width
	float ___m_Width_2;
	// System.Single UnityEngine.Rect::m_Height
	float ___m_Height_3;

public:
	inline static int32_t get_offset_of_m_XMin_0() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_XMin_0)); }
	inline float get_m_XMin_0() const { return ___m_XMin_0; }
	inline float* get_address_of_m_XMin_0() { return &___m_XMin_0; }
	inline void set_m_XMin_0(float value)
	{
		___m_XMin_0 = value;
	}

	inline static int32_t get_offset_of_m_YMin_1() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_YMin_1)); }
	inline float get_m_YMin_1() const { return ___m_YMin_1; }
	inline float* get_address_of_m_YMin_1() { return &___m_YMin_1; }
	inline void set_m_YMin_1(float value)
	{
		___m_YMin_1 = value;
	}

	inline static int32_t get_offset_of_m_Width_2() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_Width_2)); }
	inline float get_m_Width_2() const { return ___m_Width_2; }
	inline float* get_address_of_m_Width_2() { return &___m_Width_2; }
	inline void set_m_Width_2(float value)
	{
		___m_Width_2 = value;
	}

	inline static int32_t get_offset_of_m_Height_3() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_Height_3)); }
	inline float get_m_Height_3() const { return ___m_Height_3; }
	inline float* get_address_of_m_Height_3() { return &___m_Height_3; }
	inline void set_m_Height_3(float value)
	{
		___m_Height_3 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.Single UnityEngine.WaitForSeconds::m_Seconds
	float ___m_Seconds_0;

public:
	inline static int32_t get_offset_of_m_Seconds_0() { return static_cast<int32_t>(offsetof(WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8, ___m_Seconds_0)); }
	inline float get_m_Seconds_0() const { return ___m_Seconds_0; }
	inline float* get_address_of_m_Seconds_0() { return &___m_Seconds_0; }
	inline void set_m_Seconds_0(float value)
	{
		___m_Seconds_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	float ___m_Seconds_0;
};
// Native definition for COM marshalling of UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	float ___m_Seconds_0;
};

// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene/LoadOptions
struct LoadOptions_t3058CE3D0C2FFC730252ABC4EDD96E5DFB740B96 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene/LoadOptions::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LoadOptions_t3058CE3D0C2FFC730252ABC4EDD96E5DFB740B96, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData
struct ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0  : public RuntimeObject
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_0;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::radiusInMeter
	float ___radiusInMeter_1;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::intensity
	float ___intensity_2;
	// UnityEngine.Color Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::color
	Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___color_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::rotation
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rotation_4;

public:
	inline static int32_t get_offset_of_position_0() { return static_cast<int32_t>(offsetof(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0, ___position_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_0() const { return ___position_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_0() { return &___position_0; }
	inline void set_position_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_0 = value;
	}

	inline static int32_t get_offset_of_radiusInMeter_1() { return static_cast<int32_t>(offsetof(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0, ___radiusInMeter_1)); }
	inline float get_radiusInMeter_1() const { return ___radiusInMeter_1; }
	inline float* get_address_of_radiusInMeter_1() { return &___radiusInMeter_1; }
	inline void set_radiusInMeter_1(float value)
	{
		___radiusInMeter_1 = value;
	}

	inline static int32_t get_offset_of_intensity_2() { return static_cast<int32_t>(offsetof(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0, ___intensity_2)); }
	inline float get_intensity_2() const { return ___intensity_2; }
	inline float* get_address_of_intensity_2() { return &___intensity_2; }
	inline void set_intensity_2(float value)
	{
		___intensity_2 = value;
	}

	inline static int32_t get_offset_of_color_3() { return static_cast<int32_t>(offsetof(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0, ___color_3)); }
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  get_color_3() const { return ___color_3; }
	inline Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 * get_address_of_color_3() { return &___color_3; }
	inline void set_color_3(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  value)
	{
		___color_3 = value;
	}

	inline static int32_t get_offset_of_rotation_4() { return static_cast<int32_t>(offsetof(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0, ___rotation_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rotation_4() const { return ___rotation_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rotation_4() { return &___rotation_4; }
	inline void set_rotation_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rotation_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PlacementSurfaces
struct PlacementSurfaces_t6248539C29F3E2F6F9E3B87692199AB71580F066 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PlacementSurfaces::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PlacementSurfaces_t6248539C29F3E2F6F9E3B87692199AB71580F066, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<OldFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3COldFocusedObjectU3Ek__BackingField_3;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<NewFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CNewFocusedObjectU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CPointerU3Ek__BackingField_2)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_2() const { return ___U3CPointerU3Ek__BackingField_2; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_2() { return &___U3CPointerU3Ek__BackingField_2; }
	inline void set_U3CPointerU3Ek__BackingField_2(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3COldFocusedObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3COldFocusedObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3COldFocusedObjectU3Ek__BackingField_3() const { return ___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3COldFocusedObjectU3Ek__BackingField_3() { return &___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline void set_U3COldFocusedObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3COldFocusedObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3COldFocusedObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CNewFocusedObjectU3Ek__BackingField_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CNewFocusedObjectU3Ek__BackingField_4() const { return ___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return &___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline void set_U3CNewFocusedObjectU3Ek__BackingField_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CNewFocusedObjectU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNewFocusedObjectU3Ek__BackingField_4), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel
struct RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint
struct TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Nullable`1<UnityEngine.Vector3>
struct Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 
{
public:
	// T System.Nullable`1::value
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203, ___value_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_value_0() const { return ___value_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.TimeSpan
struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 
{
public:
	// System.Int64 System.TimeSpan::_ticks
	int64_t ____ticks_3;

public:
	inline static int32_t get_offset_of__ticks_3() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4, ____ticks_3)); }
	inline int64_t get__ticks_3() const { return ____ticks_3; }
	inline int64_t* get_address_of__ticks_3() { return &____ticks_3; }
	inline void set__ticks_3(int64_t value)
	{
		____ticks_3 = value;
	}
};

struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields
{
public:
	// System.TimeSpan System.TimeSpan::Zero
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___Zero_0;
	// System.TimeSpan System.TimeSpan::MaxValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MaxValue_1;
	// System.TimeSpan System.TimeSpan::MinValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MinValue_2;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyConfigChecked
	bool ____legacyConfigChecked_4;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyMode
	bool ____legacyMode_5;

public:
	inline static int32_t get_offset_of_Zero_0() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___Zero_0)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_Zero_0() const { return ___Zero_0; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_Zero_0() { return &___Zero_0; }
	inline void set_Zero_0(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___Zero_0 = value;
	}

	inline static int32_t get_offset_of_MaxValue_1() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MaxValue_1)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MaxValue_1() const { return ___MaxValue_1; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MaxValue_1() { return &___MaxValue_1; }
	inline void set_MaxValue_1(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MaxValue_1 = value;
	}

	inline static int32_t get_offset_of_MinValue_2() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MinValue_2)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MinValue_2() const { return ___MinValue_2; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MinValue_2() { return &___MinValue_2; }
	inline void set_MinValue_2(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MinValue_2 = value;
	}

	inline static int32_t get_offset_of__legacyConfigChecked_4() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyConfigChecked_4)); }
	inline bool get__legacyConfigChecked_4() const { return ____legacyConfigChecked_4; }
	inline bool* get_address_of__legacyConfigChecked_4() { return &____legacyConfigChecked_4; }
	inline void set__legacyConfigChecked_4(bool value)
	{
		____legacyConfigChecked_4 = value;
	}

	inline static int32_t get_offset_of__legacyMode_5() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyMode_5)); }
	inline bool get__legacyMode_5() const { return ____legacyMode_5; }
	inline bool* get_address_of__legacyMode_5() { return &____legacyMode_5; }
	inline void set__legacyMode_5(bool value)
	{
		____legacyMode_5 = value;
	}
};


// UnityEngine.AsyncOperation
struct AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.IntPtr UnityEngine.AsyncOperation::m_Ptr
	intptr_t ___m_Ptr_0;
	// System.Action`1<UnityEngine.AsyncOperation> UnityEngine.AsyncOperation::m_completeCallback
	Action_1_tCBF754C290FAE894631BED8FD56E9E22C4C187F9 * ___m_completeCallback_1;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}

	inline static int32_t get_offset_of_m_completeCallback_1() { return static_cast<int32_t>(offsetof(AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D, ___m_completeCallback_1)); }
	inline Action_1_tCBF754C290FAE894631BED8FD56E9E22C4C187F9 * get_m_completeCallback_1() const { return ___m_completeCallback_1; }
	inline Action_1_tCBF754C290FAE894631BED8FD56E9E22C4C187F9 ** get_address_of_m_completeCallback_1() { return &___m_completeCallback_1; }
	inline void set_m_completeCallback_1(Action_1_tCBF754C290FAE894631BED8FD56E9E22C4C187F9 * value)
	{
		___m_completeCallback_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_completeCallback_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.AsyncOperation
struct AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
	Il2CppMethodPointer ___m_completeCallback_1;
};
// Native definition for COM marshalling of UnityEngine.AsyncOperation
struct AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	intptr_t ___m_Ptr_0;
	Il2CppMethodPointer ___m_completeCallback_1;
};

// UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.IntPtr UnityEngine.Coroutine::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Gradient::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Gradient
struct Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.KeyCode
struct KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C 
{
public:
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.ParticleSystem/Particle
struct Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E 
{
public:
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_Position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Position_0;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_Velocity
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Velocity_1;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_AnimatedVelocity
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_AnimatedVelocity_2;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_InitialVelocity
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_InitialVelocity_3;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_AxisOfRotation
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_AxisOfRotation_4;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_Rotation
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Rotation_5;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_AngularVelocity
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_AngularVelocity_6;
	// UnityEngine.Vector3 UnityEngine.ParticleSystem/Particle::m_StartSize
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_StartSize_7;
	// UnityEngine.Color32 UnityEngine.ParticleSystem/Particle::m_StartColor
	Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23  ___m_StartColor_8;
	// System.UInt32 UnityEngine.ParticleSystem/Particle::m_RandomSeed
	uint32_t ___m_RandomSeed_9;
	// System.UInt32 UnityEngine.ParticleSystem/Particle::m_ParentRandomSeed
	uint32_t ___m_ParentRandomSeed_10;
	// System.Single UnityEngine.ParticleSystem/Particle::m_Lifetime
	float ___m_Lifetime_11;
	// System.Single UnityEngine.ParticleSystem/Particle::m_StartLifetime
	float ___m_StartLifetime_12;
	// System.Int32 UnityEngine.ParticleSystem/Particle::m_MeshIndex
	int32_t ___m_MeshIndex_13;
	// System.Single UnityEngine.ParticleSystem/Particle::m_EmitAccumulator0
	float ___m_EmitAccumulator0_14;
	// System.Single UnityEngine.ParticleSystem/Particle::m_EmitAccumulator1
	float ___m_EmitAccumulator1_15;
	// System.UInt32 UnityEngine.ParticleSystem/Particle::m_Flags
	uint32_t ___m_Flags_16;

public:
	inline static int32_t get_offset_of_m_Position_0() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_Position_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Position_0() const { return ___m_Position_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Position_0() { return &___m_Position_0; }
	inline void set_m_Position_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Position_0 = value;
	}

	inline static int32_t get_offset_of_m_Velocity_1() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_Velocity_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Velocity_1() const { return ___m_Velocity_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Velocity_1() { return &___m_Velocity_1; }
	inline void set_m_Velocity_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Velocity_1 = value;
	}

	inline static int32_t get_offset_of_m_AnimatedVelocity_2() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_AnimatedVelocity_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_AnimatedVelocity_2() const { return ___m_AnimatedVelocity_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_AnimatedVelocity_2() { return &___m_AnimatedVelocity_2; }
	inline void set_m_AnimatedVelocity_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_AnimatedVelocity_2 = value;
	}

	inline static int32_t get_offset_of_m_InitialVelocity_3() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_InitialVelocity_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_InitialVelocity_3() const { return ___m_InitialVelocity_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_InitialVelocity_3() { return &___m_InitialVelocity_3; }
	inline void set_m_InitialVelocity_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_InitialVelocity_3 = value;
	}

	inline static int32_t get_offset_of_m_AxisOfRotation_4() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_AxisOfRotation_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_AxisOfRotation_4() const { return ___m_AxisOfRotation_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_AxisOfRotation_4() { return &___m_AxisOfRotation_4; }
	inline void set_m_AxisOfRotation_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_AxisOfRotation_4 = value;
	}

	inline static int32_t get_offset_of_m_Rotation_5() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_Rotation_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Rotation_5() const { return ___m_Rotation_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Rotation_5() { return &___m_Rotation_5; }
	inline void set_m_Rotation_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Rotation_5 = value;
	}

	inline static int32_t get_offset_of_m_AngularVelocity_6() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_AngularVelocity_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_AngularVelocity_6() const { return ___m_AngularVelocity_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_AngularVelocity_6() { return &___m_AngularVelocity_6; }
	inline void set_m_AngularVelocity_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_AngularVelocity_6 = value;
	}

	inline static int32_t get_offset_of_m_StartSize_7() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_StartSize_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_StartSize_7() const { return ___m_StartSize_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_StartSize_7() { return &___m_StartSize_7; }
	inline void set_m_StartSize_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_StartSize_7 = value;
	}

	inline static int32_t get_offset_of_m_StartColor_8() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_StartColor_8)); }
	inline Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23  get_m_StartColor_8() const { return ___m_StartColor_8; }
	inline Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23 * get_address_of_m_StartColor_8() { return &___m_StartColor_8; }
	inline void set_m_StartColor_8(Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23  value)
	{
		___m_StartColor_8 = value;
	}

	inline static int32_t get_offset_of_m_RandomSeed_9() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_RandomSeed_9)); }
	inline uint32_t get_m_RandomSeed_9() const { return ___m_RandomSeed_9; }
	inline uint32_t* get_address_of_m_RandomSeed_9() { return &___m_RandomSeed_9; }
	inline void set_m_RandomSeed_9(uint32_t value)
	{
		___m_RandomSeed_9 = value;
	}

	inline static int32_t get_offset_of_m_ParentRandomSeed_10() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_ParentRandomSeed_10)); }
	inline uint32_t get_m_ParentRandomSeed_10() const { return ___m_ParentRandomSeed_10; }
	inline uint32_t* get_address_of_m_ParentRandomSeed_10() { return &___m_ParentRandomSeed_10; }
	inline void set_m_ParentRandomSeed_10(uint32_t value)
	{
		___m_ParentRandomSeed_10 = value;
	}

	inline static int32_t get_offset_of_m_Lifetime_11() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_Lifetime_11)); }
	inline float get_m_Lifetime_11() const { return ___m_Lifetime_11; }
	inline float* get_address_of_m_Lifetime_11() { return &___m_Lifetime_11; }
	inline void set_m_Lifetime_11(float value)
	{
		___m_Lifetime_11 = value;
	}

	inline static int32_t get_offset_of_m_StartLifetime_12() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_StartLifetime_12)); }
	inline float get_m_StartLifetime_12() const { return ___m_StartLifetime_12; }
	inline float* get_address_of_m_StartLifetime_12() { return &___m_StartLifetime_12; }
	inline void set_m_StartLifetime_12(float value)
	{
		___m_StartLifetime_12 = value;
	}

	inline static int32_t get_offset_of_m_MeshIndex_13() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_MeshIndex_13)); }
	inline int32_t get_m_MeshIndex_13() const { return ___m_MeshIndex_13; }
	inline int32_t* get_address_of_m_MeshIndex_13() { return &___m_MeshIndex_13; }
	inline void set_m_MeshIndex_13(int32_t value)
	{
		___m_MeshIndex_13 = value;
	}

	inline static int32_t get_offset_of_m_EmitAccumulator0_14() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_EmitAccumulator0_14)); }
	inline float get_m_EmitAccumulator0_14() const { return ___m_EmitAccumulator0_14; }
	inline float* get_address_of_m_EmitAccumulator0_14() { return &___m_EmitAccumulator0_14; }
	inline void set_m_EmitAccumulator0_14(float value)
	{
		___m_EmitAccumulator0_14 = value;
	}

	inline static int32_t get_offset_of_m_EmitAccumulator1_15() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_EmitAccumulator1_15)); }
	inline float get_m_EmitAccumulator1_15() const { return ___m_EmitAccumulator1_15; }
	inline float* get_address_of_m_EmitAccumulator1_15() { return &___m_EmitAccumulator1_15; }
	inline void set_m_EmitAccumulator1_15(float value)
	{
		___m_EmitAccumulator1_15 = value;
	}

	inline static int32_t get_offset_of_m_Flags_16() { return static_cast<int32_t>(offsetof(Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E, ___m_Flags_16)); }
	inline uint32_t get_m_Flags_16() const { return ___m_Flags_16; }
	inline uint32_t* get_address_of_m_Flags_16() { return &___m_Flags_16; }
	inline void set_m_Flags_16(uint32_t value)
	{
		___m_Flags_16 = value;
	}
};


// UnityEngine.Ray
struct Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 
{
public:
	// UnityEngine.Vector3 UnityEngine.Ray::m_Origin
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Origin_0;
	// UnityEngine.Vector3 UnityEngine.Ray::m_Direction
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Direction_1;

public:
	inline static int32_t get_offset_of_m_Origin_0() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Origin_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Origin_0() const { return ___m_Origin_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Origin_0() { return &___m_Origin_0; }
	inline void set_m_Origin_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Origin_0 = value;
	}

	inline static int32_t get_offset_of_m_Direction_1() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Direction_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Direction_1() const { return ___m_Direction_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Direction_1() { return &___m_Direction_1; }
	inline void set_m_Direction_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Direction_1 = value;
	}
};


// UnityEngine.SceneManagement.LoadSceneMode
struct LoadSceneMode_t75F0B96794398942671B8315D2A9AC25C40A22D5 
{
public:
	// System.Int32 UnityEngine.SceneManagement.LoadSceneMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LoadSceneMode_t75F0B96794398942671B8315D2A9AC25C40A22D5, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.Nullable`1<UnityEngine.Ray>
struct Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 
{
public:
	// T System.Nullable`1::value
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779, ___value_0)); }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  get_value_0() const { return ___value_0; }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.SystemException
struct SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Assertions.AssertionException
struct AssertionException_t2E33237ABD721A57D41FC8745BCA4573DB40626E  : public Exception_t
{
public:
	// System.String UnityEngine.Assertions.AssertionException::m_UserMessage
	String_t* ___m_UserMessage_17;

public:
	inline static int32_t get_offset_of_m_UserMessage_17() { return static_cast<int32_t>(offsetof(AssertionException_t2E33237ABD721A57D41FC8745BCA4573DB40626E, ___m_UserMessage_17)); }
	inline String_t* get_m_UserMessage_17() const { return ___m_UserMessage_17; }
	inline String_t** get_address_of_m_UserMessage_17() { return &___m_UserMessage_17; }
	inline void set_m_UserMessage_17(String_t* value)
	{
		___m_UserMessage_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_UserMessage_17), (void*)value);
	}
};


// UnityEngine.AudioClip
struct AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:
	// UnityEngine.AudioClip/PCMReaderCallback UnityEngine.AudioClip::m_PCMReaderCallback
	PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB * ___m_PCMReaderCallback_4;
	// UnityEngine.AudioClip/PCMSetPositionCallback UnityEngine.AudioClip::m_PCMSetPositionCallback
	PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 * ___m_PCMSetPositionCallback_5;

public:
	inline static int32_t get_offset_of_m_PCMReaderCallback_4() { return static_cast<int32_t>(offsetof(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051, ___m_PCMReaderCallback_4)); }
	inline PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB * get_m_PCMReaderCallback_4() const { return ___m_PCMReaderCallback_4; }
	inline PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB ** get_address_of_m_PCMReaderCallback_4() { return &___m_PCMReaderCallback_4; }
	inline void set_m_PCMReaderCallback_4(PCMReaderCallback_t9B87AB13DCD37957B045554BF28A57697E6B8EFB * value)
	{
		___m_PCMReaderCallback_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PCMReaderCallback_4), (void*)value);
	}

	inline static int32_t get_offset_of_m_PCMSetPositionCallback_5() { return static_cast<int32_t>(offsetof(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051, ___m_PCMSetPositionCallback_5)); }
	inline PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 * get_m_PCMSetPositionCallback_5() const { return ___m_PCMSetPositionCallback_5; }
	inline PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 ** get_address_of_m_PCMSetPositionCallback_5() { return &___m_PCMSetPositionCallback_5; }
	inline void set_m_PCMSetPositionCallback_5(PCMSetPositionCallback_t092ED33043C0279B5E4D343EBCBD516CEF260801 * value)
	{
		___m_PCMSetPositionCallback_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PCMSetPositionCallback_5), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.Material
struct Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizationKey
	String_t* ___localizationKey_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizedKeyword
	String_t* ___localizedKeyword_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyword
	String_t* ___keyword_2;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyCode
	int32_t ___keyCode_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_4;

public:
	inline static int32_t get_offset_of_localizationKey_0() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizationKey_0)); }
	inline String_t* get_localizationKey_0() const { return ___localizationKey_0; }
	inline String_t** get_address_of_localizationKey_0() { return &___localizationKey_0; }
	inline void set_localizationKey_0(String_t* value)
	{
		___localizationKey_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizationKey_0), (void*)value);
	}

	inline static int32_t get_offset_of_localizedKeyword_1() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizedKeyword_1)); }
	inline String_t* get_localizedKeyword_1() const { return ___localizedKeyword_1; }
	inline String_t** get_address_of_localizedKeyword_1() { return &___localizedKeyword_1; }
	inline void set_localizedKeyword_1(String_t* value)
	{
		___localizedKeyword_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizedKeyword_1), (void*)value);
	}

	inline static int32_t get_offset_of_keyword_2() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyword_2)); }
	inline String_t* get_keyword_2() const { return ___keyword_2; }
	inline String_t** get_address_of_keyword_2() { return &___keyword_2; }
	inline void set_keyword_2(String_t* value)
	{
		___keyword_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keyword_2), (void*)value);
	}

	inline static int32_t get_offset_of_keyCode_3() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyCode_3)); }
	inline int32_t get_keyCode_3() const { return ___keyCode_3; }
	inline int32_t* get_address_of_keyCode_3() { return &___keyCode_3; }
	inline void set_keyCode_3(int32_t value)
	{
		___keyCode_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___action_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_4() const { return ___action_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_4))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke
{
	char* ___localizationKey_0;
	char* ___localizedKeyword_1;
	char* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com
{
	Il2CppChar* ___localizationKey_0;
	Il2CppChar* ___localizedKeyword_1;
	Il2CppChar* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_4;
};

// System.Action
struct Action_t591D2A86165F896B4B800BB5C25CE18672A55579  : public MulticastDelegate_t
{
public:

public:
};


// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.ParticleSystem
struct ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Renderer
struct Renderer_t0556D67DD582620D1F495627EDE30D03284151F4  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Rigidbody
struct Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.TextMesh
struct TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// System.TimeSpan Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseDuration>k__BackingField
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___U3CPhraseDurationU3Ek__BackingField_5;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseStartTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CPhraseStartTimeU3Ek__BackingField_6;
	// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Command>k__BackingField
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___U3CCommandU3Ek__BackingField_7;
	// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Confidence>k__BackingField
	int32_t ___U3CConfidenceU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_U3CPhraseDurationU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseDurationU3Ek__BackingField_5)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_U3CPhraseDurationU3Ek__BackingField_5() const { return ___U3CPhraseDurationU3Ek__BackingField_5; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_U3CPhraseDurationU3Ek__BackingField_5() { return &___U3CPhraseDurationU3Ek__BackingField_5; }
	inline void set_U3CPhraseDurationU3Ek__BackingField_5(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___U3CPhraseDurationU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseStartTimeU3Ek__BackingField_6)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CPhraseStartTimeU3Ek__BackingField_6() const { return ___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return &___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline void set_U3CPhraseStartTimeU3Ek__BackingField_6(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CPhraseStartTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CCommandU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CCommandU3Ek__BackingField_7)); }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  get_U3CCommandU3Ek__BackingField_7() const { return ___U3CCommandU3Ek__BackingField_7; }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * get_address_of_U3CCommandU3Ek__BackingField_7() { return &___U3CCommandU3Ek__BackingField_7; }
	inline void set_U3CCommandU3Ek__BackingField_7(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		___U3CCommandU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CCommandU3Ek__BackingField_7))->___action_4))->___description_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CConfidenceU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CConfidenceU3Ek__BackingField_8)); }
	inline int32_t get_U3CConfidenceU3Ek__BackingField_8() const { return ___U3CConfidenceU3Ek__BackingField_8; }
	inline int32_t* get_address_of_U3CConfidenceU3Ek__BackingField_8() { return &___U3CConfidenceU3Ek__BackingField_8; }
	inline void set_U3CConfidenceU3Ek__BackingField_8(int32_t value)
	{
		___U3CConfidenceU3Ek__BackingField_8 = value;
	}
};


// UnityEngine.BoxCollider
struct BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA  : public Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF
{
public:

public:
};


// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};

struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields
{
public:
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPostRender_6;

public:
	inline static int32_t get_offset_of_onPreCull_4() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreCull_4)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreCull_4() const { return ___onPreCull_4; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreCull_4() { return &___onPreCull_4; }
	inline void set_onPreCull_4(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreCull_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreCull_4), (void*)value);
	}

	inline static int32_t get_offset_of_onPreRender_5() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreRender_5)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreRender_5() const { return ___onPreRender_5; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreRender_5() { return &___onPreRender_5; }
	inline void set_onPreRender_5(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreRender_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreRender_5), (void*)value);
	}

	inline static int32_t get_offset_of_onPostRender_6() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPostRender_6)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPostRender_6() const { return ___onPostRender_6; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPostRender_6() { return &___onPostRender_6; }
	inline void set_onPostRender_6(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPostRender_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPostRender_6), (void*)value);
	}
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// UnityEngine.RectTransform
struct RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20  : public Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA
{
public:

public:
};

struct RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20_StaticFields
{
public:
	// UnityEngine.RectTransform/ReapplyDrivenProperties UnityEngine.RectTransform::reapplyDrivenProperties
	ReapplyDrivenProperties_t431F4FBD9C59AE097FE33C4354CC6251B01B527D * ___reapplyDrivenProperties_4;

public:
	inline static int32_t get_offset_of_reapplyDrivenProperties_4() { return static_cast<int32_t>(offsetof(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20_StaticFields, ___reapplyDrivenProperties_4)); }
	inline ReapplyDrivenProperties_t431F4FBD9C59AE097FE33C4354CC6251B01B527D * get_reapplyDrivenProperties_4() const { return ___reapplyDrivenProperties_4; }
	inline ReapplyDrivenProperties_t431F4FBD9C59AE097FE33C4354CC6251B01B527D ** get_address_of_reapplyDrivenProperties_4() { return &___reapplyDrivenProperties_4; }
	inline void set_reapplyDrivenProperties_4(ReapplyDrivenProperties_t431F4FBD9C59AE097FE33C4354CC6251B01B527D * value)
	{
		___reapplyDrivenProperties_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___reapplyDrivenProperties_4), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer
struct AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.AudioSource Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer::audioSource
	AudioSource_t5196F862B4E60F404613361C90D87FBDD041E93C * ___audioSource_4;

public:
	inline static int32_t get_offset_of_audioSource_4() { return static_cast<int32_t>(offsetof(AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72, ___audioSource_4)); }
	inline AudioSource_t5196F862B4E60F404613361C90D87FBDD041E93C * get_audioSource_4() const { return ___audioSource_4; }
	inline AudioSource_t5196F862B4E60F404613361C90D87FBDD041E93C ** get_address_of_audioSource_4() { return &___audioSource_4; }
	inline void set_audioSource_4(AudioSource_t5196F862B4E60F404613361C90D87FBDD041E93C * value)
	{
		___audioSource_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audioSource_4), (void*)value);
	}
};

struct AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer::<Instance>k__BackingField
	AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * ___U3CInstanceU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CInstanceU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72_StaticFields, ___U3CInstanceU3Ek__BackingField_5)); }
	inline AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * get_U3CInstanceU3Ek__BackingField_5() const { return ___U3CInstanceU3Ek__BackingField_5; }
	inline AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 ** get_address_of_U3CInstanceU3Ek__BackingField_5() { return &___U3CInstanceU3Ek__BackingField_5; }
	inline void set_U3CInstanceU3Ek__BackingField_5(AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * value)
	{
		___U3CInstanceU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInstanceU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback
struct UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::statusText
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___statusText_4;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::maxShowDurationInSeconds
	float ___maxShowDurationInSeconds_5;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::audio_StartRecording
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_StartRecording_6;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::audio_StopRecording
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_StopRecording_7;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::audio_StartPlayback
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_StartPlayback_8;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::audio_PausePlayback
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_PausePlayback_9;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::audio_LoadRecordedData
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_LoadRecordedData_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::isShowingSomething
	bool ___isShowingSomething_11;
	// System.DateTime Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::startShowTime
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___startShowTime_12;

public:
	inline static int32_t get_offset_of_statusText_4() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___statusText_4)); }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * get_statusText_4() const { return ___statusText_4; }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A ** get_address_of_statusText_4() { return &___statusText_4; }
	inline void set_statusText_4(TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * value)
	{
		___statusText_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___statusText_4), (void*)value);
	}

	inline static int32_t get_offset_of_maxShowDurationInSeconds_5() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___maxShowDurationInSeconds_5)); }
	inline float get_maxShowDurationInSeconds_5() const { return ___maxShowDurationInSeconds_5; }
	inline float* get_address_of_maxShowDurationInSeconds_5() { return &___maxShowDurationInSeconds_5; }
	inline void set_maxShowDurationInSeconds_5(float value)
	{
		___maxShowDurationInSeconds_5 = value;
	}

	inline static int32_t get_offset_of_audio_StartRecording_6() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___audio_StartRecording_6)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_StartRecording_6() const { return ___audio_StartRecording_6; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_StartRecording_6() { return &___audio_StartRecording_6; }
	inline void set_audio_StartRecording_6(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_StartRecording_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_StartRecording_6), (void*)value);
	}

	inline static int32_t get_offset_of_audio_StopRecording_7() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___audio_StopRecording_7)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_StopRecording_7() const { return ___audio_StopRecording_7; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_StopRecording_7() { return &___audio_StopRecording_7; }
	inline void set_audio_StopRecording_7(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_StopRecording_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_StopRecording_7), (void*)value);
	}

	inline static int32_t get_offset_of_audio_StartPlayback_8() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___audio_StartPlayback_8)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_StartPlayback_8() const { return ___audio_StartPlayback_8; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_StartPlayback_8() { return &___audio_StartPlayback_8; }
	inline void set_audio_StartPlayback_8(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_StartPlayback_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_StartPlayback_8), (void*)value);
	}

	inline static int32_t get_offset_of_audio_PausePlayback_9() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___audio_PausePlayback_9)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_PausePlayback_9() const { return ___audio_PausePlayback_9; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_PausePlayback_9() { return &___audio_PausePlayback_9; }
	inline void set_audio_PausePlayback_9(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_PausePlayback_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_PausePlayback_9), (void*)value);
	}

	inline static int32_t get_offset_of_audio_LoadRecordedData_10() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___audio_LoadRecordedData_10)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_LoadRecordedData_10() const { return ___audio_LoadRecordedData_10; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_LoadRecordedData_10() { return &___audio_LoadRecordedData_10; }
	inline void set_audio_LoadRecordedData_10(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_LoadRecordedData_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_LoadRecordedData_10), (void*)value);
	}

	inline static int32_t get_offset_of_isShowingSomething_11() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___isShowingSomething_11)); }
	inline bool get_isShowingSomething_11() const { return ___isShowingSomething_11; }
	inline bool* get_address_of_isShowingSomething_11() { return &___isShowingSomething_11; }
	inline void set_isShowingSomething_11(bool value)
	{
		___isShowingSomething_11 = value;
	}

	inline static int32_t get_offset_of_startShowTime_12() { return static_cast<int32_t>(offsetof(UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C, ___startShowTime_12)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_startShowTime_12() const { return ___startShowTime_12; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_startShowTime_12() { return &___startShowTime_12; }
	inline void set_startShowTime_12(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___startShowTime_12 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController
struct UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::btn_StartRecording
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___btn_StartRecording_4;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::btn_StopRecording
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___btn_StopRecording_5;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::btn_StartPlayback_Inactive
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___btn_StartPlayback_Inactive_6;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::btn_StartPlayback
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___btn_StartPlayback_7;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::btn_PausePlayback
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___btn_PausePlayback_8;

public:
	inline static int32_t get_offset_of_btn_StartRecording_4() { return static_cast<int32_t>(offsetof(UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984, ___btn_StartRecording_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_btn_StartRecording_4() const { return ___btn_StartRecording_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_btn_StartRecording_4() { return &___btn_StartRecording_4; }
	inline void set_btn_StartRecording_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___btn_StartRecording_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___btn_StartRecording_4), (void*)value);
	}

	inline static int32_t get_offset_of_btn_StopRecording_5() { return static_cast<int32_t>(offsetof(UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984, ___btn_StopRecording_5)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_btn_StopRecording_5() const { return ___btn_StopRecording_5; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_btn_StopRecording_5() { return &___btn_StopRecording_5; }
	inline void set_btn_StopRecording_5(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___btn_StopRecording_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___btn_StopRecording_5), (void*)value);
	}

	inline static int32_t get_offset_of_btn_StartPlayback_Inactive_6() { return static_cast<int32_t>(offsetof(UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984, ___btn_StartPlayback_Inactive_6)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_btn_StartPlayback_Inactive_6() const { return ___btn_StartPlayback_Inactive_6; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_btn_StartPlayback_Inactive_6() { return &___btn_StartPlayback_Inactive_6; }
	inline void set_btn_StartPlayback_Inactive_6(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___btn_StartPlayback_Inactive_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___btn_StartPlayback_Inactive_6), (void*)value);
	}

	inline static int32_t get_offset_of_btn_StartPlayback_7() { return static_cast<int32_t>(offsetof(UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984, ___btn_StartPlayback_7)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_btn_StartPlayback_7() const { return ___btn_StartPlayback_7; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_btn_StartPlayback_7() { return &___btn_StartPlayback_7; }
	inline void set_btn_StartPlayback_7(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___btn_StartPlayback_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___btn_StartPlayback_7), (void*)value);
	}

	inline static int32_t get_offset_of_btn_PausePlayback_8() { return static_cast<int32_t>(offsetof(UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984, ___btn_PausePlayback_8)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_btn_PausePlayback_8() const { return ___btn_PausePlayback_8; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_btn_PausePlayback_8() { return &___btn_PausePlayback_8; }
	inline void set_btn_PausePlayback_8(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___btn_PausePlayback_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___btn_PausePlayback_8), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze
struct MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::eyeTrackingProvider
	RuntimeObject* ___eyeTrackingProvider_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::useEyeSupportedTargetPlacement
	bool ___useEyeSupportedTargetPlacement_5;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::minLookAwayDistToEnableEyeWarp
	float ___minLookAwayDistToEnableEyeWarp_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::handInputEnabled
	bool ___handInputEnabled_7;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::handmapping
	float ___handmapping_8;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::deltaHandMovemThresh
	float ___deltaHandMovemThresh_9;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::transparency_inTransition
	float ___transparency_inTransition_10;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::transparency_preview
	float ___transparency_preview_11;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::previewPlacemDistThresh
	float ___previewPlacemDistThresh_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::freezeX
	bool ___freezeX_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::freezeY
	bool ___freezeY_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::freezeZ
	bool ___freezeZ_15;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::LocalMinMax_X
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___LocalMinMax_X_16;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::LocalMinMax_Y
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___LocalMinMax_Y_17;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::LocalMinMax_Z
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___LocalMinMax_Z_18;
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PlacementSurfaces Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::PlacementSurface
	int32_t ___PlacementSurface_19;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::audio_OnDragStart
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_OnDragStart_20;
	// UnityEngine.AudioClip Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::audio_OnDragStop
	AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio_OnDragStop_21;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::voiceAction_PutThis
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___voiceAction_PutThis_22;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::voiceAction_OverHere
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___voiceAction_OverHere_23;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::OnDragStart
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___OnDragStart_24;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::OnDrop
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___OnDrop_25;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::useAsSlider
	bool ___useAsSlider_26;
	// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::txtOutput_sliderValue
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___txtOutput_sliderValue_27;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::slider_snapToNearestDecimal
	float ___slider_snapToNearestDecimal_28;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::previewGameObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___previewGameObject_29;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::onlyEyeWarpOnRelease
	bool ___onlyEyeWarpOnRelease_30;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::originalTransparency
	float ___originalTransparency_31;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::originalUseGravity
	bool ___originalUseGravity_32;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::originalDrag
	float ___originalDrag_33;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::onlyTransitionToPlausibleDestinations
	bool ___onlyTransitionToPlausibleDestinations_34;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::plausibleLocation
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___plausibleLocation_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::placePreviewAtHitPoint
	bool ___placePreviewAtHitPoint_36;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::manualTargetManip
	bool ___manualTargetManip_37;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::initalGazeDir
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initalGazeDir_38;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::handPos_absolute
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___handPos_absolute_41;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::handPos_relative
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___handPos_relative_42;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::initialHandPos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialHandPos_43;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::currEngagedHand
	uint8_t ___currEngagedHand_45;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::objIsGrabbed
	bool ___objIsGrabbed_46;
	// System.Nullable`1<UnityEngine.Ray> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::head_prevRay
	Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779  ___head_prevRay_47;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::head_deltaDirThresh
	float ___head_deltaDirThresh_48;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::head_smoothf
	float ___head_smoothf_49;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::head_isInMotion
	bool ___head_isInMotion_50;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::head_deltaDirf
	float ___head_deltaDirf_51;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::prevPreviewPos
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___prevPreviewPos_52;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::maxDiffAngleForHorizontalPlacem
	float ___maxDiffAngleForHorizontalPlacem_53;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::minDiffAngleForVerticalPlacem
	float ___minDiffAngleForVerticalPlacem_54;

public:
	inline static int32_t get_offset_of_eyeTrackingProvider_4() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___eyeTrackingProvider_4)); }
	inline RuntimeObject* get_eyeTrackingProvider_4() const { return ___eyeTrackingProvider_4; }
	inline RuntimeObject** get_address_of_eyeTrackingProvider_4() { return &___eyeTrackingProvider_4; }
	inline void set_eyeTrackingProvider_4(RuntimeObject* value)
	{
		___eyeTrackingProvider_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___eyeTrackingProvider_4), (void*)value);
	}

	inline static int32_t get_offset_of_useEyeSupportedTargetPlacement_5() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___useEyeSupportedTargetPlacement_5)); }
	inline bool get_useEyeSupportedTargetPlacement_5() const { return ___useEyeSupportedTargetPlacement_5; }
	inline bool* get_address_of_useEyeSupportedTargetPlacement_5() { return &___useEyeSupportedTargetPlacement_5; }
	inline void set_useEyeSupportedTargetPlacement_5(bool value)
	{
		___useEyeSupportedTargetPlacement_5 = value;
	}

	inline static int32_t get_offset_of_minLookAwayDistToEnableEyeWarp_6() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___minLookAwayDistToEnableEyeWarp_6)); }
	inline float get_minLookAwayDistToEnableEyeWarp_6() const { return ___minLookAwayDistToEnableEyeWarp_6; }
	inline float* get_address_of_minLookAwayDistToEnableEyeWarp_6() { return &___minLookAwayDistToEnableEyeWarp_6; }
	inline void set_minLookAwayDistToEnableEyeWarp_6(float value)
	{
		___minLookAwayDistToEnableEyeWarp_6 = value;
	}

	inline static int32_t get_offset_of_handInputEnabled_7() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___handInputEnabled_7)); }
	inline bool get_handInputEnabled_7() const { return ___handInputEnabled_7; }
	inline bool* get_address_of_handInputEnabled_7() { return &___handInputEnabled_7; }
	inline void set_handInputEnabled_7(bool value)
	{
		___handInputEnabled_7 = value;
	}

	inline static int32_t get_offset_of_handmapping_8() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___handmapping_8)); }
	inline float get_handmapping_8() const { return ___handmapping_8; }
	inline float* get_address_of_handmapping_8() { return &___handmapping_8; }
	inline void set_handmapping_8(float value)
	{
		___handmapping_8 = value;
	}

	inline static int32_t get_offset_of_deltaHandMovemThresh_9() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___deltaHandMovemThresh_9)); }
	inline float get_deltaHandMovemThresh_9() const { return ___deltaHandMovemThresh_9; }
	inline float* get_address_of_deltaHandMovemThresh_9() { return &___deltaHandMovemThresh_9; }
	inline void set_deltaHandMovemThresh_9(float value)
	{
		___deltaHandMovemThresh_9 = value;
	}

	inline static int32_t get_offset_of_transparency_inTransition_10() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___transparency_inTransition_10)); }
	inline float get_transparency_inTransition_10() const { return ___transparency_inTransition_10; }
	inline float* get_address_of_transparency_inTransition_10() { return &___transparency_inTransition_10; }
	inline void set_transparency_inTransition_10(float value)
	{
		___transparency_inTransition_10 = value;
	}

	inline static int32_t get_offset_of_transparency_preview_11() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___transparency_preview_11)); }
	inline float get_transparency_preview_11() const { return ___transparency_preview_11; }
	inline float* get_address_of_transparency_preview_11() { return &___transparency_preview_11; }
	inline void set_transparency_preview_11(float value)
	{
		___transparency_preview_11 = value;
	}

	inline static int32_t get_offset_of_previewPlacemDistThresh_12() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___previewPlacemDistThresh_12)); }
	inline float get_previewPlacemDistThresh_12() const { return ___previewPlacemDistThresh_12; }
	inline float* get_address_of_previewPlacemDistThresh_12() { return &___previewPlacemDistThresh_12; }
	inline void set_previewPlacemDistThresh_12(float value)
	{
		___previewPlacemDistThresh_12 = value;
	}

	inline static int32_t get_offset_of_freezeX_13() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___freezeX_13)); }
	inline bool get_freezeX_13() const { return ___freezeX_13; }
	inline bool* get_address_of_freezeX_13() { return &___freezeX_13; }
	inline void set_freezeX_13(bool value)
	{
		___freezeX_13 = value;
	}

	inline static int32_t get_offset_of_freezeY_14() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___freezeY_14)); }
	inline bool get_freezeY_14() const { return ___freezeY_14; }
	inline bool* get_address_of_freezeY_14() { return &___freezeY_14; }
	inline void set_freezeY_14(bool value)
	{
		___freezeY_14 = value;
	}

	inline static int32_t get_offset_of_freezeZ_15() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___freezeZ_15)); }
	inline bool get_freezeZ_15() const { return ___freezeZ_15; }
	inline bool* get_address_of_freezeZ_15() { return &___freezeZ_15; }
	inline void set_freezeZ_15(bool value)
	{
		___freezeZ_15 = value;
	}

	inline static int32_t get_offset_of_LocalMinMax_X_16() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___LocalMinMax_X_16)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_LocalMinMax_X_16() const { return ___LocalMinMax_X_16; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_LocalMinMax_X_16() { return &___LocalMinMax_X_16; }
	inline void set_LocalMinMax_X_16(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___LocalMinMax_X_16 = value;
	}

	inline static int32_t get_offset_of_LocalMinMax_Y_17() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___LocalMinMax_Y_17)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_LocalMinMax_Y_17() const { return ___LocalMinMax_Y_17; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_LocalMinMax_Y_17() { return &___LocalMinMax_Y_17; }
	inline void set_LocalMinMax_Y_17(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___LocalMinMax_Y_17 = value;
	}

	inline static int32_t get_offset_of_LocalMinMax_Z_18() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___LocalMinMax_Z_18)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_LocalMinMax_Z_18() const { return ___LocalMinMax_Z_18; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_LocalMinMax_Z_18() { return &___LocalMinMax_Z_18; }
	inline void set_LocalMinMax_Z_18(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___LocalMinMax_Z_18 = value;
	}

	inline static int32_t get_offset_of_PlacementSurface_19() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___PlacementSurface_19)); }
	inline int32_t get_PlacementSurface_19() const { return ___PlacementSurface_19; }
	inline int32_t* get_address_of_PlacementSurface_19() { return &___PlacementSurface_19; }
	inline void set_PlacementSurface_19(int32_t value)
	{
		___PlacementSurface_19 = value;
	}

	inline static int32_t get_offset_of_audio_OnDragStart_20() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___audio_OnDragStart_20)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_OnDragStart_20() const { return ___audio_OnDragStart_20; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_OnDragStart_20() { return &___audio_OnDragStart_20; }
	inline void set_audio_OnDragStart_20(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_OnDragStart_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_OnDragStart_20), (void*)value);
	}

	inline static int32_t get_offset_of_audio_OnDragStop_21() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___audio_OnDragStop_21)); }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * get_audio_OnDragStop_21() const { return ___audio_OnDragStop_21; }
	inline AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 ** get_address_of_audio_OnDragStop_21() { return &___audio_OnDragStop_21; }
	inline void set_audio_OnDragStop_21(AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * value)
	{
		___audio_OnDragStop_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___audio_OnDragStop_21), (void*)value);
	}

	inline static int32_t get_offset_of_voiceAction_PutThis_22() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___voiceAction_PutThis_22)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_voiceAction_PutThis_22() const { return ___voiceAction_PutThis_22; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_voiceAction_PutThis_22() { return &___voiceAction_PutThis_22; }
	inline void set_voiceAction_PutThis_22(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___voiceAction_PutThis_22 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___voiceAction_PutThis_22))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_voiceAction_OverHere_23() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___voiceAction_OverHere_23)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_voiceAction_OverHere_23() const { return ___voiceAction_OverHere_23; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_voiceAction_OverHere_23() { return &___voiceAction_OverHere_23; }
	inline void set_voiceAction_OverHere_23(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___voiceAction_OverHere_23 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___voiceAction_OverHere_23))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_OnDragStart_24() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___OnDragStart_24)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_OnDragStart_24() const { return ___OnDragStart_24; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_OnDragStart_24() { return &___OnDragStart_24; }
	inline void set_OnDragStart_24(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___OnDragStart_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnDragStart_24), (void*)value);
	}

	inline static int32_t get_offset_of_OnDrop_25() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___OnDrop_25)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_OnDrop_25() const { return ___OnDrop_25; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_OnDrop_25() { return &___OnDrop_25; }
	inline void set_OnDrop_25(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___OnDrop_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnDrop_25), (void*)value);
	}

	inline static int32_t get_offset_of_useAsSlider_26() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___useAsSlider_26)); }
	inline bool get_useAsSlider_26() const { return ___useAsSlider_26; }
	inline bool* get_address_of_useAsSlider_26() { return &___useAsSlider_26; }
	inline void set_useAsSlider_26(bool value)
	{
		___useAsSlider_26 = value;
	}

	inline static int32_t get_offset_of_txtOutput_sliderValue_27() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___txtOutput_sliderValue_27)); }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * get_txtOutput_sliderValue_27() const { return ___txtOutput_sliderValue_27; }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A ** get_address_of_txtOutput_sliderValue_27() { return &___txtOutput_sliderValue_27; }
	inline void set_txtOutput_sliderValue_27(TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * value)
	{
		___txtOutput_sliderValue_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___txtOutput_sliderValue_27), (void*)value);
	}

	inline static int32_t get_offset_of_slider_snapToNearestDecimal_28() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___slider_snapToNearestDecimal_28)); }
	inline float get_slider_snapToNearestDecimal_28() const { return ___slider_snapToNearestDecimal_28; }
	inline float* get_address_of_slider_snapToNearestDecimal_28() { return &___slider_snapToNearestDecimal_28; }
	inline void set_slider_snapToNearestDecimal_28(float value)
	{
		___slider_snapToNearestDecimal_28 = value;
	}

	inline static int32_t get_offset_of_previewGameObject_29() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___previewGameObject_29)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_previewGameObject_29() const { return ___previewGameObject_29; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_previewGameObject_29() { return &___previewGameObject_29; }
	inline void set_previewGameObject_29(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___previewGameObject_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___previewGameObject_29), (void*)value);
	}

	inline static int32_t get_offset_of_onlyEyeWarpOnRelease_30() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___onlyEyeWarpOnRelease_30)); }
	inline bool get_onlyEyeWarpOnRelease_30() const { return ___onlyEyeWarpOnRelease_30; }
	inline bool* get_address_of_onlyEyeWarpOnRelease_30() { return &___onlyEyeWarpOnRelease_30; }
	inline void set_onlyEyeWarpOnRelease_30(bool value)
	{
		___onlyEyeWarpOnRelease_30 = value;
	}

	inline static int32_t get_offset_of_originalTransparency_31() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___originalTransparency_31)); }
	inline float get_originalTransparency_31() const { return ___originalTransparency_31; }
	inline float* get_address_of_originalTransparency_31() { return &___originalTransparency_31; }
	inline void set_originalTransparency_31(float value)
	{
		___originalTransparency_31 = value;
	}

	inline static int32_t get_offset_of_originalUseGravity_32() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___originalUseGravity_32)); }
	inline bool get_originalUseGravity_32() const { return ___originalUseGravity_32; }
	inline bool* get_address_of_originalUseGravity_32() { return &___originalUseGravity_32; }
	inline void set_originalUseGravity_32(bool value)
	{
		___originalUseGravity_32 = value;
	}

	inline static int32_t get_offset_of_originalDrag_33() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___originalDrag_33)); }
	inline float get_originalDrag_33() const { return ___originalDrag_33; }
	inline float* get_address_of_originalDrag_33() { return &___originalDrag_33; }
	inline void set_originalDrag_33(float value)
	{
		___originalDrag_33 = value;
	}

	inline static int32_t get_offset_of_onlyTransitionToPlausibleDestinations_34() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___onlyTransitionToPlausibleDestinations_34)); }
	inline bool get_onlyTransitionToPlausibleDestinations_34() const { return ___onlyTransitionToPlausibleDestinations_34; }
	inline bool* get_address_of_onlyTransitionToPlausibleDestinations_34() { return &___onlyTransitionToPlausibleDestinations_34; }
	inline void set_onlyTransitionToPlausibleDestinations_34(bool value)
	{
		___onlyTransitionToPlausibleDestinations_34 = value;
	}

	inline static int32_t get_offset_of_plausibleLocation_35() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___plausibleLocation_35)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_plausibleLocation_35() const { return ___plausibleLocation_35; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_plausibleLocation_35() { return &___plausibleLocation_35; }
	inline void set_plausibleLocation_35(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___plausibleLocation_35 = value;
	}

	inline static int32_t get_offset_of_placePreviewAtHitPoint_36() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___placePreviewAtHitPoint_36)); }
	inline bool get_placePreviewAtHitPoint_36() const { return ___placePreviewAtHitPoint_36; }
	inline bool* get_address_of_placePreviewAtHitPoint_36() { return &___placePreviewAtHitPoint_36; }
	inline void set_placePreviewAtHitPoint_36(bool value)
	{
		___placePreviewAtHitPoint_36 = value;
	}

	inline static int32_t get_offset_of_manualTargetManip_37() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___manualTargetManip_37)); }
	inline bool get_manualTargetManip_37() const { return ___manualTargetManip_37; }
	inline bool* get_address_of_manualTargetManip_37() { return &___manualTargetManip_37; }
	inline void set_manualTargetManip_37(bool value)
	{
		___manualTargetManip_37 = value;
	}

	inline static int32_t get_offset_of_initalGazeDir_38() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___initalGazeDir_38)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initalGazeDir_38() const { return ___initalGazeDir_38; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initalGazeDir_38() { return &___initalGazeDir_38; }
	inline void set_initalGazeDir_38(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initalGazeDir_38 = value;
	}

	inline static int32_t get_offset_of_handPos_absolute_41() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___handPos_absolute_41)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_handPos_absolute_41() const { return ___handPos_absolute_41; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_handPos_absolute_41() { return &___handPos_absolute_41; }
	inline void set_handPos_absolute_41(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___handPos_absolute_41 = value;
	}

	inline static int32_t get_offset_of_handPos_relative_42() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___handPos_relative_42)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_handPos_relative_42() const { return ___handPos_relative_42; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_handPos_relative_42() { return &___handPos_relative_42; }
	inline void set_handPos_relative_42(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___handPos_relative_42 = value;
	}

	inline static int32_t get_offset_of_initialHandPos_43() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___initialHandPos_43)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialHandPos_43() const { return ___initialHandPos_43; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialHandPos_43() { return &___initialHandPos_43; }
	inline void set_initialHandPos_43(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialHandPos_43 = value;
	}

	inline static int32_t get_offset_of_currEngagedHand_45() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___currEngagedHand_45)); }
	inline uint8_t get_currEngagedHand_45() const { return ___currEngagedHand_45; }
	inline uint8_t* get_address_of_currEngagedHand_45() { return &___currEngagedHand_45; }
	inline void set_currEngagedHand_45(uint8_t value)
	{
		___currEngagedHand_45 = value;
	}

	inline static int32_t get_offset_of_objIsGrabbed_46() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___objIsGrabbed_46)); }
	inline bool get_objIsGrabbed_46() const { return ___objIsGrabbed_46; }
	inline bool* get_address_of_objIsGrabbed_46() { return &___objIsGrabbed_46; }
	inline void set_objIsGrabbed_46(bool value)
	{
		___objIsGrabbed_46 = value;
	}

	inline static int32_t get_offset_of_head_prevRay_47() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___head_prevRay_47)); }
	inline Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779  get_head_prevRay_47() const { return ___head_prevRay_47; }
	inline Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * get_address_of_head_prevRay_47() { return &___head_prevRay_47; }
	inline void set_head_prevRay_47(Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779  value)
	{
		___head_prevRay_47 = value;
	}

	inline static int32_t get_offset_of_head_deltaDirThresh_48() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___head_deltaDirThresh_48)); }
	inline float get_head_deltaDirThresh_48() const { return ___head_deltaDirThresh_48; }
	inline float* get_address_of_head_deltaDirThresh_48() { return &___head_deltaDirThresh_48; }
	inline void set_head_deltaDirThresh_48(float value)
	{
		___head_deltaDirThresh_48 = value;
	}

	inline static int32_t get_offset_of_head_smoothf_49() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___head_smoothf_49)); }
	inline float get_head_smoothf_49() const { return ___head_smoothf_49; }
	inline float* get_address_of_head_smoothf_49() { return &___head_smoothf_49; }
	inline void set_head_smoothf_49(float value)
	{
		___head_smoothf_49 = value;
	}

	inline static int32_t get_offset_of_head_isInMotion_50() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___head_isInMotion_50)); }
	inline bool get_head_isInMotion_50() const { return ___head_isInMotion_50; }
	inline bool* get_address_of_head_isInMotion_50() { return &___head_isInMotion_50; }
	inline void set_head_isInMotion_50(bool value)
	{
		___head_isInMotion_50 = value;
	}

	inline static int32_t get_offset_of_head_deltaDirf_51() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___head_deltaDirf_51)); }
	inline float get_head_deltaDirf_51() const { return ___head_deltaDirf_51; }
	inline float* get_address_of_head_deltaDirf_51() { return &___head_deltaDirf_51; }
	inline void set_head_deltaDirf_51(float value)
	{
		___head_deltaDirf_51 = value;
	}

	inline static int32_t get_offset_of_prevPreviewPos_52() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___prevPreviewPos_52)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_prevPreviewPos_52() const { return ___prevPreviewPos_52; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_prevPreviewPos_52() { return &___prevPreviewPos_52; }
	inline void set_prevPreviewPos_52(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___prevPreviewPos_52 = value;
	}

	inline static int32_t get_offset_of_maxDiffAngleForHorizontalPlacem_53() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___maxDiffAngleForHorizontalPlacem_53)); }
	inline float get_maxDiffAngleForHorizontalPlacem_53() const { return ___maxDiffAngleForHorizontalPlacem_53; }
	inline float* get_address_of_maxDiffAngleForHorizontalPlacem_53() { return &___maxDiffAngleForHorizontalPlacem_53; }
	inline void set_maxDiffAngleForHorizontalPlacem_53(float value)
	{
		___maxDiffAngleForHorizontalPlacem_53 = value;
	}

	inline static int32_t get_offset_of_minDiffAngleForVerticalPlacem_54() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42, ___minDiffAngleForVerticalPlacem_54)); }
	inline float get_minDiffAngleForVerticalPlacem_54() const { return ___minDiffAngleForVerticalPlacem_54; }
	inline float* get_address_of_minDiffAngleForVerticalPlacem_54() { return &___minDiffAngleForVerticalPlacem_54; }
	inline void set_minDiffAngleForVerticalPlacem_54(float value)
	{
		___minDiffAngleForVerticalPlacem_54 = value;
	}
};

struct MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::isManipulatingUsing_Hands
	bool ___isManipulatingUsing_Hands_39;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::isManipulatingUsing_Voice
	bool ___isManipulatingUsing_Voice_40;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::handIsPinching
	bool ___handIsPinching_44;

public:
	inline static int32_t get_offset_of_isManipulatingUsing_Hands_39() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields, ___isManipulatingUsing_Hands_39)); }
	inline bool get_isManipulatingUsing_Hands_39() const { return ___isManipulatingUsing_Hands_39; }
	inline bool* get_address_of_isManipulatingUsing_Hands_39() { return &___isManipulatingUsing_Hands_39; }
	inline void set_isManipulatingUsing_Hands_39(bool value)
	{
		___isManipulatingUsing_Hands_39 = value;
	}

	inline static int32_t get_offset_of_isManipulatingUsing_Voice_40() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields, ___isManipulatingUsing_Voice_40)); }
	inline bool get_isManipulatingUsing_Voice_40() const { return ___isManipulatingUsing_Voice_40; }
	inline bool* get_address_of_isManipulatingUsing_Voice_40() { return &___isManipulatingUsing_Voice_40; }
	inline void set_isManipulatingUsing_Voice_40(bool value)
	{
		___isManipulatingUsing_Voice_40 = value;
	}

	inline static int32_t get_offset_of_handIsPinching_44() { return static_cast<int32_t>(offsetof(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields, ___handIsPinching_44)); }
	inline bool get_handIsPinching_44() const { return ___handIsPinching_44; }
	inline bool* get_address_of_handIsPinching_44() { return &___handIsPinching_44; }
	inline void set_handIsPinching_44(bool value)
	{
		___handIsPinching_44 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera
struct MoveWithCamera_t4BD7E330C0418C95D3D36F7BC3A9751995ABFD66  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera::offsetToCamera
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___offsetToCamera_4;

public:
	inline static int32_t get_offset_of_offsetToCamera_4() { return static_cast<int32_t>(offsetof(MoveWithCamera_t4BD7E330C0418C95D3D36F7BC3A9751995ABFD66, ___offsetToCamera_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_offsetToCamera_4() const { return ___offsetToCamera_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_offsetToCamera_4() { return &___offsetToCamera_4; }
	inline void set_offsetToCamera_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___offsetToCamera_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene
struct OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::SceneToBeLoaded
	String_t* ___SceneToBeLoaded_4;
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene/LoadOptions Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::LoadOption
	int32_t ___LoadOption_5;

public:
	inline static int32_t get_offset_of_SceneToBeLoaded_4() { return static_cast<int32_t>(offsetof(OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8, ___SceneToBeLoaded_4)); }
	inline String_t* get_SceneToBeLoaded_4() const { return ___SceneToBeLoaded_4; }
	inline String_t** get_address_of_SceneToBeLoaded_4() { return &___SceneToBeLoaded_4; }
	inline void set_SceneToBeLoaded_4(String_t* value)
	{
		___SceneToBeLoaded_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SceneToBeLoaded_4), (void*)value);
	}

	inline static int32_t get_offset_of_LoadOption_5() { return static_cast<int32_t>(offsetof(OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8, ___LoadOption_5)); }
	inline int32_t get_LoadOption_5() const { return ___LoadOption_5; }
	inline int32_t* get_address_of_LoadOption_5() { return &___LoadOption_5; }
	inline void set_LoadOption_5(int32_t value)
	{
		___LoadOption_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase
struct PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::autoGazePanIsActive
	bool ___autoGazePanIsActive_4;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::panSpeedLeftRight
	float ___panSpeedLeftRight_5;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::panSpeedUpDown
	float ___panSpeedUpDown_6;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::minDistFromCenterForAutoPan
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___minDistFromCenterForAutoPan_7;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomAcceleration
	float ___ZoomAcceleration_8;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomSpeedMax
	float ___ZoomSpeedMax_9;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomMinScale
	float ___ZoomMinScale_10;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomMaxScale
	float ___ZoomMaxScale_11;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::customColliderSizeOnLookAt
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___customColliderSizeOnLookAt_12;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::origColliderSize
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___origColliderSize_13;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::timeInSecondsToZoom
	float ___timeInSecondsToZoom_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::useSkimProof
	bool ___useSkimProof_15;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::skimproof_UpdateSpeedFromUser
	float ___skimproof_UpdateSpeedFromUser_16;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::cursorPos
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___cursorPos_17;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::scale
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___scale_18;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::offset
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___offset_19;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::offsetRate_Zoom
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___offsetRate_Zoom_20;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::offsetRate_Pan
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___offsetRate_Pan_21;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::limitPanning
	bool ___limitPanning_22;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::skimproof_normFixator
	float ___skimproof_normFixator_23;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::skimproof_UpdateSpeed
	float ___skimproof_UpdateSpeed_24;
	// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::myCollider
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___myCollider_25;
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::myEyeTarget
	EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___myEyeTarget_26;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::zoomSpeed
	float ___zoomSpeed_27;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::zoomDir
	float ___zoomDir_28;
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::dynaZoomInvert
	int32_t ___dynaZoomInvert_29;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::wasLookedAtBefore
	bool ___wasLookedAtBefore_30;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::isNavigating
	bool ___isNavigating_31;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::navPos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___navPos_32;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::isFocused
	bool ___isFocused_33;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::isZooming
	bool ___isZooming_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomGestureEnabledOnStartup
	bool ___ZoomGestureEnabledOnStartup_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::handZoomEnabled
	bool ___handZoomEnabled_36;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::originalRatio
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___originalRatio_37;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::originalPivot
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___originalPivot_38;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::originalScale
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___originalScale_39;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::originalOffset
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___originalOffset_40;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeSaccadeProvider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::eyeSaccadeProvider
	RuntimeObject* ___eyeSaccadeProvider_41;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::zoomUsingHandsActive
	bool ___zoomUsingHandsActive_42;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::initialPalmPos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialPalmPos_43;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::handUsedToZoom
	uint8_t ___handUsedToZoom_44;

public:
	inline static int32_t get_offset_of_autoGazePanIsActive_4() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___autoGazePanIsActive_4)); }
	inline bool get_autoGazePanIsActive_4() const { return ___autoGazePanIsActive_4; }
	inline bool* get_address_of_autoGazePanIsActive_4() { return &___autoGazePanIsActive_4; }
	inline void set_autoGazePanIsActive_4(bool value)
	{
		___autoGazePanIsActive_4 = value;
	}

	inline static int32_t get_offset_of_panSpeedLeftRight_5() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___panSpeedLeftRight_5)); }
	inline float get_panSpeedLeftRight_5() const { return ___panSpeedLeftRight_5; }
	inline float* get_address_of_panSpeedLeftRight_5() { return &___panSpeedLeftRight_5; }
	inline void set_panSpeedLeftRight_5(float value)
	{
		___panSpeedLeftRight_5 = value;
	}

	inline static int32_t get_offset_of_panSpeedUpDown_6() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___panSpeedUpDown_6)); }
	inline float get_panSpeedUpDown_6() const { return ___panSpeedUpDown_6; }
	inline float* get_address_of_panSpeedUpDown_6() { return &___panSpeedUpDown_6; }
	inline void set_panSpeedUpDown_6(float value)
	{
		___panSpeedUpDown_6 = value;
	}

	inline static int32_t get_offset_of_minDistFromCenterForAutoPan_7() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___minDistFromCenterForAutoPan_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_minDistFromCenterForAutoPan_7() const { return ___minDistFromCenterForAutoPan_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_minDistFromCenterForAutoPan_7() { return &___minDistFromCenterForAutoPan_7; }
	inline void set_minDistFromCenterForAutoPan_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___minDistFromCenterForAutoPan_7 = value;
	}

	inline static int32_t get_offset_of_ZoomAcceleration_8() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___ZoomAcceleration_8)); }
	inline float get_ZoomAcceleration_8() const { return ___ZoomAcceleration_8; }
	inline float* get_address_of_ZoomAcceleration_8() { return &___ZoomAcceleration_8; }
	inline void set_ZoomAcceleration_8(float value)
	{
		___ZoomAcceleration_8 = value;
	}

	inline static int32_t get_offset_of_ZoomSpeedMax_9() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___ZoomSpeedMax_9)); }
	inline float get_ZoomSpeedMax_9() const { return ___ZoomSpeedMax_9; }
	inline float* get_address_of_ZoomSpeedMax_9() { return &___ZoomSpeedMax_9; }
	inline void set_ZoomSpeedMax_9(float value)
	{
		___ZoomSpeedMax_9 = value;
	}

	inline static int32_t get_offset_of_ZoomMinScale_10() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___ZoomMinScale_10)); }
	inline float get_ZoomMinScale_10() const { return ___ZoomMinScale_10; }
	inline float* get_address_of_ZoomMinScale_10() { return &___ZoomMinScale_10; }
	inline void set_ZoomMinScale_10(float value)
	{
		___ZoomMinScale_10 = value;
	}

	inline static int32_t get_offset_of_ZoomMaxScale_11() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___ZoomMaxScale_11)); }
	inline float get_ZoomMaxScale_11() const { return ___ZoomMaxScale_11; }
	inline float* get_address_of_ZoomMaxScale_11() { return &___ZoomMaxScale_11; }
	inline void set_ZoomMaxScale_11(float value)
	{
		___ZoomMaxScale_11 = value;
	}

	inline static int32_t get_offset_of_customColliderSizeOnLookAt_12() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___customColliderSizeOnLookAt_12)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_customColliderSizeOnLookAt_12() const { return ___customColliderSizeOnLookAt_12; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_customColliderSizeOnLookAt_12() { return &___customColliderSizeOnLookAt_12; }
	inline void set_customColliderSizeOnLookAt_12(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___customColliderSizeOnLookAt_12 = value;
	}

	inline static int32_t get_offset_of_origColliderSize_13() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___origColliderSize_13)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_origColliderSize_13() const { return ___origColliderSize_13; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_origColliderSize_13() { return &___origColliderSize_13; }
	inline void set_origColliderSize_13(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___origColliderSize_13 = value;
	}

	inline static int32_t get_offset_of_timeInSecondsToZoom_14() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___timeInSecondsToZoom_14)); }
	inline float get_timeInSecondsToZoom_14() const { return ___timeInSecondsToZoom_14; }
	inline float* get_address_of_timeInSecondsToZoom_14() { return &___timeInSecondsToZoom_14; }
	inline void set_timeInSecondsToZoom_14(float value)
	{
		___timeInSecondsToZoom_14 = value;
	}

	inline static int32_t get_offset_of_useSkimProof_15() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___useSkimProof_15)); }
	inline bool get_useSkimProof_15() const { return ___useSkimProof_15; }
	inline bool* get_address_of_useSkimProof_15() { return &___useSkimProof_15; }
	inline void set_useSkimProof_15(bool value)
	{
		___useSkimProof_15 = value;
	}

	inline static int32_t get_offset_of_skimproof_UpdateSpeedFromUser_16() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___skimproof_UpdateSpeedFromUser_16)); }
	inline float get_skimproof_UpdateSpeedFromUser_16() const { return ___skimproof_UpdateSpeedFromUser_16; }
	inline float* get_address_of_skimproof_UpdateSpeedFromUser_16() { return &___skimproof_UpdateSpeedFromUser_16; }
	inline void set_skimproof_UpdateSpeedFromUser_16(float value)
	{
		___skimproof_UpdateSpeedFromUser_16 = value;
	}

	inline static int32_t get_offset_of_cursorPos_17() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___cursorPos_17)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_cursorPos_17() const { return ___cursorPos_17; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_cursorPos_17() { return &___cursorPos_17; }
	inline void set_cursorPos_17(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___cursorPos_17 = value;
	}

	inline static int32_t get_offset_of_scale_18() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___scale_18)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_scale_18() const { return ___scale_18; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_scale_18() { return &___scale_18; }
	inline void set_scale_18(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___scale_18 = value;
	}

	inline static int32_t get_offset_of_offset_19() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___offset_19)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_offset_19() const { return ___offset_19; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_offset_19() { return &___offset_19; }
	inline void set_offset_19(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___offset_19 = value;
	}

	inline static int32_t get_offset_of_offsetRate_Zoom_20() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___offsetRate_Zoom_20)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_offsetRate_Zoom_20() const { return ___offsetRate_Zoom_20; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_offsetRate_Zoom_20() { return &___offsetRate_Zoom_20; }
	inline void set_offsetRate_Zoom_20(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___offsetRate_Zoom_20 = value;
	}

	inline static int32_t get_offset_of_offsetRate_Pan_21() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___offsetRate_Pan_21)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_offsetRate_Pan_21() const { return ___offsetRate_Pan_21; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_offsetRate_Pan_21() { return &___offsetRate_Pan_21; }
	inline void set_offsetRate_Pan_21(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___offsetRate_Pan_21 = value;
	}

	inline static int32_t get_offset_of_limitPanning_22() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___limitPanning_22)); }
	inline bool get_limitPanning_22() const { return ___limitPanning_22; }
	inline bool* get_address_of_limitPanning_22() { return &___limitPanning_22; }
	inline void set_limitPanning_22(bool value)
	{
		___limitPanning_22 = value;
	}

	inline static int32_t get_offset_of_skimproof_normFixator_23() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___skimproof_normFixator_23)); }
	inline float get_skimproof_normFixator_23() const { return ___skimproof_normFixator_23; }
	inline float* get_address_of_skimproof_normFixator_23() { return &___skimproof_normFixator_23; }
	inline void set_skimproof_normFixator_23(float value)
	{
		___skimproof_normFixator_23 = value;
	}

	inline static int32_t get_offset_of_skimproof_UpdateSpeed_24() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___skimproof_UpdateSpeed_24)); }
	inline float get_skimproof_UpdateSpeed_24() const { return ___skimproof_UpdateSpeed_24; }
	inline float* get_address_of_skimproof_UpdateSpeed_24() { return &___skimproof_UpdateSpeed_24; }
	inline void set_skimproof_UpdateSpeed_24(float value)
	{
		___skimproof_UpdateSpeed_24 = value;
	}

	inline static int32_t get_offset_of_myCollider_25() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___myCollider_25)); }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * get_myCollider_25() const { return ___myCollider_25; }
	inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA ** get_address_of_myCollider_25() { return &___myCollider_25; }
	inline void set_myCollider_25(BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * value)
	{
		___myCollider_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___myCollider_25), (void*)value);
	}

	inline static int32_t get_offset_of_myEyeTarget_26() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___myEyeTarget_26)); }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * get_myEyeTarget_26() const { return ___myEyeTarget_26; }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 ** get_address_of_myEyeTarget_26() { return &___myEyeTarget_26; }
	inline void set_myEyeTarget_26(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * value)
	{
		___myEyeTarget_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___myEyeTarget_26), (void*)value);
	}

	inline static int32_t get_offset_of_zoomSpeed_27() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___zoomSpeed_27)); }
	inline float get_zoomSpeed_27() const { return ___zoomSpeed_27; }
	inline float* get_address_of_zoomSpeed_27() { return &___zoomSpeed_27; }
	inline void set_zoomSpeed_27(float value)
	{
		___zoomSpeed_27 = value;
	}

	inline static int32_t get_offset_of_zoomDir_28() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___zoomDir_28)); }
	inline float get_zoomDir_28() const { return ___zoomDir_28; }
	inline float* get_address_of_zoomDir_28() { return &___zoomDir_28; }
	inline void set_zoomDir_28(float value)
	{
		___zoomDir_28 = value;
	}

	inline static int32_t get_offset_of_dynaZoomInvert_29() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___dynaZoomInvert_29)); }
	inline int32_t get_dynaZoomInvert_29() const { return ___dynaZoomInvert_29; }
	inline int32_t* get_address_of_dynaZoomInvert_29() { return &___dynaZoomInvert_29; }
	inline void set_dynaZoomInvert_29(int32_t value)
	{
		___dynaZoomInvert_29 = value;
	}

	inline static int32_t get_offset_of_wasLookedAtBefore_30() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___wasLookedAtBefore_30)); }
	inline bool get_wasLookedAtBefore_30() const { return ___wasLookedAtBefore_30; }
	inline bool* get_address_of_wasLookedAtBefore_30() { return &___wasLookedAtBefore_30; }
	inline void set_wasLookedAtBefore_30(bool value)
	{
		___wasLookedAtBefore_30 = value;
	}

	inline static int32_t get_offset_of_isNavigating_31() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___isNavigating_31)); }
	inline bool get_isNavigating_31() const { return ___isNavigating_31; }
	inline bool* get_address_of_isNavigating_31() { return &___isNavigating_31; }
	inline void set_isNavigating_31(bool value)
	{
		___isNavigating_31 = value;
	}

	inline static int32_t get_offset_of_navPos_32() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___navPos_32)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_navPos_32() const { return ___navPos_32; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_navPos_32() { return &___navPos_32; }
	inline void set_navPos_32(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___navPos_32 = value;
	}

	inline static int32_t get_offset_of_isFocused_33() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___isFocused_33)); }
	inline bool get_isFocused_33() const { return ___isFocused_33; }
	inline bool* get_address_of_isFocused_33() { return &___isFocused_33; }
	inline void set_isFocused_33(bool value)
	{
		___isFocused_33 = value;
	}

	inline static int32_t get_offset_of_isZooming_34() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___isZooming_34)); }
	inline bool get_isZooming_34() const { return ___isZooming_34; }
	inline bool* get_address_of_isZooming_34() { return &___isZooming_34; }
	inline void set_isZooming_34(bool value)
	{
		___isZooming_34 = value;
	}

	inline static int32_t get_offset_of_ZoomGestureEnabledOnStartup_35() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___ZoomGestureEnabledOnStartup_35)); }
	inline bool get_ZoomGestureEnabledOnStartup_35() const { return ___ZoomGestureEnabledOnStartup_35; }
	inline bool* get_address_of_ZoomGestureEnabledOnStartup_35() { return &___ZoomGestureEnabledOnStartup_35; }
	inline void set_ZoomGestureEnabledOnStartup_35(bool value)
	{
		___ZoomGestureEnabledOnStartup_35 = value;
	}

	inline static int32_t get_offset_of_handZoomEnabled_36() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___handZoomEnabled_36)); }
	inline bool get_handZoomEnabled_36() const { return ___handZoomEnabled_36; }
	inline bool* get_address_of_handZoomEnabled_36() { return &___handZoomEnabled_36; }
	inline void set_handZoomEnabled_36(bool value)
	{
		___handZoomEnabled_36 = value;
	}

	inline static int32_t get_offset_of_originalRatio_37() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___originalRatio_37)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_originalRatio_37() const { return ___originalRatio_37; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_originalRatio_37() { return &___originalRatio_37; }
	inline void set_originalRatio_37(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___originalRatio_37 = value;
	}

	inline static int32_t get_offset_of_originalPivot_38() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___originalPivot_38)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_originalPivot_38() const { return ___originalPivot_38; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_originalPivot_38() { return &___originalPivot_38; }
	inline void set_originalPivot_38(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___originalPivot_38 = value;
	}

	inline static int32_t get_offset_of_originalScale_39() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___originalScale_39)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_originalScale_39() const { return ___originalScale_39; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_originalScale_39() { return &___originalScale_39; }
	inline void set_originalScale_39(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___originalScale_39 = value;
	}

	inline static int32_t get_offset_of_originalOffset_40() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___originalOffset_40)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_originalOffset_40() const { return ___originalOffset_40; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_originalOffset_40() { return &___originalOffset_40; }
	inline void set_originalOffset_40(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___originalOffset_40 = value;
	}

	inline static int32_t get_offset_of_eyeSaccadeProvider_41() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___eyeSaccadeProvider_41)); }
	inline RuntimeObject* get_eyeSaccadeProvider_41() const { return ___eyeSaccadeProvider_41; }
	inline RuntimeObject** get_address_of_eyeSaccadeProvider_41() { return &___eyeSaccadeProvider_41; }
	inline void set_eyeSaccadeProvider_41(RuntimeObject* value)
	{
		___eyeSaccadeProvider_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___eyeSaccadeProvider_41), (void*)value);
	}

	inline static int32_t get_offset_of_zoomUsingHandsActive_42() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___zoomUsingHandsActive_42)); }
	inline bool get_zoomUsingHandsActive_42() const { return ___zoomUsingHandsActive_42; }
	inline bool* get_address_of_zoomUsingHandsActive_42() { return &___zoomUsingHandsActive_42; }
	inline void set_zoomUsingHandsActive_42(bool value)
	{
		___zoomUsingHandsActive_42 = value;
	}

	inline static int32_t get_offset_of_initialPalmPos_43() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___initialPalmPos_43)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialPalmPos_43() const { return ___initialPalmPos_43; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialPalmPos_43() { return &___initialPalmPos_43; }
	inline void set_initialPalmPos_43(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialPalmPos_43 = value;
	}

	inline static int32_t get_offset_of_handUsedToZoom_44() { return static_cast<int32_t>(offsetof(PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53, ___handUsedToZoom_44)); }
	inline uint8_t get_handUsedToZoom_44() const { return ___handUsedToZoom_44; }
	inline uint8_t* get_address_of_handUsedToZoom_44() { return &___handUsedToZoom_44; }
	inline void set_handUsedToZoom_44(uint8_t value)
	{
		___handUsedToZoom_44 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap
struct ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.Gradient Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::colorGradient
	Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * ___colorGradient_4;
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::maxNumberOfParticles
	int32_t ___maxNumberOfParticles_5;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::minParticleSize
	float ___minParticleSize_6;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::maxParticleSize
	float ___maxParticleSize_7;
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::particleDecalDataIndex
	int32_t ___particleDecalDataIndex_8;
	// UnityEngine.ParticleSystem Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::particleSys
	ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * ___particleSys_9;
	// UnityEngine.ParticleSystem/EmissionModule Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::emissionModule
	EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1  ___emissionModule_10;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::particleData
	List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * ___particleData_11;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::colorScaleTweaker
	float ___colorScaleTweaker_12;

public:
	inline static int32_t get_offset_of_colorGradient_4() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___colorGradient_4)); }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * get_colorGradient_4() const { return ___colorGradient_4; }
	inline Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A ** get_address_of_colorGradient_4() { return &___colorGradient_4; }
	inline void set_colorGradient_4(Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * value)
	{
		___colorGradient_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___colorGradient_4), (void*)value);
	}

	inline static int32_t get_offset_of_maxNumberOfParticles_5() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___maxNumberOfParticles_5)); }
	inline int32_t get_maxNumberOfParticles_5() const { return ___maxNumberOfParticles_5; }
	inline int32_t* get_address_of_maxNumberOfParticles_5() { return &___maxNumberOfParticles_5; }
	inline void set_maxNumberOfParticles_5(int32_t value)
	{
		___maxNumberOfParticles_5 = value;
	}

	inline static int32_t get_offset_of_minParticleSize_6() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___minParticleSize_6)); }
	inline float get_minParticleSize_6() const { return ___minParticleSize_6; }
	inline float* get_address_of_minParticleSize_6() { return &___minParticleSize_6; }
	inline void set_minParticleSize_6(float value)
	{
		___minParticleSize_6 = value;
	}

	inline static int32_t get_offset_of_maxParticleSize_7() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___maxParticleSize_7)); }
	inline float get_maxParticleSize_7() const { return ___maxParticleSize_7; }
	inline float* get_address_of_maxParticleSize_7() { return &___maxParticleSize_7; }
	inline void set_maxParticleSize_7(float value)
	{
		___maxParticleSize_7 = value;
	}

	inline static int32_t get_offset_of_particleDecalDataIndex_8() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___particleDecalDataIndex_8)); }
	inline int32_t get_particleDecalDataIndex_8() const { return ___particleDecalDataIndex_8; }
	inline int32_t* get_address_of_particleDecalDataIndex_8() { return &___particleDecalDataIndex_8; }
	inline void set_particleDecalDataIndex_8(int32_t value)
	{
		___particleDecalDataIndex_8 = value;
	}

	inline static int32_t get_offset_of_particleSys_9() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___particleSys_9)); }
	inline ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * get_particleSys_9() const { return ___particleSys_9; }
	inline ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D ** get_address_of_particleSys_9() { return &___particleSys_9; }
	inline void set_particleSys_9(ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * value)
	{
		___particleSys_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___particleSys_9), (void*)value);
	}

	inline static int32_t get_offset_of_emissionModule_10() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___emissionModule_10)); }
	inline EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1  get_emissionModule_10() const { return ___emissionModule_10; }
	inline EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 * get_address_of_emissionModule_10() { return &___emissionModule_10; }
	inline void set_emissionModule_10(EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1  value)
	{
		___emissionModule_10 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___emissionModule_10))->___m_ParticleSystem_0), (void*)NULL);
	}

	inline static int32_t get_offset_of_particleData_11() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___particleData_11)); }
	inline List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * get_particleData_11() const { return ___particleData_11; }
	inline List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 ** get_address_of_particleData_11() { return &___particleData_11; }
	inline void set_particleData_11(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * value)
	{
		___particleData_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___particleData_11), (void*)value);
	}

	inline static int32_t get_offset_of_colorScaleTweaker_12() { return static_cast<int32_t>(offsetof(ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76, ___colorScaleTweaker_12)); }
	inline float get_colorScaleTweaker_12() const { return ___colorScaleTweaker_12; }
	inline float* get_address_of_colorScaleTweaker_12() { return &___colorScaleTweaker_12; }
	inline void set_colorScaleTweaker_12(float value)
	{
		___colorScaleTweaker_12 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir
struct RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir::RotateByEulerAngles
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___RotateByEulerAngles_4;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir::speed
	float ___speed_5;

public:
	inline static int32_t get_offset_of_RotateByEulerAngles_4() { return static_cast<int32_t>(offsetof(RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD, ___RotateByEulerAngles_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_RotateByEulerAngles_4() const { return ___RotateByEulerAngles_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_RotateByEulerAngles_4() { return &___RotateByEulerAngles_4; }
	inline void set_RotateByEulerAngles_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___RotateByEulerAngles_4 = value;
	}

	inline static int32_t get_offset_of_speed_5() { return static_cast<int32_t>(offsetof(RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD, ___speed_5)); }
	inline float get_speed_5() const { return ___speed_5; }
	inline float* get_address_of_speed_5() { return &___speed_5; }
	inline void set_speed_5(float value)
	{
		___speed_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo
struct SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback
struct SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::visualFeedbackTemplate
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___visualFeedbackTemplate_4;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::maxShowtimeInSeconds
	float ___maxShowtimeInSeconds_5;
	// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::myTextMesh
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___myTextMesh_6;
	// System.DateTime Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::startedTime
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___startedTime_7;

public:
	inline static int32_t get_offset_of_visualFeedbackTemplate_4() { return static_cast<int32_t>(offsetof(SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34, ___visualFeedbackTemplate_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_visualFeedbackTemplate_4() const { return ___visualFeedbackTemplate_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_visualFeedbackTemplate_4() { return &___visualFeedbackTemplate_4; }
	inline void set_visualFeedbackTemplate_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___visualFeedbackTemplate_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___visualFeedbackTemplate_4), (void*)value);
	}

	inline static int32_t get_offset_of_maxShowtimeInSeconds_5() { return static_cast<int32_t>(offsetof(SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34, ___maxShowtimeInSeconds_5)); }
	inline float get_maxShowtimeInSeconds_5() const { return ___maxShowtimeInSeconds_5; }
	inline float* get_address_of_maxShowtimeInSeconds_5() { return &___maxShowtimeInSeconds_5; }
	inline void set_maxShowtimeInSeconds_5(float value)
	{
		___maxShowtimeInSeconds_5 = value;
	}

	inline static int32_t get_offset_of_myTextMesh_6() { return static_cast<int32_t>(offsetof(SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34, ___myTextMesh_6)); }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * get_myTextMesh_6() const { return ___myTextMesh_6; }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A ** get_address_of_myTextMesh_6() { return &___myTextMesh_6; }
	inline void set_myTextMesh_6(TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * value)
	{
		___myTextMesh_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___myTextMesh_6), (void*)value);
	}

	inline static int32_t get_offset_of_startedTime_7() { return static_cast<int32_t>(offsetof(SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34, ___startedTime_7)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_startedTime_7() const { return ___startedTime_7; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_startedTime_7() { return &___startedTime_7; }
	inline void set_startedTime_7(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___startedTime_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText
struct StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::status
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * ___status_5;

public:
	inline static int32_t get_offset_of_status_5() { return static_cast<int32_t>(offsetof(StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0, ___status_5)); }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * get_status_5() const { return ___status_5; }
	inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A ** get_address_of_status_5() { return &___status_5; }
	inline void set_status_5(TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * value)
	{
		___status_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___status_5), (void*)value);
	}
};

struct StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::_Instance
	StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * ____Instance_4;

public:
	inline static int32_t get_offset_of__Instance_4() { return static_cast<int32_t>(offsetof(StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_StaticFields, ____Instance_4)); }
	inline StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * get__Instance_4() const { return ____Instance_4; }
	inline StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 ** get_address_of__Instance_4() { return &____Instance_4; }
	inline void set__Instance_4(StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * value)
	{
		____Instance_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____Instance_4), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial
struct TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.GameObject[] Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::templates
	GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* ___templates_4;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::targetSizeInVisAngle
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___targetSizeInVisAngle_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::keepVisAngleSizeConstant
	bool ___keepVisAngleSizeConstant_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::keepTargetsFacingTheCam
	bool ___keepTargetsFacingTheCam_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::hideTemplatesOnStartup
	bool ___hideTemplatesOnStartup_8;
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::radialLayout_nTargets
	int32_t ___radialLayout_nTargets_9;
	// System.Single[] Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::radialLayout_radiusInVisAngle
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___radialLayout_radiusInVisAngle_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::showTargetAtGroupCenter
	bool ___showTargetAtGroupCenter_11;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::targetSizeInMeters
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___targetSizeInMeters_12;
	// System.Collections.Generic.List`1<UnityEngine.GameObject> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::instantiatedTargets
	List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * ___instantiatedTargets_13;

public:
	inline static int32_t get_offset_of_templates_4() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___templates_4)); }
	inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* get_templates_4() const { return ___templates_4; }
	inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520** get_address_of_templates_4() { return &___templates_4; }
	inline void set_templates_4(GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* value)
	{
		___templates_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___templates_4), (void*)value);
	}

	inline static int32_t get_offset_of_targetSizeInVisAngle_5() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___targetSizeInVisAngle_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_targetSizeInVisAngle_5() const { return ___targetSizeInVisAngle_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_targetSizeInVisAngle_5() { return &___targetSizeInVisAngle_5; }
	inline void set_targetSizeInVisAngle_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___targetSizeInVisAngle_5 = value;
	}

	inline static int32_t get_offset_of_keepVisAngleSizeConstant_6() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___keepVisAngleSizeConstant_6)); }
	inline bool get_keepVisAngleSizeConstant_6() const { return ___keepVisAngleSizeConstant_6; }
	inline bool* get_address_of_keepVisAngleSizeConstant_6() { return &___keepVisAngleSizeConstant_6; }
	inline void set_keepVisAngleSizeConstant_6(bool value)
	{
		___keepVisAngleSizeConstant_6 = value;
	}

	inline static int32_t get_offset_of_keepTargetsFacingTheCam_7() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___keepTargetsFacingTheCam_7)); }
	inline bool get_keepTargetsFacingTheCam_7() const { return ___keepTargetsFacingTheCam_7; }
	inline bool* get_address_of_keepTargetsFacingTheCam_7() { return &___keepTargetsFacingTheCam_7; }
	inline void set_keepTargetsFacingTheCam_7(bool value)
	{
		___keepTargetsFacingTheCam_7 = value;
	}

	inline static int32_t get_offset_of_hideTemplatesOnStartup_8() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___hideTemplatesOnStartup_8)); }
	inline bool get_hideTemplatesOnStartup_8() const { return ___hideTemplatesOnStartup_8; }
	inline bool* get_address_of_hideTemplatesOnStartup_8() { return &___hideTemplatesOnStartup_8; }
	inline void set_hideTemplatesOnStartup_8(bool value)
	{
		___hideTemplatesOnStartup_8 = value;
	}

	inline static int32_t get_offset_of_radialLayout_nTargets_9() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___radialLayout_nTargets_9)); }
	inline int32_t get_radialLayout_nTargets_9() const { return ___radialLayout_nTargets_9; }
	inline int32_t* get_address_of_radialLayout_nTargets_9() { return &___radialLayout_nTargets_9; }
	inline void set_radialLayout_nTargets_9(int32_t value)
	{
		___radialLayout_nTargets_9 = value;
	}

	inline static int32_t get_offset_of_radialLayout_radiusInVisAngle_10() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___radialLayout_radiusInVisAngle_10)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_radialLayout_radiusInVisAngle_10() const { return ___radialLayout_radiusInVisAngle_10; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_radialLayout_radiusInVisAngle_10() { return &___radialLayout_radiusInVisAngle_10; }
	inline void set_radialLayout_radiusInVisAngle_10(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___radialLayout_radiusInVisAngle_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___radialLayout_radiusInVisAngle_10), (void*)value);
	}

	inline static int32_t get_offset_of_showTargetAtGroupCenter_11() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___showTargetAtGroupCenter_11)); }
	inline bool get_showTargetAtGroupCenter_11() const { return ___showTargetAtGroupCenter_11; }
	inline bool* get_address_of_showTargetAtGroupCenter_11() { return &___showTargetAtGroupCenter_11; }
	inline void set_showTargetAtGroupCenter_11(bool value)
	{
		___showTargetAtGroupCenter_11 = value;
	}

	inline static int32_t get_offset_of_targetSizeInMeters_12() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___targetSizeInMeters_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_targetSizeInMeters_12() const { return ___targetSizeInMeters_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_targetSizeInMeters_12() { return &___targetSizeInMeters_12; }
	inline void set_targetSizeInMeters_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___targetSizeInMeters_12 = value;
	}

	inline static int32_t get_offset_of_instantiatedTargets_13() { return static_cast<int32_t>(offsetof(TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A, ___instantiatedTargets_13)); }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * get_instantiatedTargets_13() const { return ___instantiatedTargets_13; }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 ** get_address_of_instantiatedTargets_13() { return &___instantiatedTargets_13; }
	inline void set_instantiatedTargets_13(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * value)
	{
		___instantiatedTargets_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___instantiatedTargets_13), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler
struct BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::focusEnabled
	bool ___focusEnabled_4;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::<Focusers>k__BackingField
	List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A * ___U3CFocusersU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_focusEnabled_4() { return static_cast<int32_t>(offsetof(BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2, ___focusEnabled_4)); }
	inline bool get_focusEnabled_4() const { return ___focusEnabled_4; }
	inline bool* get_address_of_focusEnabled_4() { return &___focusEnabled_4; }
	inline void set_focusEnabled_4(bool value)
	{
		___focusEnabled_4 = value;
	}

	inline static int32_t get_offset_of_U3CFocusersU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2, ___U3CFocusersU3Ek__BackingField_5)); }
	inline List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A * get_U3CFocusersU3Ek__BackingField_5() const { return ___U3CFocusersU3Ek__BackingField_5; }
	inline List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A ** get_address_of_U3CFocusersU3Ek__BackingField_5() { return &___U3CFocusersU3Ek__BackingField_5; }
	inline void set_U3CFocusersU3Ek__BackingField_5(List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A * value)
	{
		___U3CFocusersU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusersU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>
struct InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	RuntimeObject* ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E, ___U3CInputDataU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputDataU3Ek__BackingField_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Object>
struct InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	RuntimeObject * ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440, ___U3CInputDataU3Ek__BackingField_6)); }
	inline RuntimeObject * get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline RuntimeObject ** get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(RuntimeObject * value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputDataU3Ek__BackingField_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::lateInitialize
	bool ___lateInitialize_4;

public:
	inline static int32_t get_offset_of_lateInitialize_4() { return static_cast<int32_t>(offsetof(InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5, ___lateInitialize_4)); }
	inline bool get_lateInitialize_4() const { return ___lateInitialize_4; }
	inline bool* get_address_of_lateInitialize_4() { return &___lateInitialize_4; }
	inline void set_lateInitialize_4(bool value)
	{
		___lateInitialize_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CPointerU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_6() const { return ___U3CPointerU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_6() { return &___U3CPointerU3Ek__BackingField_6; }
	inline void set_U3CPointerU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCountU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CCountU3Ek__BackingField_7)); }
	inline int32_t get_U3CCountU3Ek__BackingField_7() const { return ___U3CCountU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3CCountU3Ek__BackingField_7() { return &___U3CCountU3Ek__BackingField_7; }
	inline void set_U3CCountU3Ek__BackingField_7(int32_t value)
	{
		___U3CCountU3Ek__BackingField_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf
struct PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0  : public PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53
{
public:
	// UnityEngine.RectTransform Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::navRectTransf
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___navRectTransf_45;
	// UnityEngine.RectTransform Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::viewportRectTransf
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___viewportRectTransf_46;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::isScrollText
	bool ___isScrollText_47;

public:
	inline static int32_t get_offset_of_navRectTransf_45() { return static_cast<int32_t>(offsetof(PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0, ___navRectTransf_45)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_navRectTransf_45() const { return ___navRectTransf_45; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_navRectTransf_45() { return &___navRectTransf_45; }
	inline void set_navRectTransf_45(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___navRectTransf_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___navRectTransf_45), (void*)value);
	}

	inline static int32_t get_offset_of_viewportRectTransf_46() { return static_cast<int32_t>(offsetof(PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0, ___viewportRectTransf_46)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_viewportRectTransf_46() const { return ___viewportRectTransf_46; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_viewportRectTransf_46() { return &___viewportRectTransf_46; }
	inline void set_viewportRectTransf_46(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___viewportRectTransf_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___viewportRectTransf_46), (void*)value);
	}

	inline static int32_t get_offset_of_isScrollText_47() { return static_cast<int32_t>(offsetof(PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0, ___isScrollText_47)); }
	inline bool get_isScrollText_47() const { return ___isScrollText_47; }
	inline bool* get_address_of_isScrollText_47() { return &___isScrollText_47; }
	inline void set_isScrollText_47(bool value)
	{
		___isScrollText_47 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture
struct PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2  : public PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53
{
public:
	// UnityEngine.Renderer Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::textureRenderer
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___textureRenderer_45;
	// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::textureTargetID
	int32_t ___textureTargetID_47;
	// System.String Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::textureShaderProperty
	String_t* ___textureShaderProperty_48;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::defaultAspectRatio
	float ___defaultAspectRatio_49;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::aspectRatio
	float ___aspectRatio_50;

public:
	inline static int32_t get_offset_of_textureRenderer_45() { return static_cast<int32_t>(offsetof(PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2, ___textureRenderer_45)); }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * get_textureRenderer_45() const { return ___textureRenderer_45; }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** get_address_of_textureRenderer_45() { return &___textureRenderer_45; }
	inline void set_textureRenderer_45(Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * value)
	{
		___textureRenderer_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___textureRenderer_45), (void*)value);
	}

	inline static int32_t get_offset_of_textureTargetID_47() { return static_cast<int32_t>(offsetof(PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2, ___textureTargetID_47)); }
	inline int32_t get_textureTargetID_47() const { return ___textureTargetID_47; }
	inline int32_t* get_address_of_textureTargetID_47() { return &___textureTargetID_47; }
	inline void set_textureTargetID_47(int32_t value)
	{
		___textureTargetID_47 = value;
	}

	inline static int32_t get_offset_of_textureShaderProperty_48() { return static_cast<int32_t>(offsetof(PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2, ___textureShaderProperty_48)); }
	inline String_t* get_textureShaderProperty_48() const { return ___textureShaderProperty_48; }
	inline String_t** get_address_of_textureShaderProperty_48() { return &___textureShaderProperty_48; }
	inline void set_textureShaderProperty_48(String_t* value)
	{
		___textureShaderProperty_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___textureShaderProperty_48), (void*)value);
	}

	inline static int32_t get_offset_of_defaultAspectRatio_49() { return static_cast<int32_t>(offsetof(PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2, ___defaultAspectRatio_49)); }
	inline float get_defaultAspectRatio_49() const { return ___defaultAspectRatio_49; }
	inline float* get_address_of_defaultAspectRatio_49() { return &___defaultAspectRatio_49; }
	inline void set_defaultAspectRatio_49(float value)
	{
		___defaultAspectRatio_49 = value;
	}

	inline static int32_t get_offset_of_aspectRatio_50() { return static_cast<int32_t>(offsetof(PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2, ___aspectRatio_50)); }
	inline float get_aspectRatio_50() const { return ___aspectRatio_50; }
	inline float* get_address_of_aspectRatio_50() { return &___aspectRatio_50; }
	inline void set_aspectRatio_50(float value)
	{
		___aspectRatio_50 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler
struct BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A  : public BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler::timeToTriggerDwellInSec
	float ___timeToTriggerDwellInSec_6;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler::dwellTimer
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___dwellTimer_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler::isDwelling
	bool ___isDwelling_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler::hadFocus
	bool ___hadFocus_9;

public:
	inline static int32_t get_offset_of_timeToTriggerDwellInSec_6() { return static_cast<int32_t>(offsetof(BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A, ___timeToTriggerDwellInSec_6)); }
	inline float get_timeToTriggerDwellInSec_6() const { return ___timeToTriggerDwellInSec_6; }
	inline float* get_address_of_timeToTriggerDwellInSec_6() { return &___timeToTriggerDwellInSec_6; }
	inline void set_timeToTriggerDwellInSec_6(float value)
	{
		___timeToTriggerDwellInSec_6 = value;
	}

	inline static int32_t get_offset_of_dwellTimer_7() { return static_cast<int32_t>(offsetof(BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A, ___dwellTimer_7)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_dwellTimer_7() const { return ___dwellTimer_7; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_dwellTimer_7() { return &___dwellTimer_7; }
	inline void set_dwellTimer_7(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___dwellTimer_7 = value;
	}

	inline static int32_t get_offset_of_isDwelling_8() { return static_cast<int32_t>(offsetof(BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A, ___isDwelling_8)); }
	inline bool get_isDwelling_8() const { return ___isDwelling_8; }
	inline bool* get_address_of_isDwelling_8() { return &___isDwelling_8; }
	inline void set_isDwelling_8(bool value)
	{
		___isDwelling_8 = value;
	}

	inline static int32_t get_offset_of_hadFocus_9() { return static_cast<int32_t>(offsetof(BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A, ___hadFocus_9)); }
	inline bool get_hadFocus_9() const { return ___hadFocus_9; }
	inline bool* get_address_of_hadFocus_9() { return &___hadFocus_9; }
	inline void set_hadFocus_9(bool value)
	{
		___hadFocus_9 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget
struct EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::selectAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___selectAction_5;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction[] Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::voiceSelect
	MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* ___voiceSelect_6;
	// System.Single Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::dwellTimeInSec
	float ___dwellTimeInSec_7;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onLookAtStart
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onLookAtStart_8;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::whileLookingAtTarget
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___whileLookingAtTarget_9;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onLookAway
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onLookAway_10;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onDwell
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onDwell_11;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onSelected
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onSelected_12;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onTapDown
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onTapDown_13;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::onTapUp
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___onTapUp_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::eyeCursorSnapToTargetCenter
	bool ___eyeCursorSnapToTargetCenter_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<IsLookedAt>k__BackingField
	bool ___U3CIsLookedAtU3Ek__BackingField_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<IsDwelledOn>k__BackingField
	bool ___U3CIsDwelledOnU3Ek__BackingField_17;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lookAtStartTime
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lookAtStartTime_18;
	// System.Single Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::EyeTrackingTimeoutInMilliseconds
	float ___EyeTrackingTimeoutInMilliseconds_19;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lastTimeClicked
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lastTimeClicked_22;
	// System.Single Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::minTimeoutBetweenClicksInMs
	float ___minTimeoutBetweenClicksInMs_23;

public:
	inline static int32_t get_offset_of_selectAction_5() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___selectAction_5)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_selectAction_5() const { return ___selectAction_5; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_selectAction_5() { return &___selectAction_5; }
	inline void set_selectAction_5(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___selectAction_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___selectAction_5))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_voiceSelect_6() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___voiceSelect_6)); }
	inline MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* get_voiceSelect_6() const { return ___voiceSelect_6; }
	inline MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B** get_address_of_voiceSelect_6() { return &___voiceSelect_6; }
	inline void set_voiceSelect_6(MixedRealityInputActionU5BU5D_t276FE4992F86C40C8F043DBF297DC049E06B967B* value)
	{
		___voiceSelect_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___voiceSelect_6), (void*)value);
	}

	inline static int32_t get_offset_of_dwellTimeInSec_7() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___dwellTimeInSec_7)); }
	inline float get_dwellTimeInSec_7() const { return ___dwellTimeInSec_7; }
	inline float* get_address_of_dwellTimeInSec_7() { return &___dwellTimeInSec_7; }
	inline void set_dwellTimeInSec_7(float value)
	{
		___dwellTimeInSec_7 = value;
	}

	inline static int32_t get_offset_of_onLookAtStart_8() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onLookAtStart_8)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onLookAtStart_8() const { return ___onLookAtStart_8; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onLookAtStart_8() { return &___onLookAtStart_8; }
	inline void set_onLookAtStart_8(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onLookAtStart_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onLookAtStart_8), (void*)value);
	}

	inline static int32_t get_offset_of_whileLookingAtTarget_9() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___whileLookingAtTarget_9)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_whileLookingAtTarget_9() const { return ___whileLookingAtTarget_9; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_whileLookingAtTarget_9() { return &___whileLookingAtTarget_9; }
	inline void set_whileLookingAtTarget_9(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___whileLookingAtTarget_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___whileLookingAtTarget_9), (void*)value);
	}

	inline static int32_t get_offset_of_onLookAway_10() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onLookAway_10)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onLookAway_10() const { return ___onLookAway_10; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onLookAway_10() { return &___onLookAway_10; }
	inline void set_onLookAway_10(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onLookAway_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onLookAway_10), (void*)value);
	}

	inline static int32_t get_offset_of_onDwell_11() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onDwell_11)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onDwell_11() const { return ___onDwell_11; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onDwell_11() { return &___onDwell_11; }
	inline void set_onDwell_11(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onDwell_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDwell_11), (void*)value);
	}

	inline static int32_t get_offset_of_onSelected_12() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onSelected_12)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onSelected_12() const { return ___onSelected_12; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onSelected_12() { return &___onSelected_12; }
	inline void set_onSelected_12(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onSelected_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onSelected_12), (void*)value);
	}

	inline static int32_t get_offset_of_onTapDown_13() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onTapDown_13)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onTapDown_13() const { return ___onTapDown_13; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onTapDown_13() { return &___onTapDown_13; }
	inline void set_onTapDown_13(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onTapDown_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTapDown_13), (void*)value);
	}

	inline static int32_t get_offset_of_onTapUp_14() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___onTapUp_14)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_onTapUp_14() const { return ___onTapUp_14; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_onTapUp_14() { return &___onTapUp_14; }
	inline void set_onTapUp_14(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___onTapUp_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTapUp_14), (void*)value);
	}

	inline static int32_t get_offset_of_eyeCursorSnapToTargetCenter_15() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___eyeCursorSnapToTargetCenter_15)); }
	inline bool get_eyeCursorSnapToTargetCenter_15() const { return ___eyeCursorSnapToTargetCenter_15; }
	inline bool* get_address_of_eyeCursorSnapToTargetCenter_15() { return &___eyeCursorSnapToTargetCenter_15; }
	inline void set_eyeCursorSnapToTargetCenter_15(bool value)
	{
		___eyeCursorSnapToTargetCenter_15 = value;
	}

	inline static int32_t get_offset_of_U3CIsLookedAtU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___U3CIsLookedAtU3Ek__BackingField_16)); }
	inline bool get_U3CIsLookedAtU3Ek__BackingField_16() const { return ___U3CIsLookedAtU3Ek__BackingField_16; }
	inline bool* get_address_of_U3CIsLookedAtU3Ek__BackingField_16() { return &___U3CIsLookedAtU3Ek__BackingField_16; }
	inline void set_U3CIsLookedAtU3Ek__BackingField_16(bool value)
	{
		___U3CIsLookedAtU3Ek__BackingField_16 = value;
	}

	inline static int32_t get_offset_of_U3CIsDwelledOnU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___U3CIsDwelledOnU3Ek__BackingField_17)); }
	inline bool get_U3CIsDwelledOnU3Ek__BackingField_17() const { return ___U3CIsDwelledOnU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CIsDwelledOnU3Ek__BackingField_17() { return &___U3CIsDwelledOnU3Ek__BackingField_17; }
	inline void set_U3CIsDwelledOnU3Ek__BackingField_17(bool value)
	{
		___U3CIsDwelledOnU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_lookAtStartTime_18() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___lookAtStartTime_18)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lookAtStartTime_18() const { return ___lookAtStartTime_18; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lookAtStartTime_18() { return &___lookAtStartTime_18; }
	inline void set_lookAtStartTime_18(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lookAtStartTime_18 = value;
	}

	inline static int32_t get_offset_of_EyeTrackingTimeoutInMilliseconds_19() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___EyeTrackingTimeoutInMilliseconds_19)); }
	inline float get_EyeTrackingTimeoutInMilliseconds_19() const { return ___EyeTrackingTimeoutInMilliseconds_19; }
	inline float* get_address_of_EyeTrackingTimeoutInMilliseconds_19() { return &___EyeTrackingTimeoutInMilliseconds_19; }
	inline void set_EyeTrackingTimeoutInMilliseconds_19(float value)
	{
		___EyeTrackingTimeoutInMilliseconds_19 = value;
	}

	inline static int32_t get_offset_of_lastTimeClicked_22() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___lastTimeClicked_22)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lastTimeClicked_22() const { return ___lastTimeClicked_22; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lastTimeClicked_22() { return &___lastTimeClicked_22; }
	inline void set_lastTimeClicked_22(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lastTimeClicked_22 = value;
	}

	inline static int32_t get_offset_of_minTimeoutBetweenClicksInMs_23() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32, ___minTimeoutBetweenClicksInMs_23)); }
	inline float get_minTimeoutBetweenClicksInMs_23() const { return ___minTimeoutBetweenClicksInMs_23; }
	inline float* get_address_of_minTimeoutBetweenClicksInMs_23() { return &___minTimeoutBetweenClicksInMs_23; }
	inline void set_minTimeoutBetweenClicksInMs_23(float value)
	{
		___minTimeoutBetweenClicksInMs_23 = value;
	}
};

struct EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lastEyeSignalUpdateTimeFromET
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lastEyeSignalUpdateTimeFromET_20;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::lastEyeSignalUpdateTimeLocal
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___lastEyeSignalUpdateTimeLocal_21;
	// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<LookedAtEyeTarget>k__BackingField
	EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___U3CLookedAtEyeTargetU3Ek__BackingField_24;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::<SelectedTarget>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CSelectedTargetU3Ek__BackingField_25;

public:
	inline static int32_t get_offset_of_lastEyeSignalUpdateTimeFromET_20() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___lastEyeSignalUpdateTimeFromET_20)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lastEyeSignalUpdateTimeFromET_20() const { return ___lastEyeSignalUpdateTimeFromET_20; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lastEyeSignalUpdateTimeFromET_20() { return &___lastEyeSignalUpdateTimeFromET_20; }
	inline void set_lastEyeSignalUpdateTimeFromET_20(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lastEyeSignalUpdateTimeFromET_20 = value;
	}

	inline static int32_t get_offset_of_lastEyeSignalUpdateTimeLocal_21() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___lastEyeSignalUpdateTimeLocal_21)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_lastEyeSignalUpdateTimeLocal_21() const { return ___lastEyeSignalUpdateTimeLocal_21; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_lastEyeSignalUpdateTimeLocal_21() { return &___lastEyeSignalUpdateTimeLocal_21; }
	inline void set_lastEyeSignalUpdateTimeLocal_21(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___lastEyeSignalUpdateTimeLocal_21 = value;
	}

	inline static int32_t get_offset_of_U3CLookedAtEyeTargetU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___U3CLookedAtEyeTargetU3Ek__BackingField_24)); }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * get_U3CLookedAtEyeTargetU3Ek__BackingField_24() const { return ___U3CLookedAtEyeTargetU3Ek__BackingField_24; }
	inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 ** get_address_of_U3CLookedAtEyeTargetU3Ek__BackingField_24() { return &___U3CLookedAtEyeTargetU3Ek__BackingField_24; }
	inline void set_U3CLookedAtEyeTargetU3Ek__BackingField_24(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * value)
	{
		___U3CLookedAtEyeTargetU3Ek__BackingField_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CLookedAtEyeTargetU3Ek__BackingField_24), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSelectedTargetU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_StaticFields, ___U3CSelectedTargetU3Ek__BackingField_25)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CSelectedTargetU3Ek__BackingField_25() const { return ___U3CSelectedTargetU3Ek__BackingField_25; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CSelectedTargetU3Ek__BackingField_25() { return &___U3CSelectedTargetU3Ek__BackingField_25; }
	inline void set_U3CSelectedTargetU3Ek__BackingField_25(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CSelectedTargetU3Ek__BackingField_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CSelectedTargetU3Ek__BackingField_25), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze
struct OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0  : public BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::speedX
	float ___speedX_10;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::speedY
	float ___speedY_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::inverseX
	bool ___inverseX_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::inverseY
	bool ___inverseY_13;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::rotationThreshInDegrees
	float ___rotationThreshInDegrees_14;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::minRotX
	float ___minRotX_15;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::maxRotX
	float ___maxRotX_16;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::minRotY
	float ___minRotY_17;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::maxRotY
	float ___maxRotY_18;

public:
	inline static int32_t get_offset_of_speedX_10() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___speedX_10)); }
	inline float get_speedX_10() const { return ___speedX_10; }
	inline float* get_address_of_speedX_10() { return &___speedX_10; }
	inline void set_speedX_10(float value)
	{
		___speedX_10 = value;
	}

	inline static int32_t get_offset_of_speedY_11() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___speedY_11)); }
	inline float get_speedY_11() const { return ___speedY_11; }
	inline float* get_address_of_speedY_11() { return &___speedY_11; }
	inline void set_speedY_11(float value)
	{
		___speedY_11 = value;
	}

	inline static int32_t get_offset_of_inverseX_12() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___inverseX_12)); }
	inline bool get_inverseX_12() const { return ___inverseX_12; }
	inline bool* get_address_of_inverseX_12() { return &___inverseX_12; }
	inline void set_inverseX_12(bool value)
	{
		___inverseX_12 = value;
	}

	inline static int32_t get_offset_of_inverseY_13() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___inverseY_13)); }
	inline bool get_inverseY_13() const { return ___inverseY_13; }
	inline bool* get_address_of_inverseY_13() { return &___inverseY_13; }
	inline void set_inverseY_13(bool value)
	{
		___inverseY_13 = value;
	}

	inline static int32_t get_offset_of_rotationThreshInDegrees_14() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___rotationThreshInDegrees_14)); }
	inline float get_rotationThreshInDegrees_14() const { return ___rotationThreshInDegrees_14; }
	inline float* get_address_of_rotationThreshInDegrees_14() { return &___rotationThreshInDegrees_14; }
	inline void set_rotationThreshInDegrees_14(float value)
	{
		___rotationThreshInDegrees_14 = value;
	}

	inline static int32_t get_offset_of_minRotX_15() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___minRotX_15)); }
	inline float get_minRotX_15() const { return ___minRotX_15; }
	inline float* get_address_of_minRotX_15() { return &___minRotX_15; }
	inline void set_minRotX_15(float value)
	{
		___minRotX_15 = value;
	}

	inline static int32_t get_offset_of_maxRotX_16() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___maxRotX_16)); }
	inline float get_maxRotX_16() const { return ___maxRotX_16; }
	inline float* get_address_of_maxRotX_16() { return &___maxRotX_16; }
	inline void set_maxRotX_16(float value)
	{
		___maxRotX_16 = value;
	}

	inline static int32_t get_offset_of_minRotY_17() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___minRotY_17)); }
	inline float get_minRotY_17() const { return ___minRotY_17; }
	inline float* get_address_of_minRotY_17() { return &___minRotY_17; }
	inline void set_minRotY_17(float value)
	{
		___minRotY_17 = value;
	}

	inline static int32_t get_offset_of_maxRotY_18() { return static_cast<int32_t>(offsetof(OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0, ___maxRotY_18)); }
	inline float get_maxRotY_18() const { return ___maxRotY_18; }
	inline float* get_address_of_maxRotY_18() { return &___maxRotY_18; }
	inline void set_maxRotY_18(float value)
	{
		___maxRotY_18 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController
struct OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86  : public BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A
{
public:
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::EventToTrigger
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___EventToTrigger_10;

public:
	inline static int32_t get_offset_of_EventToTrigger_10() { return static_cast<int32_t>(offsetof(OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86, ___EventToTrigger_10)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_EventToTrigger_10() const { return ___EventToTrigger_10; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_EventToTrigger_10() { return &___EventToTrigger_10; }
	inline void set_EventToTrigger_10(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___EventToTrigger_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EventToTrigger_10), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf
struct PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4  : public PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0
{
public:
	// UnityEngine.RectTransform Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::rectTransfToNavigate
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___rectTransfToNavigate_48;
	// UnityEngine.RectTransform Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::refToViewPort
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___refToViewPort_49;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::zoomAcceleration
	float ___zoomAcceleration_50;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::zoomSpeedMax
	float ___zoomSpeedMax_51;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::zoomMinScale
	float ___zoomMinScale_52;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::zoomMaxScale
	float ___zoomMaxScale_53;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::zoomTimeInSecToZoom
	float ___zoomTimeInSecToZoom_54;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::zoomGestureEnabledOnStartup
	bool ___zoomGestureEnabledOnStartup_55;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::panAutoScrollIsActive
	bool ___panAutoScrollIsActive_56;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::panSpeedHorizontal
	float ___panSpeedHorizontal_57;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::panSpeedVertical
	float ___panSpeedVertical_58;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::panMinDistFromCenter
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___panMinDistFromCenter_59;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::useSkimProofing
	bool ___useSkimProofing_60;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::skimProofUpdateSpeed
	float ___skimProofUpdateSpeed_61;

public:
	inline static int32_t get_offset_of_rectTransfToNavigate_48() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___rectTransfToNavigate_48)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_rectTransfToNavigate_48() const { return ___rectTransfToNavigate_48; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_rectTransfToNavigate_48() { return &___rectTransfToNavigate_48; }
	inline void set_rectTransfToNavigate_48(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___rectTransfToNavigate_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rectTransfToNavigate_48), (void*)value);
	}

	inline static int32_t get_offset_of_refToViewPort_49() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___refToViewPort_49)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_refToViewPort_49() const { return ___refToViewPort_49; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_refToViewPort_49() { return &___refToViewPort_49; }
	inline void set_refToViewPort_49(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___refToViewPort_49 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___refToViewPort_49), (void*)value);
	}

	inline static int32_t get_offset_of_zoomAcceleration_50() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___zoomAcceleration_50)); }
	inline float get_zoomAcceleration_50() const { return ___zoomAcceleration_50; }
	inline float* get_address_of_zoomAcceleration_50() { return &___zoomAcceleration_50; }
	inline void set_zoomAcceleration_50(float value)
	{
		___zoomAcceleration_50 = value;
	}

	inline static int32_t get_offset_of_zoomSpeedMax_51() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___zoomSpeedMax_51)); }
	inline float get_zoomSpeedMax_51() const { return ___zoomSpeedMax_51; }
	inline float* get_address_of_zoomSpeedMax_51() { return &___zoomSpeedMax_51; }
	inline void set_zoomSpeedMax_51(float value)
	{
		___zoomSpeedMax_51 = value;
	}

	inline static int32_t get_offset_of_zoomMinScale_52() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___zoomMinScale_52)); }
	inline float get_zoomMinScale_52() const { return ___zoomMinScale_52; }
	inline float* get_address_of_zoomMinScale_52() { return &___zoomMinScale_52; }
	inline void set_zoomMinScale_52(float value)
	{
		___zoomMinScale_52 = value;
	}

	inline static int32_t get_offset_of_zoomMaxScale_53() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___zoomMaxScale_53)); }
	inline float get_zoomMaxScale_53() const { return ___zoomMaxScale_53; }
	inline float* get_address_of_zoomMaxScale_53() { return &___zoomMaxScale_53; }
	inline void set_zoomMaxScale_53(float value)
	{
		___zoomMaxScale_53 = value;
	}

	inline static int32_t get_offset_of_zoomTimeInSecToZoom_54() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___zoomTimeInSecToZoom_54)); }
	inline float get_zoomTimeInSecToZoom_54() const { return ___zoomTimeInSecToZoom_54; }
	inline float* get_address_of_zoomTimeInSecToZoom_54() { return &___zoomTimeInSecToZoom_54; }
	inline void set_zoomTimeInSecToZoom_54(float value)
	{
		___zoomTimeInSecToZoom_54 = value;
	}

	inline static int32_t get_offset_of_zoomGestureEnabledOnStartup_55() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___zoomGestureEnabledOnStartup_55)); }
	inline bool get_zoomGestureEnabledOnStartup_55() const { return ___zoomGestureEnabledOnStartup_55; }
	inline bool* get_address_of_zoomGestureEnabledOnStartup_55() { return &___zoomGestureEnabledOnStartup_55; }
	inline void set_zoomGestureEnabledOnStartup_55(bool value)
	{
		___zoomGestureEnabledOnStartup_55 = value;
	}

	inline static int32_t get_offset_of_panAutoScrollIsActive_56() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___panAutoScrollIsActive_56)); }
	inline bool get_panAutoScrollIsActive_56() const { return ___panAutoScrollIsActive_56; }
	inline bool* get_address_of_panAutoScrollIsActive_56() { return &___panAutoScrollIsActive_56; }
	inline void set_panAutoScrollIsActive_56(bool value)
	{
		___panAutoScrollIsActive_56 = value;
	}

	inline static int32_t get_offset_of_panSpeedHorizontal_57() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___panSpeedHorizontal_57)); }
	inline float get_panSpeedHorizontal_57() const { return ___panSpeedHorizontal_57; }
	inline float* get_address_of_panSpeedHorizontal_57() { return &___panSpeedHorizontal_57; }
	inline void set_panSpeedHorizontal_57(float value)
	{
		___panSpeedHorizontal_57 = value;
	}

	inline static int32_t get_offset_of_panSpeedVertical_58() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___panSpeedVertical_58)); }
	inline float get_panSpeedVertical_58() const { return ___panSpeedVertical_58; }
	inline float* get_address_of_panSpeedVertical_58() { return &___panSpeedVertical_58; }
	inline void set_panSpeedVertical_58(float value)
	{
		___panSpeedVertical_58 = value;
	}

	inline static int32_t get_offset_of_panMinDistFromCenter_59() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___panMinDistFromCenter_59)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_panMinDistFromCenter_59() const { return ___panMinDistFromCenter_59; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_panMinDistFromCenter_59() { return &___panMinDistFromCenter_59; }
	inline void set_panMinDistFromCenter_59(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___panMinDistFromCenter_59 = value;
	}

	inline static int32_t get_offset_of_useSkimProofing_60() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___useSkimProofing_60)); }
	inline bool get_useSkimProofing_60() const { return ___useSkimProofing_60; }
	inline bool* get_address_of_useSkimProofing_60() { return &___useSkimProofing_60; }
	inline void set_useSkimProofing_60(bool value)
	{
		___useSkimProofing_60 = value;
	}

	inline static int32_t get_offset_of_skimProofUpdateSpeed_61() { return static_cast<int32_t>(offsetof(PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4, ___skimProofUpdateSpeed_61)); }
	inline float get_skimProofUpdateSpeed_61() const { return ___skimProofUpdateSpeed_61; }
	inline float* get_address_of_skimProofUpdateSpeed_61() { return &___skimProofUpdateSpeed_61; }
	inline void set_skimProofUpdateSpeed_61(float value)
	{
		___skimProofUpdateSpeed_61 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture
struct PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D  : public PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2
{
public:
	// UnityEngine.Renderer Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::rendererOfTextureToBeNavigated
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___rendererOfTextureToBeNavigated_51;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::zoomAcceleration
	float ___zoomAcceleration_52;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::zoomSpeedMax
	float ___zoomSpeedMax_53;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::zoomMinScale
	float ___zoomMinScale_54;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::zoomMaxScale
	float ___zoomMaxScale_55;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::zoomTimeInSecToZoom
	float ___zoomTimeInSecToZoom_56;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::zoomGestureEnabledOnStartup
	bool ___zoomGestureEnabledOnStartup_57;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::panAutoScrollIsActive
	bool ___panAutoScrollIsActive_58;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::panSpeedHorizontal
	float ___panSpeedHorizontal_59;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::panSpeedVertical
	float ___panSpeedVertical_60;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::panMinDistFromCenter
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___panMinDistFromCenter_61;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::useSkimProofing
	bool ___useSkimProofing_62;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::skimProofUpdateSpeed
	float ___skimProofUpdateSpeed_63;

public:
	inline static int32_t get_offset_of_rendererOfTextureToBeNavigated_51() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___rendererOfTextureToBeNavigated_51)); }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * get_rendererOfTextureToBeNavigated_51() const { return ___rendererOfTextureToBeNavigated_51; }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** get_address_of_rendererOfTextureToBeNavigated_51() { return &___rendererOfTextureToBeNavigated_51; }
	inline void set_rendererOfTextureToBeNavigated_51(Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * value)
	{
		___rendererOfTextureToBeNavigated_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rendererOfTextureToBeNavigated_51), (void*)value);
	}

	inline static int32_t get_offset_of_zoomAcceleration_52() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___zoomAcceleration_52)); }
	inline float get_zoomAcceleration_52() const { return ___zoomAcceleration_52; }
	inline float* get_address_of_zoomAcceleration_52() { return &___zoomAcceleration_52; }
	inline void set_zoomAcceleration_52(float value)
	{
		___zoomAcceleration_52 = value;
	}

	inline static int32_t get_offset_of_zoomSpeedMax_53() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___zoomSpeedMax_53)); }
	inline float get_zoomSpeedMax_53() const { return ___zoomSpeedMax_53; }
	inline float* get_address_of_zoomSpeedMax_53() { return &___zoomSpeedMax_53; }
	inline void set_zoomSpeedMax_53(float value)
	{
		___zoomSpeedMax_53 = value;
	}

	inline static int32_t get_offset_of_zoomMinScale_54() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___zoomMinScale_54)); }
	inline float get_zoomMinScale_54() const { return ___zoomMinScale_54; }
	inline float* get_address_of_zoomMinScale_54() { return &___zoomMinScale_54; }
	inline void set_zoomMinScale_54(float value)
	{
		___zoomMinScale_54 = value;
	}

	inline static int32_t get_offset_of_zoomMaxScale_55() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___zoomMaxScale_55)); }
	inline float get_zoomMaxScale_55() const { return ___zoomMaxScale_55; }
	inline float* get_address_of_zoomMaxScale_55() { return &___zoomMaxScale_55; }
	inline void set_zoomMaxScale_55(float value)
	{
		___zoomMaxScale_55 = value;
	}

	inline static int32_t get_offset_of_zoomTimeInSecToZoom_56() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___zoomTimeInSecToZoom_56)); }
	inline float get_zoomTimeInSecToZoom_56() const { return ___zoomTimeInSecToZoom_56; }
	inline float* get_address_of_zoomTimeInSecToZoom_56() { return &___zoomTimeInSecToZoom_56; }
	inline void set_zoomTimeInSecToZoom_56(float value)
	{
		___zoomTimeInSecToZoom_56 = value;
	}

	inline static int32_t get_offset_of_zoomGestureEnabledOnStartup_57() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___zoomGestureEnabledOnStartup_57)); }
	inline bool get_zoomGestureEnabledOnStartup_57() const { return ___zoomGestureEnabledOnStartup_57; }
	inline bool* get_address_of_zoomGestureEnabledOnStartup_57() { return &___zoomGestureEnabledOnStartup_57; }
	inline void set_zoomGestureEnabledOnStartup_57(bool value)
	{
		___zoomGestureEnabledOnStartup_57 = value;
	}

	inline static int32_t get_offset_of_panAutoScrollIsActive_58() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___panAutoScrollIsActive_58)); }
	inline bool get_panAutoScrollIsActive_58() const { return ___panAutoScrollIsActive_58; }
	inline bool* get_address_of_panAutoScrollIsActive_58() { return &___panAutoScrollIsActive_58; }
	inline void set_panAutoScrollIsActive_58(bool value)
	{
		___panAutoScrollIsActive_58 = value;
	}

	inline static int32_t get_offset_of_panSpeedHorizontal_59() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___panSpeedHorizontal_59)); }
	inline float get_panSpeedHorizontal_59() const { return ___panSpeedHorizontal_59; }
	inline float* get_address_of_panSpeedHorizontal_59() { return &___panSpeedHorizontal_59; }
	inline void set_panSpeedHorizontal_59(float value)
	{
		___panSpeedHorizontal_59 = value;
	}

	inline static int32_t get_offset_of_panSpeedVertical_60() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___panSpeedVertical_60)); }
	inline float get_panSpeedVertical_60() const { return ___panSpeedVertical_60; }
	inline float* get_address_of_panSpeedVertical_60() { return &___panSpeedVertical_60; }
	inline void set_panSpeedVertical_60(float value)
	{
		___panSpeedVertical_60 = value;
	}

	inline static int32_t get_offset_of_panMinDistFromCenter_61() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___panMinDistFromCenter_61)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_panMinDistFromCenter_61() const { return ___panMinDistFromCenter_61; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_panMinDistFromCenter_61() { return &___panMinDistFromCenter_61; }
	inline void set_panMinDistFromCenter_61(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___panMinDistFromCenter_61 = value;
	}

	inline static int32_t get_offset_of_useSkimProofing_62() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___useSkimProofing_62)); }
	inline bool get_useSkimProofing_62() const { return ___useSkimProofing_62; }
	inline bool* get_address_of_useSkimProofing_62() { return &___useSkimProofing_62; }
	inline void set_useSkimProofing_62(bool value)
	{
		___useSkimProofing_62 = value;
	}

	inline static int32_t get_offset_of_skimProofUpdateSpeed_63() { return static_cast<int32_t>(offsetof(PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D, ___skimProofUpdateSpeed_63)); }
	inline float get_skimProofUpdateSpeed_63() const { return ___skimProofUpdateSpeed_63; }
	inline float* get_address_of_skimProofUpdateSpeed_63() { return &___skimProofUpdateSpeed_63; }
	inline void set_skimProofUpdateSpeed_63(float value)
	{
		___skimProofUpdateSpeed_63 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf
struct ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7  : public PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0
{
public:
	// UnityEngine.RectTransform Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::rectTransfToNavigate
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___rectTransfToNavigate_48;
	// UnityEngine.RectTransform Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::refToViewPort
	RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___refToViewPort_49;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::autoGazeScrollIsActive
	bool ___autoGazeScrollIsActive_50;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::scrollSpeedHorizontal
	float ___scrollSpeedHorizontal_51;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::scrollSpeedVertical
	float ___scrollSpeedVertical_52;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::minDistFromCenterForAutoScroll
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___minDistFromCenterForAutoScroll_53;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::useSkimProofing
	bool ___useSkimProofing_54;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::skimProofUpdateSpeed
	float ___skimProofUpdateSpeed_55;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::convertSpeedToUVSpace
	float ___convertSpeedToUVSpace_56;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::customStartPos
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___customStartPos_57;

public:
	inline static int32_t get_offset_of_rectTransfToNavigate_48() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___rectTransfToNavigate_48)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_rectTransfToNavigate_48() const { return ___rectTransfToNavigate_48; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_rectTransfToNavigate_48() { return &___rectTransfToNavigate_48; }
	inline void set_rectTransfToNavigate_48(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___rectTransfToNavigate_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rectTransfToNavigate_48), (void*)value);
	}

	inline static int32_t get_offset_of_refToViewPort_49() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___refToViewPort_49)); }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * get_refToViewPort_49() const { return ___refToViewPort_49; }
	inline RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** get_address_of_refToViewPort_49() { return &___refToViewPort_49; }
	inline void set_refToViewPort_49(RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * value)
	{
		___refToViewPort_49 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___refToViewPort_49), (void*)value);
	}

	inline static int32_t get_offset_of_autoGazeScrollIsActive_50() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___autoGazeScrollIsActive_50)); }
	inline bool get_autoGazeScrollIsActive_50() const { return ___autoGazeScrollIsActive_50; }
	inline bool* get_address_of_autoGazeScrollIsActive_50() { return &___autoGazeScrollIsActive_50; }
	inline void set_autoGazeScrollIsActive_50(bool value)
	{
		___autoGazeScrollIsActive_50 = value;
	}

	inline static int32_t get_offset_of_scrollSpeedHorizontal_51() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___scrollSpeedHorizontal_51)); }
	inline float get_scrollSpeedHorizontal_51() const { return ___scrollSpeedHorizontal_51; }
	inline float* get_address_of_scrollSpeedHorizontal_51() { return &___scrollSpeedHorizontal_51; }
	inline void set_scrollSpeedHorizontal_51(float value)
	{
		___scrollSpeedHorizontal_51 = value;
	}

	inline static int32_t get_offset_of_scrollSpeedVertical_52() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___scrollSpeedVertical_52)); }
	inline float get_scrollSpeedVertical_52() const { return ___scrollSpeedVertical_52; }
	inline float* get_address_of_scrollSpeedVertical_52() { return &___scrollSpeedVertical_52; }
	inline void set_scrollSpeedVertical_52(float value)
	{
		___scrollSpeedVertical_52 = value;
	}

	inline static int32_t get_offset_of_minDistFromCenterForAutoScroll_53() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___minDistFromCenterForAutoScroll_53)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_minDistFromCenterForAutoScroll_53() const { return ___minDistFromCenterForAutoScroll_53; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_minDistFromCenterForAutoScroll_53() { return &___minDistFromCenterForAutoScroll_53; }
	inline void set_minDistFromCenterForAutoScroll_53(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___minDistFromCenterForAutoScroll_53 = value;
	}

	inline static int32_t get_offset_of_useSkimProofing_54() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___useSkimProofing_54)); }
	inline bool get_useSkimProofing_54() const { return ___useSkimProofing_54; }
	inline bool* get_address_of_useSkimProofing_54() { return &___useSkimProofing_54; }
	inline void set_useSkimProofing_54(bool value)
	{
		___useSkimProofing_54 = value;
	}

	inline static int32_t get_offset_of_skimProofUpdateSpeed_55() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___skimProofUpdateSpeed_55)); }
	inline float get_skimProofUpdateSpeed_55() const { return ___skimProofUpdateSpeed_55; }
	inline float* get_address_of_skimProofUpdateSpeed_55() { return &___skimProofUpdateSpeed_55; }
	inline void set_skimProofUpdateSpeed_55(float value)
	{
		___skimProofUpdateSpeed_55 = value;
	}

	inline static int32_t get_offset_of_convertSpeedToUVSpace_56() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___convertSpeedToUVSpace_56)); }
	inline float get_convertSpeedToUVSpace_56() const { return ___convertSpeedToUVSpace_56; }
	inline float* get_address_of_convertSpeedToUVSpace_56() { return &___convertSpeedToUVSpace_56; }
	inline void set_convertSpeedToUVSpace_56(float value)
	{
		___convertSpeedToUVSpace_56 = value;
	}

	inline static int32_t get_offset_of_customStartPos_57() { return static_cast<int32_t>(offsetof(ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7, ___customStartPos_57)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_customStartPos_57() const { return ___customStartPos_57; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_customStartPos_57() { return &___customStartPos_57; }
	inline void set_customStartPos_57(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___customStartPos_57 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture
struct ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC  : public PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2
{
public:
	// UnityEngine.Renderer Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::textureRendererToBeScrolled
	Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___textureRendererToBeScrolled_51;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::autoGazeScrollIsActive
	bool ___autoGazeScrollIsActive_52;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::scrollSpeedHorizontal
	float ___scrollSpeedHorizontal_53;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::scrollSpeedVertical
	float ___scrollSpeedVertical_54;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::minDistFromCenterForAutoScroll
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___minDistFromCenterForAutoScroll_55;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::onLookAtColliderSize
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___onLookAtColliderSize_56;
	// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::useSkimProofing
	bool ___useSkimProofing_57;
	// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::skimProofUpdateSpeed
	float ___skimProofUpdateSpeed_58;

public:
	inline static int32_t get_offset_of_textureRendererToBeScrolled_51() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___textureRendererToBeScrolled_51)); }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * get_textureRendererToBeScrolled_51() const { return ___textureRendererToBeScrolled_51; }
	inline Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** get_address_of_textureRendererToBeScrolled_51() { return &___textureRendererToBeScrolled_51; }
	inline void set_textureRendererToBeScrolled_51(Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * value)
	{
		___textureRendererToBeScrolled_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___textureRendererToBeScrolled_51), (void*)value);
	}

	inline static int32_t get_offset_of_autoGazeScrollIsActive_52() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___autoGazeScrollIsActive_52)); }
	inline bool get_autoGazeScrollIsActive_52() const { return ___autoGazeScrollIsActive_52; }
	inline bool* get_address_of_autoGazeScrollIsActive_52() { return &___autoGazeScrollIsActive_52; }
	inline void set_autoGazeScrollIsActive_52(bool value)
	{
		___autoGazeScrollIsActive_52 = value;
	}

	inline static int32_t get_offset_of_scrollSpeedHorizontal_53() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___scrollSpeedHorizontal_53)); }
	inline float get_scrollSpeedHorizontal_53() const { return ___scrollSpeedHorizontal_53; }
	inline float* get_address_of_scrollSpeedHorizontal_53() { return &___scrollSpeedHorizontal_53; }
	inline void set_scrollSpeedHorizontal_53(float value)
	{
		___scrollSpeedHorizontal_53 = value;
	}

	inline static int32_t get_offset_of_scrollSpeedVertical_54() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___scrollSpeedVertical_54)); }
	inline float get_scrollSpeedVertical_54() const { return ___scrollSpeedVertical_54; }
	inline float* get_address_of_scrollSpeedVertical_54() { return &___scrollSpeedVertical_54; }
	inline void set_scrollSpeedVertical_54(float value)
	{
		___scrollSpeedVertical_54 = value;
	}

	inline static int32_t get_offset_of_minDistFromCenterForAutoScroll_55() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___minDistFromCenterForAutoScroll_55)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_minDistFromCenterForAutoScroll_55() const { return ___minDistFromCenterForAutoScroll_55; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_minDistFromCenterForAutoScroll_55() { return &___minDistFromCenterForAutoScroll_55; }
	inline void set_minDistFromCenterForAutoScroll_55(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___minDistFromCenterForAutoScroll_55 = value;
	}

	inline static int32_t get_offset_of_onLookAtColliderSize_56() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___onLookAtColliderSize_56)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_onLookAtColliderSize_56() const { return ___onLookAtColliderSize_56; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_onLookAtColliderSize_56() { return &___onLookAtColliderSize_56; }
	inline void set_onLookAtColliderSize_56(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___onLookAtColliderSize_56 = value;
	}

	inline static int32_t get_offset_of_useSkimProofing_57() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___useSkimProofing_57)); }
	inline bool get_useSkimProofing_57() const { return ___useSkimProofing_57; }
	inline bool* get_address_of_useSkimProofing_57() { return &___useSkimProofing_57; }
	inline void set_useSkimProofing_57(bool value)
	{
		___useSkimProofing_57 = value;
	}

	inline static int32_t get_offset_of_skimProofUpdateSpeed_58() { return static_cast<int32_t>(offsetof(ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC, ___skimProofUpdateSpeed_58)); }
	inline float get_skimProofUpdateSpeed_58() const { return ___skimProofUpdateSpeed_58; }
	inline float* get_address_of_skimProofUpdateSpeed_58() { return &___skimProofUpdateSpeed_58; }
	inline void set_skimProofUpdateSpeed_58(float value)
	{
		___skimProofUpdateSpeed_58 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject * m_Items[1];

public:
	inline RuntimeObject * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.Material[]
struct MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * m_Items[1];

public:
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.ParticleSystem/Particle[]
struct ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E  m_Items[1];

public:
	inline Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.GameObject[]
struct GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * m_Items[1];

public:
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};


// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Vector3>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_gshared (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Vector3>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<UnityEngine.Vector3>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_gshared (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Object>::get_InputData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_gshared_inline (InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<System.Object>(!!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared (RuntimeObject * ___original0, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Ray>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_gshared_inline (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<UnityEngine.Ray>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB_gshared (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Ray>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m7A569670D8A55E7D133344F8395F551394359C78_gshared (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Object>(T&,T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBase_UpdateValues_TisRuntimeObject_m9E3261A033663E18461FEBD6B3E61DEA996FF551_gshared (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, RuntimeObject ** ___objBase0, RuntimeObject * ___objLocal1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Single>(T&,T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_gshared (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float* ___objBase0, float ___objLocal1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Boolean>(T&,T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_gshared (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, bool* ___objBase0, bool ___objLocal1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<UnityEngine.Vector2>(T&,T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_gshared (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * ___objBase0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___objLocal1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<System.Object>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::set_Item(System.Int32,!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_set_Item_m451452782977192583A6374A799099FCCD9BD83E_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, RuntimeObject * ___value1, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Object>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Collections.Generic.List`1/Enumerator<!0> System.Collections.Generic.List`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD  List_1_GetEnumerator_m52CC760E475D226A2B75048D70C4E22692F9F68D_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1/Enumerator<System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m38B1099DDAD7EEDE2F4CDAB11C095AC784AC2E34_gshared (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m94D0DAE031619503CDA6E53C5C3CC78AF3139472_gshared (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Nullable`1<UnityEngine.Vector3>>(T&,T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBase_UpdateValues_TisNullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_m4362AF10F04D277C0F495E6501B2555C3AE2CE7D_gshared (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * ___objBase0, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___objLocal1, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponentInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponentInChildren_TisRuntimeObject_m29A18F5AEC1DD0A23BB53D51D813EA0ACE9AE27C_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared (const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<System.Object>::ToArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);

// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer::get_Instance()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline (const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.AudioFeedbackPlayer::PlaySound(UnityEngine.AudioClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AudioFeedbackPlayer_PlaySound_m76D1E94B009FB86CF23E9A927B27DBD75EC92F1F (AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * __this, AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audiofx0, const RuntimeMethod* method);
// System.Void UnityEngine.TextMesh::set_text(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220 (TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * __this, String_t* ___value0, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, bool ___value0, const RuntimeMethod* method);
// System.DateTime System.DateTime::get_Now()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  DateTime_get_Now_mB464D30F15C97069F92C1F910DCDDC3DFCC7F7D2 (const RuntimeMethod* method);
// System.TimeSpan System.DateTime::op_Subtraction(System.DateTime,System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021 (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d10, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d21, const RuntimeMethod* method);
// System.Double System.TimeSpan::get_TotalSeconds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA (TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::ResetStatusText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::PlayAudio(UnityEngine.AudioClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::UpdateStatusText(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, String_t* ___msg0, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::RecordingUI_Reset(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, bool ___reset0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::ReplayUI_SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, bool ___active0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::ResetPlayback(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, bool ___showPlayBtn0, bool ___showPauseBtn1, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708 (RuntimeObject * ___message0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem Microsoft.MixedReality.Toolkit.CoreServices::get_InputSystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::UpdateSliderTextOutput()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::IsLookingAwayFromTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::IsLookingAwayFromPreview()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_EyeTrackingProvider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo>()
inline SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A * GameObject_GetComponent_TisSnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A_mB2E029A9BEB11D7E5ACB883CCC9A8905E935B25E (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Vector3>::.ctor(!0)
inline void Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165 (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*))Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_gshared)(__this, ___value0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::IsDestinationPlausible()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::GetValidPlacemLocation(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitobj0, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Vector3>::get_HasValue()
inline bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, const RuntimeMethod*))Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::ActivatePreview()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<UnityEngine.Vector3>::get_Value()
inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9 (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	return ((  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, const RuntimeMethod*))Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_gshared)(__this, method);
}
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839 (float ___d0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Division(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::DeactivatePreview()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_MixedRealityInputAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::op_Equality(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F (MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___left0, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___right1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::DragAndDrop_Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::DragAndDrop_Finish()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>::get_InputData()
inline RuntimeObject* InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline (InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E *, const RuntimeMethod*))InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_gshared_inline)(__this, method);
}
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::get_Handedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Equality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::RelativeMoveUpdate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___relativeMovement0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::HandDrag_Stop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::HandDrag_Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Angle_ToCurrHitTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gobj0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Angle(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Angle_m8911FFA1DD1C8C46D923B52645B352FA1521CD5F (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___from0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___to1, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeTrackingDemoUtils::VisAngleInDegreesToMeters(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float EyeTrackingDemoUtils_VisAngleInDegreesToMeters_m8124359420AB6211D7BF4A24B809716E9940194E (float ___visAngleInDegrees0, float ___distInMeters1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_up_m3E443F6EB278D547946E80D77065A871BEEEE282 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_UnaryNegation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_forward(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_forward_m02858E8B3313B27174B19E9113F24EF25FBCEC7F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_lossyScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<UnityEngine.GameObject>(!!0)
inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___original0, const RuntimeMethod* method)
{
	return ((  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared)(___original0, method);
}
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.Collider>()
inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Void UnityEngine.Collider::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeTrackingDemoUtils::GameObject_ChangeTransparency(UnityEngine.GameObject,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingDemoUtils_GameObject_ChangeTransparency_m35C8C148704D938EB60BE92306BAE62E01058E49 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gobj0, float ___newTransparency1, const RuntimeMethod* method);
// System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___obj0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeTrackingDemoUtils::GameObject_ChangeTransparency(UnityEngine.GameObject,System.Single,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EyeTrackingDemoUtils_GameObject_ChangeTransparency_m04B66E7501121DEF87160373EDB47FDD662044C5 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gobj0, float ___transparency1, float* ___originalTransparency2, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.Rigidbody>()
inline Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Boolean UnityEngine.Rigidbody::get_useGravity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Rigidbody_get_useGravity_m802E0C0B4F2C2B521D5369EA027325157A53FCAA (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Rigidbody::get_drag()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Rigidbody_get_drag_m2B304BB4C4A1A0E349C8B57C9085C0BC66DDE28E (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::set_useGravity(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_set_useGravity_mB0D957A9D8A9819E18D2E81F465C5C0B60CBC6DA (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::set_drag(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_set_drag_mCE564F278586FB0693B2BBEC4FB72E1F8E1E97EE (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::MoveTargetTo(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___destination0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::OnDrop_SnapToClosestDecimal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::MoveTargetBy(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Angle_InitialGazeToCurrGazeDir()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Utilities.CameraCache::get_Main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554 (const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Ray>::get_HasValue()
inline bool Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_inline (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 *, const RuntimeMethod*))Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_gshared_inline)(__this, method);
}
// !0 System.Nullable`1<UnityEngine.Ray>::get_Value()
inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, const RuntimeMethod* method)
{
	return ((  Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  (*) (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 *, const RuntimeMethod*))Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Ray::get_origin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187 (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Ray::.ctor(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Ray__ctor_m695D219349B8AA4C82F96C55A27D384C07736F6B (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction1, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Ray>::.ctor(!0)
inline void Nullable_1__ctor_m7A569670D8A55E7D133344F8395F551394359C78 (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 *, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 , const RuntimeMethod*))Nullable_1__ctor_m7A569670D8A55E7D133344F8395F551394359C78_gshared)(__this, ___value0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::HeadIsInMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::ShouldObjBeWarped(System.Single,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, float ___deltaHand0, float ___distTargetAndHitPos1, bool ___headIsInMotion2, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_ConstrX()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_ConstrY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_ConstrZ()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::ConstrainMovement()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA (String_t* ___format0, RuntimeObject * ___arg01, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Clamp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507 (float ___value0, float ___min1, float ___max2, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Boolean System.Single::IsPositiveInfinity(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Single_IsPositiveInfinity_m19DAA74DD1E70DBD36DB699FA26A504D9C650F2C (float ___f0, const RuntimeMethod* method);
// System.Boolean System.Single::IsNegativeInfinity(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Single_IsNegativeInfinity_m783D0162D4AC571DD716C3BF75EADBF90902100C (float ___f0, const RuntimeMethod* method);
// System.Boolean UnityEngine.GameObject::get_activeSelf()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::LoadOnDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0 (OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::LoadNewScene()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5 (OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Application::get_isEditor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isEditor_m347E6EE16E5109EF613C83ED98DB1EC6E3EF5E26 (const RuntimeMethod* method);
// System.Boolean System.String::op_Inequality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Inequality_m0BD184A74F453A72376E81CC6CAEE2556B80493E (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// UnityEngine.AsyncOperation UnityEngine.SceneManagement.SceneManager::LoadSceneAsync(System.String,UnityEngine.SceneManagement.LoadSceneMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AsyncOperation_t304C51ABED8AE734CC8DDDFE13013D8D5A44641D * SceneManager_LoadSceneAsync_mBB8889B3326DF7DD64983AE44FF5D140670C29B9 (String_t* ___sceneName0, int32_t ___mode1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::RotateHitTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258 (OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_eulerAngles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::ClampAngleInDegree(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE (OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0 * __this, float ___angleInDegree0, float ___minAngleInDegree1, float ___maxAngleInDegree2, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_eulerAngles(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_eulerAngles_m4B2B374C0B089A7ED0B522A3A4C56FA868992685 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseEyeFocusHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseEyeFocusHandler__ctor_m6B327ADA0D6A8B05A86D7C169A9F231247B0FAB1 (BaseEyeFocusHandler_t0578C2025EFD167EB593DA26FE7547417E9F6A2A * __this, const RuntimeMethod* method);
// System.Type System.Object::GetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60 (RuntimeObject * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogFormat(System.String,System.Object[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogFormat_mB23DDD2CD05B2E66F9CF8CA72ECA66C02DCC209E (String_t* ___format0, ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___args1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::OnTargetSelected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100 (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider>()
inline RuntimeObject* CoreServices_GetInputSystemDataProvider_TisIMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA_m22BF11C0357D953FEE7BD3CB7FBF94EA0909A41A (const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (const RuntimeMethod*))CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared)(method);
}
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget>()
inline EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * Component_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_m8E4D670176BB9E92BC5BDD726E38CCA571D94239 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeSaccadeProvider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::get_EyeSaccadeProvider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void System.Action::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action__ctor_m570E96B2A0C48BC1DC6788460316191F24572760 (Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.BoxCollider::get_size()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::PanHorizontally(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___speed0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::PanVertically(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___speed0, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E (const RuntimeMethod* method);
// System.String UnityEngine.Vector2::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Vector2_ToString_m83C7C331834382748956B053E252AE3BD21807C4 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64 (String_t* ___str00, String_t* ___str11, String_t* ___str22, String_t* ___str33, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomStart(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, bool ___zoomIn0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomStop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ResetNormFixator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::NavigationStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::get_eulerAngles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_down()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_down_m3F76A48E5B7C82B35EE047375538AFD91A305F55 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_left()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_left_m74B52D8CFD8C62138067B2EB6846B6E9E51B7C20 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_back()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_back_mE7EF8625637E6F8B9E6B42A6AE140777C51E02F7 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomOutStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomInStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::get_MyCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::get_CustomColliderSizeOnLookAt()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.BoxCollider::set_size(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176 (BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::AutomaticGazePanning()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateZoom()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::IncrementNormFixator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Multiply(UnityEngine.Vector2,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Addition(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::AutoPan()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.BoxCollider>()
inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Single UnityEngine.Mathf::Sign(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3 (float ___f0, const RuntimeMethod* method);
// System.Collections.IEnumerator Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomAndStop(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, bool ___zoomIn0, const RuntimeMethod* method);
// UnityEngine.Coroutine UnityEngine.MonoBehaviour::StartCoroutine(System.Collections.IEnumerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, RuntimeObject* ___routine0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28 (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::NavigationStop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::StopFocusing()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::get_Pointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::NavigationUpdate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normalizedOffset0, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8 (const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Void UnityEngine.WaitForSeconds::.ctor(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WaitForSeconds__ctor_m8E4BA3E27AEFFE5B74A815F26FF8AAB99743F559 (WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 * __this, float ___seconds0, const RuntimeMethod* method);
// System.Void System.NotSupportedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33 (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::get_IsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.RectTransform::get_anchoredPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  RectTransform_get_anchoredPosition_mCB2171DBADBC572F354CCFE3ACA19F9506F97907 (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___v0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m6AD8F21FFCC7723C6F507CCF2E4E2EFFC4871584 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::ZoomInOut_RectTransform(System.Single,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, float ___speed0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___pivot1, const RuntimeMethod* method);
// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::LimitPanning()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.RectTransform::set_anchoredPosition(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_anchoredPosition_m4DD45DB1A97734A1F3A81E5F259638ECAF35962F (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Rect UnityEngine.RectTransform::get_rect()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t35B976DE901B5423C11705E156938EA27AB402CE  RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Rect::get_size()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C (Rect_t35B976DE901B5423C11705E156938EA27AB402CE * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Rect::get_width()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Rect_get_width_m54FF69FC2C086E2DC349ED091FD0D6576BFB1484 (Rect_t35B976DE901B5423C11705E156938EA27AB402CE * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Min(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7 (float ___a0, float ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Max(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65 (float ___a0, float ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Rect::get_height()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Rect_get_height_m088C36990E0A255C5D7DCE36575DCE23ABB364B5 (Rect_t35B976DE901B5423C11705E156938EA27AB402CE * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Multiply(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Subtraction(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::op_Division(UnityEngine.Vector2,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_op_Division_m0961A935168EE6701E098E2B37013DFFF46A5077 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::LimitScaling(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newScale0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget::get_IsLookedAt()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_right()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_right_m6DD9559CA0C75BBA42D9140021C4C2A9AAA9B3F5 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Shader::PropertyToID(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Shader_PropertyToID_m831E5B48743620DB9E3E3DD15A8DEA483981DD45 (String_t* ___name0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Renderer::get_enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Renderer_get_enabled_m40E07BB15DA58D2EF6F6796C6778163107DD7E1B (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::Initialize(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, float ___newAspectRatio0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::get_IsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method);
// UnityEngine.Material[] UnityEngine.Renderer::get_materials()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398* Renderer_get_materials_m5A8C7D4A4D87E69A1C03E72B43C6902762312760 (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Material::SetTextureScale(System.Int32,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material_SetTextureScale_m30A521475E4FF45858D27B8DA562B06165734A9E (Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * __this, int32_t ___nameID0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value1, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<UnityEngine.BoxCollider>()
inline BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::set_MyCollider(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Material::SetTextureOffset(System.Int32,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material_SetTextureOffset_m3E9C91ED11CB6323252AF6B5CB15CCD497EF10BB (Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * __this, int32_t ___nameID0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::ZoomInOut(System.Single,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, float ___speed0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___pivot1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D (const RuntimeMethod* method);
// System.Void UnityEngine.RectTransform::set_anchorMin(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_anchorMin_mE965F5B0902C2554635010A5752728414A57020A (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.RectTransform::set_anchorMax(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_anchorMax_m55EEF00D9E42FE542B5346D7CEDAF9248736F7D3 (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.RectTransform::set_pivot(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_pivot_mB791A383B3C870B9CBD7BC51B2C95711C88E9DCF (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<UnityEngine.RectTransform>(T&,T)
inline bool PanZoomBase_UpdateValues_TisRectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20_m0986A0E9A9C40D5871F32C6013F1A119254EE243 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** ___objBase0, RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * ___objLocal1, const RuntimeMethod* method)
{
	return ((  bool (*) (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *, RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 **, RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *, const RuntimeMethod*))PanZoomBase_UpdateValues_TisRuntimeObject_m9E3261A033663E18461FEBD6B3E61DEA996FF551_gshared)(__this, ___objBase0, ___objLocal1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Single>(T&,T)
inline bool PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float* ___objBase0, float ___objLocal1, const RuntimeMethod* method)
{
	return ((  bool (*) (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *, float*, float, const RuntimeMethod*))PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_gshared)(__this, ___objBase0, ___objLocal1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Boolean>(T&,T)
inline bool PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, bool* ___objBase0, bool ___objLocal1, const RuntimeMethod* method)
{
	return ((  bool (*) (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *, bool*, bool, const RuntimeMethod*))PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_gshared)(__this, ___objBase0, ___objLocal1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<UnityEngine.Vector2>(T&,T)
inline bool PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * ___objBase0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___objLocal1, const RuntimeMethod* method)
{
	return ((  bool (*) (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*))PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_gshared)(__this, ___objBase0, ___objLocal1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::SetSkimProofUpdateSpeed(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___newSpeed0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<UnityEngine.Renderer>(T&,T)
inline bool PanZoomBase_UpdateValues_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mF431D17971643FF8B971CC71970CF69F38E4C3A8 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** ___objBase0, Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * ___objLocal1, const RuntimeMethod* method)
{
	return ((  bool (*) (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *, Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 **, Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 *, const RuntimeMethod*))PanZoomBase_UpdateValues_TisRuntimeObject_m9E3261A033663E18461FEBD6B3E61DEA996FF551_gshared)(__this, ___objBase0, ___objLocal1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.ParticleSystem>()
inline ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * Component_GetComponent_TisParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D_mA6EBF435A59643B674086A2F309F6A4DCB263452 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// UnityEngine.ParticleSystem/EmissionModule UnityEngine.ParticleSystem::get_emission()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1  ParticleSystem_get_emission_mA1204EAF07A6C6B3F65B45295797A1FFF64D343C (ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::.ctor()
inline void List_1__ctor_m34226F6B737610432345A8C4C6857E773B20E012 (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036 (ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Random::Range(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Random_Range_m2844A4A71C86BDF83A12D97FC6DD95278E87E384 (float ___min0, float ___max1, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::get_Count()
inline int32_t List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_inline (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::Add(!0)
inline void List_1_Add_m731030C9624FD2128A48ED76EE4BE9F9E0F16720 (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * __this, ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *, ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::set_Item(System.Int32,!0)
inline void List_1_set_Item_m3862705BC601E074C5F1B2B910808F5FCA887B52 (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * __this, int32_t ___index0, ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * ___value1, const RuntimeMethod* method)
{
	((  void (*) (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *, int32_t, ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 *, const RuntimeMethod*))List_1_set_Item_m451452782977192583A6374A799099FCCD9BD83E_gshared)(__this, ___index0, ___value1, method);
}
// !0 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::get_Item(System.Int32)
inline ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_inline (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * (*) (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// System.Collections.Generic.List`1/Enumerator<!0> System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::GetEnumerator()
inline Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482  List_1_GetEnumerator_m42F98C64BAED0F47AB5E97E391776E62E1B8DE83 (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482  (*) (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *, const RuntimeMethod*))List_1_GetEnumerator_m52CC760E475D226A2B75048D70C4E22692F9F68D_gshared)(__this, method);
}
// !0 System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::get_Current()
inline ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * Enumerator_get_Current_m9EF792037917F6C550D7D9CD33BD97A38C82D709_inline (Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 * __this, const RuntimeMethod* method)
{
	return ((  ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * (*) (Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *, const RuntimeMethod*))Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline)(__this, method);
}
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::saturate(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, float ___val0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::MoveNext()
inline bool Enumerator_MoveNext_m926AB6D529397E01E894BC48A4B1EC66A276105F (Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *, const RuntimeMethod*))Enumerator_MoveNext_m38B1099DDAD7EEDE2F4CDAB11C095AC784AC2E34_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1/Enumerator<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData>::Dispose()
inline void Enumerator_Dispose_mD7A7C49379527533124821D1B6C6E959321A327A (Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *, const RuntimeMethod*))Enumerator_Dispose_m94D0DAE031619503CDA6E53C5C3CC78AF3139472_gshared)(__this, method);
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::DetermineNormalizedIntensity(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6 (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, float ___radius1, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Gradient::Evaluate(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Gradient_Evaluate_m3FAAAA60E7357B84BE2141AFA0207299AFBDBCDB (Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * __this, float ___time0, const RuntimeMethod* method);
// System.Void UnityEngine.ParticleSystem/Particle::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Particle_set_position_m3E99F891841E8B03490433FAFF5B601A6D12BDEF (Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Color32 UnityEngine.Color32::op_Implicit(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23  Color32_op_Implicit_m52B034473369A651C8952BD916A2AB193E0E5B30 (Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___c0, const RuntimeMethod* method);
// System.Void UnityEngine.ParticleSystem/Particle::set_startColor(UnityEngine.Color32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Particle_set_startColor_m67807C44D14862EBD8C030C1FE094E8438384AA6 (Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E * __this, Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.ParticleSystem/Particle::set_startSize(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Particle_set_startSize_m45B6CD1480219E30A96317D654B9439C8DB2DF87 (Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.ParticleSystem::SetParticles(UnityEngine.ParticleSystem/Particle[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleSystem_SetParticles_mCBB22C645CD23845D88FDF981FC2F32E31AB4FB5 (ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * __this, ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* ___particles0, int32_t ___size1, const RuntimeMethod* method);
// System.Void UnityEngine.ParticleSystem/EmissionModule::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EmissionModule_set_enabled_m3896B441BDE0F0752A6D113012B20D5D31B16D36 (EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::UpdatePivot()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC (ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateValues<System.Nullable`1<UnityEngine.Vector3>>(T&,T)
inline bool PanZoomBase_UpdateValues_TisNullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_m4362AF10F04D277C0F495E6501B2555C3AE2CE7D (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * ___objBase0, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___objLocal1, const RuntimeMethod* method)
{
	return ((  bool (*) (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 , const RuntimeMethod*))PanZoomBase_UpdateValues_TisNullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_m4362AF10F04D277C0F495E6501B2555C3AE2CE7D_gshared)(__this, ___objBase0, ___objLocal1, method);
}
// !!0 UnityEngine.GameObject::GetComponentInChildren<UnityEngine.TextMesh>()
inline TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * GameObject_GetComponentInChildren_TisTextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A_m9E4D7FFDEA6E42F7B15ABD2843855CF150415620 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponentInChildren_TisRuntimeObject_m29A18F5AEC1DD0A23BB53D51D813EA0ACE9AE27C_gshared)(__this, method);
}
// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::get_MyTextMesh()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920 (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::UpdateTextMesh(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834 (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, String_t* ___msg0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::LookAt(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_LookAt_m3EC94482B2585FE03AEEDF90325A1F0B9A84960E (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_Command()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Keyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::ShowVisualFeedback(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, String_t* ___msg0, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText>()
inline StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * Object_FindObjectOfType_TisStatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_m0D12AE2AAF1CD03C6D9B2CE08E0F2385F64DD641 (const RuntimeMethod* method)
{
	return ((  StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared)(method);
}
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::get_Instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::Log(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618 (StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * __this, String_t* ___msg0, bool ___add1, const RuntimeMethod* method);
// System.String UnityEngine.TextMesh::get_text()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* TextMesh_get_text_m82229563FBF187061DDBCB5305CB227513B6ED83 (TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * __this, const RuntimeMethod* method);
// System.Void System.EventArgs::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void EventArgs__ctor_m3551293259861C5A78CD47689D559F828ED29DF7 (EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs::set_HitTarget(Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_inline (TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1 * __this, EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::HideTemplates()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::CreateNewTargets_RadialLayout()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::KeepConstantVisAngleTargetSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::KeepFacingTheCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.GameObject>::.ctor()
inline void List_1__ctor_m23BDA1112566B2E9149D885E4061EA3063EEDA60 (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.EyeTrackingDemoUtils::VisAngleInDegreesToMeters(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  EyeTrackingDemoUtils_VisAngleInDegreesToMeters_mAC247B958CB9C298989267D3CBB0C0DBA35B076B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___visAngleInDegrees0, float ___distInMeters1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_localRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___euler0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::InstantiateRadialLayoutedTarget(System.Single,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, float ___radius0, float ___viewingDist1, int32_t ___iTarget2, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::Rotate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_Rotate_m610B6793DCC2F987290D328942E649B5B7DE0F9A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___eulers0, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<UnityEngine.GameObject>::ToArray()
inline GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* List_1_ToArray_mF1C925F80A9A65691072AC47AB75E6EB2E16BF15 (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * __this, const RuntimeMethod* method)
{
	return ((  GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* (*) (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 *, const RuntimeMethod*))List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared)(__this, method);
}
// System.Int32 UnityEngine.Random::Range(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Random_Range_mD0C8F37FF3CAB1D87AAA6C45130BD59626BD6780 (int32_t ___min0, int32_t ___max1, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::GetRandomTemplate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A (String_t* ___format0, RuntimeObject * ___arg01, RuntimeObject * ___arg12, const RuntimeMethod* method);
// System.Void UnityEngine.Object::set_name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::SetParent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_SetParent_mFAF9209CAB6A864552074BA065D740924A4BF979 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___p0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<UnityEngine.GameObject>::Add(!0)
inline void List_1_Add_m3F7B0DBB84912A2D10FB3328CF93B90917C7C687 (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Collections.Generic.List`1/Enumerator<!0> System.Collections.Generic.List`1<UnityEngine.GameObject>::GetEnumerator()
inline Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053  List_1_GetEnumerator_m3E7042AE58561530C10A47E4F39B8368CFCB693B (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053  (*) (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 *, const RuntimeMethod*))List_1_GetEnumerator_m52CC760E475D226A2B75048D70C4E22692F9F68D_gshared)(__this, method);
}
// !0 System.Collections.Generic.List`1/Enumerator<UnityEngine.GameObject>::get_Current()
inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Enumerator_get_Current_m6C0BE2971AF7991C469272BC300664B8BAF8D800_inline (Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 * __this, const RuntimeMethod* method)
{
	return ((  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * (*) (Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 *, const RuntimeMethod*))Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.List`1/Enumerator<UnityEngine.GameObject>::MoveNext()
inline bool Enumerator_MoveNext_m774CA65723516595B6E22D200D19ADBE8C3E7969 (Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 *, const RuntimeMethod*))Enumerator_MoveNext_m38B1099DDAD7EEDE2F4CDAB11C095AC784AC2E34_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1/Enumerator<UnityEngine.GameObject>::Dispose()
inline void Enumerator_Dispose_m0C9F007B48F37CD7F09430C3C1B407ACE6213812 (Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 *, const RuntimeMethod*))Enumerator_Dispose_m94D0DAE031619503CDA6E53C5C3CC78AF3139472_gshared)(__this, method);
}
// System.Void System.ThrowHelper::ThrowArgumentOutOfRangeException()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550 (const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::PlayAudio(UnityEngine.AudioClip)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * ___audio0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___audio0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13130));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13131));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13132));
		// if (AudioFeedbackPlayer.Instance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13133));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13139));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_0 = AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13139));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13140));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13140));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13134));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13135));
		// AudioFeedbackPlayer.Instance.PlaySound(audio);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13136));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13141));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_3 = AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13141));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_4 = ___audio0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13142));
		NullCheck(L_3);
		AudioFeedbackPlayer_PlaySound_m76D1E94B009FB86CF23E9A927B27DBD75EC92F1F(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13142));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13137));
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13138));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::UpdateStatusText(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, String_t* ___msg0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___msg0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13143));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13144));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13145));
		// if (statusText != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13146));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = __this->get_statusText_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13155));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13155));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13147));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0044;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13148));
		// statusText.text = msg;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13149));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_3 = __this->get_statusText_4();
		String_t* L_4 = ___msg0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13156));
		NullCheck(L_3);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13156));
		// statusText.gameObject.SetActive(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13150));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_5 = __this->get_statusText_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13157));
		NullCheck(L_5);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13157));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13158));
		NullCheck(L_6);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_6, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13158));
		// isShowingSomething = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13151));
		__this->set_isShowingSomething_11((bool)1);
		// startShowTime = DateTime.Now;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13152));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13159));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_7 = DateTime_get_Now_mB464D30F15C97069F92C1F910DCDDC3DFCC7F7D2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13159));
		__this->set_startShowTime_12(L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13153));
	}

IL_0044:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13154));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::ResetStatusText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13160));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13161));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13162));
		// if (statusText != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13163));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = __this->get_statusText_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13171));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13171));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13164));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13165));
		// statusText.gameObject.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13166));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_3 = __this->get_statusText_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13172));
		NullCheck(L_3);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13172));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13173));
		NullCheck(L_4);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_4, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13173));
		// statusText.text = "";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13167));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_5 = __this->get_statusText_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13174));
		NullCheck(L_5);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_5, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13174));
		// isShowingSomething = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13168));
		__this->set_isShowingSomething_11((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13169));
	}

IL_003d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13170));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_Update_m151D9F5C7B14165541F2BB381D847CE4E4ABA85A (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_Update_m151D9F5C7B14165541F2BB381D847CE4E4ABA85A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_Update_m151D9F5C7B14165541F2BB381D847CE4E4ABA85A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13175));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13176));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13177));
		// if ((isShowingSomething) && ((DateTime.Now - startShowTime).TotalSeconds > maxShowDurationInSeconds))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13178));
		bool L_0 = __this->get_isShowingSomething_11();
		if (!L_0)
		{
			goto IL_002c;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13184));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_1 = DateTime_get_Now_mB464D30F15C97069F92C1F910DCDDC3DFCC7F7D2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13184));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_2 = __this->get_startShowTime_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13185));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_3 = DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13185));
		V_1 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13186));
		double L_4 = TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13186));
		float L_5 = __this->get_maxShowDurationInSeconds_5();
		G_B3_0 = ((((double)L_4) > ((double)(((double)((double)L_5)))))? 1 : 0);
		goto IL_002d;
	}

IL_002c:
	{
		G_B3_0 = 0;
	}

IL_002d:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13179));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13180));
		// ResetStatusText();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13181));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13187));
		UserInputRecorderFeedback_ResetStatusText_m215498E7D70EFC37ADCF6BC915016EE00D3DCC5E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13187));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13182));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13183));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::StartRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_StartRecording_m9D0D289EA771C46B8F7A1005ABD4472B03382601 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_StartRecording_m9D0D289EA771C46B8F7A1005ABD4472B03382601_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_StartRecording_m9D0D289EA771C46B8F7A1005ABD4472B03382601_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13188));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13189));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13190));
		// PlayAudio(audio_StartRecording);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13191));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_0 = __this->get_audio_StartRecording_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13194));
		UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13194));
		// UpdateStatusText("Recording started...");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13192));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13195));
		UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28(__this, _stringLiteralD53CCE2D2C885443C7CCAD611FAFDF83B2C9D001, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13195));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13193));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::StopRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_StopRecording_m64431CDDDC44A193D471C8872FDAC6D8575E0A74 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_StopRecording_m64431CDDDC44A193D471C8872FDAC6D8575E0A74_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_StopRecording_m64431CDDDC44A193D471C8872FDAC6D8575E0A74_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13196));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13197));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13198));
		// PlayAudio(audio_StopRecording);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13199));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_0 = __this->get_audio_StopRecording_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13202));
		UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13202));
		// UpdateStatusText("Recording stopped!");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13200));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13203));
		UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28(__this, _stringLiteral12DDC6C246C33D620A53CB93999148F7F894EBBC, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13203));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13201));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::LoadData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_LoadData_mE8D3B345FA0D0C30B04D965D96AC8338B9A7AA95 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_LoadData_mE8D3B345FA0D0C30B04D965D96AC8338B9A7AA95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_LoadData_mE8D3B345FA0D0C30B04D965D96AC8338B9A7AA95_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13204));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13205));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13206));
		// PlayAudio(audio_LoadRecordedData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13207));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_0 = __this->get_audio_LoadRecordedData_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13210));
		UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13210));
		// UpdateStatusText("Loading data...");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13208));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13211));
		UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28(__this, _stringLiteral982D2E9847B19C5DA204C4A7B5584CF83A8A97A3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13211));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13209));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::StartReplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_StartReplay_mC3B310F0410ABFC4F609BF527A821B343045C9D3 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_StartReplay_mC3B310F0410ABFC4F609BF527A821B343045C9D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_StartReplay_mC3B310F0410ABFC4F609BF527A821B343045C9D3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13212));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13213));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13214));
		// PlayAudio(audio_StartPlayback);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13215));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_0 = __this->get_audio_StartPlayback_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13218));
		UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13218));
		// UpdateStatusText("Start replay...");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13216));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13219));
		UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28(__this, _stringLiteralE132401F04ECCBC18D7C1DC3504A703C1644EC0E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13219));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13217));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::PauseReplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback_PauseReplay_m9F1FC6EABE7CDE43D72D7E4D3DD7B83A34B23FCD (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback_PauseReplay_m9F1FC6EABE7CDE43D72D7E4D3DD7B83A34B23FCD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback_PauseReplay_m9F1FC6EABE7CDE43D72D7E4D3DD7B83A34B23FCD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13220));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13221));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13222));
		// PlayAudio(audio_PausePlayback);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13223));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_0 = __this->get_audio_PausePlayback_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13226));
		UserInputRecorderFeedback_PlayAudio_m2E5AD3D8362387ABF4E6D280CDA94CFFB1BEDEA7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13226));
		// UpdateStatusText("Replay stopped!");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13224));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13227));
		UserInputRecorderFeedback_UpdateStatusText_m916A0D28E4A5B7DBAE495293804CBBCEA694CA28(__this, _stringLiteral59A60488ADD39244816D3811EE3D7A60A490419A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13227));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13225));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderFeedback::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderFeedback__ctor_mA429AF32DAAC6ECD5BCC4E7F4765E7B70F140085 (UserInputRecorderFeedback_t23E3B9EEEAB949F8DF136928E61E7BFD3F5EBA4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderFeedback__ctor_mA429AF32DAAC6ECD5BCC4E7F4765E7B70F140085_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderFeedback__ctor_mA429AF32DAAC6ECD5BCC4E7F4765E7B70F140085_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13229));
	{
		// private TextMesh statusText = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13230));
		__this->set_statusText_4((TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A *)NULL);
		// private float maxShowDurationInSeconds = 2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13231));
		__this->set_maxShowDurationInSeconds_5((2.0f));
		// private AudioClip audio_StartRecording = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13232));
		__this->set_audio_StartRecording_6((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// private AudioClip audio_StopRecording = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13233));
		__this->set_audio_StopRecording_7((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// private AudioClip audio_StartPlayback = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13234));
		__this->set_audio_StartPlayback_8((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// private AudioClip audio_PausePlayback = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13235));
		__this->set_audio_PausePlayback_9((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// private AudioClip audio_LoadRecordedData = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13236));
		__this->set_audio_LoadRecordedData_10((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// bool isShowingSomething = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13237));
		__this->set_isShowingSomething_11((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13238));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13238));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_Start_m13986F7F342561F0ACDBA51D328049B3D0E6AADE (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_Start_m13986F7F342561F0ACDBA51D328049B3D0E6AADE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_Start_m13986F7F342561F0ACDBA51D328049B3D0E6AADE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13239));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13240));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13241));
		// RecordingUI_Reset(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13242));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13245));
		UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13245));
		// ReplayUI_SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13243));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13246));
		UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13246));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13244));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::StartRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_StartRecording_m64DBDD7C9AA1DCF6CFCBAE53D7F5797276EAE441 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_StartRecording_m64DBDD7C9AA1DCF6CFCBAE53D7F5797276EAE441_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_StartRecording_m64DBDD7C9AA1DCF6CFCBAE53D7F5797276EAE441_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13247));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13248));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13249));
		// RecordingUI_Reset(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13250));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13252));
		UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13252));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13251));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::StopRecording()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_StopRecording_m4BDCB4E852A0BE89861BB9F90FA8D7E00F0256BB (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_StopRecording_m4BDCB4E852A0BE89861BB9F90FA8D7E00F0256BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_StopRecording_m4BDCB4E852A0BE89861BB9F90FA8D7E00F0256BB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13253));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13254));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13255));
		// RecordingUI_Reset(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13256));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13258));
		UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13258));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13257));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::RecordingUI_Reset(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, bool ___reset0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___reset0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_RecordingUI_Reset_m4F88BB3E04B2FDCE57454003435664681591D4B6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13259));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13260));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13261));
		// if (btn_StopRecording != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13262));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_btn_StopRecording_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13273));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13273));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13263));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13264));
		// btn_StopRecording.SetActive(!reset);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13265));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_btn_StopRecording_5();
		bool L_4 = ___reset0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13274));
		NullCheck(L_3);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_3, (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13274));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13266));
	}

IL_0023:
	{
		// if (btn_StartRecording != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13267));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = __this->get_btn_StartRecording_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13275));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13275));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13268));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13269));
		// btn_StartRecording.SetActive(reset);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13270));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_btn_StartRecording_4();
		bool L_9 = ___reset0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13276));
		NullCheck(L_8);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13276));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13271));
	}

IL_0042:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13272));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::LoadData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_LoadData_m0C6EC91736FC9409EAA4FB66CD291E92FC5FAF5F (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_LoadData_m0C6EC91736FC9409EAA4FB66CD291E92FC5FAF5F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_LoadData_m0C6EC91736FC9409EAA4FB66CD291E92FC5FAF5F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13277));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13278));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13279));
		// ReplayUI_SetActive(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13280));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13282));
		UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13282));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13281));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::ReplayUI_SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, bool ___active0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___active0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_ReplayUI_SetActive_m1A752EE5FA6E6EB08BAB0FBC5D36350F230C5618_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13283));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13284));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13285));
		// ResetPlayback(active, false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13286));
		bool L_0 = ___active0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13293));
		UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4(__this, L_0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13293));
		// if (btn_StartPlayback_Inactive != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13287));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_btn_StartPlayback_Inactive_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13294));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13294));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13288));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_002c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13289));
		// btn_StartPlayback_Inactive.SetActive(!active);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13290));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = __this->get_btn_StartPlayback_Inactive_6();
		bool L_5 = ___active0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13295));
		NullCheck(L_4);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_4, (bool)((((int32_t)L_5) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13295));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13291));
	}

IL_002c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13292));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::StartReplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_StartReplay_m458F175F7BDCCDF9C52FB1A18D4404ECDECB1D44 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_StartReplay_m458F175F7BDCCDF9C52FB1A18D4404ECDECB1D44_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_StartReplay_m458F175F7BDCCDF9C52FB1A18D4404ECDECB1D44_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13296));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13297));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13298));
		// Debug.Log("StartReplay");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13299));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13302));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(_stringLiteral12556386DFAA448A48BEFF050EA51E0C3E4A1419, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13302));
		// ResetPlayback(false, true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13300));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13303));
		UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4(__this, (bool)0, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13303));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13301));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::PauseReplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_PauseReplay_m9DE49D3ECC3926998D189EAB3825938DA2363439 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_PauseReplay_m9DE49D3ECC3926998D189EAB3825938DA2363439_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_PauseReplay_m9DE49D3ECC3926998D189EAB3825938DA2363439_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13304));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13305));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13306));
		// Debug.Log("PauseReplay");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13307));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13310));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(_stringLiteral521B667439127627B456DADB3691F7093A8CD8E8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13310));
		// ResetPlayback(true, false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13308));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13311));
		UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4(__this, (bool)1, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13311));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13309));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::ResetPlayback(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4 (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, bool ___showPlayBtn0, bool ___showPauseBtn1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___showPlayBtn0), (&___showPauseBtn1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController_ResetPlayback_mE851FE5473D12183B3619FDAFF7B9BC1E4C05BA4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13312));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13313));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13314));
		// if (btn_StartPlayback != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13315));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_btn_StartPlayback_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13326));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13326));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13316));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13317));
		// btn_StartPlayback.SetActive(showPlayBtn);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13318));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_btn_StartPlayback_7();
		bool L_4 = ___showPlayBtn0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13327));
		NullCheck(L_3);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13327));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13319));
	}

IL_0020:
	{
		// if (btn_PausePlayback != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13320));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = __this->get_btn_PausePlayback_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13328));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13328));
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13321));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13322));
		// btn_PausePlayback.SetActive(showPauseBtn);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13323));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = __this->get_btn_PausePlayback_8();
		bool L_9 = ___showPauseBtn1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13329));
		NullCheck(L_8);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13329));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13324));
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13325));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.Logging.UserInputRecorderUIController::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UserInputRecorderUIController__ctor_mAD7D44684F098392405C81D148E8BEF196EBCDBB (UserInputRecorderUIController_tD37868B91EF8B185F069F43057FDEA51FA195984 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UserInputRecorderUIController__ctor_mAD7D44684F098392405C81D148E8BEF196EBCDBB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, UserInputRecorderUIController__ctor_mAD7D44684F098392405C81D148E8BEF196EBCDBB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13330));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13331));
	{
		// private GameObject btn_StartRecording = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13332));
		__this->set_btn_StartRecording_4((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject btn_StopRecording = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13333));
		__this->set_btn_StopRecording_5((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject btn_StartPlayback_Inactive = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13334));
		__this->set_btn_StartPlayback_Inactive_6((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject btn_StartPlayback = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13335));
		__this->set_btn_StartPlayback_7((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject btn_PausePlayback = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13336));
		__this->set_btn_PausePlayback_8((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13337));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 13337));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_EyeTrackingProvider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6513));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6514));
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B3_1 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B2_1 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B4_1 = NULL;
	{
		// private IMixedRealityEyeGazeProvider EyeTrackingProvider => eyeTrackingProvider ?? (eyeTrackingProvider = CoreServices.InputSystem?.EyeGazeProvider);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6515));
		RuntimeObject* L_0 = __this->get_eyeTrackingProvider_4();
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B5_0 = L_1;
			goto IL_0024;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6516));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6516));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		G_B2_1 = __this;
		if (L_3)
		{
			G_B3_0 = L_3;
			G_B3_1 = __this;
			goto IL_0017;
		}
	}
	{
		G_B4_0 = ((RuntimeObject*)(NULL));
		G_B4_1 = G_B2_1;
		goto IL_001c;
	}

IL_0017:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6517));
		NullCheck(G_B3_0);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6517));
		G_B4_0 = L_4;
		G_B4_1 = G_B3_1;
	}

IL_001c:
	{
		RuntimeObject* L_5 = G_B4_0;
		V_0 = L_5;
		NullCheck(G_B4_1);
		G_B4_1->set_eyeTrackingProvider_4(L_5);
		RuntimeObject* L_6 = V_0;
		G_B5_0 = L_6;
	}

IL_0024:
	{
		return G_B5_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_ConstrX()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6518));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6519));
	int32_t G_B3_0 = 0;
	{
		// private int ConstrX => freezeX ? 0 : 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6520));
		bool L_0 = __this->get_freezeX_13();
		if (L_0)
		{
			goto IL_000b;
		}
	}
	{
		G_B3_0 = 1;
		goto IL_000c;
	}

IL_000b:
	{
		G_B3_0 = 0;
	}

IL_000c:
	{
		return G_B3_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_ConstrY()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6521));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6522));
	int32_t G_B3_0 = 0;
	{
		// private int ConstrY => freezeY ? 0 : 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6523));
		bool L_0 = __this->get_freezeY_14();
		if (L_0)
		{
			goto IL_000b;
		}
	}
	{
		G_B3_0 = 1;
		goto IL_000c;
	}

IL_000b:
	{
		G_B3_0 = 0;
	}

IL_000c:
	{
		return G_B3_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::get_ConstrZ()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6524));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6525));
	int32_t G_B3_0 = 0;
	{
		// private int ConstrZ => freezeZ ? 0 : 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6526));
		bool L_0 = __this->get_freezeZ_15();
		if (L_0)
		{
			goto IL_000b;
		}
	}
	{
		G_B3_0 = 1;
		goto IL_000c;
	}

IL_000b:
	{
		G_B3_0 = 0;
	}

IL_000c:
	{
		return G_B3_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Start_mED7B15C1C88FA34CD44B32C7E6AA1EC09D8A8037 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Start_mED7B15C1C88FA34CD44B32C7E6AA1EC09D8A8037_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Start_mED7B15C1C88FA34CD44B32C7E6AA1EC09D8A8037_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6527));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6528));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6529));
		// UpdateSliderTextOutput();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6530));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6532));
		MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6532));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6531));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Update_m1ABDA77EDDCF4ED2295C32EAE803A9659D59B6C9 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Update_m1ABDA77EDDCF4ED2295C32EAE803A9659D59B6C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Update_m1ABDA77EDDCF4ED2295C32EAE803A9659D59B6C9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6533));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6534));
	int32_t G_B3_0 = 0;
	int32_t G_B7_0 = 0;
	RuntimeObject* G_B10_0 = NULL;
	RuntimeObject* G_B9_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B11_0 = NULL;
	RuntimeObject* G_B14_0 = NULL;
	RuntimeObject* G_B13_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B15_0 = NULL;
	int32_t G_B17_0 = 0;
	RuntimeObject* G_B20_0 = NULL;
	RuntimeObject* G_B19_0 = NULL;
	SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A * G_B21_0 = NULL;
	RuntimeObject* G_B24_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B24_1 = NULL;
	RuntimeObject* G_B23_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B23_1 = NULL;
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  G_B25_0;
	memset((&G_B25_0), 0, sizeof(G_B25_0));
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B25_1 = NULL;
	RuntimeObject* G_B30_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B30_1 = NULL;
	RuntimeObject* G_B29_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B29_1 = NULL;
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  G_B31_0;
	memset((&G_B31_0), 0, sizeof(G_B31_0));
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B31_1 = NULL;
	RuntimeObject* G_B34_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B34_1 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B34_2 = NULL;
	RuntimeObject* G_B33_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B33_1 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B33_2 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B35_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B35_1 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B35_2 = NULL;
	RuntimeObject* G_B39_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B39_1 = NULL;
	RuntimeObject* G_B38_0 = NULL;
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B38_1 = NULL;
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  G_B40_0;
	memset((&G_B40_0), 0, sizeof(G_B40_0));
	MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * G_B40_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6535));
		// if (objIsGrabbed && useEyeSupportedTargetPlacement)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6536));
		bool L_0 = __this->get_objIsGrabbed_46();
		if (!L_0)
		{
			goto IL_0011;
		}
	}
	{
		bool L_1 = __this->get_useEyeSupportedTargetPlacement_5();
		G_B3_0 = ((int32_t)(L_1));
		goto IL_0012;
	}

IL_0011:
	{
		G_B3_0 = 0;
	}

IL_0012:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6537));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_027a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6538));
		// if (IsLookingAwayFromTarget() && IsLookingAwayFromPreview())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6539));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6600));
		bool L_3 = MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6600));
		if (!L_3)
		{
			goto IL_002a;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6601));
		bool L_4 = MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6601));
		G_B7_0 = ((int32_t)(L_4));
		goto IL_002b;
	}

IL_002a:
	{
		G_B7_0 = 0;
	}

IL_002b:
	{
		V_1 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6540));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0277;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6541));
		// if ((EyeTrackingProvider?.GazeTarget != null) &&
		//     (EyeTrackingProvider?.GazeTarget != gameObject))     // To prevent trying to place it on itself
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6542));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6602));
		RuntimeObject* L_6 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6602));
		RuntimeObject* L_7 = L_6;
		G_B9_0 = L_7;
		if (L_7)
		{
			G_B10_0 = L_7;
			goto IL_0040;
		}
	}
	{
		G_B11_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_0045;
	}

IL_0040:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6603));
		NullCheck(G_B10_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B10_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6603));
		G_B11_0 = L_8;
	}

IL_0045:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6604));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_9 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B11_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6604));
		if (!L_9)
		{
			goto IL_006c;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6605));
		RuntimeObject* L_10 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6605));
		RuntimeObject* L_11 = L_10;
		G_B13_0 = L_11;
		if (L_11)
		{
			G_B14_0 = L_11;
			goto IL_005a;
		}
	}
	{
		G_B15_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_005f;
	}

IL_005a:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6606));
		NullCheck(G_B14_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B14_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6606));
		G_B15_0 = L_12;
	}

IL_005f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6607));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6607));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6608));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_14 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B15_0, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6608));
		G_B17_0 = ((int32_t)(L_14));
		goto IL_006d;
	}

IL_006c:
	{
		G_B17_0 = 0;
	}

IL_006d:
	{
		V_2 = (bool)G_B17_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6543));
		bool L_15 = V_2;
		if (!L_15)
		{
			goto IL_026d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6544));
		// plausibleLocation = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6545));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_16 = __this->get_address_of_plausibleLocation_35();
		il2cpp_codegen_initobj(L_16, sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		// if (EyeTrackingProvider?.GazeTarget.GetComponent<SnapTo>() != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6546));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6609));
		RuntimeObject* L_17 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6609));
		RuntimeObject* L_18 = L_17;
		G_B19_0 = L_18;
		if (L_18)
		{
			G_B20_0 = L_18;
			goto IL_008e;
		}
	}
	{
		G_B21_0 = ((SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A *)(NULL));
		goto IL_0098;
	}

IL_008e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6610));
		NullCheck(G_B20_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B20_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6611));
		NullCheck(L_19);
		SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A * L_20 = GameObject_GetComponent_TisSnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A_mB2E029A9BEB11D7E5ACB883CCC9A8905E935B25E(L_19, /*hidden argument*/GameObject_GetComponent_TisSnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A_mB2E029A9BEB11D7E5ACB883CCC9A8905E935B25E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6611));
		G_B21_0 = L_20;
	}

IL_0098:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6612));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_21 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B21_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6612));
		V_3 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6547));
		bool L_22 = V_3;
		if (!L_22)
		{
			goto IL_00d9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6548));
		// plausibleLocation = EyeTrackingProvider?.GazeTarget.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6549));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6613));
		RuntimeObject* L_23 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6613));
		RuntimeObject* L_24 = L_23;
		G_B23_0 = L_24;
		G_B23_1 = __this;
		if (L_24)
		{
			G_B24_0 = L_24;
			G_B24_1 = __this;
			goto IL_00ba;
		}
	}
	{
		il2cpp_codegen_initobj((&V_4), sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_25 = V_4;
		G_B25_0 = L_25;
		G_B25_1 = G_B23_1;
		goto IL_00ce;
	}

IL_00ba:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6614));
		NullCheck(G_B24_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_26 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B24_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6614));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6615));
		NullCheck(L_26);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_27 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6615));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6616));
		NullCheck(L_27);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6616));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6617));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_29;
		memset((&L_29), 0, sizeof(L_29));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_29), L_28, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6617));
		G_B25_0 = L_29;
		G_B25_1 = G_B24_1;
	}

IL_00ce:
	{
		NullCheck(G_B25_1);
		G_B25_1->set_plausibleLocation_35(G_B25_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6550));
		goto IL_016c;
	}

IL_00d9:
	{
		// else if (onlyTransitionToPlausibleDestinations)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6551));
		bool L_30 = __this->get_onlyTransitionToPlausibleDestinations_34();
		V_5 = L_30;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6552));
		bool L_31 = V_5;
		if (!L_31)
		{
			goto IL_0144;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6553));
		// if (IsDestinationPlausible())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6554));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6618));
		bool L_32 = MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6618));
		V_6 = L_32;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6555));
		bool L_33 = V_6;
		if (!L_33)
		{
			goto IL_011c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6556));
		// plausibleLocation = EyeTrackingProvider?.HitPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6557));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6619));
		RuntimeObject* L_34 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6619));
		RuntimeObject* L_35 = L_34;
		G_B29_0 = L_35;
		G_B29_1 = __this;
		if (L_35)
		{
			G_B30_0 = L_35;
			G_B30_1 = __this;
			goto IL_010a;
		}
	}
	{
		il2cpp_codegen_initobj((&V_4), sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_36 = V_4;
		G_B31_0 = L_36;
		G_B31_1 = G_B29_1;
		goto IL_0114;
	}

IL_010a:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6620));
		NullCheck(G_B30_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B30_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6620));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6621));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_38;
		memset((&L_38), 0, sizeof(L_38));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_38), L_37, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6621));
		G_B31_0 = L_38;
		G_B31_1 = G_B30_1;
	}

IL_0114:
	{
		NullCheck(G_B31_1);
		G_B31_1->set_plausibleLocation_35(G_B31_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6558));
		goto IL_0141;
	}

IL_011c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6559));
		// plausibleLocation = GetValidPlacemLocation(EyeTrackingProvider?.GazeTarget);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6622));
		RuntimeObject* L_39 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6622));
		RuntimeObject* L_40 = L_39;
		G_B33_0 = L_40;
		G_B33_1 = __this;
		G_B33_2 = __this;
		if (L_40)
		{
			G_B34_0 = L_40;
			G_B34_1 = __this;
			G_B34_2 = __this;
			goto IL_012c;
		}
	}
	{
		G_B35_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		G_B35_1 = G_B33_1;
		G_B35_2 = G_B33_2;
		goto IL_0131;
	}

IL_012c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6623));
		NullCheck(G_B34_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_41 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B34_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6623));
		G_B35_0 = L_41;
		G_B35_1 = G_B34_1;
		G_B35_2 = G_B34_2;
	}

IL_0131:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6624));
		NullCheck(G_B35_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2(G_B35_1, G_B35_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6624));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6625));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_43;
		memset((&L_43), 0, sizeof(L_43));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_43), L_42, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6625));
		NullCheck(G_B35_2);
		G_B35_2->set_plausibleLocation_35(L_43);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6561));
	}

IL_0141:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6562));
		goto IL_016c;
	}

IL_0144:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6563));
		// plausibleLocation = EyeTrackingProvider?.HitPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6564));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6626));
		RuntimeObject* L_44 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6626));
		RuntimeObject* L_45 = L_44;
		G_B38_0 = L_45;
		G_B38_1 = __this;
		if (L_45)
		{
			G_B39_0 = L_45;
			G_B39_1 = __this;
			goto IL_015c;
		}
	}
	{
		il2cpp_codegen_initobj((&V_4), sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_46 = V_4;
		G_B40_0 = L_46;
		G_B40_1 = G_B38_1;
		goto IL_0166;
	}

IL_015c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6627));
		NullCheck(G_B39_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B39_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6627));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6628));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_48;
		memset((&L_48), 0, sizeof(L_48));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_48), L_47, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6628));
		G_B40_0 = L_48;
		G_B40_1 = G_B39_1;
	}

IL_0166:
	{
		NullCheck(G_B40_1);
		G_B40_1->set_plausibleLocation_35(G_B40_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6565));
	}

IL_016c:
	{
		// if (plausibleLocation.HasValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6566));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_49 = __this->get_address_of_plausibleLocation_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6629));
		bool L_50 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_49, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6629));
		V_7 = L_50;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6567));
		bool L_51 = V_7;
		if (!L_51)
		{
			goto IL_0261;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6568));
		// ActivatePreview();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6569));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6630));
		MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6630));
		// if (placePreviewAtHitPoint)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6570));
		bool L_52 = __this->get_placePreviewAtHitPoint_36();
		V_8 = L_52;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6571));
		bool L_53 = V_8;
		if (!L_53)
		{
			goto IL_01b7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6572));
		// previewGameObject.transform.position = plausibleLocation.Value; // EyeInputManager.Instance.HitPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6573));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_54 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6631));
		NullCheck(L_54);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_55 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6631));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_56 = __this->get_address_of_plausibleLocation_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6632));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_56, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6632));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6633));
		NullCheck(L_55);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_55, L_57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6633));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6574));
		goto IL_025e;
	}

IL_01b7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6575));
		// if (PlacementSurface == PlacementSurfaces.Horizontal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6576));
		int32_t L_58 = __this->get_PlacementSurface_19();
		V_9 = (bool)((((int32_t)L_58) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6577));
		bool L_59 = V_9;
		if (!L_59)
		{
			goto IL_0224;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6578));
		// previewGameObject.transform.position = plausibleLocation.Value + previewGameObject.transform.localScale.y * new Vector3(0, 1, 0) / 2;  // EyeInputManager.Instance.HitPosition + pPreviewGameObj.transform.localScale.y * new Vector3(0, 1, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6579));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_60 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6634));
		NullCheck(L_60);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_61 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_60, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6634));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_62 = __this->get_address_of_plausibleLocation_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6635));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_62, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6635));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_64 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6636));
		NullCheck(L_64);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_65 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_64, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6636));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6637));
		NullCheck(L_65);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_65, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6637));
		float L_67 = L_66.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6638));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_68;
		memset((&L_68), 0, sizeof(L_68));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_68), (0.0f), (1.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6638));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6639));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_69 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(L_67, L_68, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6639));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6640));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_70 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_69, (2.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6640));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6641));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_71 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_63, L_70, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6641));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6642));
		NullCheck(L_61);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_61, L_71, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6642));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6580));
		goto IL_0242;
	}

IL_0224:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6581));
		// previewGameObject.transform.position = plausibleLocation.Value; // EyeInputManager.Instance.HitPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6582));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_72 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6643));
		NullCheck(L_72);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_73 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6643));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_74 = __this->get_address_of_plausibleLocation_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6644));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_75 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_74, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6644));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6645));
		NullCheck(L_73);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_73, L_75, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6645));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6583));
	}

IL_0242:
	{
		// prevPreviewPos = previewGameObject.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6584));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_76 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6646));
		NullCheck(L_76);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_77 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_76, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6646));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6647));
		NullCheck(L_77);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_78 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_77, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6647));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6648));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_79;
		memset((&L_79), 0, sizeof(L_79));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_79), L_78, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6648));
		__this->set_prevPreviewPos_52(L_79);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6585));
	}

IL_025e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6586));
		goto IL_026a;
	}

IL_0261:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6587));
		// DeactivatePreview();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6588));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6649));
		MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6649));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6589));
	}

IL_026a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6590));
		goto IL_0276;
	}

IL_026d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6591));
		// DeactivatePreview();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6592));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6650));
		MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6650));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6593));
	}

IL_0276:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6594));
	}

IL_0277:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6595));
		goto IL_0288;
	}

IL_027a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6596));
		// prevPreviewPos = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6597));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_80 = __this->get_address_of_prevPreviewPos_52();
		il2cpp_codegen_initobj(L_80, sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6598));
	}

IL_0288:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6599));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySpeechHandler.OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mA5D96319DEC6CEEA9EF3360593EE3AB49C9C086D (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mA5D96319DEC6CEEA9EF3360593EE3AB49C9C086D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mA5D96319DEC6CEEA9EF3360593EE3AB49C9C086D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6651));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6652));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6653));
		// if (voiceAction_PutThis == eventData.MixedRealityInputAction)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6654));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_voiceAction_PutThis_22();
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6667));
		NullCheck(L_1);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6668));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_3 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_0, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6668));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6655));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6656));
		// DragAndDrop_Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6657));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6669));
		MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6669));
		// CoreServices.InputSystem.PushModalInputHandler(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6658));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6670));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_5 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6670));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6671));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6672));
		NullCheck(L_5);
		InterfaceActionInvoker1< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(15 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::PushModalInputHandler(UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_5, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6672));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6659));
		goto IL_005b;
	}

IL_0032:
	{
		// else if (voiceAction_OverHere == eventData.MixedRealityInputAction)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6660));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_7 = __this->get_voiceAction_OverHere_23();
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6673));
		NullCheck(L_8);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_9 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6673));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6674));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		bool L_10 = MixedRealityInputAction_op_Equality_m12FD8162F5865AEC11E4E9730C6233DFADEE5B0F(L_7, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6674));
		V_1 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6661));
		bool L_11 = V_1;
		if (!L_11)
		{
			goto IL_005b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6662));
		// DragAndDrop_Finish();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6663));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6675));
		MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6675));
		// CoreServices.InputSystem.PopModalInputHandler();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6664));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6676));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_12 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6676));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6677));
		NullCheck(L_12);
		InterfaceActionInvoker0::Invoke(16 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::PopModalInputHandler() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6677));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6665));
	}

IL_005b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6666));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealityHandJointHandler.OnHandJointsUpdated(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57C15B11ADBB2244628F530D564C40E0693C8811 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57C15B11ADBB2244628F530D564C40E0693C8811_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	bool V_2 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57C15B11ADBB2244628F530D564C40E0693C8811_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6678));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6679));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6680));
		// eventData.InputData.TryGetValue(TrackedHandJoint.Palm, out pose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6681));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6702));
		NullCheck(L_0);
		RuntimeObject* L_1 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_0, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6702));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6703));
		NullCheck(L_1);
		InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(7 /* System.Boolean System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::TryGetValue(!0,!1&) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_1, 2, (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_0));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6703));
		// if ((pose != null) && (eventData.Handedness == currEngagedHand) && isManipulatingUsing_Hands)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6682));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6704));
		NullCheck(L_2);
		uint8_t L_3 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6704));
		uint8_t L_4 = __this->get_currEngagedHand_45();
		if ((!(((uint32_t)L_3) == ((uint32_t)L_4))))
		{
			goto IL_0025;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		bool L_5 = ((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->get_isManipulatingUsing_Hands_39();
		G_B3_0 = ((int32_t)(L_5));
		goto IL_0026;
	}

IL_0025:
	{
		G_B3_0 = 0;
	}

IL_0026:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6683));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_00c8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6684));
		// if (handPos_absolute == Vector3.zero)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6685));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = __this->get_handPos_absolute_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6705));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6705));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6706));
		bool L_9 = Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6706));
		V_2 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6686));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_0053;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6687));
		// handPos_absolute = pose.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6688));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6707));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6707));
		__this->set_handPos_absolute_41(L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6689));
		goto IL_00c7;
	}

IL_0053:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6690));
		// Vector3 oldHandPos = handPos_absolute;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6691));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = __this->get_handPos_absolute_41();
		V_3 = L_12;
		// handPos_relative = new Vector3(oldHandPos.x - pose.Position.x, oldHandPos.y - pose.Position.y, oldHandPos.z - pose.Position.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6692));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_3;
		float L_14 = L_13.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6708));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6708));
		float L_16 = L_15.get_x_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_3;
		float L_18 = L_17.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6709));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6709));
		float L_20 = L_19.get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_3;
		float L_22 = L_21.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6710));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6710));
		float L_24 = L_23.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6711));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25;
		memset((&L_25), 0, sizeof(L_25));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_25), ((float)il2cpp_codegen_subtract((float)L_14, (float)L_16)), ((float)il2cpp_codegen_subtract((float)L_18, (float)L_20)), ((float)il2cpp_codegen_subtract((float)L_22, (float)L_24)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6711));
		__this->set_handPos_relative_42(L_25);
		// handPos_absolute = pose.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6693));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6712));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6712));
		__this->set_handPos_absolute_41(L_26);
		// if (handIsPinching)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6694));
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		bool L_27 = ((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->get_handIsPinching_44();
		V_4 = L_27;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6695));
		bool L_28 = V_4;
		if (!L_28)
		{
			goto IL_00c6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6696));
		// RelativeMoveUpdate(handPos_relative);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6697));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = __this->get_handPos_relative_42();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6713));
		MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F(__this, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6713));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6698));
	}

IL_00c6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6699));
	}

IL_00c7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6700));
	}

IL_00c8:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6701));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySourceStateHandler.OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_mED8BD860AA0D056A183E809B20533A419626E1B5 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_mED8BD860AA0D056A183E809B20533A419626E1B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_mED8BD860AA0D056A183E809B20533A419626E1B5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6714));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6715));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6716));
		// void IMixedRealitySourceStateHandler.OnSourceDetected(SourceStateEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6717));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySourceStateHandler.OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_m4A3F4DEEF214F29B84AA5351131AAE43925CA9EB (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_m4A3F4DEEF214F29B84AA5351131AAE43925CA9EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_m4A3F4DEEF214F29B84AA5351131AAE43925CA9EB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6718));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6719));
	int32_t G_B5_0 = 0;
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6720));
		// if ((currEngagedHand == Handedness.Right && eventData.Controller.ControllerHandedness == Handedness.Right) ||
		//     (currEngagedHand == Handedness.Left && eventData.Controller.ControllerHandedness == Handedness.Left))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6721));
		uint8_t L_0 = __this->get_currEngagedHand_45();
		if ((!(((uint32_t)L_0) == ((uint32_t)2))))
		{
			goto IL_0018;
		}
	}
	{
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6727));
		NullCheck(L_1);
		RuntimeObject* L_2 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6727));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6728));
		NullCheck(L_2);
		uint8_t L_3 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6728));
		if ((((int32_t)L_3) == ((int32_t)2)))
		{
			goto IL_0034;
		}
	}

IL_0018:
	{
		uint8_t L_4 = __this->get_currEngagedHand_45();
		if ((!(((uint32_t)L_4) == ((uint32_t)1))))
		{
			goto IL_0031;
		}
	}
	{
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_5 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6729));
		NullCheck(L_5);
		RuntimeObject* L_6 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6730));
		NullCheck(L_6);
		uint8_t L_7 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6730));
		G_B5_0 = ((((int32_t)L_7) == ((int32_t)1))? 1 : 0);
		goto IL_0032;
	}

IL_0031:
	{
		G_B5_0 = 0;
	}

IL_0032:
	{
		G_B7_0 = G_B5_0;
		goto IL_0035;
	}

IL_0034:
	{
		G_B7_0 = 1;
	}

IL_0035:
	{
		V_0 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6722));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6723));
		// HandDrag_Stop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6724));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6731));
		MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6731));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6725));
	}

IL_0042:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6726));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF081561D788FDD14DBD1AEF7F53B55398C6DF565 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF081561D788FDD14DBD1AEF7F53B55398C6DF565_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_mF081561D788FDD14DBD1AEF7F53B55398C6DF565_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6732));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6733));
	int32_t G_B5_0 = 0;
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6734));
		// if ((currEngagedHand == Handedness.Right && eventData.Handedness == Handedness.Right) ||
		//     (currEngagedHand == Handedness.Left && eventData.Handedness == Handedness.Left))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6735));
		uint8_t L_0 = __this->get_currEngagedHand_45();
		if ((!(((uint32_t)L_0) == ((uint32_t)2))))
		{
			goto IL_0013;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6741));
		NullCheck(L_1);
		uint8_t L_2 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6741));
		if ((((int32_t)L_2) == ((int32_t)2)))
		{
			goto IL_002a;
		}
	}

IL_0013:
	{
		uint8_t L_3 = __this->get_currEngagedHand_45();
		if ((!(((uint32_t)L_3) == ((uint32_t)1))))
		{
			goto IL_0027;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6742));
		NullCheck(L_4);
		uint8_t L_5 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6742));
		G_B5_0 = ((((int32_t)L_5) == ((int32_t)1))? 1 : 0);
		goto IL_0028;
	}

IL_0027:
	{
		G_B5_0 = 0;
	}

IL_0028:
	{
		G_B7_0 = G_B5_0;
		goto IL_002b;
	}

IL_002a:
	{
		G_B7_0 = 1;
	}

IL_002b:
	{
		V_0 = (bool)G_B7_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6736));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6737));
		// HandDrag_Stop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6738));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6743));
		MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6743));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6739));
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6740));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m51292C38190C7808D21CB7BCB81B53DBFBDA931F (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m51292C38190C7808D21CB7BCB81B53DBFBDA931F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_m51292C38190C7808D21CB7BCB81B53DBFBDA931F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6744));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6745));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6746));
		// if (currEngagedHand == Handedness.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6747));
		uint8_t L_0 = __this->get_currEngagedHand_45();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6748));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6749));
		// currEngagedHand = eventData.Handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6750));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6758));
		NullCheck(L_2);
		uint8_t L_3 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6758));
		__this->set_currEngagedHand_45(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6751));
	}

IL_001c:
	{
		// if (currEngagedHand != Handedness.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6752));
		uint8_t L_4 = __this->get_currEngagedHand_45();
		V_1 = (bool)((!(((uint32_t)L_4) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6753));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6754));
		// HandDrag_Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6755));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6759));
		MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6759));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6756));
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6757));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m771F66C581858199AC12053C90E2223FF1139583 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m771F66C581858199AC12053C90E2223FF1139583_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m771F66C581858199AC12053C90E2223FF1139583_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6760));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6761));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6762));
		// void IMixedRealityPointerHandler.OnPointerClicked(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6763));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::HandDrag_Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_HandDrag_Start_m264CA714F269028288F314AFE589888EC6B1C5C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6764));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6765));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6766));
		// if ((handInputEnabled) && (!isManipulatingUsing_Hands) && (!isManipulatingUsing_Voice))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6767));
		bool L_0 = __this->get_handInputEnabled_7();
		if (!L_0)
		{
			goto IL_001a;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		bool L_1 = ((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->get_isManipulatingUsing_Hands_39();
		if (L_1)
		{
			goto IL_001a;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		bool L_2 = ((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->get_isManipulatingUsing_Voice_40();
		G_B4_0 = ((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B4_0 = 0;
	}

IL_001b:
	{
		V_0 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6768));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_005b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6769));
		// isManipulatingUsing_Hands = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6770));
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_isManipulatingUsing_Hands_39((bool)1);
		// handIsPinching = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6771));
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_handIsPinching_44((bool)1);
		// handPos_relative = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6772));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6778));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6778));
		__this->set_handPos_relative_42(L_4);
		// handPos_absolute = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6773));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6779));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6779));
		__this->set_handPos_absolute_41(L_5);
		// DragAndDrop_Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6774));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6780));
		MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6780));
		// CoreServices.InputSystem.PushModalInputHandler(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6781));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_6 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6782));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6782));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6783));
		NullCheck(L_6);
		InterfaceActionInvoker1< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(15 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::PushModalInputHandler(UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_6, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6783));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6776));
	}

IL_005b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6777));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::HandDrag_Stop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_HandDrag_Stop_m3609085B1BEB6C63185B510DDCEBC1C247DD0D65_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6784));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6785));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6786));
		// if (isManipulatingUsing_Hands)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6787));
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		bool L_0 = ((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->get_isManipulatingUsing_Hands_39();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6788));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_003c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6789));
		// isManipulatingUsing_Hands = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6790));
		IL2CPP_RUNTIME_CLASS_INIT(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var);
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_isManipulatingUsing_Hands_39((bool)0);
		// handIsPinching = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6791));
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_handIsPinching_44((bool)0);
		// handPos_relative = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6792));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6798));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6798));
		__this->set_handPos_relative_42(L_2);
		// DragAndDrop_Finish();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6793));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6799));
		MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6799));
		// CoreServices.InputSystem.PopModalInputHandler();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6794));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6800));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6801));
		NullCheck(L_3);
		InterfaceActionInvoker0::Invoke(16 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::PopModalInputHandler() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6801));
		// currEngagedHand = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6795));
		__this->set_currEngagedHand_45(0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6796));
	}

IL_003c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6797));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::IsLookingAwayFromTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_IsLookingAwayFromTarget_mB70132B6B7C2E606466D3EA7E33F382008246241_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6802));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6803));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B3_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6804));
		// if (EyeTrackingProvider?.GazeTarget == gameObject)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6805));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6816));
		RuntimeObject* L_0 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6816));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_0013;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6817));
		NullCheck(G_B2_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6817));
		G_B3_0 = L_2;
	}

IL_0013:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6818));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6818));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6819));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(G_B3_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6819));
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6806));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6807));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6808));
		V_2 = (bool)0;
		goto IL_004a;
	}

IL_0027:
	{
		// float distanceBetweenTargetAndCurrHitPos = Angle_ToCurrHitTarget(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6809));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6820));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6820));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6821));
		float L_7 = MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA(__this, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6821));
		V_0 = L_7;
		// if (distanceBetweenTargetAndCurrHitPos > minLookAwayDistToEnableEyeWarp)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6810));
		float L_8 = V_0;
		float L_9 = __this->get_minLookAwayDistToEnableEyeWarp_6();
		V_3 = (bool)((((float)L_8) > ((float)L_9))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6811));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6812));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6813));
		V_2 = (bool)1;
		goto IL_004a;
	}

IL_0046:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6814));
		V_2 = (bool)0;
		goto IL_004a;
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6815));
		bool L_11 = V_2;
		return L_11;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::IsLookingAwayFromPreview()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_IsLookingAwayFromPreview_mB94F31971AA1C2BA539FEE62EEC9F4BCB684A89F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6822));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6823));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6824));
		// if (prevPreviewPos == null || EyeTrackingProvider == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6825));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_0 = __this->get_address_of_prevPreviewPos_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6848));
		bool L_1 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_0, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6848));
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6849));
		RuntimeObject* L_2 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6849));
		G_B3_0 = ((((RuntimeObject*)(RuntimeObject*)L_2) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		goto IL_001a;
	}

IL_0019:
	{
		G_B3_0 = 1;
	}

IL_001a:
	{
		V_5 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6826));
		bool L_3 = V_5;
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6827));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6828));
		V_6 = (bool)1;
		goto IL_00cd;
	}

IL_0029:
	{
		// Vector3 eyes2PrevPreview = prevPreviewPos.Value - EyeTrackingProvider.GazeOrigin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6829));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_4 = __this->get_address_of_prevPreviewPos_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6850));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_4, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6850));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6851));
		RuntimeObject* L_6 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6851));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6852));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(10 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeOrigin() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6852));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6853));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6853));
		V_0 = L_8;
		// Vector3 eye2HitPos = EyeTrackingProvider.GazeDirection;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6830));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6854));
		RuntimeObject* L_9 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6854));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6855));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6855));
		V_1 = L_10;
		// float angle = Vector3.Angle(eyes2PrevPreview, eye2HitPos);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6831));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6856));
		float L_13 = Vector3_Angle_m8911FFA1DD1C8C46D923B52645B352FA1521CD5F(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6856));
		V_2 = L_13;
		// float distance = EyeTrackingDemoUtils.VisAngleInDegreesToMeters(Vector3.Angle(eyes2PrevPreview, eye2HitPos), eye2HitPos.magnitude);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6832));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6857));
		float L_16 = Vector3_Angle_m8911FFA1DD1C8C46D923B52645B352FA1521CD5F(L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6857));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6858));
		float L_17 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6858));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6859));
		float L_18 = EyeTrackingDemoUtils_VisAngleInDegreesToMeters_m8124359420AB6211D7BF4A24B809716E9940194E(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6859));
		V_3 = L_18;
		// if (distance < previewPlacemDistThresh)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6833));
		float L_19 = V_3;
		float L_20 = __this->get_previewPlacemDistThresh_12();
		V_7 = (bool)((((float)L_19) < ((float)L_20))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6834));
		bool L_21 = V_7;
		if (!L_21)
		{
			goto IL_0082;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6835));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6836));
		V_6 = (bool)0;
		goto IL_00cd;
	}

IL_0082:
	{
		// if (EyeTrackingProvider.GazeTarget == previewGameObject)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6837));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6860));
		RuntimeObject* L_22 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6860));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6861));
		NullCheck(L_22);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6861));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6862));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_25 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6862));
		V_8 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6838));
		bool L_26 = V_8;
		if (!L_26)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6839));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6840));
		V_6 = (bool)0;
		goto IL_00cd;
	}

IL_00a4:
	{
		// float distanceBetweenTargetAndCurrHitPos = Angle_ToCurrHitTarget(previewGameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6841));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_27 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6863));
		float L_28 = MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA(__this, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6863));
		V_4 = L_28;
		// if (distanceBetweenTargetAndCurrHitPos > minLookAwayDistToEnableEyeWarp)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6842));
		float L_29 = V_4;
		float L_30 = __this->get_minLookAwayDistToEnableEyeWarp_6();
		V_9 = (bool)((((float)L_29) > ((float)L_30))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6843));
		bool L_31 = V_9;
		if (!L_31)
		{
			goto IL_00c8;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6844));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6845));
		V_6 = (bool)1;
		goto IL_00cd;
	}

IL_00c8:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6846));
		V_6 = (bool)0;
		goto IL_00cd;
	}

IL_00cd:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6847));
		bool L_32 = V_6;
		return L_32;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::IsDestinationPlausible()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	float V_5 = 0.0f;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_IsDestinationPlausible_m709FB592F367962A2E06E0D45BA1C790FDD76A3D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6864));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6865));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6866));
		// if (PlacementSurface == PlacementSurfaces.Horizontal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6867));
		int32_t L_0 = __this->get_PlacementSurface_19();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6868));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6869));
		// float angle = Vector3.Angle(EyeTrackingProvider.HitNormal, Vector3.up);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6870));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6888));
		RuntimeObject* L_2 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6888));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6889));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(9 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitNormal() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6889));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6890));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6890));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6891));
		float L_5 = Vector3_Angle_m8911FFA1DD1C8C46D923B52645B352FA1521CD5F(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6891));
		V_1 = L_5;
		// if (angle < maxDiffAngleForHorizontalPlacem) // If the angle is more than for example 20 degrees off from the up vector
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6871));
		float L_6 = V_1;
		float L_7 = __this->get_maxDiffAngleForHorizontalPlacem_53();
		V_2 = (bool)((((float)L_6) < ((float)L_7))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6872));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6873));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6874));
		V_3 = (bool)1;
		goto IL_00a7;
	}

IL_0037:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6875));
		goto IL_00a3;
	}

IL_003a:
	{
		// else if (PlacementSurface == PlacementSurfaces.Vertical)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6876));
		int32_t L_9 = __this->get_PlacementSurface_19();
		V_4 = (bool)((((int32_t)L_9) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6877));
		bool L_10 = V_4;
		if (!L_10)
		{
			goto IL_00a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6878));
		// float angle = Vector3.Angle(EyeTrackingProvider.HitNormal, gameObject.transform.up);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6879));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6892));
		RuntimeObject* L_11 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6892));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6893));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(9 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitNormal() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6893));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6894));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6895));
		NullCheck(L_13);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6895));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6896));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Transform_get_up_m3E443F6EB278D547946E80D77065A871BEEEE282(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6896));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6897));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_16 = Vector3_Angle_m8911FFA1DD1C8C46D923B52645B352FA1521CD5F(L_12, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6897));
		V_5 = L_16;
		// if (angle > minDiffAngleForVerticalPlacem)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6880));
		float L_17 = V_5;
		float L_18 = __this->get_minDiffAngleForVerticalPlacem_54();
		V_6 = (bool)((((float)L_17) > ((float)L_18))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6881));
		bool L_19 = V_6;
		if (!L_19)
		{
			goto IL_00a2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6882));
		// gameObject.transform.forward = -EyeTrackingProvider.HitNormal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6883));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6898));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6898));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6899));
		NullCheck(L_20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6899));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6900));
		RuntimeObject* L_22 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6900));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6901));
		NullCheck(L_22);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(9 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitNormal() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6901));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6902));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6903));
		NullCheck(L_21);
		Transform_set_forward_m02858E8B3313B27174B19E9113F24EF25FBCEC7F(L_21, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6903));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6884));
		V_3 = (bool)1;
		goto IL_00a7;
	}

IL_00a2:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6885));
	}

IL_00a3:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6886));
		V_3 = (bool)0;
		goto IL_00a7;
	}

IL_00a7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6887));
		bool L_25 = V_3;
		return L_25;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::GetValidPlacemLocation(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitobj0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hitobj0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_GetValidPlacemLocation_mD7E0F9E0A992CDFA526F956B50BEA388DC18A0E2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6904));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6905));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6906));
		// Vector3 tCenter = hitobj.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6907));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___hitobj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6913));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6913));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6914));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6914));
		V_0 = L_2;
		// Vector3 tScale = hitobj.transform.lossyScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6908));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = ___hitobj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6915));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6915));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6916));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6916));
		V_1 = L_5;
		// Vector3 vUp = Vector3.up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6909));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6917));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6917));
		V_2 = L_6;
		// Vector3 newPos = (tCenter + tScale.y / 2 * Vector3.up);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6910));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = V_1;
		float L_9 = L_8.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6918));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6918));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6919));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(((float)((float)L_9/(float)(2.0f))), L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6919));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6920));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_7, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6920));
		V_3 = L_12;
		// return newPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6911));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_3;
		V_4 = L_13;
		goto IL_0041;
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6912));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = V_4;
		return L_14;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::ActivatePreview()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_ActivatePreview_m32025255B5C018ECB5D73B8E11CE2ED41C37AD01_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6921));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6922));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6923));
		// if (previewGameObject == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6924));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6934));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6934));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6925));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_004f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6926));
		// previewGameObject = Instantiate(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6927));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6935));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6935));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6936));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_3, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6936));
		__this->set_previewGameObject_29(L_4);
		// previewGameObject.GetComponent<Collider>().enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6928));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6937));
		NullCheck(L_5);
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_6 = GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300(L_5, /*hidden argument*/GameObject_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m9F1BD85BCDF667B62AECFA7062C1379A31478300_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6937));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6938));
		NullCheck(L_6);
		Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B(L_6, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6938));
		// EyeTrackingDemoUtils.GameObject_ChangeTransparency(previewGameObject, transparency_preview);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6929));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = __this->get_previewGameObject_29();
		float L_8 = __this->get_transparency_preview_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6939));
		EyeTrackingDemoUtils_GameObject_ChangeTransparency_m35C8C148704D938EB60BE92306BAE62E01058E49(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6939));
		// placePreviewAtHitPoint = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6930));
		__this->set_placePreviewAtHitPoint_36((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6931));
	}

IL_004f:
	{
		// previewGameObject.SetActive(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6932));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6940));
		NullCheck(L_9);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_9, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6940));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6933));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::DeactivatePreview()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6941));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6942));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6943));
		// if (previewGameObject != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6944));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6952));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6952));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6945));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6946));
		// previewGameObject.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6947));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6953));
		NullCheck(L_3);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_3, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6953));
		// Destroy(previewGameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6948));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6954));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6954));
		// previewGameObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6949));
		__this->set_previewGameObject_29((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6950));
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6951));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::DragAndDrop_Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_DragAndDrop_Start_mCDC7AB238D4A4211F4A2D21CFD8E4D6AFA4BC380_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6955));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6956));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B3_0 = NULL;
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6957));
		// if ((EyeTrackingProvider?.GazeTarget == gameObject) && (!objIsGrabbed))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6958));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6982));
		RuntimeObject* L_0 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6982));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_0013;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6983));
		NullCheck(G_B2_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6983));
		G_B3_0 = L_2;
	}

IL_0013:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6984));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6984));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6985));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(G_B3_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6985));
		if (!L_4)
		{
			goto IL_002b;
		}
	}
	{
		bool L_5 = __this->get_objIsGrabbed_46();
		G_B6_0 = ((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
		goto IL_002c;
	}

IL_002b:
	{
		G_B6_0 = 0;
	}

IL_002c:
	{
		V_0 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6959));
		bool L_6 = V_0;
		if (!L_6)
		{
			goto IL_0109;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6960));
		// if (AudioFeedbackPlayer.Instance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6961));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6986));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_7 = AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6986));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6987));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_8 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_7, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6987));
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6962));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0056;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6963));
		// AudioFeedbackPlayer.Instance.PlaySound(audio_OnDragStart);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6964));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6988));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_10 = AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6988));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_11 = __this->get_audio_OnDragStart_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6989));
		NullCheck(L_10);
		AudioFeedbackPlayer_PlaySound_m76D1E94B009FB86CF23E9A927B27DBD75EC92F1F(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6989));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6965));
	}

IL_0056:
	{
		// objIsGrabbed = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6966));
		__this->set_objIsGrabbed_46((bool)1);
		// EyeTrackingDemoUtils.GameObject_ChangeTransparency(gameObject, transparency_inTransition, ref originalTransparency);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6967));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6990));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6990));
		float L_13 = __this->get_transparency_inTransition_10();
		float* L_14 = __this->get_address_of_originalTransparency_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6991));
		EyeTrackingDemoUtils_GameObject_ChangeTransparency_m04B66E7501121DEF87160373EDB47FDD662044C5(L_12, L_13, (float*)L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6991));
		// initialHandPos = handPos_absolute;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6968));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = __this->get_handPos_absolute_41();
		__this->set_initialHandPos_43(L_15);
		// initalGazeDir = new Vector3(EyeTrackingProvider.GazeDirection.x, EyeTrackingProvider.GazeDirection.y, EyeTrackingProvider.GazeDirection.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6969));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6992));
		RuntimeObject* L_16 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6992));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6993));
		NullCheck(L_16);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6993));
		float L_18 = L_17.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6994));
		RuntimeObject* L_19 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6994));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6995));
		NullCheck(L_19);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_19);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6995));
		float L_21 = L_20.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6996));
		RuntimeObject* L_22 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6996));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6997));
		NullCheck(L_22);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6997));
		float L_24 = L_23.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6998));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25;
		memset((&L_25), 0, sizeof(L_25));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_25), L_18, L_21, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6998));
		__this->set_initalGazeDir_38(L_25);
		// Rigidbody rbody = GetComponent<Rigidbody>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6970));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6999));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_26 = Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C(__this, /*hidden argument*/Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6999));
		V_1 = L_26;
		// if (rbody != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6971));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_27 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7000));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_28 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_27, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7000));
		V_3 = L_28;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6972));
		bool L_29 = V_3;
		if (!L_29)
		{
			goto IL_00fc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6973));
		// originalUseGravity = rbody.useGravity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6974));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_30 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7001));
		NullCheck(L_30);
		bool L_31 = Rigidbody_get_useGravity_m802E0C0B4F2C2B521D5369EA027325157A53FCAA(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7001));
		__this->set_originalUseGravity_32(L_31);
		// originalDrag = rbody.drag;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6975));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_32 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7002));
		NullCheck(L_32);
		float L_33 = Rigidbody_get_drag_m2B304BB4C4A1A0E349C8B57C9085C0BC66DDE28E(L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7002));
		__this->set_originalDrag_33(L_33);
		// rbody.useGravity = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6976));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_34 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7003));
		NullCheck(L_34);
		Rigidbody_set_useGravity_mB0D957A9D8A9819E18D2E81F465C5C0B60CBC6DA(L_34, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7003));
		// rbody.drag = float.PositiveInfinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6977));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_35 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7004));
		NullCheck(L_35);
		Rigidbody_set_drag_mCE564F278586FB0693B2BBEC4FB72E1F8E1E97EE(L_35, (std::numeric_limits<float>::infinity()), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7004));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6978));
	}

IL_00fc:
	{
		// OnDragStart.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6979));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_36 = __this->get_OnDragStart_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7005));
		NullCheck(L_36);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7005));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6980));
	}

IL_0109:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6981));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::DragAndDrop_Finish()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_DragAndDrop_Finish_m0FD42DDF9966D4E2EBD65222204E4EA196C855DD_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7006));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7007));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7008));
		// if (objIsGrabbed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7009));
		bool L_0 = __this->get_objIsGrabbed_46();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7010));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_00db;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7011));
		// if (AudioFeedbackPlayer.Instance != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7012));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7045));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_2 = AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7045));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7046));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7046));
		V_2 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7013));
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7014));
		// AudioFeedbackPlayer.Instance.PlaySound(audio_OnDragStop);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7015));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7047));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_5 = AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7047));
		AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 * L_6 = __this->get_audio_OnDragStop_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7048));
		NullCheck(L_5);
		AudioFeedbackPlayer_PlaySound_m76D1E94B009FB86CF23E9A927B27DBD75EC92F1F(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7048));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7016));
	}

IL_0031:
	{
		// if (onlyEyeWarpOnRelease)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7017));
		bool L_7 = __this->get_onlyEyeWarpOnRelease_30();
		V_3 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7018));
		bool L_8 = V_3;
		if (!L_8)
		{
			goto IL_0069;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7019));
		// manualTargetManip = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7020));
		__this->set_manualTargetManip_37((bool)1);
		// if (plausibleLocation.HasValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7021));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_9 = __this->get_address_of_plausibleLocation_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7049));
		bool L_10 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_9, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7049));
		V_4 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7022));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0068;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7023));
		// MoveTargetTo(plausibleLocation.Value);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7024));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_12 = __this->get_address_of_plausibleLocation_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7050));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_12, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7050));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7051));
		MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3(__this, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7051));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7025));
	}

IL_0068:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7026));
	}

IL_0069:
	{
		// objIsGrabbed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7027));
		__this->set_objIsGrabbed_46((bool)0);
		// DeactivatePreview();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7028));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7052));
		MoveObjByEyeGaze_DeactivatePreview_m3C424B141E916C8E721D16124C2500AAFE171A19(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7052));
		// EyeTrackingDemoUtils.GameObject_ChangeTransparency(gameObject, originalTransparency);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7053));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7053));
		float L_15 = __this->get_originalTransparency_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7054));
		EyeTrackingDemoUtils_GameObject_ChangeTransparency_m35C8C148704D938EB60BE92306BAE62E01058E49(L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7054));
		// Rigidbody rbody = GetComponent<Rigidbody>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7030));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7055));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_16 = Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C(__this, /*hidden argument*/Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7055));
		V_1 = L_16;
		// if (rbody != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7031));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_17 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7056));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_18 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_17, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7056));
		V_5 = L_18;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7032));
		bool L_19 = V_5;
		if (!L_19)
		{
			goto IL_00b9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7033));
		// rbody.useGravity = originalUseGravity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7034));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_20 = V_1;
		bool L_21 = __this->get_originalUseGravity_32();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7057));
		NullCheck(L_20);
		Rigidbody_set_useGravity_mB0D957A9D8A9819E18D2E81F465C5C0B60CBC6DA(L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7057));
		// rbody.drag = originalDrag;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7035));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_22 = V_1;
		float L_23 = __this->get_originalDrag_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7058));
		NullCheck(L_22);
		Rigidbody_set_drag_mCE564F278586FB0693B2BBEC4FB72E1F8E1E97EE(L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7058));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7036));
	}

IL_00b9:
	{
		// if (useAsSlider)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7037));
		bool L_24 = __this->get_useAsSlider_26();
		V_6 = L_24;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7038));
		bool L_25 = V_6;
		if (!L_25)
		{
			goto IL_00ce;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7039));
		// OnDrop_SnapToClosestDecimal();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7040));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7059));
		MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7059));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7041));
	}

IL_00ce:
	{
		// OnDrop.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7042));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_26 = __this->get_OnDrop_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7060));
		NullCheck(L_26);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7060));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7043));
	}

IL_00db:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7044));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::RelativeMoveUpdate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___relativeMovement0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___relativeMovement0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_RelativeMoveUpdate_mE3DB6D334AB06E78E59FF6C7DE078EB47C835C3F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7061));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7062));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7063));
		// manualTargetManip = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7064));
		__this->set_manualTargetManip_37((bool)0);
		// MoveTargetBy(relativeMovement);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7065));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___relativeMovement0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7067));
		MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7067));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7066));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Angle_InitialGazeToCurrGazeDir()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7068));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7069));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7070));
		// return Vector3.Angle(initalGazeDir, EyeTrackingProvider.GazeDirection);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7071));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_initalGazeDir_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7073));
		RuntimeObject* L_1 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7073));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7074));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7075));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_3 = Vector3_Angle_m8911FFA1DD1C8C46D923B52645B352FA1521CD5F(L_0, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7075));
		V_0 = L_3;
		goto IL_001a;
	}

IL_001a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7072));
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Angle_ToCurrHitTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gobj0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	bool V_2 = false;
	float V_3 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___gobj0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7076));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7077));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B3_0 = NULL;
	RuntimeObject* G_B6_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7078));
		// if (EyeTrackingProvider?.GazeTarget != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7079));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7091));
		RuntimeObject* L_0 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7091));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000e;
		}
	}
	{
		G_B3_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_0013;
	}

IL_000e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7092));
		NullCheck(G_B2_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7092));
		G_B3_0 = L_2;
	}

IL_0013:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7093));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B3_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7093));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7080));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0089;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7081));
		// if (EyeTrackingProvider?.GazeTarget == gobj)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7082));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7094));
		RuntimeObject* L_5 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7094));
		RuntimeObject* L_6 = L_5;
		G_B5_0 = L_6;
		if (L_6)
		{
			G_B6_0 = L_6;
			goto IL_002b;
		}
	}
	{
		G_B7_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
		goto IL_0030;
	}

IL_002b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7095));
		NullCheck(G_B6_0);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(6 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeTarget() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B6_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7095));
		G_B7_0 = L_7;
	}

IL_0030:
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = ___gobj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7096));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_9 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(G_B7_0, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7096));
		V_2 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7083));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_007e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7084));
		// initalGazeDir = new Vector3(EyeTrackingProvider.GazeDirection.x, EyeTrackingProvider.GazeDirection.y, EyeTrackingProvider.GazeDirection.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7085));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7097));
		RuntimeObject* L_11 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7098));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7098));
		float L_13 = L_12.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7099));
		RuntimeObject* L_14 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7100));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7100));
		float L_16 = L_15.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7101));
		RuntimeObject* L_17 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7101));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7102));
		NullCheck(L_17);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7102));
		float L_19 = L_18.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7103));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20;
		memset((&L_20), 0, sizeof(L_20));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_20), L_13, L_16, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7103));
		__this->set_initalGazeDir_38(L_20);
		// return 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7086));
		V_3 = (0.0f);
		goto IL_0091;
	}

IL_007e:
	{
		// float dist = Angle_InitialGazeToCurrGazeDir();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7087));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7104));
		float L_21 = MoveObjByEyeGaze_Angle_InitialGazeToCurrGazeDir_m6E633A9753E7DE8BCA754B1C64A129341B16D6BC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7104));
		V_1 = L_21;
		// return dist;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7088));
		float L_22 = V_1;
		V_3 = L_22;
		goto IL_0091;
	}

IL_0089:
	{
		// return float.MinValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7089));
		V_3 = (-(std::numeric_limits<float>::max)());
		goto IL_0091;
	}

IL_0091:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7090));
		float L_23 = V_3;
		return L_23;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::HeadIsInMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7106));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7107));
		// Vector3 pos = new Vector3(CameraCache.Main.transform.position.x, CameraCache.Main.transform.position.y, CameraCache.Main.transform.position.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7108));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7133));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_0 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7133));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7134));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7134));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7135));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7135));
		float L_3 = L_2.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7136));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_4 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7136));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7137));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7137));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7138));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7138));
		float L_7 = L_6.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7139));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_8 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7139));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7140));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7140));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7141));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7141));
		float L_11 = L_10.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7142));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), L_3, L_7, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7142));
		// Vector3 forw = new Vector3(CameraCache.Main.transform.forward.x, CameraCache.Main.transform.forward.y, CameraCache.Main.transform.forward.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7109));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7143));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_12 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7143));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7144));
		NullCheck(L_12);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7144));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7145));
		NullCheck(L_13);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7145));
		float L_15 = L_14.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7146));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_16 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7147));
		NullCheck(L_16);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_17 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7147));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7148));
		NullCheck(L_17);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7148));
		float L_19 = L_18.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7149));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_20 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7149));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7150));
		NullCheck(L_20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7150));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7151));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7151));
		float L_23 = L_22.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7152));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_1), L_15, L_19, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7152));
		// if (head_prevRay != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7110));
		Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * L_24 = __this->get_address_of_head_prevRay_47();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7153));
		bool L_25 = Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_inline((Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 *)L_24, /*hidden argument*/Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7153));
		V_2 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7111));
		bool L_26 = V_2;
		if (!L_26)
		{
			goto IL_013e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7112));
		// float deltaPos = Vector3.Distance(head_prevRay.Value.origin, pos);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7113));
		Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * L_27 = __this->get_address_of_head_prevRay_47();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7154));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_28 = Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB((Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 *)L_27, /*hidden argument*/Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7154));
		V_5 = L_28;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7155));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7155));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7156));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_31 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_29, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7156));
		V_3 = L_31;
		// float deltaDir = Vector3.Distance(head_prevRay.Value.direction, forw);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7114));
		Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * L_32 = __this->get_address_of_head_prevRay_47();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7157));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_33 = Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB((Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 *)L_32, /*hidden argument*/Nullable_1_get_Value_mC8C36E4AADCE4ABB6084879B229E63A74B1491BB_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7157));
		V_5 = L_33;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7158));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7158));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7159));
		float L_36 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_34, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7159));
		V_4 = L_36;
		// if ((deltaPos != 0) && (deltaDir != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7115));
		float L_37 = V_3;
		if ((((float)L_37) == ((float)(0.0f))))
		{
			goto IL_00e7;
		}
	}
	{
		float L_38 = V_4;
		G_B4_0 = ((((int32_t)((((float)L_38) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_00e8;
	}

IL_00e7:
	{
		G_B4_0 = 0;
	}

IL_00e8:
	{
		V_6 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7116));
		bool L_39 = V_6;
		if (!L_39)
		{
			goto IL_013b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7117));
		// head_deltaDirf = deltaDir * head_smoothf + head_deltaDirf * (1 - head_smoothf);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7118));
		float L_40 = V_4;
		float L_41 = __this->get_head_smoothf_49();
		float L_42 = __this->get_head_deltaDirf_51();
		float L_43 = __this->get_head_smoothf_49();
		__this->set_head_deltaDirf_51(((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)L_40, (float)L_41)), (float)((float)il2cpp_codegen_multiply((float)L_42, (float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_43)))))));
		// if (head_deltaDirf > head_deltaDirThresh)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7119));
		float L_44 = __this->get_head_deltaDirf_51();
		float L_45 = __this->get_head_deltaDirThresh_48();
		V_7 = (bool)((((float)L_44) > ((float)L_45))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7120));
		bool L_46 = V_7;
		if (!L_46)
		{
			goto IL_0131;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7121));
		// head_isInMotion = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7122));
		__this->set_head_isInMotion_50((bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7123));
		goto IL_013a;
	}

IL_0131:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7124));
		// head_isInMotion = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7125));
		__this->set_head_isInMotion_50((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7126));
	}

IL_013a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7127));
	}

IL_013b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7128));
		goto IL_0145;
	}

IL_013e:
	{
		// head_isInMotion = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7129));
		__this->set_head_isInMotion_50((bool)0);
	}

IL_0145:
	{
		// head_prevRay = new Ray(pos, forw);  // Update recent head move
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7130));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7160));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_49;
		memset((&L_49), 0, sizeof(L_49));
		Ray__ctor_m695D219349B8AA4C82F96C55A27D384C07736F6B((&L_49), L_47, L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7160));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7161));
		Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779  L_50;
		memset((&L_50), 0, sizeof(L_50));
		Nullable_1__ctor_m7A569670D8A55E7D133344F8395F551394359C78((&L_50), L_49, /*hidden argument*/Nullable_1__ctor_m7A569670D8A55E7D133344F8395F551394359C78_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7161));
		__this->set_head_prevRay_47(L_50);
		// return head_isInMotion;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7131));
		bool L_51 = __this->get_head_isInMotion_50();
		V_8 = L_51;
		goto IL_0161;
	}

IL_0161:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7132));
		bool L_52 = V_8;
		return L_52;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::MoveTargetBy(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	bool V_4 = false;
	bool V_5 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_9;
	memset((&V_9), 0, sizeof(V_9));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_10;
	memset((&V_10), 0, sizeof(V_10));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___delta0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_6), (&V_7), (&V_9), (&V_10));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_MoveTargetBy_m9675CDB937802D8A9B454F23FCF555DC541B21B4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7162));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7163));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7164));
		// if (objIsGrabbed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7165));
		bool L_0 = __this->get_objIsGrabbed_46();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7166));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_01c4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7167));
		// bool headIsInMotion = HeadIsInMotion();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7199));
		bool L_2 = MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7199));
		V_1 = L_2;
		// if (headIsInMotion)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7169));
		bool L_3 = V_1;
		V_4 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7170));
		bool L_4 = V_4;
		if (!L_4)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7171));
		// initialHandPos = handPos_absolute;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7172));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_handPos_absolute_41();
		__this->set_initialHandPos_43(L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7173));
	}

IL_002b:
	{
		// float deltaHand = Vector3.Distance(initialHandPos, handPos_absolute);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7174));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = __this->get_initialHandPos_43();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = __this->get_handPos_absolute_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7200));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_8 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7200));
		V_2 = L_8;
		// float angle_ToCurrHitTarget = Angle_ToCurrHitTarget(gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7175));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7201));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7201));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7202));
		float L_10 = MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA(__this, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7202));
		V_3 = L_10;
		// if (ShouldObjBeWarped(deltaHand, angle_ToCurrHitTarget, headIsInMotion))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7176));
		float L_11 = V_2;
		float L_12 = V_3;
		bool L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7203));
		bool L_14 = MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7(__this, L_11, L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7203));
		V_5 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7177));
		bool L_15 = V_5;
		if (!L_15)
		{
			goto IL_0148;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7178));
		// Vector3 hitp = EyeTrackingProvider.HitPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7179));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7204));
		RuntimeObject* L_16 = MoveObjByEyeGaze_get_EyeTrackingProvider_m8D0CDBD7565E9780CE6F16926139F872936B0D16(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7204));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7205));
		NullCheck(L_16);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7205));
		V_6 = L_17;
		// if (PlacementSurface == PlacementSurfaces.Horizontal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7180));
		int32_t L_18 = __this->get_PlacementSurface_19();
		V_8 = (bool)((((int32_t)L_18) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7181));
		bool L_19 = V_8;
		if (!L_19)
		{
			goto IL_00a1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7182));
		// hitp.y += gameObject.transform.localScale.y / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7183));
		float* L_20 = (&V_6)->get_address_of_y_3();
		float* L_21 = L_20;
		float L_22 = *((float*)L_21);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7206));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7206));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7207));
		NullCheck(L_23);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7207));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7208));
		NullCheck(L_24);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7208));
		float L_26 = L_25.get_y_3();
		*((float*)L_21) = (float)((float)il2cpp_codegen_add((float)L_22, (float)((float)((float)L_26/(float)(2.0f)))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7184));
	}

IL_00a1:
	{
		// Vector3 objp = gameObject.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7185));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7209));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_27 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7209));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7210));
		NullCheck(L_27);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7210));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7211));
		NullCheck(L_28);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7211));
		V_7 = L_29;
		// gameObject.transform.position = new Vector3(
		//     (((ConstrX + 1) % 2) * objp.x) + (ConstrX * hitp.x),
		//     (((ConstrY + 1) % 2) * objp.y) + (ConstrY * hitp.y),
		//     (((ConstrZ + 1) % 2) * objp.z) + (ConstrZ * hitp.z));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7186));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7212));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_30 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7212));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7213));
		NullCheck(L_30);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7213));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7214));
		int32_t L_32 = MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7214));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = V_7;
		float L_34 = L_33.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7215));
		int32_t L_35 = MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7215));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = V_6;
		float L_37 = L_36.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7216));
		int32_t L_38 = MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7216));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = V_7;
		float L_40 = L_39.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7217));
		int32_t L_41 = MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7217));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = V_6;
		float L_43 = L_42.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7218));
		int32_t L_44 = MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7218));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = V_7;
		float L_46 = L_45.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7219));
		int32_t L_47 = MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7219));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = V_6;
		float L_49 = L_48.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7220));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50;
		memset((&L_50), 0, sizeof(L_50));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_50), ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)(((float)((float)((int32_t)((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_32, (int32_t)1))%(int32_t)2))))), (float)L_34)), (float)((float)il2cpp_codegen_multiply((float)(((float)((float)L_35))), (float)L_37)))), ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)(((float)((float)((int32_t)((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_38, (int32_t)1))%(int32_t)2))))), (float)L_40)), (float)((float)il2cpp_codegen_multiply((float)(((float)((float)L_41))), (float)L_43)))), ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)(((float)((float)((int32_t)((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_44, (int32_t)1))%(int32_t)2))))), (float)L_46)), (float)((float)il2cpp_codegen_multiply((float)(((float)((float)L_47))), (float)L_49)))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7220));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7221));
		NullCheck(L_31);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_31, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7221));
		// ConstrainMovement();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7187));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7222));
		MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7222));
		// initialHandPos = handPos_absolute;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7188));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = __this->get_handPos_absolute_41();
		__this->set_initialHandPos_43(L_51);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7189));
		goto IL_01c3;
	}

IL_0148:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7190));
		// Vector3 oldPos = gameObject.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7191));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7223));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_52 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7223));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7224));
		NullCheck(L_52);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_53 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7224));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7225));
		NullCheck(L_53);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7225));
		V_9 = L_54;
		// Vector3 d = new Vector3(-delta.x * ConstrX, -delta.y * ConstrY, -delta.z * ConstrZ);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7192));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = ___delta0;
		float L_56 = L_55.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7226));
		int32_t L_57 = MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7226));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_58 = ___delta0;
		float L_59 = L_58.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7227));
		int32_t L_60 = MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7227));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = ___delta0;
		float L_62 = L_61.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7228));
		int32_t L_63 = MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7228));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7229));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_10), ((float)il2cpp_codegen_multiply((float)((-L_56)), (float)(((float)((float)L_57))))), ((float)il2cpp_codegen_multiply((float)((-L_59)), (float)(((float)((float)L_60))))), ((float)il2cpp_codegen_multiply((float)((-L_62)), (float)(((float)((float)L_63))))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7229));
		// gameObject.transform.position = oldPos + d * handmapping;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7193));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7230));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_64 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7230));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7231));
		NullCheck(L_64);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_65 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_64, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7231));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = V_9;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_67 = V_10;
		float L_68 = __this->get_handmapping_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7232));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_69 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_67, L_68, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7232));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7233));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_70 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_66, L_69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7233));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7234));
		NullCheck(L_65);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_65, L_70, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7234));
		// ConstrainMovement();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7194));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7235));
		MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7235));
		// UpdateSliderTextOutput();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7195));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7236));
		MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7236));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7196));
	}

IL_01c3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7197));
	}

IL_01c4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7198));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::UpdateSliderTextOutput()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7237));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7238));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7239));
		// if (txtOutput_sliderValue != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7240));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = __this->get_txtOutput_sliderValue_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7246));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7246));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7241));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0067;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7242));
		// txtOutput_sliderValue.text = $"{((gameObject.transform.localPosition.x - LocalMinMax_X.x) / (LocalMinMax_X.y - LocalMinMax_X.x)): 0.00}";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7243));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_3 = __this->get_txtOutput_sliderValue_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7247));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7247));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7248));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7248));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7249));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7249));
		float L_7 = L_6.get_x_2();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_8 = __this->get_address_of_LocalMinMax_X_16();
		float L_9 = L_8->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_10 = __this->get_address_of_LocalMinMax_X_16();
		float L_11 = L_10->get_y_1();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_12 = __this->get_address_of_LocalMinMax_X_16();
		float L_13 = L_12->get_x_0();
		float L_14 = ((float)((float)((float)il2cpp_codegen_subtract((float)L_7, (float)L_9))/(float)((float)il2cpp_codegen_subtract((float)L_11, (float)L_13))));
		RuntimeObject * L_15 = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &L_14);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7250));
		String_t* L_16 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral57A5148BECED418F40EB302C5682E87B7511F839, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7250));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7251));
		NullCheck(L_3);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_3, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7251));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7244));
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7245));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::ConstrainMovement()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_ConstrainMovement_mA1F8CBCE99D70D2FAF718BE4AF95838193D343FB_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7252));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7253));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7254));
		// Vector3 locPos = gameObject.transform.localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7255));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7261));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7261));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7262));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7262));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7263));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7263));
		V_0 = L_2;
		// rx = Mathf.Clamp(locPos.x, LocalMinMax_X.x, LocalMinMax_X.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7256));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		float L_4 = L_3.get_x_2();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_5 = __this->get_address_of_LocalMinMax_X_16();
		float L_6 = L_5->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_7 = __this->get_address_of_LocalMinMax_X_16();
		float L_8 = L_7->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7264));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_9 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_4, L_6, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7264));
		V_1 = L_9;
		// ry = Mathf.Clamp(locPos.y, LocalMinMax_Y.x, LocalMinMax_Y.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7257));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_0;
		float L_11 = L_10.get_y_3();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_12 = __this->get_address_of_LocalMinMax_Y_17();
		float L_13 = L_12->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_14 = __this->get_address_of_LocalMinMax_Y_17();
		float L_15 = L_14->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7265));
		float L_16 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_11, L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7265));
		V_2 = L_16;
		// rz = Mathf.Clamp(locPos.z, LocalMinMax_Z.x, LocalMinMax_Z.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7258));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_0;
		float L_18 = L_17.get_z_4();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_19 = __this->get_address_of_LocalMinMax_Z_18();
		float L_20 = L_19->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_21 = __this->get_address_of_LocalMinMax_Z_18();
		float L_22 = L_21->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7266));
		float L_23 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_18, L_20, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7266));
		V_3 = L_23;
		// gameObject.transform.localPosition = new Vector3(rx, ry, rz);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7259));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7267));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7267));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7268));
		NullCheck(L_24);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7268));
		float L_26 = V_1;
		float L_27 = V_2;
		float L_28 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7269));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29;
		memset((&L_29), 0, sizeof(L_29));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_29), L_26, L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7269));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7270));
		NullCheck(L_25);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_25, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7270));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7260));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::OnDrop_SnapToClosestDecimal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_OnDrop_SnapToClosestDecimal_m1D65560367FABA048E75BB0B5492C5C3EDD795B0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7271));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7272));
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7273));
		// if ((slider_snapToNearestDecimal != 0)
		//     && (!float.IsPositiveInfinity(LocalMinMax_X.x)) && (!float.IsNegativeInfinity(LocalMinMax_X.x))
		//     && (!float.IsPositiveInfinity(LocalMinMax_X.y)) && (!float.IsNegativeInfinity(LocalMinMax_X.y)))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7274));
		float L_0 = __this->get_slider_snapToNearestDecimal_28();
		if ((((float)L_0) == ((float)(0.0f))))
		{
			goto IL_0059;
		}
	}
	{
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_1 = __this->get_address_of_LocalMinMax_X_16();
		float L_2 = L_1->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7284));
		bool L_3 = Single_IsPositiveInfinity_m19DAA74DD1E70DBD36DB699FA26A504D9C650F2C(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7284));
		if (L_3)
		{
			goto IL_0059;
		}
	}
	{
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_4 = __this->get_address_of_LocalMinMax_X_16();
		float L_5 = L_4->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7285));
		bool L_6 = Single_IsNegativeInfinity_m783D0162D4AC571DD716C3BF75EADBF90902100C(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7285));
		if (L_6)
		{
			goto IL_0059;
		}
	}
	{
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_7 = __this->get_address_of_LocalMinMax_X_16();
		float L_8 = L_7->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7286));
		bool L_9 = Single_IsPositiveInfinity_m19DAA74DD1E70DBD36DB699FA26A504D9C650F2C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7286));
		if (L_9)
		{
			goto IL_0059;
		}
	}
	{
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_10 = __this->get_address_of_LocalMinMax_X_16();
		float L_11 = L_10->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7287));
		bool L_12 = Single_IsNegativeInfinity_m783D0162D4AC571DD716C3BF75EADBF90902100C(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7287));
		G_B6_0 = ((((int32_t)L_12) == ((int32_t)0))? 1 : 0);
		goto IL_005a;
	}

IL_0059:
	{
		G_B6_0 = 0;
	}

IL_005a:
	{
		V_0 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7275));
		bool L_13 = V_0;
		if (!L_13)
		{
			goto IL_00f7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7276));
		// Vector3 locPos = gameObject.transform.localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7277));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7288));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7288));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7289));
		NullCheck(L_14);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7289));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7290));
		NullCheck(L_15);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7290));
		V_1 = L_16;
		// float normalizedValue = (locPos.x - LocalMinMax_X.x) / (LocalMinMax_X.y - LocalMinMax_X.x);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7278));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_1;
		float L_18 = L_17.get_x_2();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_19 = __this->get_address_of_LocalMinMax_X_16();
		float L_20 = L_19->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_21 = __this->get_address_of_LocalMinMax_X_16();
		float L_22 = L_21->get_y_1();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_23 = __this->get_address_of_LocalMinMax_X_16();
		float L_24 = L_23->get_x_0();
		V_2 = ((float)((float)((float)il2cpp_codegen_subtract((float)L_18, (float)L_20))/(float)((float)il2cpp_codegen_subtract((float)L_22, (float)L_24))));
		// locPos.x = (Mathf.Round(normalizedValue / slider_snapToNearestDecimal) * slider_snapToNearestDecimal) * (LocalMinMax_X.y - LocalMinMax_X.x) + LocalMinMax_X.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7279));
		float L_25 = V_2;
		float L_26 = __this->get_slider_snapToNearestDecimal_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7291));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_27 = bankers_roundf(((float)((float)L_25/(float)L_26)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7291));
		float L_28 = __this->get_slider_snapToNearestDecimal_28();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_29 = __this->get_address_of_LocalMinMax_X_16();
		float L_30 = L_29->get_y_1();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_31 = __this->get_address_of_LocalMinMax_X_16();
		float L_32 = L_31->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_33 = __this->get_address_of_LocalMinMax_X_16();
		float L_34 = L_33->get_x_0();
		(&V_1)->set_x_2(((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)L_27, (float)L_28)), (float)((float)il2cpp_codegen_subtract((float)L_30, (float)L_32)))), (float)L_34)));
		// gameObject.transform.localPosition = locPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7280));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7292));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_35 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7292));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7293));
		NullCheck(L_35);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7293));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7294));
		NullCheck(L_36);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_36, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7294));
		// UpdateSliderTextOutput();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7281));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7295));
		MoveObjByEyeGaze_UpdateSliderTextOutput_m81BF243ED8B0E5D67507EF5E6713826025129173(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7295));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7282));
	}

IL_00f7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7283));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::MoveTargetTo(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___destination0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	float V_2 = 0.0f;
	bool V_3 = false;
	bool V_4 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___destination0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_MoveTargetTo_m323E6CA1E0FD18108DC2835648421BDD04E44CC3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7296));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7297));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7298));
		// if (objIsGrabbed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7299));
		bool L_0 = __this->get_objIsGrabbed_46();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7300));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_012c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7301));
		// bool headIsInMotion = HeadIsInMotion();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7323));
		bool L_2 = MoveObjByEyeGaze_HeadIsInMotion_mE8D9A98F26C6FFDC04E4448F86E707E317245B14(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7323));
		V_1 = L_2;
		// if (headIsInMotion)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7303));
		bool L_3 = V_1;
		V_3 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7304));
		bool L_4 = V_3;
		if (!L_4)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7305));
		// initialHandPos = handPos_absolute;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7306));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_handPos_absolute_41();
		__this->set_initialHandPos_43(L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7307));
	}

IL_0029:
	{
		// float deltaHand = Vector3.Distance(initialHandPos, handPos_absolute);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7308));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = __this->get_initialHandPos_43();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = __this->get_handPos_absolute_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7324));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_8 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7324));
		V_2 = L_8;
		// if (ShouldObjBeWarped(deltaHand, Angle_ToCurrHitTarget(gameObject), headIsInMotion))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7309));
		float L_9 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7325));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7325));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7326));
		float L_11 = MoveObjByEyeGaze_Angle_ToCurrHitTarget_m0E5DD27E5258B9D8C40ABDD9DA1C74476CC650CA(__this, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7326));
		bool L_12 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7327));
		bool L_13 = MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7(__this, L_9, L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7327));
		V_4 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7310));
		bool L_14 = V_4;
		if (!L_14)
		{
			goto IL_012b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7311));
		// if (PlacementSurface == PlacementSurfaces.Horizontal)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7312));
		int32_t L_15 = __this->get_PlacementSurface_19();
		V_6 = (bool)((((int32_t)L_15) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7313));
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_0090;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7314));
		// destination.y += gameObject.transform.localScale.y / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7315));
		float* L_17 = (&___destination0)->get_address_of_y_3();
		float* L_18 = L_17;
		float L_19 = *((float*)L_18);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7328));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7328));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7329));
		NullCheck(L_20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7329));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7330));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7330));
		float L_23 = L_22.get_y_3();
		*((float*)L_18) = (float)((float)il2cpp_codegen_add((float)L_19, (float)((float)((float)L_23/(float)(2.0f)))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7316));
	}

IL_0090:
	{
		// Vector3 objp = gameObject.transform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7317));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7331));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7332));
		NullCheck(L_24);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7332));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7333));
		NullCheck(L_25);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7333));
		V_5 = L_26;
		// gameObject.transform.position = new Vector3(
		//     (((ConstrX + 1) % 2) * objp.x) + (ConstrX * destination.x),
		//     (((ConstrY + 1) % 2) * objp.y) + (ConstrY * destination.y),
		//     (((ConstrZ + 1) % 2) * objp.z) + (ConstrZ * destination.z));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7318));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7334));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_27 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7334));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7335));
		NullCheck(L_27);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7335));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7336));
		int32_t L_29 = MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7336));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = V_5;
		float L_31 = L_30.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7337));
		int32_t L_32 = MoveObjByEyeGaze_get_ConstrX_mED6FFD2018CBE3CCE72FD41FE763DAC76B686DE0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7337));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = ___destination0;
		float L_34 = L_33.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7338));
		int32_t L_35 = MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7338));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = V_5;
		float L_37 = L_36.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7339));
		int32_t L_38 = MoveObjByEyeGaze_get_ConstrY_m12FFD08ADE22582679ECAB15B02193A04A766069(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7339));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = ___destination0;
		float L_40 = L_39.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7340));
		int32_t L_41 = MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7340));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = V_5;
		float L_43 = L_42.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7341));
		int32_t L_44 = MoveObjByEyeGaze_get_ConstrZ_mBEA2234D7B982656D42F366B9CB9462A00EADA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7341));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = ___destination0;
		float L_46 = L_45.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7342));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47;
		memset((&L_47), 0, sizeof(L_47));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_47), ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)(((float)((float)((int32_t)((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_29, (int32_t)1))%(int32_t)2))))), (float)L_31)), (float)((float)il2cpp_codegen_multiply((float)(((float)((float)L_32))), (float)L_34)))), ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)(((float)((float)((int32_t)((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_35, (int32_t)1))%(int32_t)2))))), (float)L_37)), (float)((float)il2cpp_codegen_multiply((float)(((float)((float)L_38))), (float)L_40)))), ((float)il2cpp_codegen_add((float)((float)il2cpp_codegen_multiply((float)(((float)((float)((int32_t)((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_41, (int32_t)1))%(int32_t)2))))), (float)L_43)), (float)((float)il2cpp_codegen_multiply((float)(((float)((float)L_44))), (float)L_46)))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7342));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7343));
		NullCheck(L_28);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_28, L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7343));
		// initialHandPos = handPos_absolute;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7319));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = __this->get_handPos_absolute_41();
		__this->set_initialHandPos_43(L_48);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7320));
	}

IL_012b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7321));
	}

IL_012c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7322));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::ShouldObjBeWarped(System.Single,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, float ___deltaHand0, float ___distTargetAndHitPos1, bool ___headIsInMotion2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___deltaHand0), (&___distTargetAndHitPos1), (&___headIsInMotion2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_ShouldObjBeWarped_m12BEC489EEA06E60FEDFD70E787FE2886C4365D7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7344));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7345));
	int32_t G_B8_0 = 0;
	int32_t G_B10_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7346));
		// if ((manualTargetManip && (previewGameObject != null) && (previewGameObject.activeSelf)) ||
		//     ((!onlyEyeWarpOnRelease) &&
		//   // If manipulated via hands, head and eyes:
		//   (deltaHand > deltaHandMovemThresh) &&                // 1. Check that *hand* moved sufficiently to indicate the user's intent to move the target
		//   (distTargetAndHitPos > minLookAwayDistToEnableEyeWarp) &&       // 2. Check that *eye gaze* is sufficiently far away from the selected target
		//   !headIsInMotion))                               // 3. Check that *head* is not currently moving as this would otherwise cause the target to be moved automatically
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7347));
		bool L_0 = __this->get_manualTargetManip_37();
		if (!L_0)
		{
			goto IL_0024;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7354));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7354));
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_previewGameObject_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7355));
		NullCheck(L_3);
		bool L_4 = GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7355));
		if (L_4)
		{
			goto IL_0047;
		}
	}

IL_0024:
	{
		bool L_5 = __this->get_onlyEyeWarpOnRelease_30();
		if (L_5)
		{
			goto IL_0044;
		}
	}
	{
		float L_6 = ___deltaHand0;
		float L_7 = __this->get_deltaHandMovemThresh_9();
		if ((!(((float)L_6) > ((float)L_7))))
		{
			goto IL_0044;
		}
	}
	{
		float L_8 = ___distTargetAndHitPos1;
		float L_9 = __this->get_minLookAwayDistToEnableEyeWarp_6();
		if ((!(((float)L_8) > ((float)L_9))))
		{
			goto IL_0044;
		}
	}
	{
		bool L_10 = ___headIsInMotion2;
		G_B8_0 = ((((int32_t)L_10) == ((int32_t)0))? 1 : 0);
		goto IL_0045;
	}

IL_0044:
	{
		G_B8_0 = 0;
	}

IL_0045:
	{
		G_B10_0 = G_B8_0;
		goto IL_0048;
	}

IL_0047:
	{
		G_B10_0 = 1;
	}

IL_0048:
	{
		V_0 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7348));
		bool L_11 = V_0;
		if (!L_11)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7349));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7350));
		V_1 = (bool)1;
		goto IL_0056;
	}

IL_0051:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7351));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7352));
		V_1 = (bool)0;
		goto IL_0056;
	}

IL_0056:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7353));
		bool L_12 = V_1;
		return L_12;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m7C9BCFDA67C9DDAC4368F9211B03087D38540C22 (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m7C9BCFDA67C9DDAC4368F9211B03087D38540C22_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_m7C9BCFDA67C9DDAC4368F9211B03087D38540C22_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7356));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7357));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7358));
		// void IMixedRealityPointerHandler.OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7359));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze__ctor_mAE2AB58A689E21312FC47C6CE796D517A7C3F74F (MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze__ctor_mAE2AB58A689E21312FC47C6CE796D517A7C3F74F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze__ctor_mAE2AB58A689E21312FC47C6CE796D517A7C3F74F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7360));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7361));
	{
		// private IMixedRealityEyeGazeProvider eyeTrackingProvider = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7362));
		__this->set_eyeTrackingProvider_4((RuntimeObject*)NULL);
		// private bool useEyeSupportedTargetPlacement = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7363));
		__this->set_useEyeSupportedTargetPlacement_5((bool)0);
		// private float minLookAwayDistToEnableEyeWarp = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7364));
		__this->set_minLookAwayDistToEnableEyeWarp_6((5.0f));
		// private bool handInputEnabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7365));
		__this->set_handInputEnabled_7((bool)1);
		// private float handmapping = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7366));
		__this->set_handmapping_8((1.0f));
		// private float deltaHandMovemThresh = 0.05f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7367));
		__this->set_deltaHandMovemThresh_9((0.05f));
		// private float transparency_inTransition = 130 / 255f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7368));
		__this->set_transparency_inTransition_10((0.509803951f));
		// private float transparency_preview = 50 / 255f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7369));
		__this->set_transparency_preview_11((0.196078435f));
		// private float previewPlacemDistThresh = 0.05f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7370));
		__this->set_previewPlacemDistThresh_12((0.05f));
		// private bool freezeX = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7371));
		__this->set_freezeX_13((bool)0);
		// private bool freezeY = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7372));
		__this->set_freezeY_14((bool)0);
		// private bool freezeZ = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7373));
		__this->set_freezeZ_15((bool)0);
		// public Vector2 LocalMinMax_X = new Vector2(float.NegativeInfinity, float.PositiveInfinity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7374));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7401));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_0), (-std::numeric_limits<float>::infinity()), (std::numeric_limits<float>::infinity()), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7401));
		__this->set_LocalMinMax_X_16(L_0);
		// public Vector2 LocalMinMax_Y = new Vector2(float.NegativeInfinity, float.PositiveInfinity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7375));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7402));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_1), (-std::numeric_limits<float>::infinity()), (std::numeric_limits<float>::infinity()), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7402));
		__this->set_LocalMinMax_Y_17(L_1);
		// public Vector2 LocalMinMax_Z = new Vector2(float.NegativeInfinity, float.PositiveInfinity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7376));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7403));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2;
		memset((&L_2), 0, sizeof(L_2));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_2), (-std::numeric_limits<float>::infinity()), (std::numeric_limits<float>::infinity()), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7403));
		__this->set_LocalMinMax_Z_18(L_2);
		// public PlacementSurfaces PlacementSurface = PlacementSurfaces.Horizontal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7377));
		__this->set_PlacementSurface_19(0);
		// private AudioClip audio_OnDragStart = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7378));
		__this->set_audio_OnDragStart_20((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// private AudioClip audio_OnDragStop = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7379));
		__this->set_audio_OnDragStop_21((AudioClip_tCC3C35F579203CE2601243585AB3D6953C3BA051 *)NULL);
		// private MixedRealityInputAction voiceAction_PutThis = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7380));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7404));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_3 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7404));
		__this->set_voiceAction_PutThis_22(L_3);
		// private MixedRealityInputAction voiceAction_OverHere = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7381));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7405));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7405));
		__this->set_voiceAction_OverHere_23(L_4);
		// private UnityEvent OnDragStart = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7382));
		__this->set_OnDragStart_24((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private UnityEvent OnDrop = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7383));
		__this->set_OnDrop_25((UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)NULL);
		// private bool useAsSlider = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7384));
		__this->set_useAsSlider_26((bool)0);
		// private TextMesh txtOutput_sliderValue = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7385));
		__this->set_txtOutput_sliderValue_27((TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A *)NULL);
		// private float slider_snapToNearestDecimal = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7386));
		__this->set_slider_snapToNearestDecimal_28((0.1f));
		// private bool onlyEyeWarpOnRelease = true; // Only warp the currently grabbed target to the current look at location once the user releases the pinch gesture.
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7387));
		__this->set_onlyEyeWarpOnRelease_30((bool)1);
		// private float originalTransparency = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7388));
		__this->set_originalTransparency_31((-1.0f));
		// private bool originalUseGravity = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7389));
		__this->set_originalUseGravity_32((bool)0);
		// private float originalDrag = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7390));
		__this->set_originalDrag_33((1.0f));
		// private bool onlyTransitionToPlausibleDestinations = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7391));
		__this->set_onlyTransitionToPlausibleDestinations_34((bool)1);
		// private bool placePreviewAtHitPoint = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7392));
		__this->set_placePreviewAtHitPoint_36((bool)1);
		// private bool manualTargetManip = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7393));
		__this->set_manualTargetManip_37((bool)0);
		// private Handedness currEngagedHand = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7394));
		__this->set_currEngagedHand_45(0);
		// private bool objIsGrabbed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7395));
		__this->set_objIsGrabbed_46((bool)0);
		// private float head_deltaDirThresh = 0.05f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7396));
		__this->set_head_deltaDirThresh_48((0.05f));
		// private float head_smoothf = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7397));
		__this->set_head_smoothf_49((0.1f));
		// private float head_deltaDirf = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7398));
		__this->set_head_deltaDirf_51((0.0f));
		// private float maxDiffAngleForHorizontalPlacem = 20;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7399));
		__this->set_maxDiffAngleForHorizontalPlacem_53((20.0f));
		// private float minDiffAngleForVerticalPlacem = 50;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7400));
		__this->set_minDiffAngleForVerticalPlacem_54((50.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7406));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7406));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveObjByEyeGaze::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveObjByEyeGaze__cctor_m50B9FBB26366B7B328A5409E6A0151DC54153F3B (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveObjByEyeGaze__cctor_m50B9FBB26366B7B328A5409E6A0151DC54153F3B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveObjByEyeGaze__cctor_m50B9FBB26366B7B328A5409E6A0151DC54153F3B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7407));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7408));
	{
		// private static bool isManipulatingUsing_Hands = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7409));
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_isManipulatingUsing_Hands_39((bool)0);
		// private static bool isManipulatingUsing_Voice = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7410));
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_isManipulatingUsing_Voice_40((bool)0);
		// private static bool handIsPinching = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7411));
		((MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_StaticFields*)il2cpp_codegen_static_fields_for(MoveObjByEyeGaze_tD9D99B99D64AB51516AA8CAE7C3B91D563024F42_il2cpp_TypeInfo_var))->set_handIsPinching_44((bool)0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveWithCamera_Update_m84453B97F8DCA494F4F8768B5FBB6C91F80DACCD (MoveWithCamera_t4BD7E330C0418C95D3D36F7BC3A9751995ABFD66 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveWithCamera_Update_m84453B97F8DCA494F4F8768B5FBB6C91F80DACCD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveWithCamera_Update_m84453B97F8DCA494F4F8768B5FBB6C91F80DACCD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9737));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9738));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9739));
		// gameObject.transform.position = CameraCache.Main.transform.position + offsetToCamera;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9740));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9743));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9743));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9744));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9744));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9745));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_2 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9745));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9746));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9746));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9747));
		NullCheck(L_3);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9747));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_offsetToCamera_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9748));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9748));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9749));
		NullCheck(L_1);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_1, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9749));
		// gameObject.transform.rotation = CameraCache.Main.transform.rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9741));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9750));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9750));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9751));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9751));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9752));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_9 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9752));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9753));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9753));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9754));
		NullCheck(L_10);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9754));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9755));
		NullCheck(L_8);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_8, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9755));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9742));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.MoveWithCamera::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveWithCamera__ctor_mCB935D4A4CE2F487EE23F369008629B67C715008 (MoveWithCamera_t4BD7E330C0418C95D3D36F7BC3A9751995ABFD66 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveWithCamera__ctor_mCB935D4A4CE2F487EE23F369008629B67C715008_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveWithCamera__ctor_mCB935D4A4CE2F487EE23F369008629B67C715008_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9756));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9757));
	{
		// private Vector3 offsetToCamera = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9758));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9759));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9759));
		__this->set_offsetToCamera_4(L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9760));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9760));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLoadStartScene_Start_mA7DDB3EB1FCFCF2B8146E5F1604A941CDAD5B9EE (OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLoadStartScene_Start_mA7DDB3EB1FCFCF2B8146E5F1604A941CDAD5B9EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLoadStartScene_Start_mA7DDB3EB1FCFCF2B8146E5F1604A941CDAD5B9EE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9761));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9762));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9763));
		// if (LoadOption == LoadOptions.LoadOnlyOnDevice)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9764));
		int32_t L_0 = __this->get_LoadOption_5();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9765));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9766));
		// LoadOnDevice();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9767));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9773));
		OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9773));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9768));
		goto IL_0022;
	}

IL_0019:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9769));
		// LoadNewScene();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9770));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9774));
		OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9774));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9771));
	}

IL_0022:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9772));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::LoadOnDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0 (OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLoadStartScene_LoadOnDevice_m0AAF283867056FCE90624B711054F9AE7FB795F0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9775));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9776));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9777));
		// if (!Application.isEditor)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9778));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9784));
		bool L_0 = Application_get_isEditor_m347E6EE16E5109EF613C83ED98DB1EC6E3EF5E26(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9784));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9779));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9780));
		// LoadNewScene();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9785));
		OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9785));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9782));
	}

IL_0016:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9783));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::LoadNewScene()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5 (OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLoadStartScene_LoadNewScene_m596FDDBD51FF4924FE173CF23A3F88A8FA1E91F5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9786));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9787));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9788));
		// if (SceneToBeLoaded != "")
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9789));
		String_t* L_0 = __this->get_SceneToBeLoaded_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9795));
		bool L_1 = String_op_Inequality_m0BD184A74F453A72376E81CC6CAEE2556B80493E(L_0, _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9795));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9790));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9791));
		// SceneManager.LoadSceneAsync(SceneToBeLoaded, LoadSceneMode.Additive);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9792));
		String_t* L_3 = __this->get_SceneToBeLoaded_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9796));
		IL2CPP_RUNTIME_CLASS_INIT(SceneManager_t68A7070D2AD3860C3EE327C94F38270E49AFB489_il2cpp_TypeInfo_var);
		SceneManager_LoadSceneAsync_mBB8889B3326DF7DD64983AE44FF5D140670C29B9(L_3, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9796));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9793));
	}

IL_0024:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9794));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLoadStartScene::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLoadStartScene__ctor_mC10A9B104F20EA281B4DEC6B5060C3E5BD8FD9B1 (OnLoadStartScene_t07E010917DDE21EBE3BF724FEE6D415EE35DC8A8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLoadStartScene__ctor_mC10A9B104F20EA281B4DEC6B5060C3E5BD8FD9B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLoadStartScene__ctor_mC10A9B104F20EA281B4DEC6B5060C3E5BD8FD9B1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9798));
	{
		// private string SceneToBeLoaded = "";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9799));
		__this->set_SceneToBeLoaded_4(_stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709);
		// private LoadOptions LoadOption = LoadOptions.LoadOnlyOnDevice;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9800));
		__this->set_LoadOption_5(1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9801));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9801));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::OnEyeFocusStay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLookAtRotateByEyeGaze_OnEyeFocusStay_mDD4E5E47CAA30CF116EF57B8D1D70EF1DC067A8C (OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLookAtRotateByEyeGaze_OnEyeFocusStay_mDD4E5E47CAA30CF116EF57B8D1D70EF1DC067A8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLookAtRotateByEyeGaze_OnEyeFocusStay_mDD4E5E47CAA30CF116EF57B8D1D70EF1DC067A8C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9802));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9803));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9804));
		// RotateHitTarget();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9805));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9807));
		OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9807));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9806));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::RotateHitTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258 (OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	float V_5 = 0.0f;
	float V_6 = 0.0f;
	float V_7 = 0.0f;
	float V_8 = 0.0f;
	float V_9 = 0.0f;
	float V_10 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	float V_15 = 0.0f;
	bool V_16 = false;
	float V_17 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6), (&V_7), (&V_8), (&V_9), (&V_10), (&V_15), (&V_17));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLookAtRotateByEyeGaze_RotateHitTarget_mE0E03031C429983DC7E170790412D9A831FA6258_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9808));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9809));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	float G_B13_0 = 0.0f;
	float G_B12_0 = 0.0f;
	int32_t G_B14_0 = 0;
	float G_B14_1 = 0.0f;
	float G_B18_0 = 0.0f;
	float G_B17_0 = 0.0f;
	int32_t G_B19_0 = 0;
	float G_B19_1 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9810));
		// Vector3 TargetToHit = (this.gameObject.transform.position - CoreServices.InputSystem.EyeGazeProvider.HitPosition).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9811));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9846));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9846));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9847));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9847));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9848));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9848));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9849));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9849));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9850));
		NullCheck(L_3);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9850));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9851));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9851));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9852));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_2, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9852));
		V_11 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9853));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9853));
		V_0 = L_7;
		// Vector3 TargetToCam = (this.gameObject.transform.position - CameraCache.Main.transform.position).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9812));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9854));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9854));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9855));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9855));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9856));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9856));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9857));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_11 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9857));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9858));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9858));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9859));
		NullCheck(L_12);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9859));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9860));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_10, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9860));
		V_11 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9861));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9861));
		V_1 = L_15;
		// angle1x = Mathf.Atan2(TargetToHit.y, TargetToHit.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9813));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = V_0;
		float L_17 = L_16.get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = V_0;
		float L_19 = L_18.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9862));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_20 = atan2f(L_17, L_19);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9862));
		V_2 = L_20;
		// angle1y = Mathf.Atan2(TargetToHit.x * Mathf.Cos(angle1x), TargetToHit.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9814));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_0;
		float L_22 = L_21.get_x_2();
		float L_23 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9863));
		float L_24 = cosf(L_23);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9863));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = V_0;
		float L_26 = L_25.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9864));
		float L_27 = atan2f(((float)il2cpp_codegen_multiply((float)L_22, (float)L_24)), L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9864));
		V_3 = L_27;
		// angle1z = Mathf.Atan2(Mathf.Cos(angle1x), Mathf.Sin(angle1x) * Mathf.Sin(angle1y));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9815));
		float L_28 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9865));
		float L_29 = cosf(L_28);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9865));
		float L_30 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9866));
		float L_31 = sinf(L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9866));
		float L_32 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9867));
		float L_33 = sinf(L_32);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9867));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9868));
		float L_34 = atan2f(L_29, ((float)il2cpp_codegen_multiply((float)L_31, (float)L_33)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9868));
		V_4 = L_34;
		// angle2x = Mathf.Atan2(TargetToCam.y, TargetToCam.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9816));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = V_1;
		float L_36 = L_35.get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = V_1;
		float L_38 = L_37.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9869));
		float L_39 = atan2f(L_36, L_38);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9869));
		V_5 = L_39;
		// angle2y = Mathf.Atan2(TargetToCam.x * Mathf.Cos(angle2x), TargetToCam.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9817));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_1;
		float L_41 = L_40.get_x_2();
		float L_42 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9870));
		float L_43 = cosf(L_42);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9870));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_44 = V_1;
		float L_45 = L_44.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9871));
		float L_46 = atan2f(((float)il2cpp_codegen_multiply((float)L_41, (float)L_43)), L_45);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9871));
		V_6 = L_46;
		// if ((angle1y > 0) && (angle1z < 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9818));
		float L_47 = V_3;
		if ((!(((float)L_47) > ((float)(0.0f)))))
		{
			goto IL_00e3;
		}
	}
	{
		float L_48 = V_4;
		G_B3_0 = ((((float)L_48) < ((float)(0.0f)))? 1 : 0);
		goto IL_00e4;
	}

IL_00e3:
	{
		G_B3_0 = 0;
	}

IL_00e4:
	{
		V_12 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9819));
		bool L_49 = V_12;
		if (!L_49)
		{
			goto IL_00f6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9820));
		// angle1y -= Mathf.PI;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9821));
		float L_50 = V_3;
		V_3 = ((float)il2cpp_codegen_subtract((float)L_50, (float)(3.14159274f)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9822));
		goto IL_011a;
	}

IL_00f6:
	{
		// else if ((angle1y < 0) && (angle1z < 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9823));
		float L_51 = V_3;
		if ((!(((float)L_51) < ((float)(0.0f)))))
		{
			goto IL_0109;
		}
	}
	{
		float L_52 = V_4;
		G_B8_0 = ((((float)L_52) < ((float)(0.0f)))? 1 : 0);
		goto IL_010a;
	}

IL_0109:
	{
		G_B8_0 = 0;
	}

IL_010a:
	{
		V_13 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9824));
		bool L_53 = V_13;
		if (!L_53)
		{
			goto IL_011a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9825));
		// angle1y += Mathf.PI;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9826));
		float L_54 = V_3;
		V_3 = ((float)il2cpp_codegen_add((float)L_54, (float)(3.14159274f)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9827));
	}

IL_011a:
	{
		// rotx = angle1x - angle2x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9828));
		float L_55 = V_2;
		float L_56 = V_5;
		V_7 = ((float)il2cpp_codegen_subtract((float)L_55, (float)L_56));
		// roty = angle1y - angle2y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9829));
		float L_57 = V_3;
		float L_58 = V_6;
		V_8 = ((float)il2cpp_codegen_subtract((float)L_57, (float)L_58));
		// float newRotX = transform.eulerAngles.x, newRotY = transform.eulerAngles.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9830));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9872));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_59 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9872));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9873));
		NullCheck(L_59);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA(L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9873));
		float L_61 = L_60.get_x_2();
		V_9 = L_61;
		// float newRotX = transform.eulerAngles.x, newRotY = transform.eulerAngles.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9831));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9874));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_62 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9874));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9875));
		NullCheck(L_62);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA(L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9875));
		float L_64 = L_63.get_y_3();
		V_10 = L_64;
		// if (Mathf.Abs(rotx) > (Mathf.Deg2Rad * rotationThreshInDegrees))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9832));
		float L_65 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9876));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_66 = fabsf(L_65);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9876));
		float L_67 = __this->get_rotationThreshInDegrees_14();
		V_14 = (bool)((((float)L_66) > ((float)((float)il2cpp_codegen_multiply((float)(0.0174532924f), (float)L_67))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9833));
		bool L_68 = V_14;
		if (!L_68)
		{
			goto IL_01a7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9834));
		// float stepx = speedX * ((inverseX) ? -1 : 1) * rotx;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9835));
		float L_69 = __this->get_speedX_10();
		bool L_70 = __this->get_inverseX_12();
		G_B12_0 = L_69;
		if (L_70)
		{
			G_B13_0 = L_69;
			goto IL_0177;
		}
	}
	{
		G_B14_0 = 1;
		G_B14_1 = G_B12_0;
		goto IL_0178;
	}

IL_0177:
	{
		G_B14_0 = (-1);
		G_B14_1 = G_B13_0;
	}

IL_0178:
	{
		float L_71 = V_7;
		V_15 = ((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)G_B14_1, (float)(((float)((float)G_B14_0))))), (float)L_71));
		// newRotX = ClampAngleInDegree(transform.eulerAngles.x + stepx, minRotX, maxRotX);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9836));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9877));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_72 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9877));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9878));
		NullCheck(L_72);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_73 = Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA(L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9878));
		float L_74 = L_73.get_x_2();
		float L_75 = V_15;
		float L_76 = __this->get_minRotX_15();
		float L_77 = __this->get_maxRotX_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9879));
		float L_78 = OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE(__this, ((float)il2cpp_codegen_add((float)L_74, (float)L_75)), L_76, L_77, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9879));
		V_9 = L_78;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9837));
	}

IL_01a7:
	{
		// if (Mathf.Abs(roty) > (Mathf.Deg2Rad * rotationThreshInDegrees))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9838));
		float L_79 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9880));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_80 = fabsf(L_79);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9880));
		float L_81 = __this->get_rotationThreshInDegrees_14();
		V_16 = (bool)((((float)L_80) > ((float)((float)il2cpp_codegen_multiply((float)(0.0174532924f), (float)L_81))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9839));
		bool L_82 = V_16;
		if (!L_82)
		{
			goto IL_0204;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9840));
		// float stepy = speedY * ((inverseY) ? -1 : 1) * roty;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9841));
		float L_83 = __this->get_speedY_11();
		bool L_84 = __this->get_inverseY_13();
		G_B17_0 = L_83;
		if (L_84)
		{
			G_B18_0 = L_83;
			goto IL_01d4;
		}
	}
	{
		G_B19_0 = 1;
		G_B19_1 = G_B17_0;
		goto IL_01d5;
	}

IL_01d4:
	{
		G_B19_0 = (-1);
		G_B19_1 = G_B18_0;
	}

IL_01d5:
	{
		float L_85 = V_8;
		V_17 = ((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)G_B19_1, (float)(((float)((float)G_B19_0))))), (float)L_85));
		// newRotY = ClampAngleInDegree(transform.eulerAngles.y + stepy, minRotY, maxRotY);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9842));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9881));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_86 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9881));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9882));
		NullCheck(L_86);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_87 = Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA(L_86, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9882));
		float L_88 = L_87.get_y_3();
		float L_89 = V_17;
		float L_90 = __this->get_minRotY_17();
		float L_91 = __this->get_maxRotY_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9883));
		float L_92 = OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE(__this, ((float)il2cpp_codegen_add((float)L_88, (float)L_89)), L_90, L_91, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9883));
		V_10 = L_92;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9843));
	}

IL_0204:
	{
		// transform.eulerAngles = new Vector3(newRotX, newRotY, transform.eulerAngles.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9844));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9884));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_93 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9884));
		float L_94 = V_9;
		float L_95 = V_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9885));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_96 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9885));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9886));
		NullCheck(L_96);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_97 = Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA(L_96, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9886));
		float L_98 = L_97.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9887));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_99;
		memset((&L_99), 0, sizeof(L_99));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_99), L_94, L_95, L_98, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9887));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9888));
		NullCheck(L_93);
		Transform_set_eulerAngles_m4B2B374C0B089A7ED0B522A3A4C56FA868992685(L_93, L_99, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9888));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9845));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::ClampAngleInDegree(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE (OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0 * __this, float ___angleInDegree0, float ___minAngleInDegree1, float ___maxAngleInDegree2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___angleInDegree0), (&___minAngleInDegree1), (&___maxAngleInDegree2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLookAtRotateByEyeGaze_ClampAngleInDegree_mD7106883E5ACA81B340A7D64D76C42A0956F2BCE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9889));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9890));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9891));
		// if ((minAngleInDegree == -180f) && (maxAngleInDegree == 180f))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9892));
		float L_0 = ___minAngleInDegree1;
		if ((!(((float)L_0) == ((float)(-180.0f)))))
		{
			goto IL_0013;
		}
	}
	{
		float L_1 = ___maxAngleInDegree2;
		G_B3_0 = ((((float)L_1) == ((float)(180.0f)))? 1 : 0);
		goto IL_0014;
	}

IL_0013:
	{
		G_B3_0 = 0;
	}

IL_0014:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9893));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9894));
		// return angleInDegree;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9895));
		float L_3 = ___angleInDegree0;
		V_1 = L_3;
		goto IL_006d;
	}

IL_001d:
	{
		// if (angleInDegree > 180)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9896));
		float L_4 = ___angleInDegree0;
		V_2 = (bool)((((float)L_4) > ((float)(180.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9897));
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9898));
		// angleInDegree -= 360;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9899));
		float L_6 = ___angleInDegree0;
		___angleInDegree0 = ((float)il2cpp_codegen_subtract((float)L_6, (float)(360.0f)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9900));
	}

IL_0034:
	{
		// if (angleInDegree < -180)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9901));
		float L_7 = ___angleInDegree0;
		V_3 = (bool)((((float)L_7) < ((float)(-180.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9902));
		bool L_8 = V_3;
		if (!L_8)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9903));
		// angleInDegree += 360;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9904));
		float L_9 = ___angleInDegree0;
		___angleInDegree0 = ((float)il2cpp_codegen_add((float)L_9, (float)(360.0f)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9905));
	}

IL_004b:
	{
		// if (angleInDegree > maxAngleInDegree)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9906));
		float L_10 = ___angleInDegree0;
		float L_11 = ___maxAngleInDegree2;
		V_4 = (bool)((((float)L_10) > ((float)L_11))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9907));
		bool L_12 = V_4;
		if (!L_12)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9908));
		// return maxAngleInDegree;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9909));
		float L_13 = ___maxAngleInDegree2;
		V_1 = L_13;
		goto IL_006d;
	}

IL_005a:
	{
		// if (angleInDegree < minAngleInDegree)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9910));
		float L_14 = ___angleInDegree0;
		float L_15 = ___minAngleInDegree1;
		V_5 = (bool)((((float)L_14) < ((float)L_15))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9911));
		bool L_16 = V_5;
		if (!L_16)
		{
			goto IL_0069;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9912));
		// return minAngleInDegree;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9913));
		float L_17 = ___minAngleInDegree1;
		V_1 = L_17;
		goto IL_006d;
	}

IL_0069:
	{
		// return angleInDegree;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9914));
		float L_18 = ___angleInDegree0;
		V_1 = L_18;
		goto IL_006d;
	}

IL_006d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9915));
		float L_19 = V_1;
		return L_19;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnLookAtRotateByEyeGaze::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnLookAtRotateByEyeGaze__ctor_m514112D022BF34DBC48EADE08F36ED469981C8DA (OnLookAtRotateByEyeGaze_tB8B48511BFB65C86BBD1EE31424665BD92EA18B0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnLookAtRotateByEyeGaze__ctor_m514112D022BF34DBC48EADE08F36ED469981C8DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnLookAtRotateByEyeGaze__ctor_m514112D022BF34DBC48EADE08F36ED469981C8DA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9917));
	{
		// private float speedX = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9918));
		__this->set_speedX_10((0.0f));
		// private float speedY = 4.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9919));
		__this->set_speedY_11((4.0f));
		// private bool inverseX = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9920));
		__this->set_inverseX_12((bool)0);
		// private bool inverseY = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9921));
		__this->set_inverseY_13((bool)0);
		// private float rotationThreshInDegrees = 5.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9922));
		__this->set_rotationThreshInDegrees_14((5.0f));
		// private float minRotX = -10.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9923));
		__this->set_minRotX_15((-10.0f));
		// private float maxRotX = 10.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9924));
		__this->set_maxRotX_16((10.0f));
		// private float minRotY = -180.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9925));
		__this->set_minRotY_17((-180.0f));
		// private float maxRotY = 180.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9926));
		__this->set_maxRotY_18((180.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9927));
		BaseEyeFocusHandler__ctor_m6B327ADA0D6A8B05A86D7C169A9F231247B0FAB1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9927));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_Awake_m7EFBA9C22E6CF24833638E5F2B8697973243A65E (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController_Awake_m7EFBA9C22E6CF24833638E5F2B8697973243A65E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController_Awake_m7EFBA9C22E6CF24833638E5F2B8697973243A65E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8726));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8727));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8728));
		// Debug.LogError(this.GetType().Name + " is deprecated");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8731));
		Type_t * L_0 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8731));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8732));
		NullCheck(L_0);
		String_t* L_1 = VirtFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8732));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8733));
		String_t* L_2 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_1, _stringLiteral314CD1C72B3CA3AD0B1C14114D2D635596FAAA4F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8733));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8734));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8734));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8730));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::OnTargetSelected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100 (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8735));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8736));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8737));
		// Debug.LogFormat(">> [{0}] Selected! -- {1} -- {2}", name, ToString(), name);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8738));
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_0 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)SZArrayNew(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A_il2cpp_TypeInfo_var, (uint32_t)3);
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8740));
		String_t* L_2 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8740));
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, L_2);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject *)L_2);
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_3 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8741));
		String_t* L_4 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8741));
		NullCheck(L_3);
		ArrayElementTypeCheck (L_3, L_4);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (RuntimeObject *)L_4);
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_5 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8742));
		String_t* L_6 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8742));
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (RuntimeObject *)L_6);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8743));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogFormat_mB23DDD2CD05B2E66F9CF8CA72ECA66C02DCC209E(_stringLiteral47C92F6481F3E59085C6288135ABB79FF1D65F6D, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8743));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8739));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m2A80E3637806B75EC4AF32BAF49B5F6C99D7C831 (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m2A80E3637806B75EC4AF32BAF49B5F6C99D7C831_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_m2A80E3637806B75EC4AF32BAF49B5F6C99D7C831_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8744));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8745));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8746));
		// if (HasFocus)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8753));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::get_HasFocus() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8753));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8748));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8749));
		// OnTargetSelected();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8750));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8754));
		OnSelectVisualizerInputController_OnTargetSelected_m2257CDFE8C2F768C0754689729943F650956F100(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8754));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8751));
	}

IL_0014:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8752));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mD2271168A5EB6BB881F34599B6238BE9B5F03F2F (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mD2271168A5EB6BB881F34599B6238BE9B5F03F2F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mD2271168A5EB6BB881F34599B6238BE9B5F03F2F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8755));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8756));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8757));
		// void IMixedRealityPointerHandler.OnPointerDown(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8758));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m7F2C9E92174CFE8D0091FAD8D1FA3CC92CFACFAC (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m7F2C9E92174CFE8D0091FAD8D1FA3CC92CFACFAC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m7F2C9E92174CFE8D0091FAD8D1FA3CC92CFACFAC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8759));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8760));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8761));
		// void IMixedRealityPointerHandler.OnPointerUp(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8762));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mCFFC85EC5CC9C2564E0C2C67A074EAAEF87D3055 (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mCFFC85EC5CC9C2564E0C2C67A074EAAEF87D3055_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mCFFC85EC5CC9C2564E0C2C67A074EAAEF87D3055_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8763));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8764));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8765));
		// void IMixedRealityPointerHandler.OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8766));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.OnSelectVisualizerInputController::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OnSelectVisualizerInputController__ctor_m05A49D7083F5D19F8D091438F5240870DA34795F (OnSelectVisualizerInputController_t18E72F24D4997597A19A1C8FC3AA0E34C03E3D86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (OnSelectVisualizerInputController__ctor_m05A49D7083F5D19F8D091438F5240870DA34795F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, OnSelectVisualizerInputController__ctor_m05A49D7083F5D19F8D091438F5240870DA34795F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		BaseEyeFocusHandler__ctor_m6B327ADA0D6A8B05A86D7C169A9F231247B0FAB1(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeSaccadeProvider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::get_EyeSaccadeProvider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RuntimeObject* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4945));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4946));
	RuntimeObject* G_B3_0 = NULL;
	PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * G_B3_1 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * G_B2_1 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * G_B4_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4947));
		// if (eyeSaccadeProvider == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4948));
		RuntimeObject* L_0 = __this->get_eyeSaccadeProvider_41();
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4949));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4950));
		// eyeSaccadeProvider = CoreServices.GetInputSystemDataProvider<IMixedRealityEyeGazeDataProvider>()?.SaccadeProvider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4951));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4955));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_GetInputSystemDataProvider_TisIMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA_m22BF11C0357D953FEE7BD3CB7FBF94EA0909A41A(/*hidden argument*/CoreServices_GetInputSystemDataProvider_TisIMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA_m22BF11C0357D953FEE7BD3CB7FBF94EA0909A41A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4955));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		G_B2_1 = __this;
		if (L_3)
		{
			G_B3_0 = L_3;
			G_B3_1 = __this;
			goto IL_001c;
		}
	}
	{
		G_B4_0 = ((RuntimeObject*)(NULL));
		G_B4_1 = G_B2_1;
		goto IL_0021;
	}

IL_001c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4956));
		NullCheck(G_B3_0);
		RuntimeObject* L_4 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeSaccadeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider::get_SaccadeProvider() */, IMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA_il2cpp_TypeInfo_var, G_B3_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4956));
		G_B4_0 = L_4;
		G_B4_1 = G_B3_1;
	}

IL_0021:
	{
		NullCheck(G_B4_1);
		G_B4_1->set_eyeSaccadeProvider_41(G_B4_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4952));
	}

IL_0027:
	{
		// return eyeSaccadeProvider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4953));
		RuntimeObject* L_5 = __this->get_eyeSaccadeProvider_41();
		V_1 = L_5;
		goto IL_0030;
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4954));
		RuntimeObject* L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4957));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4958));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4959));
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4960));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4974));
		VirtActionInvoker0::Invoke(13 /* System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Initialize() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4974));
		// handZoomEnabled = ZoomGestureEnabledOnStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4961));
		bool L_0 = __this->get_ZoomGestureEnabledOnStartup_35();
		__this->set_handZoomEnabled_36(L_0);
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4962));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4975));
		VirtActionInvoker0::Invoke(13 /* System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Initialize() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4975));
		// if (myEyeTarget == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4963));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_1 = __this->get_myEyeTarget_26();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4976));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4976));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4964));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4965));
		// myEyeTarget = GetComponent<EyeTrackingTarget>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4966));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4977));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_4 = Component_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_m8E4D670176BB9E92BC5BDD726E38CCA571D94239(__this, /*hidden argument*/Component_GetComponent_TisEyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32_m8E4D670176BB9E92BC5BDD726E38CCA571D94239_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4977));
		__this->set_myEyeTarget_26(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4967));
	}

IL_0039:
	{
		// if (EyeSaccadeProvider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4968));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4978));
		RuntimeObject* L_5 = PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4978));
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4969));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0060;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4970));
		// EyeSaccadeProvider.OnSaccadeY += ResetScroll_OnSaccade;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4971));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4979));
		RuntimeObject* L_7 = PanZoomBase_get_EyeSaccadeProvider_m956EF7B360063FC639DEE77A234C863F1B4029E2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4979));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4980));
		Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * L_8 = (Action_t591D2A86165F896B4B800BB5C25CE18672A55579 *)il2cpp_codegen_object_new(Action_t591D2A86165F896B4B800BB5C25CE18672A55579_il2cpp_TypeInfo_var);
		Action__ctor_m570E96B2A0C48BC1DC6788460316191F24572760(L_8, __this, (intptr_t)((intptr_t)PanZoomBase_ResetScroll_OnSaccade_m52F6654EDA406B8DCE96AC130BBAEAA5BC58B034_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4980));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4981));
		NullCheck(L_7);
		InterfaceActionInvoker1< Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * >::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeSaccadeProvider::add_OnSaccadeY(System.Action) */, IMixedRealityEyeSaccadeProvider_tC6911CB1724D128897B6D143DB261F75A4DC737C_il2cpp_TypeInfo_var, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4981));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4972));
	}

IL_0060:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4973));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::get_CustomColliderSizeOnLookAt()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4982));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4983));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4984));
		// if (customColliderSizeOnLookAt.HasValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4985));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_0 = __this->get_address_of_customColliderSizeOnLookAt_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4992));
		bool L_1 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_0, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4992));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4986));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4987));
		// return customColliderSizeOnLookAt.Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4988));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_3 = __this->get_address_of_customColliderSizeOnLookAt_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4993));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_3, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4993));
		V_1 = L_4;
		goto IL_002e;
	}

IL_001f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4989));
		// return myCollider.size;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4990));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_5 = __this->get_myCollider_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4994));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4994));
		V_1 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4991));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::AutoPan()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4995));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4996));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4997));
		// PanHorizontally(ComputePanSpeed(cursorPos.x, panSpeedLeftRight, minDistFromCenterForAutoPan.x));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4998));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_0 = __this->get_address_of_cursorPos_17();
		float L_1 = L_0->get_x_0();
		float L_2 = __this->get_panSpeedLeftRight_5();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_3 = __this->get_address_of_minDistFromCenterForAutoPan_7();
		float L_4 = L_3->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5001));
		float L_5 = VirtFuncInvoker3< float, float, float, float >::Invoke(14 /* System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ComputePanSpeed(System.Single,System.Single,System.Single) */, __this, L_1, L_2, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5001));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5002));
		PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5002));
		// PanVertically(ComputePanSpeed(cursorPos.y, panSpeedUpDown, minDistFromCenterForAutoPan.y));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 4999));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_6 = __this->get_address_of_cursorPos_17();
		float L_7 = L_6->get_y_1();
		float L_8 = __this->get_panSpeedUpDown_6();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_9 = __this->get_address_of_minDistFromCenterForAutoPan_7();
		float L_10 = L_9->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5003));
		float L_11 = VirtFuncInvoker3< float, float, float, float >::Invoke(14 /* System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ComputePanSpeed(System.Single,System.Single,System.Single) */, __this, L_7, L_8, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5003));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5004));
		PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D(__this, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5004));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5000));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::PanHorizontally(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___speed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___speed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5006));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5007));
		// offsetRate_Pan = new Vector2(Time.deltaTime * speed, offsetRate_Pan.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5008));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5010));
		float L_0 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5010));
		float L_1 = ___speed0;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = __this->get_address_of_offsetRate_Pan_21();
		float L_3 = L_2->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5011));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_4), ((float)il2cpp_codegen_multiply((float)L_0, (float)L_1)), L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5011));
		__this->set_offsetRate_Pan_21(L_4);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5009));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::PanVertically(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___speed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___speed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5012));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5013));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5014));
		// offsetRate_Pan = new Vector2(offsetRate_Pan.x, Time.deltaTime * speed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5015));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_0 = __this->get_address_of_offsetRate_Pan_21();
		float L_1 = L_0->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5017));
		float L_2 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5017));
		float L_3 = ___speed0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5018));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_4), L_1, ((float)il2cpp_codegen_multiply((float)L_2, (float)L_3)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5018));
		__this->set_offsetRate_Pan_21(L_4);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5016));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::EnableHandZoom()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_EnableHandZoom_m4E462584A04ADFAE571930D0B89219C446E24A92 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_EnableHandZoom_m4E462584A04ADFAE571930D0B89219C446E24A92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_EnableHandZoom_m4E462584A04ADFAE571930D0B89219C446E24A92_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5019));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5020));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5021));
		// handZoomEnabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5022));
		__this->set_handZoomEnabled_36((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5023));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::DisableHandZoom()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_DisableHandZoom_m40D967C6CBE9A22698829B77F126321BB2023A1E (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_DisableHandZoom_m40D967C6CBE9A22698829B77F126321BB2023A1E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_DisableHandZoom_m40D967C6CBE9A22698829B77F126321BB2023A1E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5024));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5025));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5026));
		// handZoomEnabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5027));
		__this->set_handZoomEnabled_36((bool)0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5028));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomStart(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, bool ___zoomIn0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___zoomIn0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5029));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5030));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5031));
		// zoomSpeed = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5032));
		__this->set_zoomSpeed_27((0.0f));
		// zoomDir = ZoomDir(zoomIn);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5033));
		bool L_0 = ___zoomIn0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5035));
		int32_t L_1 = VirtFuncInvoker1< int32_t, bool >::Invoke(15 /* System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomDir(System.Boolean) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5035));
		__this->set_zoomDir_28((((float)((float)L_1))));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5034));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomInStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5036));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5037));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5038));
		// Debug.Log($"[{gameObject.name}] ZoomInStart: {scale.ToString()}");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5039));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5042));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5042));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5043));
		NullCheck(L_0);
		String_t* L_1 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5043));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = __this->get_address_of_scale_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5044));
		String_t* L_3 = Vector2_ToString_m83C7C331834382748956B053E252AE3BD21807C4((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5044));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5045));
		String_t* L_4 = String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64(_stringLiteral1E5C2F367F02E47A8C160CDA1CD9D91DECBAC441, L_1, _stringLiteralEB67F80363F602C0EADE8733539ED94BEA9F6F2C, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5045));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5046));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5046));
		// ZoomStart(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5040));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5047));
		PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5047));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5041));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomOutStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5049));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5050));
		// Debug.Log($"[{gameObject.name}] ZoomOutStart: {scale.ToString()}");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5051));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5054));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5054));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5055));
		NullCheck(L_0);
		String_t* L_1 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5055));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = __this->get_address_of_scale_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5056));
		String_t* L_3 = Vector2_ToString_m83C7C331834382748956B053E252AE3BD21807C4((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5056));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5057));
		String_t* L_4 = String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64(_stringLiteral1E5C2F367F02E47A8C160CDA1CD9D91DECBAC441, L_1, _stringLiteral94A946619141279A1FFFFF0FD015FB243C63A901, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5057));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5058));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5058));
		// ZoomStart(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5052));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5059));
		PanZoomBase_ZoomStart_m86FC2DC49564EF1685082C8579BE6EC84AF7E8AE(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5059));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5053));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomStop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5060));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5061));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5062));
		// if (zoomSpeed != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5063));
		float L_0 = __this->get_zoomSpeed_27();
		V_0 = (bool)((((int32_t)((((float)L_0) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5064));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5065));
		// zoomSpeed = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5066));
		__this->set_zoomSpeed_27((0.0f));
		// zoomDir = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5067));
		__this->set_zoomDir_28((0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5068));
	}

IL_002d:
	{
		// isZooming = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5069));
		__this->set_isZooming_34((bool)0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5070));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::NavigationStart()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5071));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5072));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5073));
		// isNavigating = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5074));
		__this->set_isNavigating_31((bool)1);
		// navPos = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5075));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5077));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5077));
		__this->set_navPos_32(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5076));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::NavigationStop()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5078));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5079));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5080));
		// isNavigating = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5081));
		__this->set_isNavigating_31((bool)0);
		// ZoomStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5082));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5086));
		PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5086));
		// ResetNormFixator();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5083));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5087));
		PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5087));
		// navPos = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5084));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5088));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5088));
		__this->set_navPos_32(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5085));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::NavigationUpdate(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normalizedOffset0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___normalizedOffset0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5089));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5090));
	int32_t G_B5_0 = 0;
	int32_t G_B10_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5091));
		// if (!isNavigating)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5092));
		bool L_0 = __this->get_isNavigating_31();
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5093));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5094));
		// NavigationStart();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5095));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5113));
		PanZoomBase_NavigationStart_m7341E69A18E0E272086B3167F67D7D43C64E369A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5113));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5096));
	}

IL_0017:
	{
		// Vector3 transfPnt = normalizedOffset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5097));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___normalizedOffset0;
		V_0 = L_2;
		// transfPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.y, Vector3.down) * transfPnt;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5098));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5114));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5114));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5115));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5115));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5116));
		NullCheck(L_4);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5116));
		V_2 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5117));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5117));
		float L_7 = L_6.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5118));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_get_down_m3F76A48E5B7C82B35EE047375538AFD91A305F55(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5118));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5119));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_9 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5119));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5120));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5120));
		V_0 = L_11;
		// transfPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.x, Vector3.left) * transfPnt;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5121));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5121));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5122));
		NullCheck(L_12);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5122));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5123));
		NullCheck(L_13);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_14 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5123));
		V_2 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5124));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5124));
		float L_16 = L_15.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5125));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Vector3_get_left_m74B52D8CFD8C62138067B2EB6846B6E9E51B7C20(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5125));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5126));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_18 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5126));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5127));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5127));
		V_0 = L_20;
		// transfPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.z, Vector3.back) * transfPnt;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5100));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5128));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5129));
		NullCheck(L_21);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5129));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5130));
		NullCheck(L_22);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_23 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5130));
		V_2 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5131));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5131));
		float L_25 = L_24.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5132));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_get_back_mE7EF8625637E6F8B9E6B42A6AE140777C51E02F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5132));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5133));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_27 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_25, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5133));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5134));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5134));
		V_0 = L_29;
		// if ((navPos.z >= 0) && (transfPnt.z < 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5101));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_30 = __this->get_address_of_navPos_32();
		float L_31 = L_30->get_z_4();
		if ((!(((float)L_31) >= ((float)(0.0f)))))
		{
			goto IL_00c4;
		}
	}
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = V_0;
		float L_33 = L_32.get_z_4();
		G_B5_0 = ((((float)L_33) < ((float)(0.0f)))? 1 : 0);
		goto IL_00c5;
	}

IL_00c4:
	{
		G_B5_0 = 0;
	}

IL_00c5:
	{
		V_3 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5102));
		bool L_34 = V_3;
		if (!L_34)
		{
			goto IL_00d4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5103));
		// ZoomOutStart();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5104));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5135));
		PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5135));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5105));
		goto IL_0105;
	}

IL_00d4:
	{
		// else if ((navPos.z <= 0) && (transfPnt.z > 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5106));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_35 = __this->get_address_of_navPos_32();
		float L_36 = L_35->get_z_4();
		if ((!(((float)L_36) <= ((float)(0.0f)))))
		{
			goto IL_00f5;
		}
	}
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = V_0;
		float L_38 = L_37.get_z_4();
		G_B10_0 = ((((float)L_38) > ((float)(0.0f)))? 1 : 0);
		goto IL_00f6;
	}

IL_00f5:
	{
		G_B10_0 = 0;
	}

IL_00f6:
	{
		V_4 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5107));
		bool L_39 = V_4;
		if (!L_39)
		{
			goto IL_0105;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5108));
		// ZoomInStart();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5109));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5136));
		PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5136));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5110));
	}

IL_0105:
	{
		// navPos = transfPnt * 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5111));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5137));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_41 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_40, (5.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5137));
		__this->set_navPos_32(L_41);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5112));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5139));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5140));
		// if (UpdateCursorPosInHitBox())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5170));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(19 /* System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateCursorPosInHitBox() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5170));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5142));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0066;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5143));
		// if (!wasLookedAtBefore)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5144));
		bool L_2 = __this->get_wasLookedAtBefore_30();
		V_1 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5145));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0055;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5146));
		// wasLookedAtBefore = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5147));
		__this->set_wasLookedAtBefore_30((bool)1);
		// if ((origColliderSize.HasValue) && (customColliderSizeOnLookAt.HasValue))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5148));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_4 = __this->get_address_of_origColliderSize_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5171));
		bool L_5 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_4, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5171));
		if (!L_5)
		{
			goto IL_003b;
		}
	}
	{
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_6 = __this->get_address_of_customColliderSizeOnLookAt_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5172));
		bool L_7 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_6, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5172));
		G_B5_0 = ((int32_t)(L_7));
		goto IL_003c;
	}

IL_003b:
	{
		G_B5_0 = 0;
	}

IL_003c:
	{
		V_2 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5149));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_0054;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5150));
		// MyCollider.size = CustomColliderSizeOnLookAt;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5151));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5173));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_9 = PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5173));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5174));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = PanZoomBase_get_CustomColliderSizeOnLookAt_m18411B5D0D761DC0336BF0D0B1FA9B3924D3C371(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5174));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5175));
		NullCheck(L_9);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5175));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5152));
	}

IL_0054:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5153));
	}

IL_0055:
	{
		// AutomaticGazePanning();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5154));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5176));
		PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5176));
		// UpdateZoom();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5155));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5177));
		PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5177));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5156));
		goto IL_00a5;
	}

IL_0066:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5157));
		// if (wasLookedAtBefore)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5158));
		bool L_11 = __this->get_wasLookedAtBefore_30();
		V_3 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5159));
		bool L_12 = V_3;
		if (!L_12)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5160));
		// wasLookedAtBefore = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5161));
		__this->set_wasLookedAtBefore_30((bool)0);
		// if (origColliderSize.HasValue)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5162));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_13 = __this->get_address_of_origColliderSize_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5178));
		bool L_14 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_13, /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5178));
		V_4 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5163));
		bool L_15 = V_4;
		if (!L_15)
		{
			goto IL_00a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5164));
		// MyCollider.size = origColliderSize.Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5165));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5179));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_16 = PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5179));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_17 = __this->get_address_of_origColliderSize_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5180));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_17, /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5180));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5181));
		NullCheck(L_16);
		BoxCollider_set_size_m65F9B4BD610D3094313EC8D1C5CE58D1D345A176(L_16, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5181));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5166));
	}

IL_00a3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5167));
	}

IL_00a4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5168));
	}

IL_00a5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5169));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::SetSkimProofUpdateSpeed(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___newSpeed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newSpeed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5182));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5183));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5184));
		// skimproof_UpdateSpeed = newSpeed / 1000f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5185));
		float L_0 = ___newSpeed0;
		__this->set_skimproof_UpdateSpeed_24(((float)((float)L_0/(float)(1000.0f))));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5186));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ResetNormFixator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5187));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5188));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5189));
		// skimproof_normFixator = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5190));
		__this->set_skimproof_normFixator_23((0.0f));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5191));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::IncrementNormFixator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5192));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5193));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5194));
		// skimproof_normFixator = Mathf.Clamp(skimproof_normFixator + skimproof_UpdateSpeed, 0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5195));
		float L_0 = __this->get_skimproof_normFixator_23();
		float L_1 = __this->get_skimproof_UpdateSpeed_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5197));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_2 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(((float)il2cpp_codegen_add((float)L_0, (float)L_1)), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5197));
		__this->set_skimproof_normFixator_23(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5196));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ResetScroll_OnSaccade()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ResetScroll_OnSaccade_m52F6654EDA406B8DCE96AC130BBAEAA5BC58B034 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ResetScroll_OnSaccade_m52F6654EDA406B8DCE96AC130BBAEAA5BC58B034_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ResetScroll_OnSaccade_m52F6654EDA406B8DCE96AC130BBAEAA5BC58B034_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5198));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5199));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5200));
		// ResetNormFixator();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5201));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5203));
		PanZoomBase_ResetNormFixator_m2F9A885BAA028F5C85042772CCC2DAF84A239579(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5203));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5202));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_LateUpdate_mDFBD76B5480F81B1A2200607361D209002309C4D (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_LateUpdate_mDFBD76B5480F81B1A2200607361D209002309C4D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_LateUpdate_mDFBD76B5480F81B1A2200607361D209002309C4D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5204));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5205));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5206));
		// if (useSkimProof)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5207));
		bool L_0 = __this->get_useSkimProof_15();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5208));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_004f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5209));
		// if (isFocused)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5210));
		bool L_2 = __this->get_isFocused_33();
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5211));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5212));
		// IncrementNormFixator();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5213));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5224));
		PanZoomBase_IncrementNormFixator_m26CC480D1ABC5DEF86CAB5EBAEA2E364875BEEC8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5224));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5214));
	}

IL_001f:
	{
		// offset += (offsetRate_Pan * skimproof_normFixator + offsetRate_Zoom);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5215));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = __this->get_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5 = __this->get_offsetRate_Pan_21();
		float L_6 = __this->get_skimproof_normFixator_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5225));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_7 = Vector2_op_Multiply_m8A843A37F2F3199EBE99DC7BDABC1DC2EE01AF56(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5225));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_8 = __this->get_offsetRate_Zoom_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5226));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_9 = Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5226));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5227));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682(L_4, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5227));
		__this->set_offset_19(L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5216));
		goto IL_0073;
	}

IL_004f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5217));
		// offset += (offsetRate_Pan + offsetRate_Zoom);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5218));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_11 = __this->get_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_12 = __this->get_offsetRate_Pan_21();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_13 = __this->get_offsetRate_Zoom_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5228));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14 = Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5228));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5229));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_15 = Vector2_op_Addition_m81A4D928B8E399DA3A4E3ACD8937EDFDCB014682(L_11, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5229));
		__this->set_offset_19(L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5219));
	}

IL_0073:
	{
		// UpdatePanZoom();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5220));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5230));
		VirtActionInvoker0::Invoke(18 /* System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdatePanZoom() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5230));
		// offsetRate_Pan = new Vector2(0, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5221));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5231));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_16;
		memset((&L_16), 0, sizeof(L_16));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_16), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5231));
		__this->set_offsetRate_Pan_21(L_16);
		// offsetRate_Zoom = new Vector2(0, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5222));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5232));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_17;
		memset((&L_17), 0, sizeof(L_17));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_17), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5232));
		__this->set_offsetRate_Zoom_20(L_17);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5223));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::AutomaticGazePanning()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_AutomaticGazePanning_mD250E9244D8668F94FBBAB2B4B1BAB3C0F293C04_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5233));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5234));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5235));
		// if (autoGazePanIsActive)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5236));
		bool L_0 = __this->get_autoGazePanIsActive_4();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5237));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5238));
		// AutoPan();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5239));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5242));
		PanZoomBase_AutoPan_m9DAE468604A7BE2BBBE8A2BBDC0C137AD6E6622F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5242));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5240));
	}

IL_0014:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5241));
		return;
	}
}
// UnityEngine.BoxCollider Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::get_MyCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_get_MyCollider_mA84C8C4C2A2804DEEC525480FBFC93CD9E6AA123_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5243));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5244));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5245));
		// if (myCollider == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5246));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = __this->get_myCollider_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5253));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5253));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5247));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5248));
		// myCollider = GetComponent<BoxCollider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5249));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5254));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_3 = Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E(__this, /*hidden argument*/Component_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_m81892AA8DC35D8BB06288E5A4C16CF366174953E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5254));
		__this->set_myCollider_25(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5250));
	}

IL_001f:
	{
		// return myCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5251));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_4 = __this->get_myCollider_25();
		V_1 = L_4;
		goto IL_0028;
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5252));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::set_MyCollider(UnityEngine.BoxCollider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5255));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5256));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5257));
		// myCollider = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5258));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_0 = ___value0;
		__this->set_myCollider_25(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5259));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::PanUpDown(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_PanUpDown_m48637C91D434DA0D2C522A308CA229D2C1FE58DF (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___speed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_PanUpDown_m48637C91D434DA0D2C522A308CA229D2C1FE58DF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___speed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_PanUpDown_m48637C91D434DA0D2C522A308CA229D2C1FE58DF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5260));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5261));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5262));
		// offsetRate_Pan = new Vector2(offsetRate_Pan.x, Time.deltaTime * speed);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5263));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_0 = __this->get_address_of_offsetRate_Pan_21();
		float L_1 = L_0->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5265));
		float L_2 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5265));
		float L_3 = ___speed0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5266));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_4), L_1, ((float)il2cpp_codegen_multiply((float)L_2, (float)L_3)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5266));
		__this->set_offsetRate_Pan_21(L_4);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5264));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::PanLeftRight(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_PanLeftRight_mB40616E7456A17FA2C95E221BF8F3C4FF5B739E9 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, float ___speed0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_PanLeftRight_mB40616E7456A17FA2C95E221BF8F3C4FF5B739E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___speed0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_PanLeftRight_mB40616E7456A17FA2C95E221BF8F3C4FF5B739E9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5267));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5268));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5269));
		// offsetRate_Pan = new Vector2(Time.deltaTime * speed, offsetRate_Pan.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5270));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5272));
		float L_0 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5272));
		float L_1 = ___speed0;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = __this->get_address_of_offsetRate_Pan_21();
		float L_3 = L_2->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5273));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_4), ((float)il2cpp_codegen_multiply((float)L_0, (float)L_1)), L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5273));
		__this->set_offsetRate_Pan_21(L_4);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5271));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::UpdateZoom()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_UpdateZoom_m00DF37D6847F7B544DDAE496B6325222034AE0EC_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5274));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5275));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5276));
		// float dynamicZoom = 0.5f; // Default = 0.5 in case the zoom is triggered by a button (Hand gesture would provide a value between 0 and 1
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5277));
		V_0 = (0.5f);
		// if (isNavigating)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5278));
		bool L_0 = __this->get_isNavigating_31();
		V_1 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5279));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5280));
		// dynamicZoom = Mathf.Abs(navPos.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5281));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_2 = __this->get_address_of_navPos_32();
		float L_3 = L_2->get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5299));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_4 = fabsf(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5299));
		V_0 = L_4;
		// zoomDir = Mathf.Sign(navPos.z) * dynaZoomInvert;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5282));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = __this->get_address_of_navPos_32();
		float L_6 = L_5->get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5300));
		float L_7 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5300));
		int32_t L_8 = __this->get_dynaZoomInvert_29();
		__this->set_zoomDir_28(((float)il2cpp_codegen_multiply((float)L_7, (float)(((float)((float)L_8))))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5283));
	}

IL_0042:
	{
		// if (zoomDir != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5284));
		float L_9 = __this->get_zoomDir_28();
		V_2 = (bool)((((int32_t)((((float)L_9) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5285));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_00cb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5286));
		// zoomSpeed = ZoomSpeedMax / (1 + Mathf.Pow(2.71828f, -ZoomAcceleration * (dynamicZoom - 0.5f))) * Time.deltaTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5287));
		float L_11 = __this->get_ZoomSpeedMax_9();
		float L_12 = __this->get_ZoomAcceleration_8();
		float L_13 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5301));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_14 = powf((2.71828f), ((float)il2cpp_codegen_multiply((float)((-L_12)), (float)((float)il2cpp_codegen_subtract((float)L_13, (float)(0.5f))))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5301));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5302));
		float L_15 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5302));
		__this->set_zoomSpeed_27(((float)il2cpp_codegen_multiply((float)((float)((float)L_11/(float)((float)il2cpp_codegen_add((float)(1.0f), (float)L_14)))), (float)L_15)));
		// zoomSpeed = Mathf.Clamp(zoomSpeed, 0, ZoomSpeedMax);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5288));
		float L_16 = __this->get_zoomSpeed_27();
		float L_17 = __this->get_ZoomSpeedMax_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5303));
		float L_18 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_16, (0.0f), L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5303));
		__this->set_zoomSpeed_27(L_18);
		// if (zoomDir < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5289));
		float L_19 = __this->get_zoomDir_28();
		V_3 = (bool)((((float)L_19) < ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5290));
		bool L_20 = V_3;
		if (!L_20)
		{
			goto IL_00c1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5291));
		// ZoomIn();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5292));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5304));
		VirtActionInvoker0::Invoke(16 /* System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomIn() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5304));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5293));
		goto IL_00ca;
	}

IL_00c1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5294));
		// ZoomOut();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5295));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5305));
		VirtActionInvoker0::Invoke(17 /* System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomOut() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5305));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5296));
	}

IL_00ca:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5297));
	}

IL_00cb:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5298));
		return;
	}
}
// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::LimitScaling(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___newScale0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newScale0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5306));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5307));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5308));
		// if (newScale.x <= ZoomMinScale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5309));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___newScale0;
		float L_1 = L_0.get_x_0();
		float L_2 = __this->get_ZoomMinScale_10();
		V_0 = (bool)((((int32_t)((!(((float)L_1) <= ((float)L_2)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5310));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0045;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5311));
		// newScale = new Vector2(ZoomMinScale, (ZoomMinScale / originalRatio.x) * originalRatio.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5312));
		float L_4 = __this->get_ZoomMinScale_10();
		float L_5 = __this->get_ZoomMinScale_10();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_6 = __this->get_address_of_originalRatio_37();
		float L_7 = L_6->get_x_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_8 = __this->get_address_of_originalRatio_37();
		float L_9 = L_8->get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5331));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&___newScale0), L_4, ((float)il2cpp_codegen_multiply((float)((float)((float)L_5/(float)L_7)), (float)L_9)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5331));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5313));
		goto IL_0087;
	}

IL_0045:
	{
		// else if (newScale.x >= ZoomMaxScale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5314));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = ___newScale0;
		float L_11 = L_10.get_x_0();
		float L_12 = __this->get_ZoomMaxScale_11();
		V_1 = (bool)((((int32_t)((!(((float)L_11) >= ((float)L_12)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5315));
		bool L_13 = V_1;
		if (!L_13)
		{
			goto IL_0087;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5316));
		// newScale = new Vector2(ZoomMaxScale, (ZoomMaxScale / originalRatio.x) * originalRatio.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5317));
		float L_14 = __this->get_ZoomMaxScale_11();
		float L_15 = __this->get_ZoomMaxScale_11();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_16 = __this->get_address_of_originalRatio_37();
		float L_17 = L_16->get_x_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_18 = __this->get_address_of_originalRatio_37();
		float L_19 = L_18->get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5332));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&___newScale0), L_14, ((float)il2cpp_codegen_multiply((float)((float)((float)L_15/(float)L_17)), (float)L_19)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5332));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5318));
	}

IL_0087:
	{
		// if (newScale.y <= ZoomMinScale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5319));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_20 = ___newScale0;
		float L_21 = L_20.get_y_1();
		float L_22 = __this->get_ZoomMinScale_10();
		V_2 = (bool)((((int32_t)((!(((float)L_21) <= ((float)L_22)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5320));
		bool L_23 = V_2;
		if (!L_23)
		{
			goto IL_00cb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5321));
		// newScale = new Vector2((ZoomMinScale / originalRatio.y) * originalRatio.x, ZoomMinScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5322));
		float L_24 = __this->get_ZoomMinScale_10();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_25 = __this->get_address_of_originalRatio_37();
		float L_26 = L_25->get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_27 = __this->get_address_of_originalRatio_37();
		float L_28 = L_27->get_x_2();
		float L_29 = __this->get_ZoomMinScale_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5333));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&___newScale0), ((float)il2cpp_codegen_multiply((float)((float)((float)L_24/(float)L_26)), (float)L_28)), L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5333));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5323));
		goto IL_010d;
	}

IL_00cb:
	{
		// else if (newScale.y >= ZoomMaxScale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5324));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_30 = ___newScale0;
		float L_31 = L_30.get_y_1();
		float L_32 = __this->get_ZoomMaxScale_11();
		V_3 = (bool)((((int32_t)((!(((float)L_31) >= ((float)L_32)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5325));
		bool L_33 = V_3;
		if (!L_33)
		{
			goto IL_010d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5326));
		// newScale = new Vector2((ZoomMaxScale / originalRatio.y) * originalRatio.x, ZoomMaxScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5327));
		float L_34 = __this->get_ZoomMaxScale_11();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_35 = __this->get_address_of_originalRatio_37();
		float L_36 = L_35->get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_37 = __this->get_address_of_originalRatio_37();
		float L_38 = L_37->get_x_2();
		float L_39 = __this->get_ZoomMaxScale_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5334));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&___newScale0), ((float)il2cpp_codegen_multiply((float)((float)((float)L_34/(float)L_36)), (float)L_38)), L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5334));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5328));
	}

IL_010d:
	{
		// return newScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5329));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_40 = ___newScale0;
		V_4 = L_40;
		goto IL_0112;
	}

IL_0112:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5330));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_41 = V_4;
		return L_41;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomIn_Timed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomIn_Timed_m4598F3D42F293BBE29BB037DF8F541A83F8CC6BA (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomIn_Timed_m4598F3D42F293BBE29BB037DF8F541A83F8CC6BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomIn_Timed_m4598F3D42F293BBE29BB037DF8F541A83F8CC6BA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5335));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5336));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5337));
		// StartCoroutine(ZoomAndStop(true));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5338));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5340));
		RuntimeObject* L_0 = PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5340));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5341));
		MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5341));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5339));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomOut_Timed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_ZoomOut_Timed_m1065A23AD665D67C98EF22C1D68E2E5A348D0ABE (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomOut_Timed_m1065A23AD665D67C98EF22C1D68E2E5A348D0ABE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomOut_Timed_m1065A23AD665D67C98EF22C1D68E2E5A348D0ABE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5342));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5343));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5344));
		// StartCoroutine(ZoomAndStop(false));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5345));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5347));
		RuntimeObject* L_0 = PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5347));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5348));
		MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5348));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5346));
		return;
	}
}
// System.Collections.IEnumerator Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ZoomAndStop(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, bool ___zoomIn0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_ZoomAndStop_mF4D5F59EBC6D75C6F4E68130B8076DF50633CE9C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * L_0 = (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 *)il2cpp_codegen_object_new(U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9_il2cpp_TypeInfo_var);
		U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28(L_0, 0, /*hidden argument*/NULL);
		U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * L_1 = L_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_3(__this);
		U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * L_2 = L_1;
		bool L_3 = ___zoomIn0;
		NullCheck(L_2);
		L_2->set_zoomIn_2(L_3);
		return L_2;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::StartFocusing()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_StartFocusing_m959C7C6596810E852E6FB23AEDA87F628F856338 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_StartFocusing_m959C7C6596810E852E6FB23AEDA87F628F856338_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_StartFocusing_m959C7C6596810E852E6FB23AEDA87F628F856338_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5362));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5363));
		// isFocused = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5364));
		__this->set_isFocused_33((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5365));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::StopFocusing()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5366));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5367));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5368));
		// isFocused = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5369));
		__this->set_isFocused_33((bool)0);
		// NavigationStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5370));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5372));
		PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5372));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5371));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m6B3E9CC012AC8865169962EA2AA05285EE536839 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m6B3E9CC012AC8865169962EA2AA05285EE536839_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerUp_m6B3E9CC012AC8865169962EA2AA05285EE536839_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5373));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5374));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5375));
		// isZooming = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5376));
		__this->set_isZooming_34((bool)0);
		// NavigationStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5377));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5379));
		PanZoomBase_NavigationStop_m41CE208878FE56567AB782B772773DA4D8EE7A04(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5379));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5378));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mCFE03DDA43A7EC34B28270BD5F799DAA5A24CBAA (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mCFE03DDA43A7EC34B28270BD5F799DAA5A24CBAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDown_mCFE03DDA43A7EC34B28270BD5F799DAA5A24CBAA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5380));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5381));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5382));
		// isZooming = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5383));
		__this->set_isZooming_34((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5384));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAD01885E7B419604F0DD9110C0F9E37B95B45064 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAD01885E7B419604F0DD9110C0F9E37B95B45064_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerClicked_mAD01885E7B419604F0DD9110C0F9E37B95B45064_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5385));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5386));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5387));
		// void IMixedRealityPointerHandler.OnPointerClicked(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5388));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerHandler.OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mAB369C57C4251DF1D897BDD7A9E579A27EA51AE5 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mAB369C57C4251DF1D897BDD7A9E579A27EA51AE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityPointerHandler_OnPointerDragged_mAB369C57C4251DF1D897BDD7A9E579A27EA51AE5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5389));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5390));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5391));
		// void IMixedRealityPointerHandler.OnPointerDragged(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5392));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler.OnFocusEnter(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_m43BB24C696924FDAF214ADA82ED2747D50297F1A (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_m43BB24C696924FDAF214ADA82ED2747D50297F1A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusEnter_m43BB24C696924FDAF214ADA82ED2747D50297F1A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5393));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5394));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5395));
		// isFocused = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5396));
		__this->set_isFocused_33((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5397));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler.OnFocusExit(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mF631029DD0FD040BCAC8B3AAF27A819C9B36CD17 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mF631029DD0FD040BCAC8B3AAF27A819C9B36CD17_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusHandler_OnFocusExit_mF631029DD0FD040BCAC8B3AAF27A819C9B36CD17_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5398));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5399));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5400));
		// StopFocusing();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5401));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5404));
		PanZoomBase_StopFocusing_mCC73CC2C277AB421BC898AB6F47260D288460C10(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5404));
		// eventData.Pointer.IsFocusLocked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5402));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5405));
		NullCheck(L_0);
		RuntimeObject* L_1 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5405));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5406));
		NullCheck(L_1);
		InterfaceActionInvoker1< bool >::Invoke(14 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_IsFocusLocked(System.Boolean) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_1, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5406));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5403));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySourceStateHandler.OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m07B9309FA58BC37E4AEFB7BCB8F299FE6FFABFAD (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m07B9309FA58BC37E4AEFB7BCB8F299FE6FFABFAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceDetected_m07B9309FA58BC37E4AEFB7BCB8F299FE6FFABFAD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5407));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5408));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5409));
		// void IMixedRealitySourceStateHandler.OnSourceDetected(SourceStateEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5410));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySourceStateHandler.OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mD8B2142CEE210806FFA3954870C4873DF4D2088B (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mD8B2142CEE210806FFA3954870C4873DF4D2088B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* V_0 = NULL;
	int32_t V_1 = 0;
	RuntimeObject* V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySourceStateHandler_OnSourceLost_mD8B2142CEE210806FFA3954870C4873DF4D2088B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5411));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5412));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5413));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5414));
		// foreach (var pointer in CoreServices.InputSystem.GazeProvider.GazeInputSource.Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5415));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5424));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5424));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5425));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5426));
		NullCheck(L_1);
		RuntimeObject* L_2 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(2 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeInputSource() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5426));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5427));
		NullCheck(L_2);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_3 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5427));
		V_0 = L_3;
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5416));
		goto IL_002d;
	}

IL_001b:
	{
		// foreach (var pointer in CoreServices.InputSystem.GazeProvider.GazeInputSource.Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5417));
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_4 = V_0;
		int32_t L_5 = V_1;
		NullCheck(L_4);
		int32_t L_6 = L_5;
		RuntimeObject* L_7 = (L_4)->GetAt(static_cast<il2cpp_array_size_t>(L_6));
		V_2 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5418));
		// pointer.IsFocusLocked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5419));
		RuntimeObject* L_8 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5428));
		NullCheck(L_8);
		InterfaceActionInvoker1< bool >::Invoke(14 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_IsFocusLocked(System.Boolean) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5428));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5420));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5421));
		int32_t L_9 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_9, (int32_t)1));
	}

IL_002d:
	{
		// foreach (var pointer in CoreServices.InputSystem.GazeProvider.GazeInputSource.Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5422));
		int32_t L_10 = V_1;
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_11 = V_0;
		NullCheck(L_11);
		if ((((int32_t)L_10) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_11)->max_length)))))))
		{
			goto IL_001b;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5423));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::Microsoft.MixedReality.Toolkit.Input.IMixedRealityHandJointHandler.OnHandJointsUpdated(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57A2E1C96A5C0DC86F9601DFAD094F7E8943487F (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57A2E1C96A5C0DC86F9601DFAD094F7E8943487F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase_Microsoft_MixedReality_Toolkit_Input_IMixedRealityHandJointHandler_OnHandJointsUpdated_m57A2E1C96A5C0DC86F9601DFAD094F7E8943487F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5429));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5430));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5431));
		// if (handZoomEnabled && isZooming)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5432));
		bool L_0 = __this->get_handZoomEnabled_36();
		if (!L_0)
		{
			goto IL_0011;
		}
	}
	{
		bool L_1 = __this->get_isZooming_34();
		G_B3_0 = ((int32_t)(L_1));
		goto IL_0012;
	}

IL_0011:
	{
		G_B3_0 = 0;
	}

IL_0012:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5433));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00b4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5434));
		// eventData.InputData.TryGetValue(TrackedHandJoint.Palm, out pose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5435));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5457));
		NullCheck(L_3);
		RuntimeObject* L_4 = InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_inline(L_3, /*hidden argument*/InputEventData_1_get_InputData_m2C1744B31110C233AE08DB5B33A1F45DF7AF344D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5457));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5458));
		NullCheck(L_4);
		InterfaceFuncInvoker2< bool, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * >::Invoke(7 /* System.Boolean System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::TryGetValue(!0,!1&) */, IDictionary_2_t7F1999066864BD735DBFA36263BEFF671DCD0EBB_il2cpp_TypeInfo_var, L_4, 2, (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5458));
		// if (pose != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5436));
		V_2 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5437));
		// if (!zoomUsingHandsActive)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5438));
		bool L_5 = __this->get_zoomUsingHandsActive_42();
		V_3 = (bool)((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5439));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_007d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5440));
		// zoomUsingHandsActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5441));
		__this->set_zoomUsingHandsActive_42((bool)1);
		// initialPalmPos = new Vector3(pose.Position.x, pose.Position.y, pose.Position.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5442));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5459));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5459));
		float L_8 = L_7.get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5460));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5460));
		float L_10 = L_9.get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5461));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5461));
		float L_12 = L_11.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5462));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13;
		memset((&L_13), 0, sizeof(L_13));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_13), L_8, L_10, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5462));
		__this->set_initialPalmPos_43(L_13);
		// handUsedToZoom = eventData.Handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5443));
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_14 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5463));
		NullCheck(L_14);
		uint8_t L_15 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5463));
		__this->set_handUsedToZoom_44(L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5444));
	}

IL_007d:
	{
		// if (handUsedToZoom == eventData.Handedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5445));
		uint8_t L_16 = __this->get_handUsedToZoom_44();
		InputEventData_1_t003941A08EE3DF616DC95294EAC1E7596D11186E * L_17 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5464));
		NullCheck(L_17);
		uint8_t L_18 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5464));
		V_4 = (bool)((((int32_t)L_16) == ((int32_t)L_18))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5446));
		bool L_19 = V_4;
		if (!L_19)
		{
			goto IL_00b0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5447));
		// Vector3 deltaPalm = pose.Position - initialPalmPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5448));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5465));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5465));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = __this->get_initialPalmPos_43();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5466));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5466));
		V_5 = L_22;
		// NavigationUpdate(deltaPalm);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5449));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5467));
		PanZoomBase_NavigationUpdate_m7D2941D784808F4C4F8ABE4BC21BDB2950045B79(__this, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5467));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5450));
	}

IL_00b0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5451));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5452));
		goto IL_00bd;
	}

IL_00b4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5453));
		// zoomUsingHandsActive = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5454));
		__this->set_zoomUsingHandsActive_42((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5455));
	}

IL_00bd:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5456));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530 (PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5468));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5469));
	{
		// internal bool autoGazePanIsActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5470));
		__this->set_autoGazePanIsActive_4((bool)1);
		// internal Vector2 minDistFromCenterForAutoPan = new Vector2(0.2f, 0.2f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5471));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5498));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_0), (0.2f), (0.2f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5498));
		__this->set_minDistFromCenterForAutoPan_7(L_0);
		// internal float ZoomAcceleration = 10f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5472));
		__this->set_ZoomAcceleration_8((10.0f));
		// internal float ZoomSpeedMax = 0.02f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5473));
		__this->set_ZoomSpeedMax_9((0.02f));
		// internal float ZoomMinScale = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5474));
		__this->set_ZoomMinScale_10((0.1f));
		// internal float ZoomMaxScale = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5475));
		__this->set_ZoomMaxScale_11((1.0f));
		// internal Vector3? customColliderSizeOnLookAt = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5476));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_1 = __this->get_address_of_customColliderSizeOnLookAt_12();
		il2cpp_codegen_initobj(L_1, sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		// internal Vector3? origColliderSize = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5477));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_2 = __this->get_address_of_origColliderSize_13();
		il2cpp_codegen_initobj(L_2, sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		// internal float timeInSecondsToZoom = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5478));
		__this->set_timeInSecondsToZoom_14((0.5f));
		// protected Vector2 cursorPos = new Vector2(0.5f, 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5479));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5499));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_3), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5499));
		__this->set_cursorPos_17(L_3);
		// protected Vector2 offset = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5480));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5500));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5500));
		__this->set_offset_19(L_4);
		// protected Vector2 offsetRate_Zoom = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5481));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5501));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5501));
		__this->set_offsetRate_Zoom_20(L_5);
		// protected Vector2 offsetRate_Pan = Vector2.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5482));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5502));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_6 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5502));
		__this->set_offsetRate_Pan_21(L_6);
		// public bool limitPanning = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5483));
		__this->set_limitPanning_22((bool)1);
		// private float skimproof_normFixator = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5484));
		__this->set_skimproof_normFixator_23((0.0f));
		// private float skimproof_UpdateSpeed = 5f; // Speed for how fast the current fixation will trigger a scroll after looking around.
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5485));
		__this->set_skimproof_UpdateSpeed_24((5.0f));
		// protected float zoomSpeed = 0.01f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5486));
		__this->set_zoomSpeed_27((0.01f));
		// protected float zoomDir = 0; // 1: Zoom in, -1: Zoom out
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5487));
		__this->set_zoomDir_28((0.0f));
		// protected int dynaZoomInvert = 1; // To invert when to zoom in/out for the manipulation gesture
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5488));
		__this->set_dynaZoomInvert_29(1);
		// private bool wasLookedAtBefore = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5489));
		__this->set_wasLookedAtBefore_30((bool)0);
		// private bool isNavigating = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5490));
		__this->set_isNavigating_31((bool)0);
		// private Vector3 navPos = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5491));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5503));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5503));
		__this->set_navPos_32(L_7);
		// private bool isFocused = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5492));
		__this->set_isFocused_33((bool)0);
		// internal bool isZooming = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5493));
		__this->set_isZooming_34((bool)0);
		// internal bool ZoomGestureEnabledOnStartup = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5494));
		__this->set_ZoomGestureEnabledOnStartup_35((bool)0);
		// private bool handZoomEnabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5495));
		__this->set_handZoomEnabled_36((bool)0);
		// private IMixedRealityEyeSaccadeProvider eyeSaccadeProvider = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5496));
		__this->set_eyeSaccadeProvider_41((RuntimeObject*)NULL);
		// private bool zoomUsingHandsActive = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5497));
		__this->set_zoomUsingHandsActive_42((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5504));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5504));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28 (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CZoomAndStopU3Ed__78__ctor_mEF52C7B55F101B7D05BB48CFB88CB624018A7B28_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CZoomAndStopU3Ed__78_System_IDisposable_Dispose_mBDB67B01F0543CEDFAC9438D6E671A4A45E604EE (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CZoomAndStopU3Ed__78_System_IDisposable_Dispose_mBDB67B01F0543CEDFAC9438D6E671A4A45E604EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CZoomAndStopU3Ed__78_System_IDisposable_Dispose_mBDB67B01F0543CEDFAC9438D6E671A4A45E604EE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CZoomAndStopU3Ed__78_MoveNext_mC5A85BB73134DB7B3E3CD9A542C6D8388CAC84F5 (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CZoomAndStopU3Ed__78_MoveNext_mC5A85BB73134DB7B3E3CD9A542C6D8388CAC84F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CZoomAndStopU3Ed__78_MoveNext_mC5A85BB73134DB7B3E3CD9A542C6D8388CAC84F5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5505));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5506));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5507));
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		int32_t L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		goto IL_000c;
	}

IL_000c:
	{
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)1)))
		{
			goto IL_0014;
		}
	}
	{
		goto IL_0016;
	}

IL_0012:
	{
		goto IL_0018;
	}

IL_0014:
	{
		goto IL_0073;
	}

IL_0016:
	{
		return (bool)0;
	}

IL_0018:
	{
		__this->set_U3CU3E1__state_0((-1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5508));
		// isZooming = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5509));
		PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * L_3 = __this->get_U3CU3E4__this_3();
		NullCheck(L_3);
		L_3->set_isZooming_34((bool)1);
		// if (zoomIn)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5510));
		bool L_4 = __this->get_zoomIn_2();
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5511));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5512));
		// ZoomInStart();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5513));
		PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * L_6 = __this->get_U3CU3E4__this_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5522));
		NullCheck(L_6);
		PanZoomBase_ZoomInStart_m0B051B529514AEDEF6A441D8D7BC0800FC3F91C9(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5522));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5514));
		goto IL_0054;
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5515));
		// ZoomOutStart();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5516));
		PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * L_7 = __this->get_U3CU3E4__this_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5523));
		NullCheck(L_7);
		PanZoomBase_ZoomOutStart_m2E3BC1FCD41858E3CF386257654962DFA2C22C08(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5523));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5517));
	}

IL_0054:
	{
		// yield return new WaitForSeconds(timeInSecondsToZoom);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5518));
		PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * L_8 = __this->get_U3CU3E4__this_3();
		NullCheck(L_8);
		float L_9 = L_8->get_timeInSecondsToZoom_14();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5524));
		WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 * L_10 = (WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 *)il2cpp_codegen_object_new(WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_il2cpp_TypeInfo_var);
		WaitForSeconds__ctor_m8E4BA3E27AEFFE5B74A815F26FF8AAB99743F559(L_10, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5524));
		__this->set_U3CU3E2__current_1(L_10);
		__this->set_U3CU3E1__state_0(1);
		return (bool)1;
	}

IL_0073:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5519));
		__this->set_U3CU3E1__state_0((-1));
		// ZoomStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5520));
		PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 * L_11 = __this->get_U3CU3E4__this_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5525));
		NullCheck(L_11);
		PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5525));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5521));
		return (bool)0;
	}
}
// System.Object Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CZoomAndStopU3Ed__78_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m9FFD57AFE886777B99E176DE9582F5AA39F5CAFF (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CZoomAndStopU3Ed__78_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m9FFD57AFE886777B99E176DE9582F5AA39F5CAFF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CZoomAndStopU3Ed__78_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m9FFD57AFE886777B99E176DE9582F5AA39F5CAFF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_Reset_m80409250B2FCCD442213ACBCF3DBA31A19B5490C (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_Reset_m80409250B2FCCD442213ACBCF3DBA31A19B5490C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_Reset_m80409250B2FCCD442213ACBCF3DBA31A19B5490C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_Reset_m80409250B2FCCD442213ACBCF3DBA31A19B5490C_RuntimeMethod_var);
	}
}
// System.Object Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase/<ZoomAndStop>d__78::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_get_Current_mB05B0637AC8D59840ABA2AADF5A0937F73E04DCF (U3CZoomAndStopU3Ed__78_t35BF6F4AE34FDC855C1B25BC30ADB30BB0AF77C9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_get_Current_mB05B0637AC8D59840ABA2AADF5A0937F73E04DCF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CZoomAndStopU3Ed__78_System_Collections_IEnumerator_get_Current_mB05B0637AC8D59840ABA2AADF5A0937F73E04DCF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::get_IsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5526));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5527));
	{
		// private bool IsValid => navRectTransf != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5528));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_0 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5529));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5529));
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf_Initialize_mDCD64BFF82A96B562EAA64CCBB124BA23110C519 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_Initialize_mDCD64BFF82A96B562EAA64CCBB124BA23110C519_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_Initialize_mDCD64BFF82A96B562EAA64CCBB124BA23110C519_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5530));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5531));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5532));
		// if (IsValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5533));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5542));
		bool L_0 = PanZoomBaseRectTransf_get_IsValid_m6FCAABCED49D3F0E5E1DDDB7FA485851A9C83B07(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5542));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5534));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_005c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5535));
		// offset = navRectTransf.anchoredPosition; // pivot
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5536));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_2 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5543));
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = RectTransform_get_anchoredPosition_mCB2171DBADBC572F354CCFE3ACA19F9506F97907(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5543));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_offset_19(L_3);
		// scale = navRectTransf.localScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5537));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_4 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5544));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5544));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5545));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_6 = Vector2_op_Implicit_mEA1F75961E3D368418BA8CEB9C40E55C25BA3C28(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5545));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_scale_18(L_6);
		// originalRatio = new Vector3(scale.x, scale.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5538));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_7 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_8 = L_7->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_9 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_10 = L_9->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5546));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11;
		memset((&L_11), 0, sizeof(L_11));
		Vector3__ctor_m6AD8F21FFCC7723C6F507CCF2E4E2EFFC4871584((&L_11), L_8, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5546));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_originalRatio_37(L_11);
		// dynaZoomInvert = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5539));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_dynaZoomInvert_29((-1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5540));
	}

IL_005c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5541));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::ComputePanSpeed(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PanZoomBaseRectTransf_ComputePanSpeed_mCA43DC21C566CC1BC555A725889DC7071840A606 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, float ___uvCursorPos0, float ___maxSpeed1, float ___minDistFromCenterForAutoPan2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_ComputePanSpeed_mCA43DC21C566CC1BC555A725889DC7071840A606_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___uvCursorPos0), (&___maxSpeed1), (&___minDistFromCenterForAutoPan2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_ComputePanSpeed_mCA43DC21C566CC1BC555A725889DC7071840A606_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5547));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5548));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5549));
		// float centeredVal = (uvCursorPos - 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5550));
		float L_0 = ___uvCursorPos0;
		V_0 = ((float)il2cpp_codegen_subtract((float)L_0, (float)(0.5f)));
		// if (Mathf.Abs(centeredVal) < minDistFromCenterForAutoPan)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5551));
		float L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5560));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_2 = fabsf(L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5560));
		float L_3 = ___minDistFromCenterForAutoPan2;
		V_1 = (bool)((((float)L_2) < ((float)L_3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5552));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5553));
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5554));
		V_2 = (0.0f);
		goto IL_004d;
	}

IL_001f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5555));
		// float normalizedVal = (centeredVal - Mathf.Sign(centeredVal) * minDistFromCenterForAutoPan) / (Mathf.Sign(centeredVal) * (0.5f - minDistFromCenterForAutoPan));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5556));
		float L_5 = V_0;
		float L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5561));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_7 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5561));
		float L_8 = ___minDistFromCenterForAutoPan2;
		float L_9 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5562));
		float L_10 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5562));
		float L_11 = ___minDistFromCenterForAutoPan2;
		V_3 = ((float)((float)((float)il2cpp_codegen_subtract((float)L_5, (float)((float)il2cpp_codegen_multiply((float)L_7, (float)L_8))))/(float)((float)il2cpp_codegen_multiply((float)L_10, (float)((float)il2cpp_codegen_subtract((float)(0.5f), (float)L_11))))));
		// float speed = normalizedVal * normalizedVal * maxSpeed * Mathf.Sign(centeredVal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5557));
		float L_12 = V_3;
		float L_13 = V_3;
		float L_14 = ___maxSpeed1;
		float L_15 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5563));
		float L_16 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5563));
		V_4 = ((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)L_12, (float)L_13)), (float)L_14)), (float)L_16));
		// return speed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5558));
		float L_17 = V_4;
		V_2 = L_17;
		goto IL_004d;
	}

IL_004d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5559));
		float L_18 = V_2;
		return L_18;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::ZoomDir(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PanZoomBaseRectTransf_ZoomDir_mF66C319EEE829391B5133240D2FC7CDC06587BD9 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, bool ___zoomIn0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_ZoomDir_mF66C319EEE829391B5133240D2FC7CDC06587BD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___zoomIn0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_ZoomDir_mF66C319EEE829391B5133240D2FC7CDC06587BD9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5564));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5565));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5566));
		// return (zoomIn ? 1 : -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5567));
		bool L_0 = ___zoomIn0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = (-1);
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = 1;
	}

IL_0008:
	{
		V_0 = G_B3_0;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5568));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::ZoomIn()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf_ZoomIn_m5B27704D6AB71949EAA30D3A589D38C7660999FF (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_ZoomIn_m5B27704D6AB71949EAA30D3A589D38C7660999FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_ZoomIn_m5B27704D6AB71949EAA30D3A589D38C7660999FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5569));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5570));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5571));
		// ZoomInOut_RectTransform(zoomDir * zoomSpeed, cursorPos);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5572));
		float L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomDir_28();
		float L_1 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomSpeed_27();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_cursorPos_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5576));
		PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653(__this, ((float)il2cpp_codegen_multiply((float)L_0, (float)L_1)), L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5576));
		// PanHorizontally(ComputePanSpeed(cursorPos.x, panSpeedLeftRight, minDistFromCenterForAutoPan.x));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5573));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_3 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_cursorPos_17();
		float L_4 = L_3->get_x_0();
		float L_5 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_panSpeedLeftRight_5();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_6 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		float L_7 = L_6->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5577));
		float L_8 = VirtFuncInvoker3< float, float, float, float >::Invoke(14 /* System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ComputePanSpeed(System.Single,System.Single,System.Single) */, __this, L_4, L_5, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5577));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5578));
		PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D(__this, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5578));
		// PanVertically(ComputePanSpeed(cursorPos.y, panSpeedUpDown, minDistFromCenterForAutoPan.y));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5574));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_9 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_cursorPos_17();
		float L_10 = L_9->get_y_1();
		float L_11 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_panSpeedUpDown_6();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		float L_13 = L_12->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5579));
		float L_14 = VirtFuncInvoker3< float, float, float, float >::Invoke(14 /* System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ComputePanSpeed(System.Single,System.Single,System.Single) */, __this, L_10, L_11, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5579));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5580));
		PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D(__this, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5580));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5575));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::ZoomOut()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf_ZoomOut_mE8334F1F113D5EF442AE7BE29B9A69DE46EA83EA (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_ZoomOut_mE8334F1F113D5EF442AE7BE29B9A69DE46EA83EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_ZoomOut_mE8334F1F113D5EF442AE7BE29B9A69DE46EA83EA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5581));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5582));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5583));
		// ZoomInOut_RectTransform(zoomDir * zoomSpeed, new Vector2(0.5f, 0.5f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5584));
		float L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomDir_28();
		float L_1 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomSpeed_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5586));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2;
		memset((&L_2), 0, sizeof(L_2));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_2), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5586));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5587));
		PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653(__this, ((float)il2cpp_codegen_multiply((float)L_0, (float)L_1)), L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5587));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5585));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::UpdatePanZoom()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf_UpdatePanZoom_m83353C01FD2D09C003A1DB2D724BE0E61F1A011D (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_UpdatePanZoom_m83353C01FD2D09C003A1DB2D724BE0E61F1A011D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_UpdatePanZoom_m83353C01FD2D09C003A1DB2D724BE0E61F1A011D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5588));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5589));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5590));
		// offset = LimitPanning();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5591));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5595));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5595));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_offset_19(L_0);
		// navRectTransf.anchoredPosition = offset; // pivot
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5592));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_1 = __this->get_navRectTransf_45();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_offset_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5596));
		NullCheck(L_1);
		RectTransform_set_anchoredPosition_m4DD45DB1A97734A1F3A81E5F259638ECAF35962F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5596));
		// navRectTransf.localScale = new Vector3(scale.x, scale.y, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5593));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_3 = __this->get_navRectTransf_45();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_5 = L_4->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_6 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_7 = L_6->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5597));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8;
		memset((&L_8), 0, sizeof(L_8));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_8), L_5, L_7, (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5598));
		NullCheck(L_3);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_3, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5598));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5594));
		return;
	}
}
// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::LimitPanning()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Rect_t35B976DE901B5423C11705E156938EA27AB402CE  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	float V_5 = 0.0f;
	float V_6 = 0.0f;
	bool V_7 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	float V_12 = 0.0f;
	float V_13 = 0.0f;
	float V_14 = 0.0f;
	float V_15 = 0.0f;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_16;
	memset((&V_16), 0, sizeof(V_16));
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_17;
	memset((&V_17), 0, sizeof(V_17));
	bool V_18 = false;
	bool V_19 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_20;
	memset((&V_20), 0, sizeof(V_20));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_4), (&V_5), (&V_6), (&V_8), (&V_12), (&V_13), (&V_14), (&V_15), (&V_16), (&V_17));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_LimitPanning_mFA448363DDD5994F507E3456D2B41C7AF2A6E6B0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5599));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5600));
	int32_t G_B4_0 = 0;
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5601));
		// if (limitPanning && (navRectTransf.rect.size.x != 0) && (navRectTransf.rect.size.y != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5602));
		bool L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_limitPanning_22();
		if (!L_0)
		{
			goto IL_004c;
		}
	}
	{
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_1 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5655));
		NullCheck(L_1);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_2 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5655));
		V_1 = L_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5656));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5656));
		float L_4 = L_3.get_x_0();
		if ((((float)L_4) == ((float)(0.0f))))
		{
			goto IL_004c;
		}
	}
	{
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_5 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5657));
		NullCheck(L_5);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_6 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5657));
		V_1 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5658));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_7 = Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5658));
		float L_8 = L_7.get_y_1();
		G_B4_0 = ((((int32_t)((((float)L_8) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_004d;
	}

IL_004c:
	{
		G_B4_0 = 0;
	}

IL_004d:
	{
		V_0 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5603));
		bool L_9 = V_0;
		if (!L_9)
		{
			goto IL_035d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5604));
		// if (!isScrollText)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5605));
		bool L_10 = __this->get_isScrollText_47();
		V_2 = (bool)((((int32_t)L_10) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5606));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_01c0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5607));
		// float leftBounds = navRectTransf.rect.width * (scale.x - 1) / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5608));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_12 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5659));
		NullCheck(L_12);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_13 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5659));
		V_1 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5660));
		float L_14 = Rect_get_width_m54FF69FC2C086E2DC349ED091FD0D6576BFB1484((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5660));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_15 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_16 = L_15->get_x_0();
		V_3 = ((float)((float)((float)il2cpp_codegen_multiply((float)L_14, (float)((float)il2cpp_codegen_subtract((float)L_16, (float)(1.0f)))))/(float)(2.0f)));
		// float rightBounds = -leftBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5609));
		float L_17 = V_3;
		V_4 = ((-L_17));
		// offset.x = Mathf.Clamp(offset.x, Mathf.Min(leftBounds, rightBounds), Mathf.Max(leftBounds, rightBounds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5610));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_18 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_19 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		float L_20 = L_19->get_x_0();
		float L_21 = V_3;
		float L_22 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5661));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_23 = Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7(L_21, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5661));
		float L_24 = V_3;
		float L_25 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5662));
		float L_26 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5662));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5663));
		float L_27 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_20, L_23, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5663));
		L_18->set_x_0(L_27);
		// float lowerBounds = navRectTransf.rect.height * (scale.y - 1) / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5611));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_28 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5664));
		NullCheck(L_28);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_29 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5664));
		V_1 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5665));
		float L_30 = Rect_get_height_m088C36990E0A255C5D7DCE36575DCE23ABB364B5((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5665));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_31 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_32 = L_31->get_y_1();
		V_5 = ((float)((float)((float)il2cpp_codegen_multiply((float)L_30, (float)((float)il2cpp_codegen_subtract((float)L_32, (float)(1.0f)))))/(float)(2.0f)));
		// float upperBounds = -lowerBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5612));
		float L_33 = V_5;
		V_6 = ((-L_33));
		// offset.y = Mathf.Clamp(offset.y, Mathf.Min(lowerBounds, upperBounds), Mathf.Max(lowerBounds, upperBounds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5613));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_34 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_35 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		float L_36 = L_35->get_y_1();
		float L_37 = V_5;
		float L_38 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5666));
		float L_39 = Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7(L_37, L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5666));
		float L_40 = V_5;
		float L_41 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5667));
		float L_42 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_40, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5668));
		float L_43 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_36, L_39, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5668));
		L_34->set_y_1(L_43);
		// if (viewportRectTransf != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5614));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_44 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5669));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_45 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_44, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5669));
		V_7 = L_45;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5615));
		bool L_46 = V_7;
		if (!L_46)
		{
			goto IL_01bf;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5616));
		// Vector2 actualSize = (scale * navRectTransf.rect.size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5617));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_47 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_scale_18();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_48 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5670));
		NullCheck(L_48);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_49 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5670));
		V_1 = L_49;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5671));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_50 = Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5672));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_51 = Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4(L_47, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5672));
		V_8 = L_51;
		// if (actualSize.x < viewportRectTransf.rect.width)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5618));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_52 = V_8;
		float L_53 = L_52.get_x_0();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_54 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5673));
		NullCheck(L_54);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_55 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5673));
		V_1 = L_55;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5674));
		float L_56 = Rect_get_width_m54FF69FC2C086E2DC349ED091FD0D6576BFB1484((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5674));
		V_9 = (bool)((((float)L_53) < ((float)L_56))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5619));
		bool L_57 = V_9;
		if (!L_57)
		{
			goto IL_018a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5620));
		// offset.x = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5621));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_58 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		L_58->set_x_0((0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5622));
	}

IL_018a:
	{
		// if (actualSize.y < viewportRectTransf.rect.height)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5623));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_59 = V_8;
		float L_60 = L_59.get_y_1();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_61 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5675));
		NullCheck(L_61);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_62 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_61, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5675));
		V_1 = L_62;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5676));
		float L_63 = Rect_get_height_m088C36990E0A255C5D7DCE36575DCE23ABB364B5((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5676));
		V_10 = (bool)((((float)L_60) < ((float)L_63))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5624));
		bool L_64 = V_10;
		if (!L_64)
		{
			goto IL_01be;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5625));
		// offset.y = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5626));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_65 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		L_65->set_y_1((0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5627));
	}

IL_01be:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5628));
	}

IL_01bf:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5629));
	}

IL_01c0:
	{
		// if ((isScrollText) && (viewportRectTransf != null))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5630));
		bool L_66 = __this->get_isScrollText_47();
		if (!L_66)
		{
			goto IL_01d6;
		}
	}
	{
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_67 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5677));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_68 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_67, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5677));
		G_B16_0 = ((int32_t)(L_68));
		goto IL_01d7;
	}

IL_01d6:
	{
		G_B16_0 = 0;
	}

IL_01d7:
	{
		V_11 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5631));
		bool L_69 = V_11;
		if (!L_69)
		{
			goto IL_035c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5632));
		// float leftBounds = navRectTransf.rect.width * (scale.x - 1) / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5633));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_70 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5678));
		NullCheck(L_70);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_71 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_70, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5678));
		V_1 = L_71;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5679));
		float L_72 = Rect_get_width_m54FF69FC2C086E2DC349ED091FD0D6576BFB1484((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5679));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_73 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_74 = L_73->get_x_0();
		V_12 = ((float)((float)((float)il2cpp_codegen_multiply((float)L_72, (float)((float)il2cpp_codegen_subtract((float)L_74, (float)(1.0f)))))/(float)(2.0f)));
		// float rightBounds = -leftBounds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5634));
		float L_75 = V_12;
		V_13 = ((-L_75));
		// offset.x = Mathf.Clamp(offset.x, Mathf.Min(leftBounds, rightBounds), Mathf.Max(leftBounds, rightBounds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5635));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_76 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_77 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		float L_78 = L_77->get_x_0();
		float L_79 = V_12;
		float L_80 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5680));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_81 = Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7(L_79, L_80, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5680));
		float L_82 = V_12;
		float L_83 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5681));
		float L_84 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_82, L_83, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5681));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5682));
		float L_85 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_78, L_81, L_84, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5682));
		L_76->set_x_0(L_85);
		// float lowerBounds = navRectTransf.rect.height * scale.y - viewportRectTransf.rect.height;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5636));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_86 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5683));
		NullCheck(L_86);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_87 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_86, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5683));
		V_1 = L_87;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5684));
		float L_88 = Rect_get_height_m088C36990E0A255C5D7DCE36575DCE23ABB364B5((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5684));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_89 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_90 = L_89->get_y_1();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_91 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5685));
		NullCheck(L_91);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_92 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_91, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5685));
		V_1 = L_92;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5686));
		float L_93 = Rect_get_height_m088C36990E0A255C5D7DCE36575DCE23ABB364B5((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5686));
		V_14 = ((float)il2cpp_codegen_subtract((float)((float)il2cpp_codegen_multiply((float)L_88, (float)L_90)), (float)L_93));
		// float upperBounds = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5637));
		V_15 = (0.0f);
		// offset.y = Mathf.Clamp(offset.y, Mathf.Min(lowerBounds, upperBounds), Mathf.Max(lowerBounds, upperBounds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5638));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_94 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_95 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		float L_96 = L_95->get_y_1();
		float L_97 = V_14;
		float L_98 = V_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5687));
		float L_99 = Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7(L_97, L_98, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5687));
		float L_100 = V_14;
		float L_101 = V_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5688));
		float L_102 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_100, L_101, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5688));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5689));
		float L_103 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_96, L_99, L_102, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5689));
		L_94->set_y_1(L_103);
		// Vector2 actualSize = (scale * navRectTransf.rect.size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5639));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_104 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_scale_18();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_105 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5690));
		NullCheck(L_105);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_106 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_105, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5690));
		V_1 = L_106;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5691));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_107 = Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5691));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5692));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_108 = Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4(L_104, L_107, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5692));
		V_16 = L_108;
		// Vector2 tmpOffset = (viewportRectTransf.rect.size - actualSize) / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5640));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_109 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5693));
		NullCheck(L_109);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_110 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_109, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5693));
		V_1 = L_110;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5694));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_111 = Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5694));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_112 = V_16;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5695));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_113 = Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0(L_111, L_112, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5695));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5696));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_114 = Vector2_op_Division_m0961A935168EE6701E098E2B37013DFFF46A5077(L_113, (2.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5696));
		V_17 = L_114;
		// if (actualSize.x < viewportRectTransf.rect.width)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5641));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_115 = V_16;
		float L_116 = L_115.get_x_0();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_117 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5697));
		NullCheck(L_117);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_118 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_117, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5697));
		V_1 = L_118;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5698));
		float L_119 = Rect_get_width_m54FF69FC2C086E2DC349ED091FD0D6576BFB1484((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5698));
		V_18 = (bool)((((float)L_116) < ((float)L_119))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5642));
		bool L_120 = V_18;
		if (!L_120)
		{
			goto IL_0325;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5643));
		// offset.x = tmpOffset.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5644));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_121 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_122 = V_17;
		float L_123 = L_122.get_x_0();
		L_121->set_x_0(L_123);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5645));
	}

IL_0325:
	{
		// if (actualSize.y < viewportRectTransf.rect.height)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5646));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_124 = V_16;
		float L_125 = L_124.get_y_1();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_126 = __this->get_viewportRectTransf_46();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5699));
		NullCheck(L_126);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_127 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_126, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5699));
		V_1 = L_127;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5700));
		float L_128 = Rect_get_height_m088C36990E0A255C5D7DCE36575DCE23ABB364B5((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5700));
		V_19 = (bool)((((float)L_125) < ((float)L_128))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5647));
		bool L_129 = V_19;
		if (!L_129)
		{
			goto IL_035b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5648));
		// offset.y = tmpOffset.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5649));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_130 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_131 = V_17;
		float L_132 = L_131.get_y_1();
		L_130->set_y_1(L_132);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5650));
	}

IL_035b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5651));
	}

IL_035c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5652));
	}

IL_035d:
	{
		// return offset;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5653));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_133 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_offset_19();
		V_20 = L_133;
		goto IL_0367;
	}

IL_0367:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5654));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_134 = V_20;
		return L_134;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::ZoomInOut_RectTransform(System.Single,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653 (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, float ___speed0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___pivot1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Rect_t35B976DE901B5423C11705E156938EA27AB402CE  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___speed0), (&___pivot1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_ZoomInOut_RectTransform_m1F0AA2C06770BD7B9457F9DF4ACD6F73F1008653_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5701));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5702));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5703));
		// Vector2 oldScale = new Vector2(scale.x, scale.y); ;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5704));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_1 = L_0->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_3 = L_2->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5713));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_0), L_1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5713));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5705));
		// Vector2 newScale = new Vector2(scale.x + speed * originalRatio.x, scale.y + speed * originalRatio.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5706));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_5 = L_4->get_x_0();
		float L_6 = ___speed0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_7 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_originalRatio_37();
		float L_8 = L_7->get_x_2();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_9 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_10 = L_9->get_y_1();
		float L_11 = ___speed0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_originalRatio_37();
		float L_13 = L_12->get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5714));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_1), ((float)il2cpp_codegen_add((float)L_5, (float)((float)il2cpp_codegen_multiply((float)L_6, (float)L_8)))), ((float)il2cpp_codegen_add((float)L_10, (float)((float)il2cpp_codegen_multiply((float)L_11, (float)L_13)))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5714));
		// newScale = LimitScaling(newScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5707));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5715));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_15 = PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5(__this, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5715));
		V_1 = L_15;
		// Vector2 transfCursorPos = cursorPos - new Vector2(0.5f, 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5708));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_16 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_cursorPos_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5716));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_17;
		memset((&L_17), 0, sizeof(L_17));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_17), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5716));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5717));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_18 = Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5717));
		V_2 = L_18;
		// pivot = transfCursorPos * navRectTransf.rect.size;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5709));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_19 = V_2;
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_20 = __this->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5718));
		NullCheck(L_20);
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_21 = RectTransform_get_rect_mE5F283FCB99A66403AC1F0607CA49C156D73A15E(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5718));
		V_3 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5719));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_22 = Rect_get_size_m731642B8F03F6CE372A2C9E2E4A925450630606C((Rect_t35B976DE901B5423C11705E156938EA27AB402CE *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5719));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5720));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_23 = Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4(L_19, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5720));
		___pivot1 = L_23;
		// offsetRate_Zoom = (oldScale - newScale) * pivot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5710));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_24 = V_0;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_25 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5721));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_26 = Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5721));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_27 = ___pivot1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5722));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_28 = Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4(L_26, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5722));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_offsetRate_Zoom_20(L_28);
		// scale = newScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5711));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_29 = V_1;
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_scale_18(L_29);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5712));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::UpdateCursorPosInHitBox()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBaseRectTransf_UpdateCursorPosInHitBox_mBCA4534A82AF7D807A5128EE4130547D3F51310B (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf_UpdateCursorPosInHitBox_mBCA4534A82AF7D807A5128EE4130547D3F51310B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	float V_5 = 0.0f;
	float V_6 = 0.0f;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf_UpdateCursorPosInHitBox_mBCA4534A82AF7D807A5128EE4130547D3F51310B_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5723));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5724));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5725));
		// bool objIsHit = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5726));
		V_0 = (bool)0;
	}

IL_0003:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5727));
			// if (myEyeTarget.IsLookedAt)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5728));
			EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_myEyeTarget_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5751));
			NullCheck(L_0);
			bool L_1 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(L_0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5751));
			V_1 = L_1;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5729));
			bool L_2 = V_1;
			if (!L_2)
			{
				goto IL_013b;
			}
		}

IL_0016:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5730));
			// objIsHit = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5731));
			V_0 = (bool)1;
			// Vector3 center = gameObject.transform.position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5732));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5752));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5752));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5753));
			NullCheck(L_3);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5753));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5754));
			NullCheck(L_4);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5754));
			V_2 = L_5;
			// Vector3 halfsize = gameObject.transform.lossyScale / 2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5733));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5755));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5755));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5756));
			NullCheck(L_6);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5756));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5757));
			NullCheck(L_7);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5757));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5758));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_8, (2.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5758));
			V_3 = L_9;
			// Vector3 transfHitPnt = CoreServices.InputSystem.EyeGazeProvider.HitPosition - center;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5734));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5759));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_10 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5759));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5760));
			NullCheck(L_10);
			RuntimeObject* L_11 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5760));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5761));
			NullCheck(L_11);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5761));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5762));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_12, L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5762));
			V_4 = L_14;
			// transfHitPnt = Quaternion.AngleAxis(-(gameObject.transform.rotation.eulerAngles.y - 180), Vector3.up) * transfHitPnt;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5735));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5763));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5763));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5764));
			NullCheck(L_15);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_16 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5764));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5765));
			NullCheck(L_16);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5765));
			V_7 = L_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5766));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5766));
			float L_19 = L_18.get_y_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5767));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5767));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5768));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_21 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(((-((float)il2cpp_codegen_subtract((float)L_19, (float)(180.0f))))), L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5768));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5769));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_21, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5769));
			V_4 = L_23;
			// transfHitPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.x, Vector3.right) * transfHitPnt;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5736));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5770));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5770));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5771));
			NullCheck(L_24);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5771));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5772));
			NullCheck(L_25);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_26 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5772));
			V_7 = L_26;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5773));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5773));
			float L_28 = L_27.get_x_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5774));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_get_right_m6DD9559CA0C75BBA42D9140021C4C2A9AAA9B3F5(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5774));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5775));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_28, L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5775));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5776));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_30, L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5776));
			V_4 = L_32;
			// float uvx = 1 - (Mathf.Clamp(transfHitPnt.x, -halfsize.x, halfsize.x) + halfsize.x) / (2 * halfsize.x);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5737));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = V_4;
			float L_34 = L_33.get_x_2();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = V_3;
			float L_36 = L_35.get_x_2();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = V_3;
			float L_38 = L_37.get_x_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5777));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			float L_39 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_34, ((-L_36)), L_38, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5777));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_3;
			float L_41 = L_40.get_x_2();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = V_3;
			float L_43 = L_42.get_x_2();
			V_5 = ((float)il2cpp_codegen_subtract((float)(1.0f), (float)((float)((float)((float)il2cpp_codegen_add((float)L_39, (float)L_41))/(float)((float)il2cpp_codegen_multiply((float)(2.0f), (float)L_43))))));
			// float uvy = (Mathf.Clamp(transfHitPnt.y, -halfsize.y, halfsize.y) + halfsize.y) / (2 * halfsize.y);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5738));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_44 = V_4;
			float L_45 = L_44.get_y_3();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_46 = V_3;
			float L_47 = L_46.get_y_3();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = V_3;
			float L_49 = L_48.get_y_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5778));
			float L_50 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_45, ((-L_47)), L_49, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5778));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = V_3;
			float L_52 = L_51.get_y_3();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = V_3;
			float L_54 = L_53.get_y_3();
			V_6 = ((float)((float)((float)il2cpp_codegen_add((float)L_50, (float)L_52))/(float)((float)il2cpp_codegen_multiply((float)(2.0f), (float)L_54))));
			// cursorPos = new Vector2(uvx, uvy);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5739));
			float L_55 = V_5;
			float L_56 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5779));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_57;
			memset((&L_57), 0, sizeof(L_57));
			Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_57), L_55, L_56, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5779));
			((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_cursorPos_17(L_57);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5740));
			goto IL_013f;
		}

IL_013b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5741));
			// objIsHit = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5742));
			V_0 = (bool)0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5743));
		}

IL_013f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5744));
			goto IL_0152;
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__exception_local = (Exception_t *)e.ex;
		if(il2cpp_codegen_class_is_assignable_from (AssertionException_t2E33237ABD721A57D41FC8745BCA4573DB40626E_il2cpp_TypeInfo_var, il2cpp_codegen_object_class(e.ex)))
			goto CATCH_0142;
		throw e;
	}

CATCH_0142:
	{ // begin catch(UnityEngine.Assertions.AssertionException)
		STORE_TRY_ID(methodExecutionContext, -1);
		// catch (UnityEngine.Assertions.AssertionException)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5745));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5746));
		// Debug.LogError(">> AssertionException in PanZoomBase");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5780));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(_stringLiteral5884DBF8FD35C0F3AF29A837AE9F9125CCBA6D57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5780));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5748));
		goto IL_0152;
	} // end catch (depth: 1)

IL_0152:
	{
		// return objIsHit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5749));
		bool L_58 = V_0;
		V_8 = L_58;
		goto IL_0157;
	}

IL_0157:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5750));
		bool L_59 = V_8;
		return L_59;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseRectTransf::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F (PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5781));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5782));
	{
		// internal RectTransform navRectTransf = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5783));
		__this->set_navRectTransf_45((RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *)NULL);
		// internal RectTransform viewportRectTransf = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5784));
		__this->set_viewportRectTransf_46((RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *)NULL);
		// internal bool isScrollText = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5785));
		__this->set_isScrollText_47((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5786));
		PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5786));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::get_TextureShaderProperty()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* PanZoomBaseTexture_get_TextureShaderProperty_m3A749A1F9159EA12E0ABA1582E0552E93D56A57D (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_get_TextureShaderProperty_m3A749A1F9159EA12E0ABA1582E0552E93D56A57D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_get_TextureShaderProperty_m3A749A1F9159EA12E0ABA1582E0552E93D56A57D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5787));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5788));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5789));
		// get { return textureShaderProperty; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5790));
		String_t* L_0 = __this->get_textureShaderProperty_48();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return textureShaderProperty; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5791));
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::set_TextureShaderProperty(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_set_TextureShaderProperty_m9020EF5F2CEDA280BF6810BD03C84F0FADD0078E (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_set_TextureShaderProperty_m9020EF5F2CEDA280BF6810BD03C84F0FADD0078E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_set_TextureShaderProperty_m9020EF5F2CEDA280BF6810BD03C84F0FADD0078E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5792));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5793));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5794));
		// textureShaderProperty = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5795));
		String_t* L_0 = ___value0;
		__this->set_textureShaderProperty_48(L_0);
		// textureTargetID = Shader.PropertyToID(textureShaderProperty);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5796));
		String_t* L_1 = __this->get_textureShaderProperty_48();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5798));
		int32_t L_2 = Shader_PropertyToID_m831E5B48743620DB9E3E3DD15A8DEA483981DD45(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5798));
		__this->set_textureTargetID_47(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5797));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::get_IsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5799));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5800));
	int32_t G_B3_0 = 0;
	{
		// private bool IsValid => (textureRenderer != null) && textureRenderer.enabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5801));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_0 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5802));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5802));
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_2 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5803));
		NullCheck(L_2);
		bool L_3 = Renderer_get_enabled_m40E07BB15DA58D2EF6F6796C6778163107DD7E1B(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5803));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		return (bool)G_B3_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_Initialize_mCFE17F1C05062592F2707BE630F513E88549FAB5 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_Initialize_mCFE17F1C05062592F2707BE630F513E88549FAB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_Initialize_mCFE17F1C05062592F2707BE630F513E88549FAB5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5804));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5805));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5806));
		// if (aspectRatio == -1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5807));
		float L_0 = __this->get_aspectRatio_50();
		V_0 = (bool)((((float)L_0) == ((float)(-1.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5808));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0023;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5809));
		// Initialize(defaultAspectRatio);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5810));
		float L_2 = __this->get_defaultAspectRatio_49();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5816));
		PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5816));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5811));
		goto IL_0032;
	}

IL_0023:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5812));
		// Initialize(aspectRatio);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5813));
		float L_3 = __this->get_aspectRatio_50();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5817));
		PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5817));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5814));
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5815));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::Initialize(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, float ___newAspectRatio0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * V_1 = NULL;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newAspectRatio0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_Initialize_m0DD3A2AFF0CEBF8CB30E4D91BBABFE32F05EAB86_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5818));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5819));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5820));
		// if ((IsValid) && (aspectRatio != 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5821));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5838));
		bool L_0 = PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5838));
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		float L_1 = __this->get_aspectRatio_50();
		G_B3_0 = ((((int32_t)((((float)L_1) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5822));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00d6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5823));
		// aspectRatio = newAspectRatio;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5824));
		float L_3 = ___newAspectRatio0;
		__this->set_aspectRatio_50(L_3);
		// ZoomStop();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5839));
		PanZoomBase_ZoomStop_mBA87D459E43B8389D8B02DE80DDA559A268A0DF7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5839));
		// scale = new Vector2(textureRenderer.transform.localScale.x / aspectRatio, 1f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5826));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_4 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5840));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5840));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5841));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5841));
		float L_7 = L_6.get_x_2();
		float L_8 = __this->get_aspectRatio_50();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5842));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_9), ((float)((float)L_7/(float)L_8)), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5842));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_scale_18(L_9);
		// textureRenderer.materials[0].SetTextureScale(textureTargetID, scale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5827));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_10 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5843));
		NullCheck(L_10);
		MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398* L_11 = Renderer_get_materials_m5A8C7D4A4D87E69A1C03E72B43C6902762312760(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5843));
		NullCheck(L_11);
		int32_t L_12 = 0;
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_13 = (L_11)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		int32_t L_14 = __this->get_textureTargetID_47();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_15 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_scale_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5844));
		NullCheck(L_13);
		Material_SetTextureScale_m30A521475E4FF45858D27B8DA562B06165734A9E(L_13, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5844));
		// originalRatio = new Vector3(scale.x, scale.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5828));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_16 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_17 = L_16->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_18 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_19 = L_18->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5845));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20;
		memset((&L_20), 0, sizeof(L_20));
		Vector3__ctor_m6AD8F21FFCC7723C6F507CCF2E4E2EFFC4871584((&L_20), L_17, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5845));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_originalRatio_37(L_20);
		// BoxCollider bcoll = textureRenderer.gameObject.GetComponent<BoxCollider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5829));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_21 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5846));
		NullCheck(L_21);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5846));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5847));
		NullCheck(L_22);
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_23 = GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55(L_22, /*hidden argument*/GameObject_GetComponent_TisBoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA_mC89D6D0649D82CB969262590D25615C13052FF55_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5847));
		V_1 = L_23;
		// if (bcoll != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5830));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_24 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5848));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_25 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_24, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5848));
		V_2 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5831));
		bool L_26 = V_2;
		if (!L_26)
		{
			goto IL_00d5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5832));
		// origColliderSize = bcoll.size;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5833));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_27 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5849));
		NullCheck(L_27);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = BoxCollider_get_size_m1C7DA815D3BA9DDB3D92A58BEEFE2FCBA5206FE2(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5849));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5850));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_29;
		memset((&L_29), 0, sizeof(L_29));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_29), L_28, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5850));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_origColliderSize_13(L_29);
		// MyCollider = bcoll;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5834));
		BoxCollider_t2DF257BBBFCABE0B9D78B21D238298D1942BFBAA * L_30 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5851));
		PanZoomBase_set_MyCollider_mDB233F207C1994059DB477B8F0D8BF2E8AE1F2AD(__this, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5851));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5835));
	}

IL_00d5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5836));
	}

IL_00d6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5837));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::ComputePanSpeed(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PanZoomBaseTexture_ComputePanSpeed_m7DA2DDB21A887B7280B3CD72F9B3485DD98B6D2D (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, float ___uvCursorPos0, float ___maxSpeed1, float ___minDistFromCenterForAutoPan2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_ComputePanSpeed_m7DA2DDB21A887B7280B3CD72F9B3485DD98B6D2D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	bool V_1 = false;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___uvCursorPos0), (&___maxSpeed1), (&___minDistFromCenterForAutoPan2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_ComputePanSpeed_m7DA2DDB21A887B7280B3CD72F9B3485DD98B6D2D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5852));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5853));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5854));
		// float centeredVal = (uvCursorPos - 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5855));
		float L_0 = ___uvCursorPos0;
		V_0 = ((float)il2cpp_codegen_subtract((float)L_0, (float)(0.5f)));
		// if (Mathf.Abs(centeredVal) < minDistFromCenterForAutoPan)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5856));
		float L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5865));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_2 = fabsf(L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5865));
		float L_3 = ___minDistFromCenterForAutoPan2;
		V_1 = (bool)((((float)L_2) < ((float)L_3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5857));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5858));
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5859));
		V_2 = (0.0f);
		goto IL_004d;
	}

IL_001f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5860));
		// float normalizedVal = (centeredVal - Mathf.Sign(centeredVal) * minDistFromCenterForAutoPan) / (Mathf.Sign(centeredVal) * (0.5f - minDistFromCenterForAutoPan));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5861));
		float L_5 = V_0;
		float L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5866));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_7 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5866));
		float L_8 = ___minDistFromCenterForAutoPan2;
		float L_9 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5867));
		float L_10 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5867));
		float L_11 = ___minDistFromCenterForAutoPan2;
		V_3 = ((float)((float)((float)il2cpp_codegen_subtract((float)L_5, (float)((float)il2cpp_codegen_multiply((float)L_7, (float)L_8))))/(float)((float)il2cpp_codegen_multiply((float)L_10, (float)((float)il2cpp_codegen_subtract((float)(0.5f), (float)L_11))))));
		// float speed = normalizedVal * normalizedVal * maxSpeed * Mathf.Sign(centeredVal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5862));
		float L_12 = V_3;
		float L_13 = V_3;
		float L_14 = ___maxSpeed1;
		float L_15 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5868));
		float L_16 = Mathf_Sign_m6FA1D12786BEE0419D4B9426E5E4955F286BC8D3(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5868));
		V_4 = ((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)L_12, (float)L_13)), (float)L_14)), (float)L_16));
		// return speed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5863));
		float L_17 = V_4;
		V_2 = L_17;
		goto IL_004d;
	}

IL_004d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5864));
		float L_18 = V_2;
		return L_18;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::UpdatePanZoom()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_UpdatePanZoom_mBD748BDEA92BD2B564BE6014F8DD693B725F99C0 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_UpdatePanZoom_mBD748BDEA92BD2B564BE6014F8DD693B725F99C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_UpdatePanZoom_mBD748BDEA92BD2B564BE6014F8DD693B725F99C0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5869));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5870));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5871));
		// if (IsValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5872));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5899));
		bool L_0 = PanZoomBaseTexture_get_IsValid_m90D9B973A634E17401E8D37BCA46DACEDBC9F545(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5899));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5873));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0159;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5874));
		// float leftBounds = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5875));
		V_1 = (0.0f);
		// float lowerBounds = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5876));
		V_2 = (0.0f);
		// float rightBounds = 1 - scale.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5877));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_3 = L_2->get_x_0();
		V_3 = ((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_3));
		// float upperBounds = 1 - scale.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5878));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_5 = L_4->get_y_1();
		V_4 = ((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_5));
		// if (scale.x >= 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5879));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_6 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_7 = L_6->get_x_0();
		V_5 = (bool)((((int32_t)((!(((float)L_7) >= ((float)(1.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5880));
		bool L_8 = V_5;
		if (!L_8)
		{
			goto IL_0081;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5881));
		// offset.x = (1 - scale.x) / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5882));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_9 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_10 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_11 = L_10->get_x_0();
		L_9->set_x_0(((float)((float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_11))/(float)(2.0f))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5883));
		goto IL_00ac;
	}

IL_0081:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5884));
		// offset.x = Mathf.Clamp(offset.x, Mathf.Min(leftBounds, rightBounds), Mathf.Max(leftBounds, rightBounds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5885));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_13 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		float L_14 = L_13->get_x_0();
		float L_15 = V_1;
		float L_16 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5900));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_17 = Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7(L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5900));
		float L_18 = V_1;
		float L_19 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5901));
		float L_20 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5901));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5902));
		float L_21 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_14, L_17, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5902));
		L_12->set_x_0(L_21);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5886));
	}

IL_00ac:
	{
		// if (scale.y >= 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5887));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_22 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_23 = L_22->get_y_1();
		V_6 = (bool)((((int32_t)((!(((float)L_23) >= ((float)(1.0f))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5888));
		bool L_24 = V_6;
		if (!L_24)
		{
			goto IL_00ed;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5889));
		// offset.y = (1 - scale.y) / 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5890));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_25 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_26 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_27 = L_26->get_y_1();
		L_25->set_y_1(((float)((float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_27))/(float)(2.0f))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5891));
		goto IL_011a;
	}

IL_00ed:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5892));
		// offset.y = Mathf.Clamp(offset.y, Mathf.Min(lowerBounds, upperBounds), Mathf.Max(lowerBounds, upperBounds));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5893));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_28 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_29 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_offset_19();
		float L_30 = L_29->get_y_1();
		float L_31 = V_2;
		float L_32 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5903));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_33 = Mathf_Min_mCF9BE0E9CAC9F18D207692BB2DAC7F3E1D4E1CB7(L_31, L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5903));
		float L_34 = V_2;
		float L_35 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5904));
		float L_36 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_34, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5904));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5905));
		float L_37 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_30, L_33, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5905));
		L_28->set_y_1(L_37);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5894));
	}

IL_011a:
	{
		// textureRenderer.materials[0].SetTextureOffset(textureTargetID, offset); // Pan
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5895));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_38 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5906));
		NullCheck(L_38);
		MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398* L_39 = Renderer_get_materials_m5A8C7D4A4D87E69A1C03E72B43C6902762312760(L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5906));
		NullCheck(L_39);
		int32_t L_40 = 0;
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_41 = (L_39)->GetAt(static_cast<il2cpp_array_size_t>(L_40));
		int32_t L_42 = __this->get_textureTargetID_47();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_43 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_offset_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5907));
		NullCheck(L_41);
		Material_SetTextureOffset_m3E9C91ED11CB6323252AF6B5CB15CCD497EF10BB(L_41, L_42, L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5907));
		// textureRenderer.materials[0].SetTextureScale(textureTargetID, scale); // Zoom
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5896));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_44 = __this->get_textureRenderer_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5908));
		NullCheck(L_44);
		MaterialU5BU5D_tD2350F98F2A1BB6C7A5FBFE1474DFC47331AB398* L_45 = Renderer_get_materials_m5A8C7D4A4D87E69A1C03E72B43C6902762312760(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5908));
		NullCheck(L_45);
		int32_t L_46 = 0;
		Material_tF7DB3BF0C24DEC2FE0CB51E5DF5053D5223C8598 * L_47 = (L_45)->GetAt(static_cast<il2cpp_array_size_t>(L_46));
		int32_t L_48 = __this->get_textureTargetID_47();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_49 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_scale_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5909));
		NullCheck(L_47);
		Material_SetTextureScale_m30A521475E4FF45858D27B8DA562B06165734A9E(L_47, L_48, L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5909));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5897));
	}

IL_0159:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5898));
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::ZoomDir(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PanZoomBaseTexture_ZoomDir_mE5C715080FA4C1B08016EE4DD2CA5909C81C274A (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, bool ___zoomIn0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_ZoomDir_mE5C715080FA4C1B08016EE4DD2CA5909C81C274A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___zoomIn0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_ZoomDir_mE5C715080FA4C1B08016EE4DD2CA5909C81C274A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5910));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5911));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5912));
		// return (zoomIn ? -1 : 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5913));
		bool L_0 = ___zoomIn0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = 1;
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = (-1);
	}

IL_0008:
	{
		V_0 = G_B3_0;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5914));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::ZoomIn()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_ZoomIn_m6E7E401773DB9EAA655FDD764EF512352E1C3F0E (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_ZoomIn_m6E7E401773DB9EAA655FDD764EF512352E1C3F0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_ZoomIn_m6E7E401773DB9EAA655FDD764EF512352E1C3F0E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5915));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5916));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5917));
		// if (isZooming)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5918));
		bool L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_isZooming_34();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5919));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0079;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5920));
		// ZoomInOut(zoomDir * zoomSpeed, cursorPos);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5921));
		float L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomDir_28();
		float L_3 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomSpeed_27();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_cursorPos_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5926));
		PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36(__this, ((float)il2cpp_codegen_multiply((float)L_2, (float)L_3)), L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5926));
		// PanHorizontally(ComputePanSpeed(cursorPos.x, panSpeedLeftRight, minDistFromCenterForAutoPan.x));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5922));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_5 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_cursorPos_17();
		float L_6 = L_5->get_x_0();
		float L_7 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_panSpeedLeftRight_5();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_8 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		float L_9 = L_8->get_x_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5927));
		float L_10 = VirtFuncInvoker3< float, float, float, float >::Invoke(14 /* System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ComputePanSpeed(System.Single,System.Single,System.Single) */, __this, L_6, L_7, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5927));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5928));
		PanZoomBase_PanHorizontally_mC434C0EA17B472DF3B0713FAC5196A3CF1E1C91D(__this, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5928));
		// PanVertically(ComputePanSpeed(cursorPos.y, panSpeedUpDown, minDistFromCenterForAutoPan.y));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5923));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_11 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_cursorPos_17();
		float L_12 = L_11->get_y_1();
		float L_13 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_panSpeedUpDown_6();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_14 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		float L_15 = L_14->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5929));
		float L_16 = VirtFuncInvoker3< float, float, float, float >::Invoke(14 /* System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBase::ComputePanSpeed(System.Single,System.Single,System.Single) */, __this, L_12, L_13, L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5929));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5930));
		PanZoomBase_PanVertically_m22726BEA5D1B653D1D8203892F035DB7CD132C7D(__this, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5930));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5924));
	}

IL_0079:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5925));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::ZoomOut()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_ZoomOut_mEFEAABDE72ACA5C1F7DD588214EF68A2BA96FC9B (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_ZoomOut_mEFEAABDE72ACA5C1F7DD588214EF68A2BA96FC9B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_ZoomOut_mEFEAABDE72ACA5C1F7DD588214EF68A2BA96FC9B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5931));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5932));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5933));
		// if (isZooming)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5934));
		bool L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_isZooming_34();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5935));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5936));
		// ZoomInOut(zoomSpeed, new Vector2(0.5f, 0.5f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5937));
		float L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_zoomSpeed_27();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5940));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_3), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5940));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5941));
		PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36(__this, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5941));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5938));
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5939));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::ZoomInOut(System.Single,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36 (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, float ___speed0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___pivot1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___speed0), (&___pivot1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_ZoomInOut_m3B817C6D1F5C04F82B803DC418BDD4891F41EA36_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5942));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5943));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5944));
		// Vector2 oldScale = new Vector2(scale.x, scale.y); ;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5945));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_1 = L_0->get_x_0();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_3 = L_2->get_y_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5952));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_0), L_1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5952));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5946));
		// Vector2 newScale = new Vector2(scale.x + speed * originalRatio.x, scale.y + speed * originalRatio.y);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5947));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_5 = L_4->get_x_0();
		float L_6 = ___speed0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_7 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_originalRatio_37();
		float L_8 = L_7->get_x_2();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_9 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_scale_18();
		float L_10 = L_9->get_y_1();
		float L_11 = ___speed0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_originalRatio_37();
		float L_13 = L_12->get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5953));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_1), ((float)il2cpp_codegen_add((float)L_5, (float)((float)il2cpp_codegen_multiply((float)L_6, (float)L_8)))), ((float)il2cpp_codegen_add((float)L_10, (float)((float)il2cpp_codegen_multiply((float)L_11, (float)L_13)))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5953));
		// newScale = LimitScaling(newScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5948));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5954));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_15 = PanZoomBase_LimitScaling_m3584B04144A5A2ED6937FC462A5F06F7A5EB39E5(__this, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5954));
		V_1 = L_15;
		// offsetRate_Zoom = (oldScale - newScale) * pivot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5949));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_16 = V_0;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_17 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5955));
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_18 = Vector2_op_Subtraction_m2B347E4311EDBBBF27573E34899D2492E6B063C0(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5955));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_19 = ___pivot1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5956));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_20 = Vector2_op_Multiply_mEDF9FDDF3BFFAEC997FBCDE5FA34871F2955E7C4(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5956));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_offsetRate_Zoom_20(L_20);
		// scale = newScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5950));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_21 = V_1;
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_scale_18(L_21);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5951));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::UpdateCursorPosInHitBox()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PanZoomBaseTexture_UpdateCursorPosInHitBox_m1BC9CBDCA8BFDE858AC59C0EA900D10142B071EC (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture_UpdateCursorPosInHitBox_m1BC9CBDCA8BFDE858AC59C0EA900D10142B071EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	float V_5 = 0.0f;
	float V_6 = 0.0f;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture_UpdateCursorPosInHitBox_m1BC9CBDCA8BFDE858AC59C0EA900D10142B071EC_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5957));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5958));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5959));
		// bool objIsHit = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5960));
		V_0 = (bool)0;
	}

IL_0003:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5961));
			// if (myEyeTarget.IsLookedAt)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5962));
			EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_myEyeTarget_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5987));
			NullCheck(L_0);
			bool L_1 = EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline(L_0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5987));
			V_1 = L_1;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5963));
			bool L_2 = V_1;
			if (!L_2)
			{
				goto IL_0190;
			}
		}

IL_0016:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5964));
			// objIsHit = true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5965));
			V_0 = (bool)1;
			// Vector3 center = gameObject.transform.position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5966));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5988));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5988));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5989));
			NullCheck(L_3);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5989));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5990));
			NullCheck(L_4);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5990));
			V_2 = L_5;
			// Vector3 halfsize = gameObject.transform.lossyScale / 2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5967));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5991));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5991));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5992));
			NullCheck(L_6);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5992));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5993));
			NullCheck(L_7);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Transform_get_lossyScale_m9C2597B28BE066FC061B7D7508750E5D5EA9850F(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5993));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5994));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_8, (2.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5994));
			V_3 = L_9;
			// Vector3 transfHitPnt = CoreServices.InputSystem.EyeGazeProvider.HitPosition - center;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5968));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5995));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_10 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5995));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5996));
			NullCheck(L_10);
			RuntimeObject* L_11 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5996));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5997));
			NullCheck(L_11);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(8 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_HitPosition() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5997));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5998));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_12, L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5998));
			V_4 = L_14;
			// transfHitPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.y, Vector3.down) * transfHitPnt;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5969));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5999));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5999));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6000));
			NullCheck(L_15);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_16 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6000));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6001));
			NullCheck(L_16);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6001));
			V_7 = L_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6002));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6002));
			float L_19 = L_18.get_y_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6003));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_get_down_m3F76A48E5B7C82B35EE047375538AFD91A305F55(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6003));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6004));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_21 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_19, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6004));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6005));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_21, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6005));
			V_4 = L_23;
			// transfHitPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.x, Vector3.left) * transfHitPnt;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5970));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6006));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6006));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6007));
			NullCheck(L_24);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6007));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6008));
			NullCheck(L_25);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_26 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6008));
			V_7 = L_26;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6009));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6009));
			float L_28 = L_27.get_x_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6010));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_get_left_m74B52D8CFD8C62138067B2EB6846B6E9E51B7C20(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6010));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6011));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_28, L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6011));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6012));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_30, L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6012));
			V_4 = L_32;
			// transfHitPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.z, Vector3.back) * transfHitPnt;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5971));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6013));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_33 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6013));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6014));
			NullCheck(L_33);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_34 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6014));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6015));
			NullCheck(L_34);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_35 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6015));
			V_7 = L_35;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6016));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6016));
			float L_37 = L_36.get_z_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6017));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_38 = Vector3_get_back_mE7EF8625637E6F8B9E6B42A6AE140777C51E02F7(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6017));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6018));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_39 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_37, L_38, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6018));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6019));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_41 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_39, L_40, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6019));
			V_4 = L_41;
			// transfHitPnt = Quaternion.AngleAxis(gameObject.transform.rotation.eulerAngles.z, Vector3.forward) * transfHitPnt;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5972));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6020));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_42 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6020));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6021));
			NullCheck(L_42);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_43 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6021));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6022));
			NullCheck(L_43);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_44 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_43, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6022));
			V_7 = L_44;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6023));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6023));
			float L_46 = L_45.get_z_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6024));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6024));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6025));
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_48 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0(L_46, L_47, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6025));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6026));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_48, L_49, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6026));
			V_4 = L_50;
			// float uvx = (Mathf.Clamp(transfHitPnt.x, -halfsize.x, halfsize.x) + halfsize.x) / (2 * halfsize.x);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5973));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = V_4;
			float L_52 = L_51.get_x_2();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = V_3;
			float L_54 = L_53.get_x_2();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = V_3;
			float L_56 = L_55.get_x_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6027));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			float L_57 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_52, ((-L_54)), L_56, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6027));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_58 = V_3;
			float L_59 = L_58.get_x_2();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = V_3;
			float L_61 = L_60.get_x_2();
			V_5 = ((float)((float)((float)il2cpp_codegen_add((float)L_57, (float)L_59))/(float)((float)il2cpp_codegen_multiply((float)(2.0f), (float)L_61))));
			// float uvy = (Mathf.Clamp(transfHitPnt.y, -halfsize.y, halfsize.y) + halfsize.y) / (2 * halfsize.y);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5974));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_62 = V_4;
			float L_63 = L_62.get_y_3();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_64 = V_3;
			float L_65 = L_64.get_y_3();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = V_3;
			float L_67 = L_66.get_y_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6028));
			float L_68 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_63, ((-L_65)), L_67, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6028));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_69 = V_3;
			float L_70 = L_69.get_y_3();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_71 = V_3;
			float L_72 = L_71.get_y_3();
			V_6 = ((float)((float)((float)il2cpp_codegen_add((float)L_68, (float)L_70))/(float)((float)il2cpp_codegen_multiply((float)(2.0f), (float)L_72))));
			// cursorPos = new Vector2(uvx, uvy);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5975));
			float L_73 = V_5;
			float L_74 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6029));
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_75;
			memset((&L_75), 0, sizeof(L_75));
			Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_75), L_73, L_74, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6029));
			((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_cursorPos_17(L_75);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5976));
			goto IL_0194;
		}

IL_0190:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5977));
			// objIsHit = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5978));
			V_0 = (bool)0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5979));
		}

IL_0194:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5980));
			goto IL_01a7;
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__exception_local = (Exception_t *)e.ex;
		if(il2cpp_codegen_class_is_assignable_from (AssertionException_t2E33237ABD721A57D41FC8745BCA4573DB40626E_il2cpp_TypeInfo_var, il2cpp_codegen_object_class(e.ex)))
			goto CATCH_0197;
		throw e;
	}

CATCH_0197:
	{ // begin catch(UnityEngine.Assertions.AssertionException)
		STORE_TRY_ID(methodExecutionContext, -1);
		// catch (UnityEngine.Assertions.AssertionException)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5981));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5982));
		// Debug.LogError(">> AssertionException in PanZoomBase");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5983));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6030));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(_stringLiteral5884DBF8FD35C0F3AF29A837AE9F9125CCBA6D57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6030));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5984));
		goto IL_01a7;
	} // end catch (depth: 1)

IL_01a7:
	{
		// return objIsHit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5985));
		bool L_76 = V_0;
		V_8 = L_76;
		goto IL_01ac;
	}

IL_01ac:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 5986));
		bool L_77 = V_8;
		return L_77;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomBaseTexture::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C (PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6031));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6032));
	{
		// protected Renderer textureRenderer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6033));
		__this->set_textureRenderer_45((Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 *)NULL);
		// private int textureTargetID = Shader.PropertyToID(DefaultTextureShaderProperty);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6034));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6038));
		int32_t L_0 = Shader_PropertyToID_m831E5B48743620DB9E3E3DD15A8DEA483981DD45(_stringLiteralC510EA100EEE1C261FE63B56E1F3390BFB85F481, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6038));
		__this->set_textureTargetID_47(L_0);
		// private string textureShaderProperty = DefaultTextureShaderProperty;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6035));
		__this->set_textureShaderProperty_48(_stringLiteralC510EA100EEE1C261FE63B56E1F3390BFB85F481);
		// private float defaultAspectRatio = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6036));
		__this->set_defaultAspectRatio_49((1.0f));
		// private float aspectRatio = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6037));
		__this->set_aspectRatio_50((-1.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6039));
		PanZoomBase__ctor_m65A0F7BABDBB12AD982FFD6C7C51BE053C7F9530(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6039));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomRectTransf_Start_m15F3F920924C918A6C742C4A0BEBBFA2D7EC2523 (PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomRectTransf_Start_m15F3F920924C918A6C742C4A0BEBBFA2D7EC2523_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomRectTransf_Start_m15F3F920924C918A6C742C4A0BEBBFA2D7EC2523_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6041));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6042));
		// ZoomAcceleration = zoomAcceleration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6043));
		float L_0 = __this->get_zoomAcceleration_50();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomAcceleration_8(L_0);
		// ZoomSpeedMax = zoomSpeedMax;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6044));
		float L_1 = __this->get_zoomSpeedMax_51();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomSpeedMax_9(L_1);
		// ZoomMinScale = zoomMinScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6045));
		float L_2 = __this->get_zoomMinScale_52();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomMinScale_10(L_2);
		// ZoomMaxScale = zoomMaxScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6046));
		float L_3 = __this->get_zoomMaxScale_53();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomMaxScale_11(L_3);
		// ZoomGestureEnabledOnStartup = zoomGestureEnabledOnStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6047));
		bool L_4 = __this->get_zoomGestureEnabledOnStartup_55();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomGestureEnabledOnStartup_35(L_4);
		// timeInSecondsToZoom = zoomTimeInSecToZoom;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6048));
		float L_5 = __this->get_zoomTimeInSecToZoom_54();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_timeInSecondsToZoom_14(L_5);
		// autoGazePanIsActive = panAutoScrollIsActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6049));
		bool L_6 = __this->get_panAutoScrollIsActive_56();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_autoGazePanIsActive_4(L_6);
		// panSpeedLeftRight = panSpeedHorizontal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6050));
		float L_7 = __this->get_panSpeedHorizontal_57();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedLeftRight_5(L_7);
		// panSpeedUpDown = panSpeedVertical;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6051));
		float L_8 = __this->get_panSpeedVertical_58();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedUpDown_6(L_8);
		// minDistFromCenterForAutoPan = panMinDistFromCenter;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6052));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_9 = __this->get_panMinDistFromCenter_59();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_minDistFromCenterForAutoPan_7(L_9);
		// useSkimProof = useSkimProofing;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6053));
		bool L_10 = __this->get_useSkimProofing_60();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_useSkimProof_15(L_10);
		// viewportRectTransf = refToViewPort;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6054));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_11 = __this->get_refToViewPort_49();
		((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->set_viewportRectTransf_46(L_11);
		// navRectTransf = rectTransfToNavigate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6055));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_12 = __this->get_rectTransfToNavigate_48();
		((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->set_navRectTransf_45(L_12);
		// navRectTransf.anchorMin = new Vector2(0.5f, 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6056));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_13 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6061));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_14;
		memset((&L_14), 0, sizeof(L_14));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_14), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6061));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6062));
		NullCheck(L_13);
		RectTransform_set_anchorMin_mE965F5B0902C2554635010A5752728414A57020A(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6062));
		// navRectTransf.anchorMax = new Vector2(0.5f, 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6057));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_15 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6063));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_16;
		memset((&L_16), 0, sizeof(L_16));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_16), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6063));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6064));
		NullCheck(L_15);
		RectTransform_set_anchorMax_m55EEF00D9E42FE542B5346D7CEDAF9248736F7D3(L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6064));
		// navRectTransf.pivot = new Vector2(0.5f, 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6058));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_17 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6065));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_18;
		memset((&L_18), 0, sizeof(L_18));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_18), (0.5f), (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6066));
		NullCheck(L_17);
		RectTransform_set_pivot_mB791A383B3C870B9CBD7BC51B2C95711C88E9DCF(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6066));
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6059));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6067));
		PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6067));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6060));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomRectTransf_Update_mEAA684DD81C5C01D14F9F27651C4462AF3C3D16C (PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomRectTransf_Update_mEAA684DD81C5C01D14F9F27651C4462AF3C3D16C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomRectTransf_Update_mEAA684DD81C5C01D14F9F27651C4462AF3C3D16C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6068));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6069));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6070));
		// UpdateValues(ref navRectTransf, rectTransfToNavigate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6071));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 ** L_0 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_address_of_navRectTransf_45();
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_1 = __this->get_rectTransfToNavigate_48();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6089));
		PanZoomBase_UpdateValues_TisRectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20_m0986A0E9A9C40D5871F32C6013F1A119254EE243(__this, (RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 **)L_0, L_1, /*hidden argument*/PanZoomBase_UpdateValues_TisRectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20_m0986A0E9A9C40D5871F32C6013F1A119254EE243_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6089));
		// UpdateValues(ref ZoomAcceleration, zoomAcceleration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6072));
		float* L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomAcceleration_8();
		float L_3 = __this->get_zoomAcceleration_50();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6090));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_2, L_3, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6090));
		// UpdateValues(ref ZoomSpeedMax, zoomSpeedMax);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6073));
		float* L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomSpeedMax_9();
		float L_5 = __this->get_zoomSpeedMax_51();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6091));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_4, L_5, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6091));
		// UpdateValues(ref ZoomMinScale, zoomMinScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6074));
		float* L_6 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomMinScale_10();
		float L_7 = __this->get_zoomMinScale_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6092));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_6, L_7, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6092));
		// UpdateValues(ref ZoomMaxScale, zoomMaxScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6075));
		float* L_8 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomMaxScale_11();
		float L_9 = __this->get_zoomMaxScale_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6093));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_8, L_9, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6093));
		// UpdateValues(ref timeInSecondsToZoom, zoomTimeInSecToZoom);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6076));
		float* L_10 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_timeInSecondsToZoom_14();
		float L_11 = __this->get_zoomTimeInSecToZoom_54();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6094));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_10, L_11, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6094));
		// UpdateValues(ref autoGazePanIsActive, panAutoScrollIsActive);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6077));
		bool* L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_autoGazePanIsActive_4();
		bool L_13 = __this->get_panAutoScrollIsActive_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6095));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_12, L_13, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6095));
		// UpdateValues(ref panSpeedLeftRight, panSpeedHorizontal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6078));
		float* L_14 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedLeftRight_5();
		float L_15 = __this->get_panSpeedHorizontal_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6096));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_14, L_15, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6096));
		// UpdateValues(ref panSpeedUpDown, panSpeedVertical);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6079));
		float* L_16 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedUpDown_6();
		float L_17 = __this->get_panSpeedVertical_58();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6097));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_16, L_17, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6097));
		// UpdateValues(ref minDistFromCenterForAutoPan, panMinDistFromCenter);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6080));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_18 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_19 = __this->get_panMinDistFromCenter_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6098));
		PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1(__this, (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_18, L_19, /*hidden argument*/PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6098));
		// UpdateValues(ref useSkimProof, useSkimProofing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6081));
		bool* L_20 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_useSkimProof_15();
		bool L_21 = __this->get_useSkimProofing_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6099));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_20, L_21, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6099));
		// if (UpdateValues(ref skimproof_UpdateSpeedFromUser, skimProofUpdateSpeed))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6082));
		float* L_22 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_skimproof_UpdateSpeedFromUser_16();
		float L_23 = __this->get_skimProofUpdateSpeed_61();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6100));
		bool L_24 = PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_22, L_23, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6100));
		V_0 = L_24;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6083));
		bool L_25 = V_0;
		if (!L_25)
		{
			goto IL_00f7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6084));
		// SetSkimProofUpdateSpeed(skimproof_UpdateSpeedFromUser);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6085));
		float L_26 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_skimproof_UpdateSpeedFromUser_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6101));
		PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE(__this, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6101));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6086));
	}

IL_00f7:
	{
		// base.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6087));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6102));
		PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6102));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6088));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomRectTransf::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomRectTransf__ctor_mC2432E8E567FCAD869C544E41DBBB3229537EB3A (PanZoomRectTransf_t7082FBD6B21A8122ABE6BA1E9F9863A8B1C190C4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomRectTransf__ctor_mC2432E8E567FCAD869C544E41DBBB3229537EB3A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomRectTransf__ctor_mC2432E8E567FCAD869C544E41DBBB3229537EB3A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6103));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6104));
	{
		// private RectTransform rectTransfToNavigate = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6105));
		__this->set_rectTransfToNavigate_48((RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *)NULL);
		// private RectTransform refToViewPort = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6106));
		__this->set_refToViewPort_49((RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *)NULL);
		// private float zoomAcceleration = 10f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6107));
		__this->set_zoomAcceleration_50((10.0f));
		// private float zoomSpeedMax = 0.02f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6108));
		__this->set_zoomSpeedMax_51((0.02f));
		// private float zoomMinScale = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6109));
		__this->set_zoomMinScale_52((0.1f));
		// private float zoomMaxScale = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6110));
		__this->set_zoomMaxScale_53((1.0f));
		// private float zoomTimeInSecToZoom = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6111));
		__this->set_zoomTimeInSecToZoom_54((0.5f));
		// private bool zoomGestureEnabledOnStartup = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6112));
		__this->set_zoomGestureEnabledOnStartup_55((bool)0);
		// private bool panAutoScrollIsActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6113));
		__this->set_panAutoScrollIsActive_56((bool)1);
		// private float panSpeedHorizontal = 0.3f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6114));
		__this->set_panSpeedHorizontal_57((0.3f));
		// private float panSpeedVertical = 0.3f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6115));
		__this->set_panSpeedVertical_58((0.3f));
		// private Vector2 panMinDistFromCenter = new Vector2(0.2f, 0.2f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6119));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_0), (0.2f), (0.2f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6119));
		__this->set_panMinDistFromCenter_59(L_0);
		// private bool useSkimProofing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6117));
		__this->set_useSkimProofing_60((bool)0);
		// private float skimProofUpdateSpeed = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6118));
		__this->set_skimProofUpdateSpeed_61((5.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6120));
		PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6120));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomTexture_Start_mAC392E1F8A26EC23DB72E84B8BDD7B2930368399 (PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomTexture_Start_mAC392E1F8A26EC23DB72E84B8BDD7B2930368399_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomTexture_Start_mAC392E1F8A26EC23DB72E84B8BDD7B2930368399_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6121));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6122));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6123));
		// textureRenderer = rendererOfTextureToBeNavigated;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6124));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_0 = __this->get_rendererOfTextureToBeNavigated_51();
		((PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 *)__this)->set_textureRenderer_45(L_0);
		// ZoomAcceleration = zoomAcceleration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6125));
		float L_1 = __this->get_zoomAcceleration_52();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomAcceleration_8(L_1);
		// ZoomSpeedMax = zoomSpeedMax;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6126));
		float L_2 = __this->get_zoomSpeedMax_53();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomSpeedMax_9(L_2);
		// ZoomMinScale = zoomMinScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6127));
		float L_3 = __this->get_zoomMinScale_54();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomMinScale_10(L_3);
		// ZoomMaxScale = zoomMaxScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6128));
		float L_4 = __this->get_zoomMaxScale_55();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomMaxScale_11(L_4);
		// ZoomGestureEnabledOnStartup = zoomGestureEnabledOnStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6129));
		bool L_5 = __this->get_zoomGestureEnabledOnStartup_57();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_ZoomGestureEnabledOnStartup_35(L_5);
		// timeInSecondsToZoom = zoomTimeInSecToZoom;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6130));
		float L_6 = __this->get_zoomTimeInSecToZoom_56();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_timeInSecondsToZoom_14(L_6);
		// autoGazePanIsActive = panAutoScrollIsActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6131));
		bool L_7 = __this->get_panAutoScrollIsActive_58();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_autoGazePanIsActive_4(L_7);
		// panSpeedLeftRight = panSpeedHorizontal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6132));
		float L_8 = __this->get_panSpeedHorizontal_59();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedLeftRight_5(L_8);
		// panSpeedUpDown = panSpeedVertical;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6133));
		float L_9 = __this->get_panSpeedVertical_60();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedUpDown_6(L_9);
		// minDistFromCenterForAutoPan = panMinDistFromCenter;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6134));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = __this->get_panMinDistFromCenter_61();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_minDistFromCenterForAutoPan_7(L_10);
		// useSkimProof = useSkimProofing;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6135));
		bool L_11 = __this->get_useSkimProofing_62();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_useSkimProof_15(L_11);
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6136));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6138));
		PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6138));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6137));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomTexture_Update_mE5F2C025855941D14B6D2C0F37E8A8D886C5D64B (PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomTexture_Update_mE5F2C025855941D14B6D2C0F37E8A8D886C5D64B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomTexture_Update_mE5F2C025855941D14B6D2C0F37E8A8D886C5D64B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6139));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6140));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6141));
		// UpdateValues(ref textureRenderer, rendererOfTextureToBeNavigated);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6142));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** L_0 = ((PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 *)__this)->get_address_of_textureRenderer_45();
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_1 = __this->get_rendererOfTextureToBeNavigated_51();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6160));
		PanZoomBase_UpdateValues_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mF431D17971643FF8B971CC71970CF69F38E4C3A8(__this, (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 **)L_0, L_1, /*hidden argument*/PanZoomBase_UpdateValues_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mF431D17971643FF8B971CC71970CF69F38E4C3A8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6160));
		// UpdateValues(ref ZoomAcceleration, zoomAcceleration);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6143));
		float* L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomAcceleration_8();
		float L_3 = __this->get_zoomAcceleration_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6161));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_2, L_3, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6161));
		// UpdateValues(ref ZoomSpeedMax, zoomSpeedMax);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6144));
		float* L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomSpeedMax_9();
		float L_5 = __this->get_zoomSpeedMax_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6162));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_4, L_5, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6162));
		// UpdateValues(ref ZoomMinScale, zoomMinScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6145));
		float* L_6 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomMinScale_10();
		float L_7 = __this->get_zoomMinScale_54();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6163));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_6, L_7, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6163));
		// UpdateValues(ref ZoomMaxScale, zoomMaxScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6146));
		float* L_8 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_ZoomMaxScale_11();
		float L_9 = __this->get_zoomMaxScale_55();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6164));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_8, L_9, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6164));
		// UpdateValues(ref timeInSecondsToZoom, zoomTimeInSecToZoom);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6147));
		float* L_10 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_timeInSecondsToZoom_14();
		float L_11 = __this->get_zoomTimeInSecToZoom_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6165));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_10, L_11, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6165));
		// UpdateValues(ref autoGazePanIsActive, panAutoScrollIsActive);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6148));
		bool* L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_autoGazePanIsActive_4();
		bool L_13 = __this->get_panAutoScrollIsActive_58();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6166));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_12, L_13, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6166));
		// UpdateValues(ref panSpeedLeftRight, panSpeedHorizontal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6149));
		float* L_14 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedLeftRight_5();
		float L_15 = __this->get_panSpeedHorizontal_59();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6167));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_14, L_15, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6167));
		// UpdateValues(ref panSpeedUpDown, panSpeedVertical);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6150));
		float* L_16 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedUpDown_6();
		float L_17 = __this->get_panSpeedVertical_60();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6168));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_16, L_17, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6168));
		// UpdateValues(ref minDistFromCenterForAutoPan, panMinDistFromCenter);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6151));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_18 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_19 = __this->get_panMinDistFromCenter_61();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6169));
		PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1(__this, (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_18, L_19, /*hidden argument*/PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6169));
		// UpdateValues(ref useSkimProof, useSkimProofing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6152));
		bool* L_20 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_useSkimProof_15();
		bool L_21 = __this->get_useSkimProofing_62();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6170));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_20, L_21, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6170));
		// if (UpdateValues(ref skimproof_UpdateSpeedFromUser, skimProofUpdateSpeed))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6153));
		float* L_22 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_skimproof_UpdateSpeedFromUser_16();
		float L_23 = __this->get_skimProofUpdateSpeed_63();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6171));
		bool L_24 = PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_22, L_23, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6171));
		V_0 = L_24;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6154));
		bool L_25 = V_0;
		if (!L_25)
		{
			goto IL_00f7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6155));
		// SetSkimProofUpdateSpeed(skimproof_UpdateSpeedFromUser);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6156));
		float L_26 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_skimproof_UpdateSpeedFromUser_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6172));
		PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE(__this, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6172));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6157));
	}

IL_00f7:
	{
		// base.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6158));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6173));
		PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6173));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6159));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.PanZoomTexture::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanZoomTexture__ctor_m99882119C0740D5FF4FB6733B5E88C90278E7E75 (PanZoomTexture_tF499E2846C663BB6F6EDE7367BCA43C6929C7F1D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanZoomTexture__ctor_m99882119C0740D5FF4FB6733B5E88C90278E7E75_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanZoomTexture__ctor_m99882119C0740D5FF4FB6733B5E88C90278E7E75_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6174));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6175));
	{
		// private Renderer rendererOfTextureToBeNavigated = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6176));
		__this->set_rendererOfTextureToBeNavigated_51((Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 *)NULL);
		// private float zoomAcceleration = 10f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6177));
		__this->set_zoomAcceleration_52((10.0f));
		// private float zoomSpeedMax = 0.02f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6178));
		__this->set_zoomSpeedMax_53((0.02f));
		// private float zoomMinScale = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6179));
		__this->set_zoomMinScale_54((0.1f));
		// private float zoomMaxScale = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6180));
		__this->set_zoomMaxScale_55((1.0f));
		// private float zoomTimeInSecToZoom = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6181));
		__this->set_zoomTimeInSecToZoom_56((0.5f));
		// private bool zoomGestureEnabledOnStartup = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6182));
		__this->set_zoomGestureEnabledOnStartup_57((bool)0);
		// private bool panAutoScrollIsActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6183));
		__this->set_panAutoScrollIsActive_58((bool)1);
		// private float panSpeedHorizontal = 0.3f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6184));
		__this->set_panSpeedHorizontal_59((0.3f));
		// private float panSpeedVertical = 0.3f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6185));
		__this->set_panSpeedVertical_60((0.3f));
		// private Vector2 panMinDistFromCenter = new Vector2(0.2f, 0.2f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6186));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6189));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_0), (0.2f), (0.2f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6189));
		__this->set_panMinDistFromCenter_61(L_0);
		// private bool useSkimProofing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6187));
		__this->set_useSkimProofing_62((bool)0);
		// private float skimProofUpdateSpeed = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6188));
		__this->set_skimProofUpdateSpeed_63((5.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6190));
		PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6190));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap_Start_m539BA4F1AFB4C3A7C83E0F90EF58590071299ED2 (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_Start_m539BA4F1AFB4C3A7C83E0F90EF58590071299ED2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_Start_m539BA4F1AFB4C3A7C83E0F90EF58590071299ED2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8767));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8768));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8769));
		// particleSys = GetComponent<ParticleSystem>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8770));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8774));
		ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * L_0 = Component_GetComponent_TisParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D_mA6EBF435A59643B674086A2F309F6A4DCB263452(__this, /*hidden argument*/Component_GetComponent_TisParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D_mA6EBF435A59643B674086A2F309F6A4DCB263452_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8774));
		__this->set_particleSys_9(L_0);
		// emissionModule = particleSys.emission;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8771));
		ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * L_1 = __this->get_particleSys_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8775));
		NullCheck(L_1);
		EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1  L_2 = ParticleSystem_get_emission_mA1204EAF07A6C6B3F65B45295797A1FFF64D343C(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8775));
		__this->set_emissionModule_10(L_2);
		// particleData = new List<ParticleHeatmapParticleData>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8772));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8776));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_3 = (List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 *)il2cpp_codegen_object_new(List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720_il2cpp_TypeInfo_var);
		List_1__ctor_m34226F6B737610432345A8C4C6857E773B20E012(L_3, /*hidden argument*/List_1__ctor_m34226F6B737610432345A8C4C6857E773B20E012_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8776));
		__this->set_particleData_11(L_3);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8773));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::SetParticle(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap_SetParticle_mB7F67715D72B681732DECD63731E9E86E2E5B065 (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_SetParticle_mB7F67715D72B681732DECD63731E9E86E2E5B065_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pos0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_SetParticle_mB7F67715D72B681732DECD63731E9E86E2E5B065_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8777));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8778));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8779));
		// if (particleDecalDataIndex >= maxNumberOfParticles)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8780));
		int32_t L_0 = __this->get_particleDecalDataIndex_8();
		int32_t L_1 = __this->get_maxNumberOfParticles_5();
		V_1 = (bool)((((int32_t)((((int32_t)L_0) < ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8781));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8782));
		// particleDecalDataIndex = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8783));
		__this->set_particleDecalDataIndex_8(0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8784));
	}

IL_001f:
	{
		// ParticleHeatmapParticleData newParticle = new ParticleHeatmapParticleData();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8785));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8798));
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_3 = (ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 *)il2cpp_codegen_object_new(ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0_il2cpp_TypeInfo_var);
		ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8798));
		V_0 = L_3;
		// newParticle.position = pos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8786));
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_4 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = ___pos0;
		NullCheck(L_4);
		L_4->set_position_0(L_5);
		// newParticle.radiusInMeter = Random.Range(minParticleSize, maxParticleSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8787));
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_6 = V_0;
		float L_7 = __this->get_minParticleSize_6();
		float L_8 = __this->get_maxParticleSize_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8799));
		float L_9 = Random_Range_m2844A4A71C86BDF83A12D97FC6DD95278E87E384(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8799));
		NullCheck(L_6);
		L_6->set_radiusInMeter_1(L_9);
		// if (particleDecalDataIndex >= particleData.Count)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8788));
		int32_t L_10 = __this->get_particleDecalDataIndex_8();
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_11 = __this->get_particleData_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8800));
		NullCheck(L_11);
		int32_t L_12 = List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_inline(L_11, /*hidden argument*/List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8800));
		V_2 = (bool)((((int32_t)((((int32_t)L_10) < ((int32_t)L_12))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8789));
		bool L_13 = V_2;
		if (!L_13)
		{
			goto IL_006e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8790));
		// particleData.Add(newParticle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8791));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_14 = __this->get_particleData_11();
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_15 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8801));
		NullCheck(L_14);
		List_1_Add_m731030C9624FD2128A48ED76EE4BE9F9E0F16720(L_14, L_15, /*hidden argument*/List_1_Add_m731030C9624FD2128A48ED76EE4BE9F9E0F16720_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8801));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8792));
		goto IL_0083;
	}

IL_006e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8793));
		// particleData[particleDecalDataIndex] = newParticle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8794));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_16 = __this->get_particleData_11();
		int32_t L_17 = __this->get_particleDecalDataIndex_8();
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_18 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8802));
		NullCheck(L_16);
		List_1_set_Item_m3862705BC601E074C5F1B2B910808F5FCA887B52(L_16, L_17, L_18, /*hidden argument*/List_1_set_Item_m3862705BC601E074C5F1B2B910808F5FCA887B52_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8802));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8795));
	}

IL_0083:
	{
		// particleDecalDataIndex++;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8796));
		int32_t L_19 = __this->get_particleDecalDataIndex_8();
		__this->set_particleDecalDataIndex_8(((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1)));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8797));
		return;
	}
}
// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::GetPositionOfParticle(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ParticleHeatmap_GetPositionOfParticle_mA114FBA53A8522D08C72536751CC85C1B29949C1 (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_GetPositionOfParticle_mA114FBA53A8522D08C72536751CC85C1B29949C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___index0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_GetPositionOfParticle_mA114FBA53A8522D08C72536751CC85C1B29949C1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8803));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8804));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8805));
		// if ((index >= particleData.Count) || (index < 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8806));
		int32_t L_0 = ___index0;
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_1 = __this->get_particleData_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8811));
		NullCheck(L_1);
		int32_t L_2 = List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_inline(L_1, /*hidden argument*/List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8811));
		if ((((int32_t)L_0) >= ((int32_t)L_2)))
		{
			goto IL_0015;
		}
	}
	{
		int32_t L_3 = ___index0;
		G_B3_0 = ((((int32_t)L_3) < ((int32_t)0))? 1 : 0);
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 1;
	}

IL_0016:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8807));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0026;
		}
	}
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8808));
		il2cpp_codegen_initobj((&V_1), sizeof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 ));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_5 = V_1;
		V_2 = L_5;
		goto IL_003f;
	}

IL_0026:
	{
		// return particleData[index].position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8809));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_6 = __this->get_particleData_11();
		int32_t L_7 = ___index0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8812));
		NullCheck(L_6);
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_8 = List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_inline(L_6, L_7, /*hidden argument*/List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8812));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = L_8->get_position_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8813));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_10;
		memset((&L_10), 0, sizeof(L_10));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_10), L_9, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8813));
		V_2 = L_10;
		goto IL_003f;
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8810));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_11 = V_2;
		return L_11;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::DetermineNormalizedIntensity(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6 (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, float ___radius1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482  V_2;
	memset((&V_2), 0, sizeof(V_2));
	ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * V_3 = NULL;
	bool V_4 = false;
	float V_5 = 0.0f;
	float V_6 = 0.0f;
	float V_7 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pos0), (&___radius1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8814));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8815));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8816));
		// float tmpIntensity = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8817));
		V_0 = (0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8818));
		// foreach (ParticleHeatmapParticleData point in particleData)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8819));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_0 = __this->get_particleData_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8836));
		NullCheck(L_0);
		Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482  L_1 = List_1_GetEnumerator_m42F98C64BAED0F47AB5E97E391776E62E1B8DE83(L_0, /*hidden argument*/List_1_GetEnumerator_m42F98C64BAED0F47AB5E97E391776E62E1B8DE83_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8836));
		V_2 = L_1;
	}

IL_0014:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8820));
			goto IL_0060;
		}

IL_0016:
		{
			// foreach (ParticleHeatmapParticleData point in particleData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8821));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8837));
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_2 = Enumerator_get_Current_m9EF792037917F6C550D7D9CD33BD97A38C82D709_inline((Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *)(&V_2), /*hidden argument*/Enumerator_get_Current_m9EF792037917F6C550D7D9CD33BD97A38C82D709_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8837));
			V_3 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8822));
			// if (pos != point.position)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8823));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = ___pos0;
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_4 = V_3;
			NullCheck(L_4);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = L_4->get_position_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8838));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			bool L_6 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_3, L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8838));
			V_4 = L_6;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8824));
			bool L_7 = V_4;
			if (!L_7)
			{
				goto IL_005f;
			}
		}

IL_0031:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8825));
			// float dist = Vector3.Distance(pos, point.position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8826));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = ___pos0;
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_9 = V_3;
			NullCheck(L_9);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = L_9->get_position_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8839));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			float L_11 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_8, L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8839));
			V_5 = L_11;
			// float tmpInt2 = 1 - saturate(dist / radius);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8827));
			float L_12 = V_5;
			float L_13 = ___radius1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8840));
			float L_14 = ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C(__this, ((float)((float)L_12/(float)L_13)), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8840));
			V_6 = ((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_14));
			// tmpIntensity += tmpInt2 * colorScaleTweaker;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8828));
			float L_15 = V_0;
			float L_16 = V_6;
			float L_17 = __this->get_colorScaleTweaker_12();
			V_0 = ((float)il2cpp_codegen_add((float)L_15, (float)((float)il2cpp_codegen_multiply((float)L_16, (float)L_17))));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8829));
		}

IL_005f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8830));
		}

IL_0060:
		{
			// foreach (ParticleHeatmapParticleData point in particleData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8831));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8841));
			bool L_18 = Enumerator_MoveNext_m926AB6D529397E01E894BC48A4B1EC66A276105F((Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *)(&V_2), /*hidden argument*/Enumerator_MoveNext_m926AB6D529397E01E894BC48A4B1EC66A276105F_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8841));
			if (L_18)
			{
				goto IL_0016;
			}
		}

IL_0069:
		{
			IL2CPP_LEAVE(0x7A, FINALLY_006b);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_006b;
	}

FINALLY_006b:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8832));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8842));
		Enumerator_Dispose_mD7A7C49379527533124821D1B6C6E959321A327A((Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *)(&V_2), /*hidden argument*/Enumerator_Dispose_mD7A7C49379527533124821D1B6C6E959321A327A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8842));
		IL2CPP_END_FINALLY(107)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(107)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x7A, IL_007a)
	}

IL_007a:
	{
		// float finalIntensity = saturate(tmpIntensity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8833));
		float L_19 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8843));
		float L_20 = ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C(__this, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8843));
		V_1 = L_20;
		// return finalIntensity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8834));
		float L_21 = V_1;
		V_7 = L_21;
		goto IL_0087;
	}

IL_0087:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8835));
		float L_22 = V_7;
		return L_22;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::UpdateColorForAllParticles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap_UpdateColorForAllParticles_mA0D223548D977852786EB677BDD57571420702DE (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_UpdateColorForAllParticles_mA0D223548D977852786EB677BDD57571420702DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_UpdateColorForAllParticles_mA0D223548D977852786EB677BDD57571420702DE_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8844));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8845));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8846));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8847));
		// foreach (ParticleHeatmapParticleData particle in particleData)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8848));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_0 = __this->get_particleData_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8857));
		NullCheck(L_0);
		Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482  L_1 = List_1_GetEnumerator_m42F98C64BAED0F47AB5E97E391776E62E1B8DE83(L_0, /*hidden argument*/List_1_GetEnumerator_m42F98C64BAED0F47AB5E97E391776E62E1B8DE83_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8857));
		V_0 = L_1;
	}

IL_000e:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8849));
			goto IL_003d;
		}

IL_0010:
		{
			// foreach (ParticleHeatmapParticleData particle in particleData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8850));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8858));
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_2 = Enumerator_get_Current_m9EF792037917F6C550D7D9CD33BD97A38C82D709_inline((Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *)(&V_0), /*hidden argument*/Enumerator_get_Current_m9EF792037917F6C550D7D9CD33BD97A38C82D709_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8858));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8851));
			// particle.color = colorGradient.Evaluate(DetermineNormalizedIntensity(particle.position, particle.radiusInMeter));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8852));
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_3 = V_1;
			Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A * L_4 = __this->get_colorGradient_4();
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_5 = V_1;
			NullCheck(L_5);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = L_5->get_position_0();
			ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_7 = V_1;
			NullCheck(L_7);
			float L_8 = L_7->get_radiusInMeter_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8859));
			float L_9 = ParticleHeatmap_DetermineNormalizedIntensity_mC402BDDF903F5127C9DCB8445334A62D51B75FD6(__this, L_6, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8859));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8860));
			NullCheck(L_4);
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_10 = Gradient_Evaluate_m3FAAAA60E7357B84BE2141AFA0207299AFBDBCDB(L_4, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8860));
			NullCheck(L_3);
			L_3->set_color_3(L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8853));
		}

IL_003d:
		{
			// foreach (ParticleHeatmapParticleData particle in particleData)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8854));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8861));
			bool L_11 = Enumerator_MoveNext_m926AB6D529397E01E894BC48A4B1EC66A276105F((Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_m926AB6D529397E01E894BC48A4B1EC66A276105F_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8861));
			if (L_11)
			{
				goto IL_0010;
			}
		}

IL_0046:
		{
			IL2CPP_LEAVE(0x57, FINALLY_0048);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0048;
	}

FINALLY_0048:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8855));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8862));
		Enumerator_Dispose_mD7A7C49379527533124821D1B6C6E959321A327A((Enumerator_t8F7D15CD0626567ACF69BF31729D2BDE8D83F482 *)(&V_0), /*hidden argument*/Enumerator_Dispose_mD7A7C49379527533124821D1B6C6E959321A327A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8862));
		IL2CPP_END_FINALLY(72)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(72)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x57, IL_0057)
	}

IL_0057:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8856));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::saturate(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, float ___val0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___val0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_saturate_mC8D170B35E2AA55AA930B80B756E29FB2E10222C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8863));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8864));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8865));
		// if (val > 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8866));
		float L_0 = ___val0;
		V_0 = (bool)((((float)L_0) > ((float)(1.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8867));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// return 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8868));
		V_1 = (1.0f);
		goto IL_002d;
	}

IL_0015:
	{
		// if (val < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8869));
		float L_2 = ___val0;
		V_2 = (bool)((((float)L_2) < ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8870));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8871));
		V_1 = (0.0f);
		goto IL_002d;
	}

IL_0029:
	{
		// return val;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8872));
		float L_4 = ___val0;
		V_1 = L_4;
		goto IL_002d;
	}

IL_002d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8873));
		float L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::DisplayParticles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap_DisplayParticles_m0B30A71A54AB6445324B0976DA11C777142CFA4D (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_DisplayParticles_m0B30A71A54AB6445324B0976DA11C777142CFA4D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_DisplayParticles_m0B30A71A54AB6445324B0976DA11C777142CFA4D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8875));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8876));
		// ParticleSystem.Particle[] particleArray = new ParticleSystem.Particle[particleData.Count];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8877));
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_0 = __this->get_particleData_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8890));
		NullCheck(L_0);
		int32_t L_1 = List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_inline(L_0, /*hidden argument*/List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8890));
		ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* L_2 = (ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513*)(ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513*)SZArrayNew(ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513_il2cpp_TypeInfo_var, (uint32_t)L_1);
		V_0 = L_2;
		// for (int i = 0; i < particleData.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8878));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8879));
		goto IL_007b;
	}

IL_0016:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8880));
		// particleArray[i].position = particleData[i].position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8881));
		ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* L_3 = V_0;
		int32_t L_4 = V_1;
		NullCheck(L_3);
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_5 = __this->get_particleData_11();
		int32_t L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8891));
		NullCheck(L_5);
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_7 = List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_inline(L_5, L_6, /*hidden argument*/List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8891));
		NullCheck(L_7);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = L_7->get_position_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8892));
		Particle_set_position_m3E99F891841E8B03490433FAFF5B601A6D12BDEF((Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E *)((L_3)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_4))), L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8892));
		// particleArray[i].startColor = particleData[i].color;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8882));
		ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* L_9 = V_0;
		int32_t L_10 = V_1;
		NullCheck(L_9);
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_11 = __this->get_particleData_11();
		int32_t L_12 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8893));
		NullCheck(L_11);
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_13 = List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_inline(L_11, L_12, /*hidden argument*/List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8893));
		NullCheck(L_13);
		Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_14 = L_13->get_color_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8894));
		Color32_t23ABC4AE0E0BDFD2E22EE1FA0DA3904FFE5F6E23  L_15 = Color32_op_Implicit_m52B034473369A651C8952BD916A2AB193E0E5B30(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8895));
		Particle_set_startColor_m67807C44D14862EBD8C030C1FE094E8438384AA6((Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E *)((L_9)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_10))), L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8895));
		// particleArray[i].startSize = particleData[i].radiusInMeter;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8883));
		ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* L_16 = V_0;
		int32_t L_17 = V_1;
		NullCheck(L_16);
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_18 = __this->get_particleData_11();
		int32_t L_19 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8896));
		NullCheck(L_18);
		ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * L_20 = List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_inline(L_18, L_19, /*hidden argument*/List_1_get_Item_m4DF826E87B9C19675E492DAE12143DF940FA4C40_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8896));
		NullCheck(L_20);
		float L_21 = L_20->get_radiusInMeter_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8897));
		Particle_set_startSize_m45B6CD1480219E30A96317D654B9439C8DB2DF87((Particle_t64AF74F5D9C7EE7018AD98F29E4FF653558A581E *)((L_16)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_17))), L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8897));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8884));
		// for (int i = 0; i < particleData.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8885));
		int32_t L_22 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_22, (int32_t)1));
	}

IL_007b:
	{
		// for (int i = 0; i < particleData.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8886));
		int32_t L_23 = V_1;
		List_1_tBB73707716B60FF906B70D6F97C5DDBE17544720 * L_24 = __this->get_particleData_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8898));
		NullCheck(L_24);
		int32_t L_25 = List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_inline(L_24, /*hidden argument*/List_1_get_Count_m4DC02A903143C6B7438653D0F3F4342B4ABE2693_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8898));
		V_2 = (bool)((((int32_t)L_23) < ((int32_t)L_25))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8887));
		bool L_26 = V_2;
		if (L_26)
		{
			goto IL_0016;
		}
	}
	{
		// particleSys.SetParticles(particleArray, particleArray.Length);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8888));
		ParticleSystem_t45DA87A3E83E738DA3FDAA5A48A133F1A1247C3D * L_27 = __this->get_particleSys_9();
		ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* L_28 = V_0;
		ParticleU5BU5D_tE146043E7340CCAD7275E144D4CCD028AF929513* L_29 = V_0;
		NullCheck(L_29);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8899));
		NullCheck(L_27);
		ParticleSystem_SetParticles_mCBB22C645CD23845D88FDF981FC2F32E31AB4FB5(L_27, L_28, (((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8899));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8889));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::ShowHeatmap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap_ShowHeatmap_m86344918A9A496239AA6E8DB4D537F4986266ABF (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_ShowHeatmap_m86344918A9A496239AA6E8DB4D537F4986266ABF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_ShowHeatmap_m86344918A9A496239AA6E8DB4D537F4986266ABF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8900));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8901));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8902));
		// emissionModule.enabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8903));
		EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 * L_0 = __this->get_address_of_emissionModule_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8905));
		EmissionModule_set_enabled_m3896B441BDE0F0752A6D113012B20D5D31B16D36((EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 *)L_0, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8905));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8904));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::HideHeatmap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap_HideHeatmap_m4B26EED245CF467A1E876C05F5A0BF022BFE672C (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap_HideHeatmap_m4B26EED245CF467A1E876C05F5A0BF022BFE672C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap_HideHeatmap_m4B26EED245CF467A1E876C05F5A0BF022BFE672C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8906));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8907));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8908));
		// emissionModule.enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8909));
		EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 * L_0 = __this->get_address_of_emissionModule_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8911));
		EmissionModule_set_enabled_m3896B441BDE0F0752A6D113012B20D5D31B16D36((EmissionModule_t35028C3DE5EFDCE49E8A9732460617A56BD1D3F1 *)L_0, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8911));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8910));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmap::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmap__ctor_m61E1CBB11275858837F16E4DDED7D245EEDADDDF (ParticleHeatmap_t972CFFD4049A4C2FC210B849ADD8E2BBA3679E76 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmap__ctor_m61E1CBB11275858837F16E4DDED7D245EEDADDDF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmap__ctor_m61E1CBB11275858837F16E4DDED7D245EEDADDDF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8912));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8913));
	{
		// private Gradient colorGradient = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8914));
		__this->set_colorGradient_4((Gradient_t35A694DDA1066524440E325E582B01E33DE66A3A *)NULL);
		// private int maxNumberOfParticles = 100;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8915));
		__this->set_maxNumberOfParticles_5(((int32_t)100));
		// private float minParticleSize = .01f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8916));
		__this->set_minParticleSize_6((0.01f));
		// private float maxParticleSize = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8917));
		__this->set_maxParticleSize_7((0.5f));
		// public float colorScaleTweaker = 0.1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8918));
		__this->set_colorScaleTweaker_12((0.1f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8919));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8919));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ParticleHeatmapParticleData::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036 (ParticleHeatmapParticleData_tE0CECB79F3E07754C4A9764068E6FF86544D15B0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ParticleHeatmapParticleData__ctor_m6B562557E8CF79CE877D921BFA778E34D2F58036_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir::RotateTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RotateWithConstSpeedDir_RotateTarget_m0CB85267A40556C1A41556AB999291B98A2AF291 (RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RotateWithConstSpeedDir_RotateTarget_m0CB85267A40556C1A41556AB999291B98A2AF291_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RotateWithConstSpeedDir_RotateTarget_m0CB85267A40556C1A41556AB999291B98A2AF291_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7679));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7680));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7681));
		// transform.eulerAngles = transform.eulerAngles + RotateByEulerAngles * speed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7682));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7684));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7684));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7685));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7685));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7686));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_eulerAngles_mF2D798FA8B18F7A1A0C4A2198329ADBAF07E37CA(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7686));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = __this->get_RotateByEulerAngles_4();
		float L_4 = __this->get_speed_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7687));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7687));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7688));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_2, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7688));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7689));
		NullCheck(L_0);
		Transform_set_eulerAngles_m4B2B374C0B089A7ED0B522A3A4C56FA868992685(L_0, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7689));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7683));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.RotateWithConstSpeedDir::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RotateWithConstSpeedDir__ctor_mB262D658E29D3A1449331F2A4EA668333B4469CA (RotateWithConstSpeedDir_t0529A6759FDD86B1D57556879903426EC3EBB9DD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RotateWithConstSpeedDir__ctor_mB262D658E29D3A1449331F2A4EA668333B4469CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RotateWithConstSpeedDir__ctor_mB262D658E29D3A1449331F2A4EA668333B4469CA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7690));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7691));
	{
		// private Vector3 RotateByEulerAngles = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7692));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7694));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7694));
		__this->set_RotateByEulerAngles_4(L_0);
		// private float speed = 1f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7693));
		__this->set_speed_5((1.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7695));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7695));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollRectTransf_Start_m76C2D3084EA1371CEFF0AFC59A79200D283590B6 (ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollRectTransf_Start_m76C2D3084EA1371CEFF0AFC59A79200D283590B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollRectTransf_Start_m76C2D3084EA1371CEFF0AFC59A79200D283590B6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6191));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6192));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6193));
		// autoGazePanIsActive = autoGazeScrollIsActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6194));
		bool L_0 = __this->get_autoGazeScrollIsActive_50();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_autoGazePanIsActive_4(L_0);
		// panSpeedUpDown = scrollSpeedVertical * convertSpeedToUVSpace;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6195));
		float L_1 = __this->get_scrollSpeedVertical_52();
		float L_2 = __this->get_convertSpeedToUVSpace_56();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedUpDown_6(((float)il2cpp_codegen_multiply((float)L_1, (float)L_2)));
		// panSpeedLeftRight = scrollSpeedHorizontal * convertSpeedToUVSpace;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6196));
		float L_3 = __this->get_scrollSpeedHorizontal_51();
		float L_4 = __this->get_convertSpeedToUVSpace_56();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedLeftRight_5(((float)il2cpp_codegen_multiply((float)L_3, (float)L_4)));
		// minDistFromCenterForAutoPan = minDistFromCenterForAutoScroll;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6197));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5 = __this->get_minDistFromCenterForAutoScroll_53();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_minDistFromCenterForAutoPan_7(L_5);
		// useSkimProof = useSkimProofing;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6198));
		bool L_6 = __this->get_useSkimProofing_54();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_useSkimProof_15(L_6);
		// navRectTransf = rectTransfToNavigate;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6199));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_7 = __this->get_rectTransfToNavigate_48();
		((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->set_navRectTransf_45(L_7);
		// viewportRectTransf = refToViewPort;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6200));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_8 = __this->get_refToViewPort_49();
		((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->set_viewportRectTransf_46(L_8);
		// navRectTransf.anchoredPosition = customStartPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6201));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_9 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_10 = __this->get_customStartPos_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6205));
		NullCheck(L_9);
		RectTransform_set_anchoredPosition_m4DD45DB1A97734A1F3A81E5F259638ECAF35962F(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6205));
		// isScrollText = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6202));
		((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->set_isScrollText_47((bool)1);
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6203));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6206));
		PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6206));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6204));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::UpdatePivot()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC (ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6207));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6208));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6209));
		// navRectTransf.pivot = new Vector2(0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6210));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_0 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6214));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_1), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6214));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6215));
		NullCheck(L_0);
		RectTransform_set_pivot_mB791A383B3C870B9CBD7BC51B2C95711C88E9DCF(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6215));
		// navRectTransf.anchorMin = new Vector2(0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6211));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_2 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6216));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_3), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6216));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6217));
		NullCheck(L_2);
		RectTransform_set_anchorMin_mE965F5B0902C2554635010A5752728414A57020A(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6217));
		// navRectTransf.anchorMax = new Vector2(0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6212));
		RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 * L_4 = ((PanZoomBaseRectTransf_tDDB317AF26FB1CBEF8DA83E635E952CC68B166C0 *)__this)->get_navRectTransf_45();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6218));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_5;
		memset((&L_5), 0, sizeof(L_5));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_5), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6218));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6219));
		NullCheck(L_4);
		RectTransform_set_anchorMax_m55EEF00D9E42FE542B5346D7CEDAF9248736F7D3(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6219));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6213));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollRectTransf_Update_mEC76D0B4B1C573C3447EC06B1776B402B2DBAD47 (ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollRectTransf_Update_mEC76D0B4B1C573C3447EC06B1776B402B2DBAD47_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollRectTransf_Update_mEC76D0B4B1C573C3447EC06B1776B402B2DBAD47_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6220));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6221));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6222));
		// UpdatePivot();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6223));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6236));
		ScrollRectTransf_UpdatePivot_m511AC0F4E98B8E537A3277EE52614F79D6CDC9CC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6236));
		// UpdateValues(ref autoGazePanIsActive, autoGazeScrollIsActive);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6224));
		bool* L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_autoGazePanIsActive_4();
		bool L_1 = __this->get_autoGazeScrollIsActive_50();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6237));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_0, L_1, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6237));
		// UpdateValues(ref panSpeedUpDown, scrollSpeedVertical * convertSpeedToUVSpace);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6225));
		float* L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedUpDown_6();
		float L_3 = __this->get_scrollSpeedVertical_52();
		float L_4 = __this->get_convertSpeedToUVSpace_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6238));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_2, ((float)il2cpp_codegen_multiply((float)L_3, (float)L_4)), /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6238));
		// UpdateValues(ref panSpeedLeftRight, scrollSpeedHorizontal * convertSpeedToUVSpace);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6226));
		float* L_5 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedLeftRight_5();
		float L_6 = __this->get_scrollSpeedHorizontal_51();
		float L_7 = __this->get_convertSpeedToUVSpace_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6239));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_5, ((float)il2cpp_codegen_multiply((float)L_6, (float)L_7)), /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6239));
		// UpdateValues(ref minDistFromCenterForAutoPan, minDistFromCenterForAutoScroll);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6227));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_8 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_9 = __this->get_minDistFromCenterForAutoScroll_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6240));
		PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1(__this, (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_8, L_9, /*hidden argument*/PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6240));
		// UpdateValues(ref useSkimProof, useSkimProofing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6228));
		bool* L_10 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_useSkimProof_15();
		bool L_11 = __this->get_useSkimProofing_54();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6241));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_10, L_11, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6241));
		// if (UpdateValues(ref skimproof_UpdateSpeedFromUser, skimProofUpdateSpeed))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6229));
		float* L_12 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_skimproof_UpdateSpeedFromUser_16();
		float L_13 = __this->get_skimProofUpdateSpeed_55();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6242));
		bool L_14 = PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_12, L_13, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6242));
		V_0 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6230));
		bool L_15 = V_0;
		if (!L_15)
		{
			goto IL_009a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6231));
		// SetSkimProofUpdateSpeed(skimproof_UpdateSpeedFromUser);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6232));
		float L_16 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_skimproof_UpdateSpeedFromUser_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6243));
		PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE(__this, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6243));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6233));
	}

IL_009a:
	{
		// base.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6234));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6244));
		PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6244));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6235));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollRectTransf::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollRectTransf__ctor_m215A75AEF079F45AE3A7F8795BF424950E8ABCB7 (ScrollRectTransf_tAB37E03D141AF264DD27BB6BA4F572CD76F4CDB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollRectTransf__ctor_m215A75AEF079F45AE3A7F8795BF424950E8ABCB7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollRectTransf__ctor_m215A75AEF079F45AE3A7F8795BF424950E8ABCB7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6245));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6246));
	{
		// private RectTransform rectTransfToNavigate = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6247));
		__this->set_rectTransfToNavigate_48((RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *)NULL);
		// private RectTransform refToViewPort = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6248));
		__this->set_refToViewPort_49((RectTransform_t285CBD8775B25174B75164F10618F8B9728E1B20 *)NULL);
		// private bool autoGazeScrollIsActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6249));
		__this->set_autoGazeScrollIsActive_50((bool)1);
		// private float scrollSpeedHorizontal = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6250));
		__this->set_scrollSpeedHorizontal_51((0.0f));
		// private float scrollSpeedVertical = 0.3f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6251));
		__this->set_scrollSpeedVertical_52((0.3f));
		// private Vector2 minDistFromCenterForAutoScroll = new Vector2(0.2f, 0.2f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6252));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6256));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_0), (0.2f), (0.2f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6256));
		__this->set_minDistFromCenterForAutoScroll_53(L_0);
		// private bool useSkimProofing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6253));
		__this->set_useSkimProofing_54((bool)0);
		// private float skimProofUpdateSpeed = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6254));
		__this->set_skimProofUpdateSpeed_55((5.0f));
		// private float convertSpeedToUVSpace = -200.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6255));
		__this->set_convertSpeedToUVSpace_56((-200.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6257));
		PanZoomBaseRectTransf__ctor_mBDD6EE0CACBA544DAA6698C4DEEEE9BF8F09014F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6257));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollTexture_Start_m477A67C6C3433037C471989D20E854BB9147E532 (ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollTexture_Start_m477A67C6C3433037C471989D20E854BB9147E532_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollTexture_Start_m477A67C6C3433037C471989D20E854BB9147E532_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6258));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6259));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6260));
		// autoGazePanIsActive = autoGazeScrollIsActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6261));
		bool L_0 = __this->get_autoGazeScrollIsActive_52();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_autoGazePanIsActive_4(L_0);
		// panSpeedUpDown = scrollSpeedVertical;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6262));
		float L_1 = __this->get_scrollSpeedVertical_54();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedUpDown_6(L_1);
		// panSpeedLeftRight = scrollSpeedHorizontal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6263));
		float L_2 = __this->get_scrollSpeedHorizontal_53();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_panSpeedLeftRight_5(L_2);
		// minDistFromCenterForAutoPan = minDistFromCenterForAutoScroll;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6264));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = __this->get_minDistFromCenterForAutoScroll_55();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_minDistFromCenterForAutoPan_7(L_3);
		// customColliderSizeOnLookAt = onLookAtColliderSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6265));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = __this->get_onLookAtColliderSize_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6270));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_5;
		memset((&L_5), 0, sizeof(L_5));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_5), L_4, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6270));
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_customColliderSizeOnLookAt_12(L_5);
		// textureRenderer = textureRendererToBeScrolled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6266));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_6 = __this->get_textureRendererToBeScrolled_51();
		((PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 *)__this)->set_textureRenderer_45(L_6);
		// useSkimProof = useSkimProofing;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6267));
		bool L_7 = __this->get_useSkimProofing_57();
		((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->set_useSkimProof_15(L_7);
		// base.Start();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6268));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6271));
		PanZoomBase_Start_m696B13CC54429E0DDB5B5BD4FF04C9DA64C84396(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6271));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6269));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollTexture_Update_m93C04352DE3F66BA923BFE8C082AA5E6133F5B95 (ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollTexture_Update_m93C04352DE3F66BA923BFE8C082AA5E6133F5B95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollTexture_Update_m93C04352DE3F66BA923BFE8C082AA5E6133F5B95_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6272));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6273));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6274));
		// UpdateValues(ref autoGazePanIsActive, autoGazeScrollIsActive);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6275));
		bool* L_0 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_autoGazePanIsActive_4();
		bool L_1 = __this->get_autoGazeScrollIsActive_52();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6290));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_0, L_1, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6290));
		// UpdateValues(ref panSpeedLeftRight, scrollSpeedHorizontal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6276));
		float* L_2 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedLeftRight_5();
		float L_3 = __this->get_scrollSpeedHorizontal_53();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6291));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_2, L_3, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6291));
		// UpdateValues(ref panSpeedUpDown, scrollSpeedVertical);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6277));
		float* L_4 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_panSpeedUpDown_6();
		float L_5 = __this->get_scrollSpeedVertical_54();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6292));
		PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_4, L_5, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6292));
		// UpdateValues(ref minDistFromCenterForAutoPan, minDistFromCenterForAutoScroll);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6278));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_6 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_7 = __this->get_minDistFromCenterForAutoScroll_55();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6293));
		PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1(__this, (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_6, L_7, /*hidden argument*/PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6293));
		// UpdateValues(ref minDistFromCenterForAutoPan, minDistFromCenterForAutoScroll);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6279));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * L_8 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_minDistFromCenterForAutoPan_7();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_9 = __this->get_minDistFromCenterForAutoScroll_55();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6294));
		PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1(__this, (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)L_8, L_9, /*hidden argument*/PanZoomBase_UpdateValues_TisVector2_tA85D2DD88578276CA8A8796756458277E72D073D_m7574B9FBBB9E6B42739FF3B13FF43B852E708BD1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6294));
		// UpdateValues(ref customColliderSizeOnLookAt, onLookAtColliderSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6280));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * L_10 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_customColliderSizeOnLookAt_12();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = __this->get_onLookAtColliderSize_56();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6295));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_12;
		memset((&L_12), 0, sizeof(L_12));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_12), L_11, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6295));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6296));
		PanZoomBase_UpdateValues_TisNullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_m4362AF10F04D277C0F495E6501B2555C3AE2CE7D(__this, (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)L_10, L_12, /*hidden argument*/PanZoomBase_UpdateValues_TisNullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_m4362AF10F04D277C0F495E6501B2555C3AE2CE7D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6296));
		// UpdateValues(ref textureRenderer, textureRendererToBeScrolled);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6281));
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 ** L_13 = ((PanZoomBaseTexture_t0C8C297DBBEEA72C35E12141741AFA3B5BB384E2 *)__this)->get_address_of_textureRenderer_45();
		Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 * L_14 = __this->get_textureRendererToBeScrolled_51();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6297));
		PanZoomBase_UpdateValues_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mF431D17971643FF8B971CC71970CF69F38E4C3A8(__this, (Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 **)L_13, L_14, /*hidden argument*/PanZoomBase_UpdateValues_TisRenderer_t0556D67DD582620D1F495627EDE30D03284151F4_mF431D17971643FF8B971CC71970CF69F38E4C3A8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6297));
		// UpdateValues(ref useSkimProof, useSkimProofing);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6282));
		bool* L_15 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_useSkimProof_15();
		bool L_16 = __this->get_useSkimProofing_57();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6298));
		PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE(__this, (bool*)L_15, L_16, /*hidden argument*/PanZoomBase_UpdateValues_TisBoolean_tB53F6830F670160873277339AA58F15CAED4399C_m22968BBD509E9F466FDA8331DB8F78334C3BCBFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6298));
		// if (UpdateValues(ref skimproof_UpdateSpeedFromUser, skimProofUpdateSpeed))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6283));
		float* L_17 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_address_of_skimproof_UpdateSpeedFromUser_16();
		float L_18 = __this->get_skimProofUpdateSpeed_58();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6299));
		bool L_19 = PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53(__this, (float*)L_17, L_18, /*hidden argument*/PanZoomBase_UpdateValues_TisSingle_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_m580E3293A128349BCCA322E545B8D7C4EE3B0C53_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6299));
		V_0 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6284));
		bool L_20 = V_0;
		if (!L_20)
		{
			goto IL_00c3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6285));
		// SetSkimProofUpdateSpeed(skimproof_UpdateSpeedFromUser);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6286));
		float L_21 = ((PanZoomBase_tFAA7FD49B5D9169F695D6A7BC0015AF13DF2BF53 *)__this)->get_skimproof_UpdateSpeedFromUser_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6300));
		PanZoomBase_SetSkimProofUpdateSpeed_mCC79364A867D6BF1013FAE4670340EE143D654EE(__this, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6300));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6287));
	}

IL_00c3:
	{
		// base.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6288));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6301));
		PanZoomBase_Update_mE68B47BCF67D99249E8A25DF784282C2E6C09F4A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6301));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6289));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.ScrollTexture::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ScrollTexture__ctor_m8E4E756225AA681194B856B6E35E668F20C044EB (ScrollTexture_t8DBC5E65208355F6D6E872BEADB5FD0CB56445CC * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ScrollTexture__ctor_m8E4E756225AA681194B856B6E35E668F20C044EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ScrollTexture__ctor_m8E4E756225AA681194B856B6E35E668F20C044EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6302));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6303));
	{
		// private Renderer textureRendererToBeScrolled = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6304));
		__this->set_textureRendererToBeScrolled_51((Renderer_t0556D67DD582620D1F495627EDE30D03284151F4 *)NULL);
		// private bool autoGazeScrollIsActive = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6305));
		__this->set_autoGazeScrollIsActive_52((bool)1);
		// private float scrollSpeedHorizontal = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6306));
		__this->set_scrollSpeedHorizontal_53((0.0f));
		// private float scrollSpeedVertical = 0.15f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6307));
		__this->set_scrollSpeedVertical_54((0.15f));
		// private Vector2 minDistFromCenterForAutoScroll = new Vector2(0.2f, 0.2f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6308));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6312));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_0), (0.2f), (0.2f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6312));
		__this->set_minDistFromCenterForAutoScroll_55(L_0);
		// private Vector3 onLookAtColliderSize = new Vector3(1.2f, 1.2f, 1f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6309));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6313));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_1), (1.2f), (1.2f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6313));
		__this->set_onLookAtColliderSize_56(L_1);
		// private bool useSkimProofing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6310));
		__this->set_useSkimProofing_57((bool)0);
		// private float skimProofUpdateSpeed = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6311));
		__this->set_skimProofUpdateSpeed_58((5.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6314));
		PanZoomBaseTexture__ctor_mBA4027DF602B326953AB5AEF6FEE1D7FAD96077C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 6314));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SnapTo::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SnapTo__ctor_m9AA9BAD3AE9F57031C53529B50B7A71C2F464096 (SnapTo_t8E4C701A8C96F31D3304C7C0610F4F8E8037C90A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SnapTo__ctor_m9AA9BAD3AE9F57031C53529B50B7A71C2F464096_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SnapTo__ctor_m9AA9BAD3AE9F57031C53529B50B7A71C2F464096_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.TextMesh Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::get_MyTextMesh()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920 (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9046));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9047));
		// if (myTextMesh == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9048));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = __this->get_myTextMesh_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9055));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9055));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9049));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9050));
		// myTextMesh = visualFeedbackTemplate.GetComponentInChildren<TextMesh>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9051));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9056));
		NullCheck(L_3);
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_4 = GameObject_GetComponentInChildren_TisTextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A_m9E4D7FFDEA6E42F7B15ABD2843855CF150415620(L_3, /*hidden argument*/GameObject_GetComponentInChildren_TisTextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A_m9E4D7FFDEA6E42F7B15ABD2843855CF150415620_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9056));
		__this->set_myTextMesh_6(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9052));
	}

IL_0024:
	{
		// return myTextMesh;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9053));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_5 = __this->get_myTextMesh_6();
		V_1 = L_5;
		goto IL_002d;
	}

IL_002d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9054));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::UpdateTextMesh(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834 (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, String_t* ___msg0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___msg0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9058));
	String_t* G_B3_0 = NULL;
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * G_B3_1 = NULL;
	String_t* G_B2_0 = NULL;
	TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * G_B2_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9059));
		// if (MyTextMesh != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9060));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9066));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = SpeechVisualFeedback_get_MyTextMesh_m7DD0FC961A310232B458BC6EC7AB94ADD3686920(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9067));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9067));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9061));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9062));
		// myTextMesh.text = "" + msg;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9063));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_3 = __this->get_myTextMesh_6();
		String_t* L_4 = ___msg0;
		String_t* L_5 = L_4;
		G_B2_0 = L_5;
		G_B2_1 = L_3;
		if (L_5)
		{
			G_B3_0 = L_5;
			G_B3_1 = L_3;
			goto IL_0022;
		}
	}
	{
		G_B3_0 = _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
		G_B3_1 = G_B2_1;
	}

IL_0022:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9068));
		NullCheck(G_B3_1);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(G_B3_1, G_B3_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9068));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9064));
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9065));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::ShowVisualFeedback(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, String_t* ___msg0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___msg0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9069));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9070));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9071));
		// if (visualFeedbackTemplate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9072));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9086));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9086));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9073));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00af;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9074));
		// UpdateTextMesh(msg);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9075));
		String_t* L_3 = ___msg0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9087));
		SpeechVisualFeedback_UpdateTextMesh_m40CF434263364D64887FD1426848741B172DC834(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9087));
		// if (CoreServices.InputSystem.GazeProvider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9076));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9088));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_4 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9088));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9089));
		NullCheck(L_4);
		RuntimeObject* L_5 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9089));
		V_1 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_5) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9077));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0096;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9078));
		// visualFeedbackTemplate.transform.position = CameraCache.Main.transform.position + CoreServices.InputSystem.GazeProvider.GazeDirection.normalized * 2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9079));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9090));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9090));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9091));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_9 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9091));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9092));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9093));
		NullCheck(L_10);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9093));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9094));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_12 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9095));
		NullCheck(L_12);
		RuntimeObject* L_13 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9095));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9096));
		NullCheck(L_13);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeDirection() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9096));
		V_2 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9097));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9098));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_15, (2.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9098));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9099));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_11, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9100));
		NullCheck(L_8);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_8, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9100));
		// visualFeedbackTemplate.transform.LookAt(CameraCache.Main.transform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9080));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9101));
		NullCheck(L_18);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_19 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9101));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9102));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_20 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9102));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9103));
		NullCheck(L_20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9104));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9104));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9105));
		NullCheck(L_19);
		Transform_LookAt_m3EC94482B2585FE03AEEDF90325A1F0B9A84960E(L_19, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9105));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9081));
	}

IL_0096:
	{
		// visualFeedbackTemplate.SetActive(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9082));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9106));
		NullCheck(L_23);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_23, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9106));
		// startedTime = DateTime.Now;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9083));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9107));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_24 = DateTime_get_Now_mB464D30F15C97069F92C1F910DCDDC3DFCC7F7D2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9107));
		__this->set_startedTime_7(L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9084));
	}

IL_00af:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9085));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback_Update_mDE6E5EDFB424742042C6531596FAD83FA5C822EF (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechVisualFeedback_Update_mDE6E5EDFB424742042C6531596FAD83FA5C822EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechVisualFeedback_Update_mDE6E5EDFB424742042C6531596FAD83FA5C822EF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9108));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9109));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9110));
		// if ((visualFeedbackTemplate != null) && (visualFeedbackTemplate.activeSelf))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9111));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9121));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9121));
		if (!L_1)
		{
			goto IL_001c;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9122));
		NullCheck(L_2);
		bool L_3 = GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9122));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001d;
	}

IL_001c:
	{
		G_B3_0 = 0;
	}

IL_001d:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9112));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0057;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9113));
		// if ((DateTime.Now - startedTime).TotalSeconds > maxShowtimeInSeconds)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9114));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9123));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_5 = DateTime_get_Now_mB464D30F15C97069F92C1F910DCDDC3DFCC7F7D2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9123));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_6 = __this->get_startedTime_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9124));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_7 = DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9124));
		V_2 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9125));
		double L_8 = TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9125));
		float L_9 = __this->get_maxShowtimeInSeconds_5();
		V_1 = (bool)((((double)L_8) > ((double)(((double)((double)L_9)))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9115));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_0056;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9116));
		// visualFeedbackTemplate.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9117));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = __this->get_visualFeedbackTemplate_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9126));
		NullCheck(L_11);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_11, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9126));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9118));
	}

IL_0056:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9119));
	}

IL_0057:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9120));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::Microsoft.MixedReality.Toolkit.Input.IMixedRealitySpeechHandler.OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mB3E99F59F71C773FE3BCE50DA4B34B9EA1DCB55A (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechVisualFeedback_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mB3E99F59F71C773FE3BCE50DA4B34B9EA1DCB55A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechVisualFeedback_Microsoft_MixedReality_Toolkit_Input_IMixedRealitySpeechHandler_OnSpeechKeywordRecognized_mB3E99F59F71C773FE3BCE50DA4B34B9EA1DCB55A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9127));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9128));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9129));
		// ShowVisualFeedback(eventData.Command.Keyword);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9130));
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9132));
		NullCheck(L_0);
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_1 = SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9132));
		V_0 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9133));
		String_t* L_2 = SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53((SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9133));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9134));
		SpeechVisualFeedback_ShowVisualFeedback_mD6A8B64E388CB4CEB5B1EAC40E38D1A21AB568FB(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9134));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9131));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.SpeechVisualFeedback::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpeechVisualFeedback__ctor_m127485527CC1AA14105B102E65CC930047155739 (SpeechVisualFeedback_t974B89484DD167A0FAC94C8A7575FDBD85C05A34 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechVisualFeedback__ctor_m127485527CC1AA14105B102E65CC930047155739_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechVisualFeedback__ctor_m127485527CC1AA14105B102E65CC930047155739_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9136));
	{
		// private GameObject visualFeedbackTemplate = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9137));
		__this->set_visualFeedbackTemplate_4((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private float maxShowtimeInSeconds = 2.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9138));
		__this->set_maxShowtimeInSeconds_5((2.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9139));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 9139));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::get_Instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * V_1 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10443));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10444));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10445));
		// if (_Instance == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10446));
		StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * L_0 = ((StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_StaticFields*)il2cpp_codegen_static_fields_for(StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_il2cpp_TypeInfo_var))->get__Instance_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10453));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10453));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10447));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10448));
		// _Instance = FindObjectOfType<StatusText>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10449));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10454));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * L_3 = Object_FindObjectOfType_TisStatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_m0D12AE2AAF1CD03C6D9B2CE08E0F2385F64DD641(/*hidden argument*/Object_FindObjectOfType_TisStatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_m0D12AE2AAF1CD03C6D9B2CE08E0F2385F64DD641_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10454));
		((StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_StaticFields*)il2cpp_codegen_static_fields_for(StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_il2cpp_TypeInfo_var))->set__Instance_4(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10450));
	}

IL_001c:
	{
		// return _Instance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10451));
		StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * L_4 = ((StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_StaticFields*)il2cpp_codegen_static_fields_for(StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0_il2cpp_TypeInfo_var))->get__Instance_4();
		V_1 = L_4;
		goto IL_0024;
	}

IL_0024:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10452));
		StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StatusText_Awake_m600ADED9FC8497B9D4B8029856D783385918537B (StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StatusText_Awake_m600ADED9FC8497B9D4B8029856D783385918537B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, StatusText_Awake_m600ADED9FC8497B9D4B8029856D783385918537B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10455));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10456));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10457));
		// Debug.LogError(this.GetType().Name + " is deprecated");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10460));
		Type_t * L_0 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10460));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10461));
		NullCheck(L_0);
		String_t* L_1 = VirtFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10461));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10462));
		String_t* L_2 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_1, _stringLiteral314CD1C72B3CA3AD0B1C14114D2D635596FAAA4F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10462));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10463));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10463));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10459));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StatusText_Start_mF0E5DC9CB3279E63A8C71DD576ABA478945BDCB6 (StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StatusText_Start_mF0E5DC9CB3279E63A8C71DD576ABA478945BDCB6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, StatusText_Start_mF0E5DC9CB3279E63A8C71DD576ABA478945BDCB6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10464));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10465));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10466));
		// StatusText.Instance.Log("...", false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10467));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10469));
		StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * L_0 = StatusText_get_Instance_mF6984A29F17FC1EAC49BDD8897889CBCF3BA6665(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10469));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10470));
		NullCheck(L_0);
		StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618(L_0, _stringLiteral6EAE3A5B062C6D0D79F070C26E6D62486B40CB46, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10470));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10468));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::Log(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618 (StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * __this, String_t* ___msg0, bool ___add1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___msg0), (&___add1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, StatusText_Log_mE20428AAF8E0838C9CB3D5DD554C89A4403DF618_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10471));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10472));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10473));
		// if (status != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10474));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_0 = __this->get_status_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10487));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10487));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10475));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10476));
		// if (add)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10477));
		bool L_3 = ___add1;
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10478));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10479));
		// status.text += msg;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10480));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_5 = __this->get_status_5();
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_6 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10488));
		NullCheck(L_6);
		String_t* L_7 = TextMesh_get_text_m82229563FBF187061DDBCB5305CB227513B6ED83(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10488));
		String_t* L_8 = ___msg0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10489));
		String_t* L_9 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10489));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10490));
		NullCheck(L_6);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_6, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10490));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10481));
		goto IL_0042;
	}

IL_0033:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10482));
		// status.text = msg;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10483));
		TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A * L_10 = __this->get_status_5();
		String_t* L_11 = ___msg0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10491));
		NullCheck(L_10);
		TextMesh_set_text_m64242AB987CF285F432E7AED38F24FF855E9B220(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10491));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10484));
	}

IL_0042:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10485));
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10486));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.StatusText::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StatusText__ctor_mA977F88533AA268E8803DD0EC4A8ED6C83C16197 (StatusText_tC516717547B91D3A3DAD1401905CE893BB2671C0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StatusText__ctor_mA977F88533AA268E8803DD0EC4A8ED6C83C16197_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, StatusText__ctor_mA977F88533AA268E8803DD0EC4A8ED6C83C16197_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10492));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10493));
	{
		// private TextMesh status = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10494));
		__this->set_status_5((TextMesh_t327D0DAFEF431170D8C2882083D442AF4D4A0E4A *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10495));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10495));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs::get_HitTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * TargetEventArgs_get_HitTarget_m27AC2AE7B41B0F5A3C74B63CF085BE457E698A39 (TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetEventArgs_get_HitTarget_m27AC2AE7B41B0F5A3C74B63CF085BE457E698A39_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetEventArgs_get_HitTarget_m27AC2AE7B41B0F5A3C74B63CF085BE457E698A39_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10270));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10271));
	{
		// public EyeTrackingTarget HitTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10272));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = __this->get_U3CHitTargetU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs::set_HitTarget(Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B (TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1 * __this, EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10273));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10274));
	{
		// public EyeTrackingTarget HitTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10275));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ___value0;
		__this->set_U3CHitTargetU3Ek__BackingField_1(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetEventArgs::.ctor(Microsoft.MixedReality.Toolkit.Input.EyeTrackingTarget)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetEventArgs__ctor_m3C40A03810DB73994D7CD2F5206A9A98CABA38BB (TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1 * __this, EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___hitTarget0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetEventArgs__ctor_m3C40A03810DB73994D7CD2F5206A9A98CABA38BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hitTarget0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetEventArgs__ctor_m3C40A03810DB73994D7CD2F5206A9A98CABA38BB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10276));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10277));
	{
		// public TargetEventArgs(EyeTrackingTarget hitTarget)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10278));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10282));
		IL2CPP_RUNTIME_CLASS_INIT(EventArgs_t8E6CA180BE0E56674C6407011A94BAF7C757352E_il2cpp_TypeInfo_var);
		EventArgs__ctor_m3551293259861C5A78CD47689D559F828ED29DF7(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10282));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10279));
		// HitTarget = hitTarget;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10280));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ___hitTarget0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10283));
		TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_inline(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10283));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10281));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_Start_mB4C412B31F2DD78F02C937BA5EE3F8858192A8D4 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_Start_mB4C412B31F2DD78F02C937BA5EE3F8858192A8D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_Start_mB4C412B31F2DD78F02C937BA5EE3F8858192A8D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7696));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7697));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7698));
		// if (hideTemplatesOnStartup)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7699));
		bool L_0 = __this->get_hideTemplatesOnStartup_8();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7700));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// HideTemplates();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7701));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7704));
		TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7704));
	}

IL_0012:
	{
		// CreateNewTargets_RadialLayout();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7702));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7705));
		TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7705));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7703));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_Update_m0E9EE1194B14EE7B00AB588542A7516392494208 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_Update_m0E9EE1194B14EE7B00AB588542A7516392494208_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_Update_m0E9EE1194B14EE7B00AB588542A7516392494208_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7706));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7707));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7708));
		// if (keepVisAngleSizeConstant)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7709));
		bool L_0 = __this->get_keepVisAngleSizeConstant_6();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7710));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// KeepConstantVisAngleTargetSize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7711));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7716));
		TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7716));
	}

IL_0012:
	{
		// if (keepTargetsFacingTheCam)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7712));
		bool L_2 = __this->get_keepTargetsFacingTheCam_7();
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7713));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0023;
		}
	}
	{
		// KeepFacingTheCamera();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7714));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7717));
		TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7717));
	}

IL_0023:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7715));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::HideTemplates()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* V_1 = NULL;
	int32_t V_2 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_3 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_HideTemplates_mF21A7D23CE1AF9F59F03B85BC98D51B7E6884277_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7718));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7719));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7720));
		// if (templates != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7721));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_0 = __this->get_templates_4();
		V_0 = (bool)((!(((RuntimeObject*)(GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7722));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7723));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7724));
		// foreach (GameObject tobj in templates)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7725));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_2 = __this->get_templates_4();
		V_1 = L_2;
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7726));
		goto IL_002d;
	}

IL_001b:
	{
		// foreach (GameObject tobj in templates)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7727));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_3 = V_1;
		int32_t L_4 = V_2;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_3 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7728));
		// tobj.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7729));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7735));
		NullCheck(L_7);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_7, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7735));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7730));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7731));
		int32_t L_8 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_8, (int32_t)1));
	}

IL_002d:
	{
		// foreach (GameObject tobj in templates)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7732));
		int32_t L_9 = V_2;
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_10 = V_1;
		NullCheck(L_10);
		if ((((int32_t)L_9) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_10)->max_length)))))))
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7733));
	}

IL_0034:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7734));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::CreateNewTargets_RadialLayout()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_CreateNewTargets_RadialLayout_mD1312305731A7E61421D85ED5C49D5E6BED94636_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7737));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7738));
		// instantiatedTargets = new List<GameObject>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7739));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7768));
		List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * L_0 = (List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 *)il2cpp_codegen_object_new(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0_il2cpp_TypeInfo_var);
		List_1__ctor_m23BDA1112566B2E9149D885E4061EA3063EEDA60(L_0, /*hidden argument*/List_1__ctor_m23BDA1112566B2E9149D885E4061EA3063EEDA60_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7768));
		__this->set_instantiatedTargets_13(L_0);
		// float dist = Vector3.Distance(CameraCache.Main.transform.position, transform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7740));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7769));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_1 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7769));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7770));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7770));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7771));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7771));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7772));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7772));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7773));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7773));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7774));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_6 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7774));
		V_0 = L_6;
		// targetSizeInMeters = EyeTrackingDemoUtils.VisAngleInDegreesToMeters(targetSizeInVisAngle, dist);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7741));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = __this->get_targetSizeInVisAngle_5();
		float L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7775));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = EyeTrackingDemoUtils_VisAngleInDegreesToMeters_mAC247B958CB9C298989267D3CBB0C0DBA35B076B(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7775));
		__this->set_targetSizeInMeters_12(L_9);
		// Vector3 rotate = transform.localRotation.eulerAngles;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7742));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7776));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7776));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7777));
		NullCheck(L_10);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = Transform_get_localRotation_mEDA319E1B42EF12A19A95AC0824345B6574863FE(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7777));
		V_2 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7778));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7778));
		V_1 = L_12;
		// transform.localRotation = Quaternion.Euler(Vector3.zero);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7743));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7779));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7779));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7780));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7780));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7781));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7782));
		NullCheck(L_13);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7782));
		// if ((templates != null) && (templates.Length > 0))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7744));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_16 = __this->get_templates_4();
		if (!L_16)
		{
			goto IL_007c;
		}
	}
	{
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_17 = __this->get_templates_4();
		NullCheck(L_17);
		G_B3_0 = ((!(((uint32_t)(((RuntimeArray*)L_17)->max_length)) <= ((uint32_t)0)))? 1 : 0);
		goto IL_007d;
	}

IL_007c:
	{
		G_B3_0 = 0;
	}

IL_007d:
	{
		V_3 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7745));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_00f9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7746));
		// if (showTargetAtGroupCenter)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7747));
		bool L_19 = __this->get_showTargetAtGroupCenter_11();
		V_4 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7748));
		bool L_20 = V_4;
		if (!L_20)
		{
			goto IL_009c;
		}
	}
	{
		// InstantiateRadialLayoutedTarget(0, dist, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7749));
		float L_21 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7783));
		TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7(__this, (0.0f), L_21, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7783));
	}

IL_009c:
	{
		// for (int ir = 0; ir < radialLayout_radiusInVisAngle.Length; ir++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7750));
		V_5 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7751));
		goto IL_00d9;
	}

IL_00a1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7752));
		// for (int it = 0; it < radialLayout_nTargets; it++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7753));
		V_6 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7754));
		goto IL_00c2;
	}

IL_00a7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7755));
		// InstantiateRadialLayoutedTarget(radialLayout_radiusInVisAngle[ir], dist, it);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7756));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_22 = __this->get_radialLayout_radiusInVisAngle_10();
		int32_t L_23 = V_5;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		float L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		float L_26 = V_0;
		int32_t L_27 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7784));
		TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7(__this, L_25, L_26, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7784));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7757));
		// for (int it = 0; it < radialLayout_nTargets; it++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7758));
		int32_t L_28 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_28, (int32_t)1));
	}

IL_00c2:
	{
		// for (int it = 0; it < radialLayout_nTargets; it++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7759));
		int32_t L_29 = V_6;
		int32_t L_30 = __this->get_radialLayout_nTargets_9();
		V_7 = (bool)((((int32_t)L_29) < ((int32_t)L_30))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7760));
		bool L_31 = V_7;
		if (L_31)
		{
			goto IL_00a7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7761));
		// for (int ir = 0; ir < radialLayout_radiusInVisAngle.Length; ir++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7762));
		int32_t L_32 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_32, (int32_t)1));
	}

IL_00d9:
	{
		// for (int ir = 0; ir < radialLayout_radiusInVisAngle.Length; ir++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7763));
		int32_t L_33 = V_5;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_34 = __this->get_radialLayout_radiusInVisAngle_10();
		NullCheck(L_34);
		V_8 = (bool)((((int32_t)L_33) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_34)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7764));
		bool L_35 = V_8;
		if (L_35)
		{
			goto IL_00a1;
		}
	}
	{
		// transform.Rotate(rotate);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7765));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7785));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7785));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7786));
		NullCheck(L_36);
		Transform_Rotate_m610B6793DCC2F987290D328942E649B5B7DE0F9A(L_36, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7786));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7766));
	}

IL_00f9:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7767));
		return;
	}
}
// UnityEngine.GameObject[] Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::get_InstantiatedObjects()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* TargetGroupCreatorRadial_get_InstantiatedObjects_m4980FD31641B861744A101E47D0BB0A56026C9D5 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_get_InstantiatedObjects_m4980FD31641B861744A101E47D0BB0A56026C9D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_get_InstantiatedObjects_m4980FD31641B861744A101E47D0BB0A56026C9D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7787));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7788));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7789));
		// if (instantiatedTargets == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7790));
		List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * L_0 = __this->get_instantiatedTargets_13();
		V_0 = (bool)((((RuntimeObject*)(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7791));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0013;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7792));
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7793));
		V_1 = (GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520*)NULL;
		goto IL_0021;
	}

IL_0013:
	{
		// return instantiatedTargets.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7794));
		List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * L_2 = __this->get_instantiatedTargets_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7796));
		NullCheck(L_2);
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_3 = List_1_ToArray_mF1C925F80A9A65691072AC47AB75E6EB2E16BF15(L_2, /*hidden argument*/List_1_ToArray_mF1C925F80A9A65691072AC47AB75E6EB2E16BF15_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7796));
		V_1 = L_3;
		goto IL_0021;
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7795));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_4 = V_1;
		return L_4;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::GetRandomTemplate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7798));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7799));
		// int num = Random.Range(0, templates.Length);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7800));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_0 = __this->get_templates_4();
		NullCheck(L_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7803));
		int32_t L_1 = Random_Range_mD0C8F37FF3CAB1D87AAA6C45130BD59626BD6780(0, (((int32_t)((int32_t)(((RuntimeArray*)L_0)->max_length)))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7803));
		V_0 = L_1;
		// return templates[num];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7801));
		GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520* L_2 = __this->get_templates_4();
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_1 = L_5;
		goto IL_001b;
	}

IL_001b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7802));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::InstantiateRadialLayoutedTarget(System.Single,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, float ___radius0, float ___viewingDist1, int32_t ___iTarget2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___radius0), (&___viewingDist1), (&___iTarget2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_InstantiateRadialLayoutedTarget_m5E135C46F2B276476C46BEA71E384E037E62E8C7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7804));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7805));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7806));
		// GameObject _target = Instantiate(GetRandomTemplate());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7807));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7819));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = TargetGroupCreatorRadial_GetRandomTemplate_m3EA6D3821E0B698078C1805D67A4442EEF04B785(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7819));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7820));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_0, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7820));
		V_0 = L_1;
		// float xnew = transform.position.x + EyeTrackingDemoUtils.VisAngleInDegreesToMeters(radius, viewingDist) * Mathf.Cos(Mathf.Deg2Rad * iTarget * 360 / radialLayout_nTargets);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7808));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7821));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7821));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7822));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7822));
		float L_4 = L_3.get_x_2();
		float L_5 = ___radius0;
		float L_6 = ___viewingDist1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7823));
		float L_7 = EyeTrackingDemoUtils_VisAngleInDegreesToMeters_m8124359420AB6211D7BF4A24B809716E9940194E(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7823));
		int32_t L_8 = ___iTarget2;
		int32_t L_9 = __this->get_radialLayout_nTargets_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7824));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_10 = cosf(((float)((float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)(0.0174532924f), (float)(((float)((float)L_8))))), (float)(360.0f)))/(float)(((float)((float)L_9))))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7824));
		V_1 = ((float)il2cpp_codegen_add((float)L_4, (float)((float)il2cpp_codegen_multiply((float)L_7, (float)L_10))));
		// float ynew = transform.position.y + EyeTrackingDemoUtils.VisAngleInDegreesToMeters(radius, viewingDist) * Mathf.Sin(Mathf.Deg2Rad * iTarget * 360 / radialLayout_nTargets);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7809));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7825));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7826));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7826));
		float L_13 = L_12.get_y_3();
		float L_14 = ___radius0;
		float L_15 = ___viewingDist1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7827));
		float L_16 = EyeTrackingDemoUtils_VisAngleInDegreesToMeters_m8124359420AB6211D7BF4A24B809716E9940194E(L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7827));
		int32_t L_17 = ___iTarget2;
		int32_t L_18 = __this->get_radialLayout_nTargets_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7828));
		float L_19 = sinf(((float)((float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)(0.0174532924f), (float)(((float)((float)L_17))))), (float)(360.0f)))/(float)(((float)((float)L_18))))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7828));
		V_2 = ((float)il2cpp_codegen_add((float)L_13, (float)((float)il2cpp_codegen_multiply((float)L_16, (float)L_19))));
		// _target.transform.localPosition = new Vector3(xnew, ynew, transform.position.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7810));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7829));
		NullCheck(L_20);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7829));
		float L_22 = V_1;
		float L_23 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7830));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7830));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7831));
		NullCheck(L_24);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7831));
		float L_26 = L_25.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7832));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27;
		memset((&L_27), 0, sizeof(L_27));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_27), L_22, L_23, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7832));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7833));
		NullCheck(L_21);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_21, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7833));
		// float dist2 = Vector3.Distance(CameraCache.Main.transform.position, _target.transform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7811));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7834));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_28 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7834));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7835));
		NullCheck(L_28);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7835));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7836));
		NullCheck(L_29);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7836));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7837));
		NullCheck(L_31);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_32 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7837));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7838));
		NullCheck(L_32);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7838));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7839));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_34 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_30, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7839));
		V_3 = L_34;
		// Vector3 tmpTargetSizeInMeters = EyeTrackingDemoUtils.VisAngleInDegreesToMeters(targetSizeInVisAngle, dist2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7812));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = __this->get_targetSizeInVisAngle_5();
		float L_36 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7840));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = EyeTrackingDemoUtils_VisAngleInDegreesToMeters_mAC247B958CB9C298989267D3CBB0C0DBA35B076B(L_35, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7840));
		V_4 = L_37;
		// _target.transform.localScale = tmpTargetSizeInMeters;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7813));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_38 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7841));
		NullCheck(L_38);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_39 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7841));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7842));
		NullCheck(L_39);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_39, L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7842));
		// _target.name = string.Format("target_r{0}_t{1}", radius, iTarget);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7814));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_41 = V_0;
		float L_42 = ___radius0;
		float L_43 = L_42;
		RuntimeObject * L_44 = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &L_43);
		int32_t L_45 = ___iTarget2;
		int32_t L_46 = L_45;
		RuntimeObject * L_47 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_46);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7843));
		String_t* L_48 = String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A(_stringLiteralBA986AEE14F7BCDC0B371864E0D77ABAC5FF0735, L_44, L_47, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7843));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7844));
		NullCheck(L_41);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_41, L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7844));
		// _target.transform.SetParent(transform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7815));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_49 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7845));
		NullCheck(L_49);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_50 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7845));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7846));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_51 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7846));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7847));
		NullCheck(L_50);
		Transform_SetParent_mFAF9209CAB6A864552074BA065D740924A4BF979(L_50, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7847));
		// _target.SetActive(true);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7816));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_52 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7848));
		NullCheck(L_52);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_52, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7848));
		// instantiatedTargets.Add(_target);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7817));
		List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * L_53 = __this->get_instantiatedTargets_13();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_54 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7849));
		NullCheck(L_53);
		List_1_Add_m3F7B0DBB84912A2D10FB3328CF93B90917C7C687(L_53, L_54, /*hidden argument*/List_1_Add_m3F7B0DBB84912A2D10FB3328CF93B90917C7C687_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7849));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7818));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::KeepConstantVisAngleTargetSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053  V_0;
	memset((&V_0), 0, sizeof(V_0));
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	bool V_2 = false;
	float V_3 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_KeepConstantVisAngleTargetSize_m239BEAC481CA340B90291EFA243C7F7032A1A71C_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7850));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7851));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7852));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7853));
		// foreach (GameObject gobj in instantiatedTargets)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7854));
		List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * L_0 = __this->get_instantiatedTargets_13();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7868));
		NullCheck(L_0);
		Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053  L_1 = List_1_GetEnumerator_m3E7042AE58561530C10A47E4F39B8368CFCB693B(L_0, /*hidden argument*/List_1_GetEnumerator_m3E7042AE58561530C10A47E4F39B8368CFCB693B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7868));
		V_0 = L_1;
	}

IL_000e:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7855));
			goto IL_005f;
		}

IL_0010:
		{
			// foreach (GameObject gobj in instantiatedTargets)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7856));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7869));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = Enumerator_get_Current_m6C0BE2971AF7991C469272BC300664B8BAF8D800_inline((Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 *)(&V_0), /*hidden argument*/Enumerator_get_Current_m6C0BE2971AF7991C469272BC300664B8BAF8D800_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7869));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7857));
			// if (gobj != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7858));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7870));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7870));
			V_2 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7859));
			bool L_5 = V_2;
			if (!L_5)
			{
				goto IL_005e;
			}
		}

IL_0024:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7860));
			// float distObjToCam = Vector3.Distance(CameraCache.Main.transform.position, gobj.transform.position);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7861));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7871));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_6 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7871));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7872));
			NullCheck(L_6);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7872));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7873));
			NullCheck(L_7);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7873));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7874));
			NullCheck(L_9);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7874));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7875));
			NullCheck(L_10);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7875));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7876));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			float L_12 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_8, L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7876));
			V_3 = L_12;
			// gobj.transform.localScale = EyeTrackingDemoUtils.VisAngleInDegreesToMeters(targetSizeInVisAngle, distObjToCam);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7862));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = V_1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7877));
			NullCheck(L_13);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7877));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = __this->get_targetSizeInVisAngle_5();
			float L_16 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7878));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = EyeTrackingDemoUtils_VisAngleInDegreesToMeters_mAC247B958CB9C298989267D3CBB0C0DBA35B076B(L_15, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7878));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7879));
			NullCheck(L_14);
			Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(L_14, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7879));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7863));
		}

IL_005e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7864));
		}

IL_005f:
		{
			// foreach (GameObject gobj in instantiatedTargets)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7865));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7880));
			bool L_18 = Enumerator_MoveNext_m774CA65723516595B6E22D200D19ADBE8C3E7969((Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_m774CA65723516595B6E22D200D19ADBE8C3E7969_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7880));
			if (L_18)
			{
				goto IL_0010;
			}
		}

IL_0068:
		{
			IL2CPP_LEAVE(0x79, FINALLY_006a);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_006a;
	}

FINALLY_006a:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7866));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7881));
		Enumerator_Dispose_m0C9F007B48F37CD7F09430C3C1B407ACE6213812((Enumerator_t9EFA6071D21C1230CBB2E56045AD75472BC48053 *)(&V_0), /*hidden argument*/Enumerator_Dispose_m0C9F007B48F37CD7F09430C3C1B407ACE6213812_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7881));
		IL2CPP_END_FINALLY(106)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(106)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x79, IL_0079)
	}

IL_0079:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7867));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::KeepFacingTheCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial_KeepFacingTheCamera_m9306265A4D5830F1F2EE9A92FA0600A4E9E29A3C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7882));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7883));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7884));
		// transform.LookAt(CameraCache.Main.transform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7885));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7887));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7887));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7888));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_1 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7888));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7889));
		NullCheck(L_1);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7889));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7890));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7890));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7891));
		NullCheck(L_0);
		Transform_LookAt_m3EC94482B2585FE03AEEDF90325A1F0B9A84960E(L_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7891));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7886));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Examples.Demos.EyeTracking.TargetGroupCreatorRadial::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TargetGroupCreatorRadial__ctor_m3C296D4D4F34D7EB8DF14D55D4B8315C972B5889 (TargetGroupCreatorRadial_t24C2C9EEC5799A3B1BDF4306BDBF41862CC7BD6A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetGroupCreatorRadial__ctor_m3C296D4D4F34D7EB8DF14D55D4B8315C972B5889_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetGroupCreatorRadial__ctor_m3C296D4D4F34D7EB8DF14D55D4B8315C972B5889_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7892));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7893));
	{
		// private GameObject[] templates = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7894));
		__this->set_templates_4((GameObjectU5BU5D_tBF9D474747511CF34A040A1697E34C74C19BB520*)NULL);
		// private Vector3 targetSizeInVisAngle = new Vector3(1f, 1f, 0.01f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7895));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7902));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0;
		memset((&L_0), 0, sizeof(L_0));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_0), (1.0f), (1.0f), (0.01f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7902));
		__this->set_targetSizeInVisAngle_5(L_0);
		// private bool keepVisAngleSizeConstant = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7896));
		__this->set_keepVisAngleSizeConstant_6((bool)1);
		// private bool keepTargetsFacingTheCam = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7897));
		__this->set_keepTargetsFacingTheCam_7((bool)1);
		// private bool hideTemplatesOnStartup = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7898));
		__this->set_hideTemplatesOnStartup_8((bool)1);
		// private int radialLayout_nTargets = 8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7899));
		__this->set_radialLayout_nTargets_9(8);
		// private float[] radialLayout_radiusInVisAngle = new float[] { 2, 3 };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7900));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = L_1;
		NullCheck(L_2);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)(2.0f));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = L_2;
		NullCheck(L_3);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)(3.0f));
		__this->set_radialLayout_radiusInVisAngle_10(L_3);
		// private bool showTargetAtGroupCenter = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7901));
		__this->set_showTargetAtGroupCenter_11((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7903));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 7903));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897EMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AudioFeedbackPlayer_get_Instance_m7EC7DBB489C623BF4958D9463B62E22CC283897E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8920));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8921));
	{
		// public static AudioFeedbackPlayer Instance { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 8922));
		AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72 * L_0 = ((AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72_StaticFields*)il2cpp_codegen_static_fields_for(AudioFeedbackPlayer_tFFAB0E460FE97A8EC81F2DE4AD23087249826E72_il2cpp_TypeInfo_var))->get_U3CInstanceU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26615));
	{
		// public MixedRealityInputAction MixedRealityInputAction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26616));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_U3CMixedRealityInputActionU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26734));
	{
		// public Handedness Handedness { get; private set; } = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26735));
		uint8_t L_0 = __this->get_U3CHandednessU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26842));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26843));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26844));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26668));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26669));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26670));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_inline (EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453DMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, EyeTrackingTarget_get_IsLookedAt_m72010953EF5E2B0A919D18FE4111DB7DF7AD453D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9106));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9107));
	{
		// public bool IsLookedAt { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 9108));
		bool L_0 = __this->get_U3CIsLookedAtU3Ek__BackingField_16();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FFMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26875));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26876));
	{
		// public SpeechCommands Command { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26877));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_0 = __this->get_U3CCommandU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_inline (TargetEventArgs_t320AB37F5CE85390AFB91EAFA40C0E196B9EA0C1 * __this, EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1BMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, TargetEventArgs_set_HitTarget_m0D0B98A3696455CCFA3AE8DA5D7AF05A81D71B1B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10273));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10274));
	{
		// public EyeTrackingTarget HitTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Examples + 10275));
		EyeTrackingTarget_t20B2403B5094B43674162881003ECC7159F64A32 * L_0 = ___value0;
		__this->set_U3CHitTargetU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_gshared_inline (InputEventData_1_t61588401993701F571AB3C6C97E08104CEBA7440 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CEMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_1_get_InputData_m934CED03448491D37BC2A0A9555F22792C2D77CE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26755));
	{
		// public T InputData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26756));
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_U3CInputDataU3Ek__BackingField_6();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_gshared_inline (Nullable_1_t5C6FF4BB8DD1DB0820894DBF35EE86A3A7BE3779 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1DMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_mCEDF51FCF634A5ADE5A1C9E83B1691884D992B1D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_2 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)__this->get__items_1();
		int32_t L_3 = ___index0;
		RuntimeObject * L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)L_2, (int32_t)L_3);
		return (RuntimeObject *)L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_gshared_inline (Enumerator_tE0C99528D3DCE5863566CE37BD94162A4C0431CD * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55CMicrosoft_MixedReality_Toolkit_Examples2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_mD7829C7E8CFBEDD463B15A951CDE9B90A12CC55C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_current_3();
		return (RuntimeObject *)L_0;
	}
}
